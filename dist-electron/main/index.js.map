{"version":3,"file":"index.js","sources":["../../node_modules/@sentry/core/build/esm/debug-build.js","../../node_modules/@sentry/core/build/esm/utils-hoist/version.js","../../node_modules/@sentry/core/build/esm/utils-hoist/worldwide.js","../../node_modules/@sentry/core/build/esm/utils-hoist/debug-build.js","../../node_modules/@sentry/core/build/esm/utils-hoist/logger.js","../../node_modules/@sentry/core/build/esm/utils-hoist/stacktrace.js","../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/handlers.js","../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/globalError.js","../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/globalUnhandledRejection.js","../../node_modules/@sentry/core/build/esm/carrier.js","../../node_modules/@sentry/core/build/esm/utils-hoist/is.js","../../node_modules/@sentry/core/build/esm/utils-hoist/browser.js","../../node_modules/@sentry/core/build/esm/utils-hoist/string.js","../../node_modules/@sentry/core/build/esm/utils-hoist/object.js","../../node_modules/@sentry/core/build/esm/utils-hoist/time.js","../../node_modules/@sentry/core/build/esm/utils-hoist/misc.js","../../node_modules/@sentry/core/build/esm/utils-hoist/syncpromise.js","../../node_modules/@sentry/core/build/esm/session.js","../../node_modules/@sentry/core/build/esm/utils-hoist/propagationContext.js","../../node_modules/@sentry/core/build/esm/utils/merge.js","../../node_modules/@sentry/core/build/esm/utils/spanOnScope.js","../../node_modules/@sentry/core/build/esm/scope.js","../../node_modules/@sentry/core/build/esm/defaultScopes.js","../../node_modules/@sentry/core/build/esm/asyncContext/stackStrategy.js","../../node_modules/@sentry/core/build/esm/asyncContext/index.js","../../node_modules/@sentry/core/build/esm/currentScopes.js","../../node_modules/@sentry/core/build/esm/metrics/metric-summary.js","../../node_modules/@sentry/core/build/esm/semanticAttributes.js","../../node_modules/@sentry/core/build/esm/tracing/spanstatus.js","../../node_modules/@sentry/core/build/esm/utils-hoist/baggage.js","../../node_modules/@sentry/core/build/esm/utils-hoist/tracing.js","../../node_modules/@sentry/core/build/esm/utils/spanUtils.js","../../node_modules/@sentry/core/build/esm/tracing/errors.js","../../node_modules/@sentry/core/build/esm/tracing/utils.js","../../node_modules/@sentry/core/build/esm/utils/hasTracingEnabled.js","../../node_modules/@sentry/core/build/esm/tracing/sentryNonRecordingSpan.js","../../node_modules/@sentry/core/build/esm/utils/handleCallbackErrors.js","../../node_modules/@sentry/core/build/esm/constants.js","../../node_modules/@sentry/core/build/esm/tracing/dynamicSamplingContext.js","../../node_modules/@sentry/core/build/esm/tracing/logSpans.js","../../node_modules/@sentry/core/build/esm/utils/parseSampleRate.js","../../node_modules/@sentry/core/build/esm/tracing/sampling.js","../../node_modules/@sentry/core/build/esm/utils-hoist/dsn.js","../../node_modules/@sentry/core/build/esm/utils-hoist/memo.js","../../node_modules/@sentry/core/build/esm/utils-hoist/normalize.js","../../node_modules/@sentry/core/build/esm/utils-hoist/envelope.js","../../node_modules/@sentry/core/build/esm/envelope.js","../../node_modules/@sentry/core/build/esm/tracing/measurement.js","../../node_modules/@sentry/core/build/esm/tracing/sentrySpan.js","../../node_modules/@sentry/core/build/esm/tracing/trace.js","../../node_modules/@sentry/core/build/esm/eventProcessors.js","../../node_modules/@sentry/core/build/esm/utils-hoist/debug-ids.js","../../node_modules/@sentry/core/build/esm/utils/applyScopeDataToEvent.js","../../node_modules/@sentry/core/build/esm/utils/prepareEvent.js","../../node_modules/@sentry/core/build/esm/exports.js","../../node_modules/@sentry/core/build/esm/sessionflusher.js","../../node_modules/@sentry/core/build/esm/api.js","../../node_modules/@sentry/core/build/esm/integration.js","../../node_modules/@sentry/core/build/esm/utils-hoist/clientreport.js","../../node_modules/@sentry/core/build/esm/utils-hoist/error.js","../../node_modules/@sentry/core/build/esm/baseclient.js","../../node_modules/@sentry/core/build/esm/checkin.js","../../node_modules/@sentry/core/build/esm/utils-hoist/eventbuilder.js","../../node_modules/@sentry/core/build/esm/server-runtime-client.js","../../node_modules/@sentry/core/build/esm/utils-hoist/promisebuffer.js","../../node_modules/@sentry/core/build/esm/utils-hoist/ratelimit.js","../../node_modules/@sentry/core/build/esm/transports/base.js","../../node_modules/@sentry/core/build/esm/transports/offline.js","../../node_modules/@sentry/core/build/esm/utils/sdkMetadata.js","../../node_modules/@sentry/core/build/esm/utils/traceData.js","../../node_modules/@sentry/core/build/esm/breadcrumbs.js","../../node_modules/@sentry/core/build/esm/integrations/functiontostring.js","../../node_modules/@sentry/core/build/esm/integrations/inboundfilters.js","../../node_modules/@sentry/core/build/esm/utils-hoist/aggregate-errors.js","../../node_modules/@sentry/core/build/esm/integrations/linkederrors.js","../../node_modules/@sentry/core/build/esm/utils-hoist/url.js","../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/console.js","../../node_modules/@sentry/core/build/esm/utils-hoist/severity.js","../../node_modules/@sentry/core/build/esm/utils-hoist/path.js","../../node_modules/@sentry/core/build/esm/metrics/constants.js","../../node_modules/@sentry/core/build/esm/metrics/exports.js","../../node_modules/@sentry/core/build/esm/metrics/utils.js","../../node_modules/@sentry/core/build/esm/metrics/envelope.js","../../node_modules/@sentry/core/build/esm/metrics/instance.js","../../node_modules/@sentry/core/build/esm/metrics/aggregator.js","../../node_modules/@sentry/core/build/esm/metrics/exports-default.js","../../node_modules/@sentry/core/build/esm/utils-hoist/breadcrumb-log-level.js","../../node_modules/@sentry/core/build/esm/utils-hoist/node-stack-trace.js","../../node_modules/@sentry/core/build/esm/utils-hoist/anr.js","../../node_modules/@sentry/core/build/esm/utils-hoist/lru.js","../../node_modules/@sentry/core/build/esm/utils-hoist/buildPolyfills/_nullishCoalesce.js","../../node_modules/@sentry/core/build/esm/utils-hoist/buildPolyfills/_optionalChain.js","../../node_modules/@opentelemetry/api/build/esm/platform/node/globalThis.js","../../node_modules/@opentelemetry/api/build/esm/version.js","../../node_modules/@opentelemetry/api/build/esm/internal/semver.js","../../node_modules/@opentelemetry/api/build/esm/internal/global-utils.js","../../node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js","../../node_modules/@opentelemetry/api/build/esm/diag/types.js","../../node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js","../../node_modules/@opentelemetry/api/build/esm/api/diag.js","../../node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js","../../node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js","../../node_modules/@opentelemetry/api/build/esm/baggage/utils.js","../../node_modules/@opentelemetry/api/build/esm/context/context.js","../../node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js","../../node_modules/@opentelemetry/api/build/esm/metrics/NoopMeter.js","../../node_modules/@opentelemetry/api/build/esm/metrics/Metric.js","../../node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js","../../node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js","../../node_modules/@opentelemetry/api/build/esm/api/context.js","../../node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js","../../node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js","../../node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js","../../node_modules/@opentelemetry/api/build/esm/trace/context-utils.js","../../node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js","../../node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js","../../node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js","../../node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js","../../node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js","../../node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js","../../node_modules/@opentelemetry/api/build/esm/trace/span_kind.js","../../node_modules/@opentelemetry/api/build/esm/trace/status.js","../../node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-validators.js","../../node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-impl.js","../../node_modules/@opentelemetry/api/build/esm/trace/internal/utils.js","../../node_modules/@opentelemetry/api/build/esm/context-api.js","../../node_modules/@opentelemetry/api/build/esm/diag-api.js","../../node_modules/@opentelemetry/api/build/esm/metrics/NoopMeterProvider.js","../../node_modules/@opentelemetry/api/build/esm/api/metrics.js","../../node_modules/@opentelemetry/api/build/esm/metrics-api.js","../../node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js","../../node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js","../../node_modules/@opentelemetry/api/build/esm/api/propagation.js","../../node_modules/@opentelemetry/api/build/esm/propagation-api.js","../../node_modules/@opentelemetry/api/build/esm/api/trace.js","../../node_modules/@opentelemetry/api/build/esm/trace-api.js","../../node_modules/@opentelemetry/api/build/esm/index.js","../../node_modules/semver/internal/constants.js","../../node_modules/semver/internal/debug.js","../../node_modules/semver/internal/re.js","../../node_modules/semver/internal/parse-options.js","../../node_modules/semver/internal/identifiers.js","../../node_modules/semver/classes/semver.js","../../node_modules/semver/functions/parse.js","../../node_modules/semver/functions/valid.js","../../node_modules/semver/functions/clean.js","../../node_modules/semver/functions/inc.js","../../node_modules/semver/functions/diff.js","../../node_modules/semver/functions/major.js","../../node_modules/semver/functions/minor.js","../../node_modules/semver/functions/patch.js","../../node_modules/semver/functions/prerelease.js","../../node_modules/semver/functions/compare.js","../../node_modules/semver/functions/rcompare.js","../../node_modules/semver/functions/compare-loose.js","../../node_modules/semver/functions/compare-build.js","../../node_modules/semver/functions/sort.js","../../node_modules/semver/functions/rsort.js","../../node_modules/semver/functions/gt.js","../../node_modules/semver/functions/lt.js","../../node_modules/semver/functions/eq.js","../../node_modules/semver/functions/neq.js","../../node_modules/semver/functions/gte.js","../../node_modules/semver/functions/lte.js","../../node_modules/semver/functions/cmp.js","../../node_modules/semver/functions/coerce.js","../../node_modules/semver/internal/lrucache.js","../../node_modules/semver/classes/range.js","../../node_modules/semver/classes/comparator.js","../../node_modules/semver/functions/satisfies.js","../../node_modules/semver/ranges/to-comparators.js","../../node_modules/semver/ranges/max-satisfying.js","../../node_modules/semver/ranges/min-satisfying.js","../../node_modules/semver/ranges/min-version.js","../../node_modules/semver/ranges/valid.js","../../node_modules/semver/ranges/outside.js","../../node_modules/semver/ranges/gtr.js","../../node_modules/semver/ranges/ltr.js","../../node_modules/semver/ranges/intersects.js","../../node_modules/semver/ranges/simplify.js","../../node_modules/semver/ranges/subset.js","../../node_modules/semver/index.js","../../node_modules/@opentelemetry/api-logs/build/esm/NoopLogger.js","../../node_modules/@opentelemetry/api-logs/build/esm/NoopLoggerProvider.js","../../node_modules/@opentelemetry/api-logs/build/esm/ProxyLogger.js","../../node_modules/@opentelemetry/api-logs/build/esm/ProxyLoggerProvider.js","../../node_modules/@opentelemetry/api-logs/build/esm/platform/node/globalThis.js","../../node_modules/@opentelemetry/api-logs/build/esm/internal/global-utils.js","../../node_modules/@opentelemetry/api-logs/build/esm/api/logs.js","../../node_modules/@opentelemetry/api-logs/build/esm/index.js","../../node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js","../../node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js","../../node_modules/shimmer/index.js","../../node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js","../../node_modules/ms/index.js","../../node_modules/debug/src/common.js","../../node_modules/debug/src/browser.js","../../node_modules/has-flag/index.js","../../node_modules/supports-color/index.js","../../node_modules/debug/src/node.js","../../node_modules/debug/src/index.js","../../node_modules/module-details-from-path/index.js","../../node_modules/resolve/lib/homedir.js","../../node_modules/resolve/lib/caller.js","../../node_modules/path-parse/index.js","../../node_modules/resolve/lib/node-modules-paths.js","../../node_modules/resolve/lib/normalize-options.js","../../node_modules/function-bind/implementation.js","../../node_modules/function-bind/index.js","../../node_modules/hasown/index.js","../../node_modules/is-core-module/index.js","../../node_modules/resolve/lib/async.js","../../node_modules/resolve/lib/core.js","../../node_modules/resolve/lib/is-core.js","../../node_modules/resolve/lib/sync.js","../../node_modules/resolve/index.js","../../node_modules/require-in-the-middle/index.js","../../node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ModuleNameTrie.js","../../node_modules/@opentelemetry/instrumentation/build/esm/platform/node/RequireInTheMiddleSingleton.js","../../node_modules/import-in-the-middle/lib/register.js","../../node_modules/import-in-the-middle/index.js","../../node_modules/@opentelemetry/instrumentation/build/esm/utils.js","../../node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js","../../node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleDefinition.js","../../node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleFile.js","../../node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","../../node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","../../node_modules/@opentelemetry/semantic-conventions/build/esm/stable_attributes.js","../../node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","../../node_modules/@opentelemetry/core/build/esm/baggage/constants.js","../../node_modules/@opentelemetry/core/build/esm/baggage/utils.js","../../node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","../../node_modules/@opentelemetry/core/build/esm/common/anchored-clock.js","../../node_modules/@opentelemetry/core/build/esm/common/attributes.js","../../node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","../../node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","../../node_modules/@opentelemetry/core/build/esm/utils/sampling.js","../../node_modules/@opentelemetry/core/build/esm/utils/environment.js","../../node_modules/@opentelemetry/core/build/esm/platform/node/environment.js","../../node_modules/@opentelemetry/core/build/esm/platform/node/globalThis.js","../../node_modules/@opentelemetry/core/build/esm/common/hex-to-binary.js","../../node_modules/@opentelemetry/core/build/esm/platform/node/hex-to-base64.js","../../node_modules/@opentelemetry/core/build/esm/platform/node/RandomIdGenerator.js","../../node_modules/@opentelemetry/core/build/esm/platform/node/performance.js","../../node_modules/@opentelemetry/core/build/esm/version.js","../../node_modules/@opentelemetry/core/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","../../node_modules/@opentelemetry/core/build/esm/platform/node/sdk-info.js","../../node_modules/@opentelemetry/core/build/esm/platform/node/timer-util.js","../../node_modules/@opentelemetry/core/build/esm/common/time.js","../../node_modules/@opentelemetry/core/build/esm/ExportResult.js","../../node_modules/@opentelemetry/core/build/esm/propagation/composite.js","../../node_modules/@opentelemetry/core/build/esm/internal/validators.js","../../node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","../../node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","../../node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","../../node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","../../node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","../../node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","../../node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","../../node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","../../node_modules/@opentelemetry/core/build/esm/utils/merge.js","../../node_modules/@opentelemetry/core/build/esm/utils/timeout.js","../../node_modules/@opentelemetry/core/build/esm/utils/url.js","../../node_modules/@opentelemetry/core/build/esm/utils/wrap.js","../../node_modules/@opentelemetry/core/build/esm/utils/promise.js","../../node_modules/@opentelemetry/core/build/esm/utils/callback.js","../../node_modules/@opentelemetry/core/build/esm/internal/exporter.js","../../node_modules/@opentelemetry/core/build/esm/index.js","../../node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/enums.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/Span.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/Sampler.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOffSampler.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOnSampler.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/ParentBasedSampler.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/TraceIdRatioBasedSampler.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/config.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/utility.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/export/BatchSpanProcessorBase.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/node/export/BatchSpanProcessor.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/node/RandomIdGenerator.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/Tracer.js","../../node_modules/@opentelemetry/resources/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","../../node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js","../../node_modules/@opentelemetry/resources/build/esm/Resource.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/MultiSpanProcessor.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/export/NoopSpanProcessor.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/BasicTracerProvider.js","../../node_modules/@sentry/opentelemetry/build/esm/index.js","../../node_modules/@sentry/node/build/esm/debug-build.js","../../node_modules/@opentelemetry/instrumentation-undici/build/src/version.js","../../node_modules/@opentelemetry/instrumentation-undici/build/src/enums/SemanticAttributes.js","../../node_modules/@opentelemetry/instrumentation-undici/build/src/undici.js","../../node_modules/@opentelemetry/instrumentation-undici/build/src/types.js","../../node_modules/@opentelemetry/instrumentation-undici/build/src/index.js","../../node_modules/@sentry/node/build/esm/integrations/node-fetch.js","../../node_modules/@sentry/node/build/esm/integrations/console.js","../../node_modules/@sentry/node/build/esm/integrations/context.js","../../node_modules/@sentry/node/build/esm/integrations/contextlines.js","../../node_modules/@sentry/node/build/esm/nodeVersion.js","../../node_modules/@sentry/node/build/esm/utils/debug.js","../../node_modules/@sentry/node/build/esm/integrations/local-variables/common.js","../../node_modules/@sentry/node/build/esm/integrations/local-variables/local-variables-async.js","../../node_modules/@sentry/node/build/esm/integrations/local-variables/local-variables-sync.js","../../node_modules/@sentry/node/build/esm/integrations/local-variables/index.js","../../node_modules/@sentry/node/build/esm/utils/errorhandling.js","../../node_modules/@sentry/node/build/esm/integrations/onunhandledrejection.js","../../node_modules/@opentelemetry/context-async-hooks/build/src/AbstractAsyncHooksContextManager.js","../../node_modules/@opentelemetry/context-async-hooks/build/src/AsyncHooksContextManager.js","../../node_modules/@opentelemetry/context-async-hooks/build/src/AsyncLocalStorageContextManager.js","../../node_modules/@opentelemetry/context-async-hooks/build/src/index.js","../../node_modules/@sentry/node/build/esm/otel/contextManager.js","../../node_modules/@sentry/node/build/esm/utils/module.js","../../node_modules/@sentry/node/build/esm/sdk/client.js","../../node_modules/@sentry/node/build/esm/sdk/initOtel.js","../../node_modules/@sentry/electron/esm/main/renderers.js","../../node_modules/@sentry/electron/esm/main/integrations/electron-breadcrumbs.js","../../node_modules/@sentry/electron/esm/main/integrations/onuncaughtexception.js","../../node_modules/@sentry/electron/esm/common/scope.js","../../node_modules/@sentry/electron/esm/main/version.js","../../node_modules/@sentry/electron/esm/main/context.js","../../node_modules/@sentry/electron/esm/common/ipc.js","../../node_modules/@sentry/electron/esm/main/electron-normalize.js","../../node_modules/@sentry/electron/esm/main/mutex.js","../../node_modules/@sentry/electron/esm/main/store.js","../../node_modules/@sentry/electron/esm/main/sessions.js","../../node_modules/@sentry/electron/esm/main/integrations/sentry-minidump/minidump-loader.js","../../node_modules/@sentry/electron/esm/main/integrations/sentry-minidump/index.js","../../node_modules/@sentry/electron/node_modules/deepmerge/dist/cjs.js","../../node_modules/@sentry/electron/esm/main/merge.js","../../node_modules/@sentry/electron/esm/main/normalize.js","../../node_modules/@sentry/electron/esm/main/integrations/preload-injection.js","../../node_modules/@sentry/electron/esm/main/integrations/main-process-session.js","../../node_modules/@sentry/electron/esm/main/integrations/additional-context.js","../../node_modules/@sentry/electron/esm/main/integrations/net-breadcrumbs.js","../../node_modules/@sentry/electron/esm/main/integrations/child-process.js","../../node_modules/@sentry/electron/esm/main/integrations/screenshots.js","../../node_modules/@sentry/electron/esm/main/integrations/renderer-profiling.js","../../node_modules/@sentry/electron/esm/main/integrations/normalize-paths.js","../../node_modules/@sentry/electron/esm/main/integrations/electron-context.js","../../node_modules/@sentry/electron/esm/main/transports/electron-net.js","../../node_modules/@sentry/electron/esm/main/transports/offline-store.js","../../node_modules/@sentry/electron/esm/main/transports/electron-offline-net.js","../../node_modules/@sentry/electron/esm/common/envelope.js","../../node_modules/@sentry/electron/esm/main/anr.js","../../node_modules/@sentry/electron/esm/main/ipc.js","../../node_modules/@sentry/electron/esm/main/stack-parse.js","../../node_modules/@sentry/electron/esm/main/utility-processes.js","../../node_modules/@sentry/electron/esm/main/sdk.js","../../electron/main/common/error.ts","../../electron/main/electron-store/storeConfig.ts","../../electron/main/path/path.ts","../../shared/utils.ts","../../electron/main/filesystem/filesystem.ts","../../electron/main/common/network.ts","../../electron/main/vector-database/downloadModelsFromHF.ts","../../electron/main/vector-database/embeddings.ts","../../electron/main/vector-database/schema.ts","../../electron/main/vector-database/lance.ts","../../electron/main/vector-database/lanceTableWrapper.ts","../../electron/main/common/windowManager.ts","../../shared/defaultLLMs.ts","../../electron/main/llm/models/ollama.ts","../../electron/main/llm/llmConfig.ts","../../electron/main/electron-store/storeSchemaMigrator.ts","../../electron/main/electron-store/ipcHandlers.ts","../../electron/main/electron-utils/ipcHandlers.ts","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/documents/document.js","../../node_modules/retry/lib/retry_operation.js","../../node_modules/retry/lib/retry.js","../../node_modules/retry/index.js","../../node_modules/p-retry/index.js","../../node_modules/eventemitter3/index.js","../../node_modules/p-finally/index.js","../../node_modules/p-timeout/index.js","../../node_modules/p-queue/dist/lower-bound.js","../../node_modules/p-queue/dist/priority-queue.js","../../node_modules/p-queue/dist/index.js","../../node_modules/langsmith/dist/singletons/fetch.js","../../node_modules/langsmith/dist/utils/async_caller.js","../../node_modules/langsmith/dist/utils/messages.js","../../node_modules/langsmith/dist/utils/_uuid.js","../../node_modules/langsmith/dist/utils/warn.js","../../node_modules/langsmith/dist/utils/prompts.js","../../node_modules/langsmith/dist/utils/error.js","../../node_modules/langsmith/dist/utils/fast-safe-stringify/index.js","../../node_modules/langsmith/dist/client.js","../../node_modules/langsmith/dist/index.js","../../node_modules/langsmith/dist/utils/env.js","../../node_modules/langsmith/dist/env.js","../../node_modules/langsmith/dist/singletons/constants.js","../../node_modules/langsmith/dist/run_trees.js","../../node_modules/langsmith/dist/singletons/traceable.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js","../../node_modules/decamelize/index.js","../../node_modules/@langchain/textsplitters/node_modules/camelcase/index.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/load/map_keys.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/load/serializable.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/utils/env.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/callbacks/base.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/tracers/base.js","../../node_modules/@langchain/textsplitters/node_modules/ansi-styles/index.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/tracers/console.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/tools/utils.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/utils/json.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/messages/base.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/messages/ai.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/messages/utils.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/tracers/tracer_langchain.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/callbacks/promises.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/utils/callbacks.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/callbacks/manager.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/singletons/index.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/utils/signal.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/utils/stream.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/tracers/log_stream.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/outputs.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/tracers/event_stream.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/runnables/config.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/utils/async_caller.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/tracers/root_listener.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/runnables/utils.js","../../node_modules/zod-to-json-schema/dist/esm/Options.js","../../node_modules/zod-to-json-schema/dist/esm/Refs.js","../../node_modules/zod-to-json-schema/dist/esm/errorMessages.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/any.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/array.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/branded.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/catch.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/date.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/default.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/effects.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/enum.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/literal.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/string.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/record.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/map.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/never.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/null.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/union.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/number.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/object.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/optional.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/promise.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/set.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js","../../node_modules/zod-to-json-schema/dist/esm/selectParser.js","../../node_modules/zod-to-json-schema/dist/esm/parseDef.js","../../node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/runnables/graph_mermaid.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/runnables/graph.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/runnables/wrappers.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/runnables/iter.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/runnables/base.js","../../node_modules/@langchain/textsplitters/node_modules/@langchain/core/dist/documents/transformers.js","../../node_modules/base64-js/index.js","../../node_modules/js-tiktoken/dist/chunk-Z5MDQTGX.js","../../node_modules/@langchain/textsplitters/dist/text_splitter.js","../../electron/main/common/chunking.ts","../../electron/main/vector-database/tableHelperFunctions.ts","../../electron/main/filesystem/storage/MediaStore.ts","../../electron/main/filesystem/storage/ImageStore.ts","../../electron/main/filesystem/storage/VideoStore.ts","../../electron/main/filesystem/ipcHandlers.ts","../../electron/main/llm/ipcHandlers.ts","../../electron/main/path/ipcHandlers.ts","../../electron/main/vector-database/ipcHandlers.ts","../../electron/main/index.ts"],"sourcesContent":["/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","// This is a magic string replaced by rollup\n\nconst SDK_VERSION = \"8.51.0\" ;\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { SDK_VERSION } from './version.js';\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ = globalThis ;\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const versionedCarrier = (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n  return versionedCarrier[name] || (versionedCarrier[name] = creator());\n}\n\nexport { GLOBAL_OBJ, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { getGlobalSingleton, GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n/**\n * This is a logger singleton which either logs things or no-ops if logging is not enabled.\n * The logger is a singleton on the carrier, to ensure that a consistent logger is used throughout the SDK.\n */\nconst logger = getGlobalSingleton('logger', makeLogger);\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger, originalConsoleMethods };\n//# sourceMappingURL=logger.js.map\n","const STACKTRACE_FRAME_LIMIT = 50;\nconst UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirstLines = 0, framesToPop = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i] ;\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nfunction getLastStackFrame(arr) {\n  return arr[arr.length - 1] || {};\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nfunction getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { UNKNOWN_FUNCTION, createStackParser, getFramesFromEvent, getFunctionName, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumented[type] = true;\n    try {\n      instrumentFn();\n    } catch (e) {\n      DEBUG_BUILD && logger.error(`Error while instrumenting ${type}`, e);\n    }\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=handlers.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  // Note: The reason we are doing window.onerror instead of window.addEventListener('error')\n  // is that we are using this handler in the Loader Script, to handle buffered errors consistently\n  GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalErrorInstrumentationHandler };\n//# sourceMappingURL=globalError.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  // Note: The reason we are doing window.onunhandledrejection instead of window.addEventListener('unhandledrejection')\n  // is that we are using this handler in the Loader Script, to handle buffered rejections consistently\n  GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalUnhandledRejectionInstrumentationHandler };\n//# sourceMappingURL=globalUnhandledRejection.js.map\n","import { SDK_VERSION } from './utils-hoist/version.js';\nimport { GLOBAL_OBJ } from './utils-hoist/worldwide.js';\n\n/**\n * An object that contains globally accessible properties and maintains a scope stack.\n * @hidden\n */\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  // This ensures a Sentry carrier exists\n  getSentryCarrier(GLOBAL_OBJ);\n  return GLOBAL_OBJ;\n}\n\n/** Will either get the existing sentry carrier, or create a new one. */\nfunction getSentryCarrier(carrier) {\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n\n  // For now: First SDK that sets the .version property wins\n  __SENTRY__.version = __SENTRY__.version || SDK_VERSION;\n\n  // Intentionally populating and returning the version of \"this\" SDK instance\n  // rather than what's set in .version so that \"this\" SDK always gets its carrier\n  return (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n}\n\nexport { getMainCarrier, getSentryCarrier };\n//# sourceMappingURL=carrier.js.map\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n    case '[object WebAssembly.Exception]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isParameterizedString, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel };\n//# sourceMappingURL=is.js.map\n","import { isString } from './is.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    const className = elem.className;\n    if (className && isString(className)) {\n      const classes = className.split(/\\s+/);\n      for (const c of classes) {\n        out.push(`.${c}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (const k of allowedAttrs) {\n    const attr = elem.getAttribute(k);\n    if (attr) {\n      out.push(`[${k}=\"${attr}\"]`);\n    }\n  }\n\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existence of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n *\n * @deprecated This method is deprecated and will be removed in the next major version.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precedence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nfunction getComponentName(elem) {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem ;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n\nexport { getComponentName, getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","import { isVueViewModel, isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate };\n//# sourceMappingURL=string.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { logger } from './logger.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  try {\n    source[name] = wrapped;\n  } catch (e) {\n    DEBUG_BUILD && logger.log(`Failed to replace method \"${name}\" in object`, source);\n  }\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n *\n * @deprecated This function is deprecated and will be removed in the next major version of the SDK.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction urlEncode(object) {\n  return Object.entries(object)\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argument itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  const firstKey = keys[0];\n\n  if (!firstKey) {\n    return '[object has no keys]';\n  }\n\n  if (firstKey.length >= maxLength) {\n    return truncate(firstKey, maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.getOwnPropertyNames(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) ).constructor.name;\n    return !name || name === 'Object';\n  } catch (e2) {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    // this will catch both undefined and null\n    case wat == undefined:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { GLOBAL_OBJ } from './worldwide.js';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n *\n * @deprecated This variable will be removed in the next major version.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    // eslint-disable-next-line deprecation/deprecation\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      // eslint-disable-next-line deprecation/deprecation\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      // eslint-disable-next-line deprecation/deprecation\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  // eslint-disable-next-line deprecation/deprecation\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds };\n//# sourceMappingURL=time.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\nfunction _parseInt(input) {\n  return parseInt(input || '', 10);\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = _parseInt(match[1]);\n  const minor = _parseInt(match[2]);\n  const patch = _parseInt(match[3]);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  // We guard here to ensure this is not larger than the existing number of lines\n  const lineIndex = Math.min(maxLines - 1, sourceLine);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  frame.context_line = snipLine(lines[lineIndex], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  if (isAlreadyCaptured(exception)) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nfunction isAlreadyCaptured(exception) {\n  try {\n    return (exception ).__sentry_captured__;\n  } catch (e) {} // eslint-disable-line no-empty\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n *\n * @deprecated This function has been deprecated and will not be replaced.\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import './utils-hoist/debug-build.js';\nimport './utils-hoist/logger.js';\nimport { dropUndefinedKeys } from './utils-hoist/object.js';\nimport { timestampInSeconds } from './utils-hoist/time.js';\nimport { uuid4 } from './utils-hoist/misc.js';\nimport './utils-hoist/syncpromise.js';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { uuid4 } from './misc.js';\n\n/**\n * Returns a new minimal propagation context.\n *\n * @deprecated Use `generateTraceId` and `generateSpanId` instead.\n */\nfunction generatePropagationContext() {\n  return {\n    traceId: generateTraceId(),\n    spanId: generateSpanId(),\n  };\n}\n\n/**\n * Generate a random, valid trace ID.\n */\nfunction generateTraceId() {\n  return uuid4();\n}\n\n/**\n * Generate a random, valid span ID.\n */\nfunction generateSpanId() {\n  return uuid4().substring(16);\n}\n\nexport { generatePropagationContext, generateSpanId, generateTraceId };\n//# sourceMappingURL=propagationContext.js.map\n","/**\n * Shallow merge two objects.\n * Does not mutate the passed in objects.\n * Undefined/empty values in the merge object will overwrite existing values.\n *\n * By default, this merges 2 levels deep.\n */\nfunction merge(initialObj, mergeObj, levels = 2) {\n  // If the merge value is not an object, or we have no merge levels left,\n  // we just set the value to the merge value\n  if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n    return mergeObj;\n  }\n\n  // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n  if (initialObj && mergeObj && Object.keys(mergeObj).length === 0) {\n    return initialObj;\n  }\n\n  // Clone object\n  const output = { ...initialObj };\n\n  // Merge values into output, resursively\n  for (const key in mergeObj) {\n    if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n      output[key] = merge(output[key], mergeObj[key], levels - 1);\n    }\n  }\n\n  return output;\n}\n\nexport { merge };\n//# sourceMappingURL=merge.js.map\n","import { addNonEnumerableProperty } from '../utils-hoist/object.js';\n\nconst SCOPE_SPAN_FIELD = '_sentrySpan';\n\n/**\n * Set the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nfunction _setSpanForScope(scope, span) {\n  if (span) {\n    addNonEnumerableProperty(scope , SCOPE_SPAN_FIELD, span);\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete (scope )[SCOPE_SPAN_FIELD];\n  }\n}\n\n/**\n * Get the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nfunction _getSpanForScope(scope) {\n  return scope[SCOPE_SPAN_FIELD];\n}\n\nexport { _getSpanForScope, _setSpanForScope };\n//# sourceMappingURL=spanOnScope.js.map\n","import { updateSession } from './session.js';\nimport { isPlainObject } from './utils-hoist/is.js';\nimport { logger } from './utils-hoist/logger.js';\nimport { uuid4 } from './utils-hoist/misc.js';\nimport { generateTraceId, generateSpanId } from './utils-hoist/propagationContext.js';\nimport { dateTimestampInSeconds } from './utils-hoist/time.js';\nimport { merge } from './utils/merge.js';\nimport { _setSpanForScope, _getSpanForScope } from './utils/spanOnScope.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information.\n */\nclass ScopeClass  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called during event processing. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n\n  /**\n   * Transaction Name\n   *\n   * IMPORTANT: The transaction name on the scope has nothing to do with root spans/transaction objects.\n   * It's purpose is to assign a transaction to the scope that's added to non-transaction events.\n   */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** The client on this scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = {\n      traceId: generateTraceId(),\n      spanId: generateSpanId(),\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clone() {\n    const newScope = new ScopeClass();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    if (this._contexts.flags) {\n      // We need to copy the `values` array so insertions on a cloned scope\n      // won't affect the original array.\n      newScope._contexts.flags = {\n        values: [...this._contexts.flags.values],\n      };\n    }\n\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n    newScope._lastEventId = this._lastEventId;\n\n    _setSpanForScope(newScope, _getSpanForScope(this));\n\n    return newScope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setClient(client) {\n    this._client = client;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLastEventId(lastEventId) {\n    this._lastEventId = lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this._client ;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(level) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope so that the name of e.g. taken server route or\n   * the page location is attached to future events.\n   *\n   * IMPORTANT: Calling this function does NOT change the name of the currently active\n   * root span. If you want to change the name of the active root span, use\n   * `Sentry.updateSpanName(rootSpan, 'new name')` instead.\n   *\n   * By default, the SDK updates the scope's transaction name automatically on sensible\n   * occasions, such as a page navigation or when handling a new request on the server.\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    const [scopeInstance, requestSession] =\n      scopeToMerge instanceof Scope\n        ? // eslint-disable-next-line deprecation/deprecation\n          [scopeToMerge.getScopeData(), scopeToMerge.getRequestSession()]\n        : isPlainObject(scopeToMerge)\n          ? [captureContext , (captureContext ).requestSession]\n          : [];\n\n    const { tags, extra, user, contexts, level, fingerprint = [], propagationContext } = scopeInstance || {};\n\n    this._tags = { ...this._tags, ...tags };\n    this._extra = { ...this._extra, ...extra };\n    this._contexts = { ...this._contexts, ...contexts };\n\n    if (user && Object.keys(user).length) {\n      this._user = user;\n    }\n\n    if (level) {\n      this._level = level;\n    }\n\n    if (fingerprint.length) {\n      this._fingerprint = fingerprint;\n    }\n\n    if (propagationContext) {\n      this._propagationContext = propagationContext;\n    }\n\n    if (requestSession) {\n      this._requestSession = requestSession;\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    // client is not cleared here on purpose!\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._session = undefined;\n    _setSpanForScope(this, undefined);\n    this._attachments = [];\n    this.setPropagationContext({ traceId: generateTraceId() });\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n   getScopeData() {\n    return {\n      breadcrumbs: this._breadcrumbs,\n      attachments: this._attachments,\n      contexts: this._contexts,\n      tags: this._tags,\n      extra: this._extra,\n      user: this._user,\n      level: this._level,\n      fingerprint: this._fingerprint || [],\n      eventProcessors: this._eventProcessors,\n      propagationContext: this._propagationContext,\n      sdkProcessingMetadata: this._sdkProcessingMetadata,\n      transactionName: this._transactionName,\n      span: _getSpanForScope(this),\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = merge(this._sdkProcessingMetadata, newData, 2);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(\n    context,\n  ) {\n    this._propagationContext = {\n      // eslint-disable-next-line deprecation/deprecation\n      spanId: generateSpanId(),\n      ...context,\n    };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(message, level, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Holds additional event information.\n */\nconst Scope = ScopeClass;\n\n/**\n * Holds additional event information.\n */\n\nexport { Scope };\n//# sourceMappingURL=scope.js.map\n","import { Scope } from './scope.js';\nimport { getGlobalSingleton } from './utils-hoist/worldwide.js';\n\n/** Get the default current scope. */\nfunction getDefaultCurrentScope() {\n  return getGlobalSingleton('defaultCurrentScope', () => new Scope());\n}\n\n/** Get the default isolation scope. */\nfunction getDefaultIsolationScope() {\n  return getGlobalSingleton('defaultIsolationScope', () => new Scope());\n}\n\nexport { getDefaultCurrentScope, getDefaultIsolationScope };\n//# sourceMappingURL=defaultScopes.js.map\n","import { getDefaultCurrentScope, getDefaultIsolationScope } from '../defaultScopes.js';\nimport { Scope } from '../scope.js';\nimport { isThenable } from '../utils-hoist/is.js';\nimport { getMainCarrier, getSentryCarrier } from '../carrier.js';\n\n/**\n * This is an object that holds a stack of scopes.\n */\nclass AsyncContextStack {\n\n   constructor(scope, isolationScope) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    // scope stack for domains or the process\n    this._stack = [{ scope: assignedScope }];\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Fork a scope for the stack.\n   */\n   withScope(callback) {\n    const scope = this._pushScope();\n\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      this._popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          this._popScope();\n          return res;\n        },\n        e => {\n          this._popScope();\n          throw e;\n        },\n      );\n    }\n\n    this._popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * Get the client of the stack.\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * Get the isolation scope for the stack.\n   */\n   getIsolationScope() {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   */\n   getStackTop() {\n    return this._stack[this._stack.length - 1] ;\n  }\n\n  /**\n   * Push a scope to the stack.\n   */\n   _pushScope() {\n    // We want to clone the content of prev scope\n    const scope = this.getScope().clone();\n    this._stack.push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * Pop a scope from the stack.\n   */\n   _popScope() {\n    if (this._stack.length <= 1) return false;\n    return !!this._stack.pop();\n  }\n}\n\n/**\n * Get the global async context stack.\n * This will be removed during the v8 cycle and is only here to make migration easier.\n */\nfunction getAsyncContextStack() {\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n\n  return (sentry.stack = sentry.stack || new AsyncContextStack(getDefaultCurrentScope(), getDefaultIsolationScope()));\n}\n\nfunction withScope(callback) {\n  return getAsyncContextStack().withScope(callback);\n}\n\nfunction withSetScope(scope, callback) {\n  const stack = getAsyncContextStack() ;\n  return stack.withScope(() => {\n    stack.getStackTop().scope = scope;\n    return callback(scope);\n  });\n}\n\nfunction withIsolationScope(callback) {\n  return getAsyncContextStack().withScope(() => {\n    return callback(getAsyncContextStack().getIsolationScope());\n  });\n}\n\n/**\n * Get the stack-based async context strategy.\n */\nfunction getStackAsyncContextStrategy() {\n  return {\n    withIsolationScope,\n    withScope,\n    withSetScope,\n    withSetIsolationScope: (_isolationScope, callback) => {\n      return withIsolationScope(callback);\n    },\n    getCurrentScope: () => getAsyncContextStack().getScope(),\n    getIsolationScope: () => getAsyncContextStack().getIsolationScope(),\n  };\n}\n\nexport { AsyncContextStack, getStackAsyncContextStrategy };\n//# sourceMappingURL=stackStrategy.js.map\n","import { getMainCarrier, getSentryCarrier } from '../carrier.js';\nimport { getStackAsyncContextStrategy } from './stackStrategy.js';\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nfunction getAsyncContextStrategy(carrier) {\n  const sentry = getSentryCarrier(carrier);\n\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return getStackAsyncContextStrategy();\n}\n\nexport { getAsyncContextStrategy, setAsyncContextStrategy };\n//# sourceMappingURL=index.js.map\n","import { getAsyncContextStrategy } from './asyncContext/index.js';\nimport { getMainCarrier } from './carrier.js';\nimport { Scope } from './scope.js';\nimport { dropUndefinedKeys } from './utils-hoist/object.js';\nimport { getGlobalSingleton } from './utils-hoist/worldwide.js';\n\n/**\n * Get the currently active scope.\n */\nfunction getCurrentScope() {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getCurrentScope();\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current execution context.\n */\nfunction getIsolationScope() {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getIsolationScope();\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nfunction getGlobalScope() {\n  return getGlobalSingleton('globalScope', () => new Scope());\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n */\n\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nfunction withScope(\n  ...rest\n) {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n\n    if (!scope) {\n      return acs.withScope(callback);\n    }\n\n    return acs.withSetScope(scope, callback);\n  }\n\n  return acs.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n */\n\n/**\n * Either creates a new active isolation scope, or sets the given isolation scope as active scope in the given callback.\n */\nfunction withIsolationScope(\n  ...rest\n\n) {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [isolationScope, callback] = rest;\n\n    if (!isolationScope) {\n      return acs.withIsolationScope(callback);\n    }\n\n    return acs.withSetIsolationScope(isolationScope, callback);\n  }\n\n  return acs.withIsolationScope(rest[0]);\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  return getCurrentScope().getClient();\n}\n\n/**\n * Get a trace context for the given scope.\n */\nfunction getTraceContextFromScope(scope) {\n  const propagationContext = scope.getPropagationContext();\n\n  // TODO(v9): Use generateSpanId() instead of spanId\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceId, spanId, parentSpanId } = propagationContext;\n\n  const traceContext = dropUndefinedKeys({\n    trace_id: traceId,\n    span_id: spanId,\n    parent_span_id: parentSpanId,\n  });\n\n  return traceContext;\n}\n\nexport { getClient, getCurrentScope, getGlobalScope, getIsolationScope, getTraceContextFromScope, withIsolationScope, withScope };\n//# sourceMappingURL=currentScopes.js.map\n","import { dropUndefinedKeys } from '../utils-hoist/object.js';\n\n/**\n * key: bucketKey\n * value: [exportKey, MetricSummary]\n */\n\nconst METRICS_SPAN_FIELD = '_sentryMetrics';\n\n/**\n * Fetches the metric summary if it exists for the passed span\n */\nfunction getMetricSummaryJsonForSpan(span) {\n  const storage = (span )[METRICS_SPAN_FIELD];\n\n  if (!storage) {\n    return undefined;\n  }\n  const output = {};\n\n  for (const [, [exportKey, summary]] of storage) {\n    const arr = output[exportKey] || (output[exportKey] = []);\n    arr.push(dropUndefinedKeys(summary));\n  }\n\n  return output;\n}\n\n/**\n * Updates the metric summary on a span.\n */\nfunction updateMetricSummaryOnSpan(\n  span,\n  metricType,\n  sanitizedName,\n  value,\n  unit,\n  tags,\n  bucketKey,\n) {\n  const existingStorage = (span )[METRICS_SPAN_FIELD];\n  const storage =\n    existingStorage ||\n    ((span )[METRICS_SPAN_FIELD] = new Map());\n\n  const exportKey = `${metricType}:${sanitizedName}@${unit}`;\n  const bucketItem = storage.get(bucketKey);\n\n  if (bucketItem) {\n    const [, summary] = bucketItem;\n    storage.set(bucketKey, [\n      exportKey,\n      {\n        min: Math.min(summary.min, value),\n        max: Math.max(summary.max, value),\n        count: (summary.count += 1),\n        sum: (summary.sum += value),\n        tags: summary.tags,\n      },\n    ]);\n  } else {\n    storage.set(bucketKey, [\n      exportKey,\n      {\n        min: value,\n        max: value,\n        count: 1,\n        sum: value,\n        tags,\n      },\n    ]);\n  }\n}\n\nexport { getMetricSummaryJsonForSpan, updateMetricSummaryOnSpan };\n//# sourceMappingURL=metric-summary.js.map\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/** The reason why an idle span finished. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON = 'sentry.idle_span_finish_reason';\n\n/** The unit of a measurement, which may be stored as a TimedEvent. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT = 'sentry.measurement_unit';\n\n/** The value of a measurement, which may be stored as a TimedEvent. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE = 'sentry.measurement_value';\n\n/**\n * A custom span name set by users guaranteed to be taken over any automatically\n * inferred name. This attribute is removed before the span is sent.\n *\n * @internal only meant for internal SDK usage\n * @hidden\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME = 'sentry.custom_span_name';\n\n/**\n * The id of the profile that this span occurred in.\n */\nconst SEMANTIC_ATTRIBUTE_PROFILE_ID = 'sentry.profile_id';\n\nconst SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME = 'sentry.exclusive_time';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_HIT = 'cache.hit';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_KEY = 'cache.key';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE = 'cache.item_size';\n\n/** TODO: Remove these once we update to latest semantic conventions */\nconst SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD = 'http.request.method';\nconst SEMANTIC_ATTRIBUTE_URL_FULL = 'url.full';\n\nexport { SEMANTIC_ATTRIBUTE_CACHE_HIT, SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE, SEMANTIC_ATTRIBUTE_CACHE_KEY, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD, SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME, SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_URL_FULL };\n//# sourceMappingURL=semanticAttributes.js.map\n","const SPAN_STATUS_UNSET = 0;\nconst SPAN_STATUS_OK = 1;\nconst SPAN_STATUS_ERROR = 2;\n\n/**\n * Converts a HTTP status code into a sentry status with a message.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\n// https://develop.sentry.dev/sdk/event-payloads/span/\nfunction getSpanStatusFromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return { code: SPAN_STATUS_OK };\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return { code: SPAN_STATUS_ERROR, message: 'unauthenticated' };\n      case 403:\n        return { code: SPAN_STATUS_ERROR, message: 'permission_denied' };\n      case 404:\n        return { code: SPAN_STATUS_ERROR, message: 'not_found' };\n      case 409:\n        return { code: SPAN_STATUS_ERROR, message: 'already_exists' };\n      case 413:\n        return { code: SPAN_STATUS_ERROR, message: 'failed_precondition' };\n      case 429:\n        return { code: SPAN_STATUS_ERROR, message: 'resource_exhausted' };\n      case 499:\n        return { code: SPAN_STATUS_ERROR, message: 'cancelled' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'invalid_argument' };\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return { code: SPAN_STATUS_ERROR, message: 'unimplemented' };\n      case 503:\n        return { code: SPAN_STATUS_ERROR, message: 'unavailable' };\n      case 504:\n        return { code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'internal_error' };\n    }\n  }\n\n  return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n}\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nfunction setHttpStatus(span, httpStatus) {\n  span.setAttribute('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus.message !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n\nexport { SPAN_STATUS_ERROR, SPAN_STATUS_OK, SPAN_STATUS_UNSET, getSpanStatusFromHttpCode, setHttpStatus };\n//# sourceMappingURL=spanstatus.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { isString } from './is.js';\nimport { logger } from './logger.js';\n\n/**\n * @deprecated Use a `\"baggage\"` string directly\n */\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nfunction parseBaggageHeader(\n  baggageHeader,\n) {\n  if (!baggageHeader || (!isString(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      Object.entries(currBaggageObject).forEach(([key, value]) => {\n        acc[key] = value;\n      });\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      if (key && value) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader, parseBaggageHeader };\n//# sourceMappingURL=baggage.js.map\n","import { baggageHeaderToDynamicSamplingContext } from './baggage.js';\nimport { generateTraceId, generateSpanId } from './propagationContext.js';\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create a propagation context from incoming headers or\n * creates a minimal new one if the headers are undefined.\n */\nfunction propagationContextFromHeaders(\n  sentryTrace,\n  baggage,\n) {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  if (!traceparentData || !traceparentData.traceId) {\n    return { traceId: generateTraceId(), spanId: generateSpanId() };\n  }\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData;\n\n  const virtualSpanId = generateSpanId();\n\n  return {\n    traceId,\n    parentSpanId,\n    spanId: virtualSpanId,\n    sampled: parentSampled,\n    dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = generateTraceId(),\n  spanId = generateSpanId(),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\nexport { TRACEPARENT_REGEXP, extractTraceparentData, generateSentryTraceHeader, propagationContextFromHeaders };\n//# sourceMappingURL=tracing.js.map\n","import { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { getMainCarrier } from '../carrier.js';\nimport { getCurrentScope } from '../currentScopes.js';\nimport { getMetricSummaryJsonForSpan, updateMetricSummaryOnSpan } from '../metrics/metric-summary.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME } from '../semanticAttributes.js';\nimport { SPAN_STATUS_UNSET, SPAN_STATUS_OK } from '../tracing/spanstatus.js';\nimport { consoleSandbox } from '../utils-hoist/logger.js';\nimport { dropUndefinedKeys, addNonEnumerableProperty } from '../utils-hoist/object.js';\nimport { generateSpanId } from '../utils-hoist/propagationContext.js';\nimport { timestampInSeconds } from '../utils-hoist/time.js';\nimport { generateSentryTraceHeader } from '../utils-hoist/tracing.js';\nimport { _getSpanForScope } from './spanOnScope.js';\n\n// These are aligned with OpenTelemetry trace flags\nconst TRACE_FLAG_NONE = 0x0;\nconst TRACE_FLAG_SAMPLED = 0x1;\n\n// todo(v9): Remove this once we've stopped dropping spans via `beforeSendSpan`\nlet hasShownSpanDropWarning = false;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n * By default, this will only include trace_id, span_id & parent_span_id.\n * If `includeAllData` is true, it will also include data, op, status & origin.\n */\nfunction spanToTransactionTraceContext(span) {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    parent_span_id,\n    span_id,\n    trace_id,\n    data,\n    op,\n    status,\n    origin,\n  });\n}\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in a non-transaction event.\n */\nfunction spanToTraceContext(span) {\n  const { spanId, traceId: trace_id, isRemote } = span.spanContext();\n\n  // If the span is remote, we use a random/virtual span as span_id to the trace context,\n  // and the remote span as parent_span_id\n  const parent_span_id = isRemote ? spanId : spanToJSON(span).parent_span_id;\n  const span_id = isRemote ? generateSpanId() : spanId;\n\n  return dropUndefinedKeys({\n    parent_span_id,\n    span_id,\n    trace_id,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nfunction spanToTraceHeader(span) {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input into a timestamp in seconds.\n */\nfunction spanTimeInputToSeconds(input) {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n */\n// Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n// This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n// And `spanToJSON` needs the Span class from `span.ts` to check here.\nfunction spanToJSON(span) {\n  if (spanIsSentrySpan(span)) {\n    return span.getSpanJSON();\n  }\n\n  try {\n    const { spanId: span_id, traceId: trace_id } = span.spanContext();\n\n    // Handle a span from @opentelemetry/sdk-base-trace's `Span` class\n    if (spanIsOpenTelemetrySdkTraceBaseSpan(span)) {\n      const { attributes, startTime, name, endTime, parentSpanId, status } = span;\n\n      return dropUndefinedKeys({\n        span_id,\n        trace_id,\n        data: attributes,\n        description: name,\n        parent_span_id: parentSpanId,\n        start_timestamp: spanTimeInputToSeconds(startTime),\n        // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n        timestamp: spanTimeInputToSeconds(endTime) || undefined,\n        status: getStatusMessage(status),\n        op: attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n        origin: attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n        _metrics_summary: getMetricSummaryJsonForSpan(span),\n      });\n    }\n\n    // Finally, at least we have `spanContext()`....\n    return {\n      span_id,\n      trace_id,\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction spanIsOpenTelemetrySdkTraceBaseSpan(span) {\n  const castSpan = span ;\n  return !!castSpan.attributes && !!castSpan.startTime && !!castSpan.name && !!castSpan.endTime && !!castSpan.status;\n}\n\n/** Exported only for tests. */\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSentrySpan(span) {\n  return typeof (span ).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nfunction spanIsSampled(span) {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  return traceFlags === TRACE_FLAG_SAMPLED;\n}\n\n/** Get the status message to use for a JSON representation of a span. */\nfunction getStatusMessage(status) {\n  if (!status || status.code === SPAN_STATUS_UNSET) {\n    return undefined;\n  }\n\n  if (status.code === SPAN_STATUS_OK) {\n    return 'ok';\n  }\n\n  return status.message || 'unknown_error';\n}\n\nconst CHILD_SPANS_FIELD = '_sentryChildSpans';\nconst ROOT_SPAN_FIELD = '_sentryRootSpan';\n\n/**\n * Adds an opaque child span reference to a span.\n */\nfunction addChildSpanToSpan(span, childSpan) {\n  // We store the root span reference on the child span\n  // We need this for `getRootSpan()` to work\n  const rootSpan = span[ROOT_SPAN_FIELD] || span;\n  addNonEnumerableProperty(childSpan , ROOT_SPAN_FIELD, rootSpan);\n\n  // We store a list of child spans on the parent span\n  // We need this for `getSpanDescendants()` to work\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].add(childSpan);\n  } else {\n    addNonEnumerableProperty(span, CHILD_SPANS_FIELD, new Set([childSpan]));\n  }\n}\n\n/** This is only used internally by Idle Spans. */\nfunction removeChildSpanFromSpan(span, childSpan) {\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].delete(childSpan);\n  }\n}\n\n/**\n * Returns an array of the given span and all of its descendants.\n */\nfunction getSpanDescendants(span) {\n  const resultSet = new Set();\n\n  function addSpanChildren(span) {\n    // This exit condition is required to not infinitely loop in case of a circular dependency.\n    if (resultSet.has(span)) {\n      return;\n      // We want to ignore unsampled spans (e.g. non recording spans)\n    } else if (spanIsSampled(span)) {\n      resultSet.add(span);\n      const childSpans = span[CHILD_SPANS_FIELD] ? Array.from(span[CHILD_SPANS_FIELD]) : [];\n      for (const childSpan of childSpans) {\n        addSpanChildren(childSpan);\n      }\n    }\n  }\n\n  addSpanChildren(span);\n\n  return Array.from(resultSet);\n}\n\n/**\n * Returns the root span of a given span.\n */\nfunction getRootSpan(span) {\n  return span[ROOT_SPAN_FIELD] || span;\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getActiveSpan) {\n    return acs.getActiveSpan();\n  }\n\n  return _getSpanForScope(getCurrentScope());\n}\n\n/**\n * Updates the metric summary on the currently active span\n */\nfunction updateMetricSummaryOnActiveSpan(\n  metricType,\n  sanitizedName,\n  value,\n  unit,\n  tags,\n  bucketKey,\n) {\n  const span = getActiveSpan();\n  if (span) {\n    updateMetricSummaryOnSpan(span, metricType, sanitizedName, value, unit, tags, bucketKey);\n  }\n}\n\n/**\n * Logs a warning once if `beforeSendSpan` is used to drop spans.\n *\n * todo(v9): Remove this once we've stopped dropping spans via `beforeSendSpan`.\n */\nfunction showSpanDropWarning() {\n  if (!hasShownSpanDropWarning) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Sentry] Deprecation warning: Returning null from `beforeSendSpan` will be disallowed from SDK version 9.0.0 onwards. The callback will only support mutating spans. To drop certain spans, configure the respective integrations directly.',\n      );\n    });\n    hasShownSpanDropWarning = true;\n  }\n}\n\n/**\n * Updates the name of the given span and ensures that the span name is not\n * overwritten by the Sentry SDK.\n *\n * Use this function instead of `span.updateName()` if you want to make sure that\n * your name is kept. For some spans, for example root `http.server` spans the\n * Sentry SDK would otherwise overwrite the span name with a high-quality name\n * it infers when the span ends.\n *\n * Use this function in server code or when your span is started on the server\n * and on the client (browser). If you only update a span name on the client,\n * you can also use `span.updateName()` the SDK does not overwrite the name.\n *\n * @param span - The span to update the name of.\n * @param name - The name to set on the span.\n */\nfunction updateSpanName(span, name) {\n  span.updateName(name);\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n    [SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME]: name,\n  });\n}\n\nexport { TRACE_FLAG_NONE, TRACE_FLAG_SAMPLED, addChildSpanToSpan, getActiveSpan, getRootSpan, getSpanDescendants, getStatusMessage, removeChildSpanFromSpan, showSpanDropWarning, spanIsSampled, spanTimeInputToSeconds, spanToJSON, spanToTraceContext, spanToTraceHeader, spanToTransactionTraceContext, updateMetricSummaryOnActiveSpan, updateSpanName };\n//# sourceMappingURL=spanUtils.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { addGlobalErrorInstrumentationHandler } from '../utils-hoist/instrument/globalError.js';\nimport { addGlobalUnhandledRejectionInstrumentationHandler } from '../utils-hoist/instrument/globalUnhandledRejection.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getActiveSpan, getRootSpan } from '../utils/spanUtils.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\n\nlet errorsInstrumented = false;\n\n/**\n * Ensure that global errors automatically set the active span status.\n */\nfunction registerSpanErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active root span as failed\n */\nfunction errorCallback() {\n  const activeSpan = getActiveSpan();\n  const rootSpan = activeSpan && getRootSpan(activeSpan);\n  if (rootSpan) {\n    const message = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Root span: ${message} -> Global error occurred`);\n    rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message });\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\nexport { registerSpanErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { addNonEnumerableProperty } from '../utils-hoist/object.js';\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\n/** Store the scope & isolation scope for a span, which can the be used when it is finished. */\nfunction setCapturedScopesOnSpan(span, scope, isolationScope) {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nfunction getCapturedScopesOnSpan(span) {\n  return {\n    scope: (span )[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span )[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n\nexport { getCapturedScopesOnSpan, setCapturedScopesOnSpan };\n//# sourceMappingURL=utils.js.map\n","import { getClient } from '../currentScopes.js';\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  // eslint-disable-next-line deprecation/deprecation\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\nexport { hasTracingEnabled };\n//# sourceMappingURL=hasTracingEnabled.js.map\n","import { generateTraceId, generateSpanId } from '../utils-hoist/propagationContext.js';\nimport { TRACE_FLAG_NONE } from '../utils/spanUtils.js';\n\n/**\n * A Sentry Span that is non-recording, meaning it will not be sent to Sentry.\n */\nclass SentryNonRecordingSpan  {\n\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || generateTraceId();\n    this._spanId = spanContext.spanId || generateSpanId();\n  }\n\n  /** @inheritdoc */\n   spanContext() {\n    return {\n      spanId: this._spanId,\n      traceId: this._traceId,\n      traceFlags: TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n   end(_timestamp) {}\n\n  /** @inheritdoc */\n   setAttribute(_key, _value) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttributes(_values) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   setStatus(_status) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   updateName(_name) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return false;\n  }\n\n  /** @inheritdoc */\n   addEvent(\n    _name,\n    _attributesOrStartTime,\n    _startTime,\n  ) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLink(_link) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLinks(_links) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   recordException(_exception, _time) {\n    // noop\n  }\n}\n\nexport { SentryNonRecordingSpan };\n//# sourceMappingURL=sentryNonRecordingSpan.js.map\n","import { isThenable } from '../utils-hoist/is.js';\n\n/**\n * Wrap a callback function with error handling.\n * If an error is thrown, it will be passed to the `onError` callback and re-thrown.\n *\n * If the return value of the function is a promise, it will be handled with `maybeHandlePromiseRejection`.\n *\n * If an `onFinally` callback is provided, this will be called when the callback has finished\n * - so if it returns a promise, once the promise resolved/rejected,\n * else once the callback has finished executing.\n * The `onFinally` callback will _always_ be called, no matter if an error was thrown or not.\n */\nfunction handleCallbackErrors\n\n(\n  fn,\n  onError,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onFinally = () => {},\n) {\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = fn();\n  } catch (e) {\n    onError(e);\n    onFinally();\n    throw e;\n  }\n\n  return maybeHandlePromiseRejection(maybePromiseResult, onError, onFinally);\n}\n\n/**\n * Maybe handle a promise rejection.\n * This expects to be given a value that _may_ be a promise, or any other value.\n * If it is a promise, and it rejects, it will call the `onError` callback.\n * Other than this, it will generally return the given value as-is.\n */\nfunction maybeHandlePromiseRejection(\n  value,\n  onError,\n  onFinally,\n) {\n  if (isThenable(value)) {\n    // @ts-expect-error - the isThenable check returns the \"wrong\" type here\n    return value.then(\n      res => {\n        onFinally();\n        return res;\n      },\n      e => {\n        onError(e);\n        onFinally();\n        throw e;\n      },\n    );\n  }\n\n  onFinally();\n  return value;\n}\n\nexport { handleCallbackErrors };\n//# sourceMappingURL=handleCallbackErrors.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","import { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { getClient } from '../currentScopes.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes.js';\nimport { baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader } from '../utils-hoist/baggage.js';\nimport { dropUndefinedKeys, addNonEnumerableProperty } from '../utils-hoist/object.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { getRootSpan, spanToJSON, spanIsSampled } from '../utils/spanUtils.js';\n\n/**\n * If you change this value, also update the terser plugin config to\n * avoid minification of the object property!\n */\nconst FROZEN_DSC_FIELD = '_frozenDsc';\n\n/**\n * Freeze the given DSC on the given span.\n */\nfunction freezeDscOnSpan(span, dsc) {\n  const spanWithMaybeDsc = span ;\n  addNonEnumerableProperty(spanWithMaybeDsc, FROZEN_DSC_FIELD, dsc);\n}\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(trace_id, client) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * Get the dynamic sampling context for the currently active scopes.\n */\nfunction getDynamicSamplingContextFromScope(client, scope) {\n  const propagationContext = scope.getPropagationContext();\n  return propagationContext.dsc || getDynamicSamplingContextFromClient(propagationContext.traceId, client);\n}\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nfunction getDynamicSamplingContextFromSpan(span) {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  const rootSpan = getRootSpan(span);\n\n  // For core implementation, we freeze the DSC onto the span as a non-enumerable property\n  const frozenDsc = (rootSpan )[FROZEN_DSC_FIELD];\n  if (frozenDsc) {\n    return frozenDsc;\n  }\n\n  // For OpenTelemetry, we freeze the DSC on the trace state\n  const traceState = rootSpan.spanContext().traceState;\n  const traceStateDsc = traceState && traceState.get('sentry.dsc');\n\n  // If the span has a DSC, we want it to take precedence\n  const dscOnTraceState = traceStateDsc && baggageHeaderToDynamicSamplingContext(traceStateDsc);\n\n  if (dscOnTraceState) {\n    return dscOnTraceState;\n  }\n\n  // Else, we generate it from the span\n  const dsc = getDynamicSamplingContextFromClient(span.spanContext().traceId, client);\n  const jsonSpan = spanToJSON(rootSpan);\n  const attributes = jsonSpan.data || {};\n  const maybeSampleRate = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE];\n\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  const name = jsonSpan.description;\n  if (source !== 'url' && name) {\n    dsc.transaction = name;\n  }\n\n  // How can we even land here with hasTracingEnabled() returning false?\n  // Otel creates a Non-recording span in Tracing Without Performance mode when handling incoming requests\n  // So we end up with an active span that is not sampled (neither positively nor negatively)\n  if (hasTracingEnabled()) {\n    dsc.sampled = String(spanIsSampled(rootSpan));\n  }\n\n  client.emit('createDsc', dsc, rootSpan);\n\n  return dsc;\n}\n\n/**\n * Convert a Span to a baggage header.\n */\nfunction spanToBaggageHeader(span) {\n  const dsc = getDynamicSamplingContextFromSpan(span);\n  return dynamicSamplingContextToSentryBaggageHeader(dsc);\n}\n\nexport { freezeDscOnSpan, getDynamicSamplingContextFromClient, getDynamicSamplingContextFromScope, getDynamicSamplingContextFromSpan, spanToBaggageHeader };\n//# sourceMappingURL=dynamicSamplingContext.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { spanToJSON, spanIsSampled, getRootSpan } from '../utils/spanUtils.js';\n\n/**\n * Print a log message for a started span.\n */\nfunction logSpanStart(span) {\n  if (!DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >', parent_span_id: parentSpanId } = spanToJSON(span);\n  const { spanId } = span.spanContext();\n\n  const sampled = spanIsSampled(span);\n  const rootSpan = getRootSpan(span);\n  const isRootSpan = rootSpan === span;\n\n  const header = `[Tracing] Starting ${sampled ? 'sampled' : 'unsampled'} ${isRootSpan ? 'root ' : ''}span`;\n\n  const infoParts = [`op: ${op}`, `name: ${description}`, `ID: ${spanId}`];\n\n  if (parentSpanId) {\n    infoParts.push(`parent ID: ${parentSpanId}`);\n  }\n\n  if (!isRootSpan) {\n    const { op, description } = spanToJSON(rootSpan);\n    infoParts.push(`root ID: ${rootSpan.spanContext().spanId}`);\n    if (op) {\n      infoParts.push(`root op: ${op}`);\n    }\n    if (description) {\n      infoParts.push(`root description: ${description}`);\n    }\n  }\n\n  logger.log(`${header}\n  ${infoParts.join('\\n  ')}`);\n}\n\n/**\n * Print a log message for an ended span.\n */\nfunction logSpanEnd(span) {\n  if (!DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >' } = spanToJSON(span);\n  const { spanId } = span.spanContext();\n  const rootSpan = getRootSpan(span);\n  const isRootSpan = rootSpan === span;\n\n  const msg = `[Tracing] Finishing \"${op}\" ${isRootSpan ? 'root ' : ''}span \"${description}\" with ID ${spanId}`;\n  logger.log(msg);\n}\n\nexport { logSpanEnd, logSpanStart };\n//# sourceMappingURL=logSpans.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\n\n/**\n * Parse a sample rate from a given value.\n * This will either return a boolean or number sample rate, if the sample rate is valid (between 0 and 1).\n * If a string is passed, we try to convert it to a number.\n *\n * Any invalid sample rate will return `undefined`.\n */\nfunction parseSampleRate(sampleRate) {\n  if (typeof sampleRate === 'boolean') {\n    return Number(sampleRate);\n  }\n\n  const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\n  if (typeof rate !== 'number' || isNaN(rate) || rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          sampleRate,\n        )} of type ${JSON.stringify(typeof sampleRate)}.`,\n      );\n    return undefined;\n  }\n\n  return rate;\n}\n\nexport { parseSampleRate };\n//# sourceMappingURL=parseSampleRate.js.map\n","import { getIsolationScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { parseSampleRate } from '../utils/parseSampleRate.js';\n\n/**\n * Makes a sampling decision for the given options.\n *\n * Called every time a root span is created. Only root spans which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n */\nfunction sampleSpan(\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    return [false];\n  }\n\n  // Casting this from unknown, as the type of `sdkProcessingMetadata` is only changed in v9 and `normalizedRequest` is set in SentryHttpInstrumentation\n  const normalizedRequest = getIsolationScope().getScopeData().sdkProcessingMetadata\n    .normalizedRequest ;\n\n  const enhancedSamplingContext = {\n    ...samplingContext,\n    normalizedRequest: samplingContext.normalizedRequest || normalizedRequest,\n  };\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(enhancedSamplingContext);\n  } else if (enhancedSamplingContext.parentSampled !== undefined) {\n    sampleRate = enhancedSamplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get.\n  // (The only valid values are booleans or numbers between 0 and 1.)\n  const parsedSampleRate = parseSampleRate(sampleRate);\n\n  if (parsedSampleRate === undefined) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    return [false];\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!parsedSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    return [false, parsedSampleRate];\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const shouldSample = Math.random() < parsedSampleRate;\n\n  // if we're not going to keep it, we're done\n  if (!shouldSample) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return [false, parsedSampleRate];\n  }\n\n  return [true, parsedSampleRate];\n}\n\nexport { sampleSpan };\n//# sourceMappingURL=sampling.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { consoleSandbox, logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n *\n * @deprecated This function is deprecated and will be removed in the next major version.\n */\n// TODO(v9): Move this function into normalize() directly\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { isVueViewModel, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normalized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  // eslint-disable-next-line deprecation/deprecation\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    ['boolean', 'string'].includes(typeof value) ||\n    (typeof value === 'number' && Number.isFinite(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && !Number.isFinite(value)) {\n      return `[${value}]`;\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nfunction normalizeUrlToBase(url, basePath) {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\nexport { normalize, normalizeToSize, normalizeUrlToBase };\n//# sourceMappingURL=normalize.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input) {\n  return GLOBAL_OBJ.__SENTRY__ && GLOBAL_OBJ.__SENTRY__.encodePolyfill\n    ? GLOBAL_OBJ.__SENTRY__.encodePolyfill(input)\n    : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input) {\n  return GLOBAL_OBJ.__SENTRY__ && GLOBAL_OBJ.__SENTRY__.decodePolyfill\n    ? GLOBAL_OBJ.__SENTRY__.decodePolyfill(input)\n    : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.stringify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(env) {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nfunction createSpanEnvelopeItem(spanJson) {\n  const spanHeaders = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(attachment) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  profile_chunk: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n  raw_security: 'security',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, createSpanEnvelopeItem, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { getDynamicSamplingContextFromSpan } from './tracing/dynamicSamplingContext.js';\nimport { dsnToString } from './utils-hoist/dsn.js';\nimport { getSdkMetadataForEnvelopeHeader, createEnvelope, createEventEnvelopeHeaders, createSpanEnvelopeItem } from './utils-hoist/envelope.js';\nimport './utils-hoist/debug-build.js';\nimport './utils-hoist/logger.js';\nimport { spanToJSON, showSpanDropWarning } from './utils/spanUtils.js';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjust a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\n/**\n * Create envelope from Span item.\n *\n * Takes an optional client and runs spans through `beforeSendSpan` if available.\n */\nfunction createSpanEnvelope(spans, client) {\n  function dscHasRequiredProps(dsc) {\n    return !!dsc.trace_id && !!dsc.public_key;\n  }\n\n  // For the moment we'll obtain the DSC from the first span in the array\n  // This might need to be changed if we permit sending multiple spans from\n  // different segments in one envelope\n  const dsc = getDynamicSamplingContextFromSpan(spans[0]);\n\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  const headers = {\n    sent_at: new Date().toISOString(),\n    ...(dscHasRequiredProps(dsc) && { trace: dsc }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const beforeSendSpan = client && client.getOptions().beforeSendSpan;\n  const convertToSpanJSON = beforeSendSpan\n    ? (span) => {\n        const spanJson = beforeSendSpan(spanToJSON(span) );\n        if (!spanJson) {\n          showSpanDropWarning();\n        }\n        return spanJson;\n      }\n    : (span) => spanToJSON(span);\n\n  const items = [];\n  for (const span of spans) {\n    const spanJson = convertToSpanJSON(span);\n    if (spanJson) {\n      items.push(createSpanEnvelopeItem(spanJson));\n    }\n  }\n\n  return createEnvelope(headers, items);\n}\n\nexport { createEventEnvelope, createSessionEnvelope, createSpanEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getRootSpan, getActiveSpan } from '../utils/spanUtils.js';\n\n/**\n * Adds a measurement to the active transaction on the current global scope. You can optionally pass in a different span\n * as the 4th parameter.\n */\nfunction setMeasurement(name, value, unit, activeSpan = getActiveSpan()) {\n  const rootSpan = activeSpan && getRootSpan(activeSpan);\n\n  if (rootSpan) {\n    DEBUG_BUILD && logger.log(`[Measurement] Setting measurement on root span: ${name} = ${value} ${unit}`);\n    rootSpan.addEvent(name, {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: value,\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: unit ,\n    });\n  }\n}\n\n/**\n * Convert timed events to measurements.\n */\nfunction timedEventsToMeasurements(events) {\n  if (!events || events.length === 0) {\n    return undefined;\n  }\n\n  const measurements = {};\n  events.forEach(event => {\n    const attributes = event.attributes || {};\n    const unit = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT] ;\n    const value = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE] ;\n\n    if (typeof unit === 'string' && typeof value === 'number') {\n      measurements[event.name] = { value, unit };\n    }\n  });\n\n  return measurements;\n}\n\nexport { setMeasurement, timedEventsToMeasurements };\n//# sourceMappingURL=measurement.js.map\n","import { getClient, getCurrentScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { createSpanEnvelope } from '../envelope.js';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { dropUndefinedKeys } from '../utils-hoist/object.js';\nimport { generateTraceId, generateSpanId } from '../utils-hoist/propagationContext.js';\nimport { timestampInSeconds } from '../utils-hoist/time.js';\nimport { TRACE_FLAG_SAMPLED, TRACE_FLAG_NONE, spanTimeInputToSeconds, getStatusMessage, getRootSpan, spanToJSON, getSpanDescendants, spanToTransactionTraceContext } from '../utils/spanUtils.js';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext.js';\nimport { logSpanEnd } from './logSpans.js';\nimport { timedEventsToMeasurements } from './measurement.js';\nimport { getCapturedScopesOnSpan } from './utils.js';\n\nconst MAX_SPAN_COUNT = 1000;\n\n/**\n * Span contains all data about a span\n */\nclass SentrySpan  {\n\n  /** Epoch timestamp in seconds when the span started. */\n\n  /** Epoch timestamp in seconds when the span ended. */\n\n  /** Internal keeper of the status */\n\n  /** The timed events added to this span. */\n\n  /** if true, treat span as a standalone span (not part of a transaction) */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startSpan()`\n   * or other span methods.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || generateTraceId();\n    this._spanId = spanContext.spanId || generateSpanId();\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    this._name = spanContext.name;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n\n    this._events = [];\n\n    this._isStandaloneSpan = spanContext.isStandalone;\n\n    // If the span is already ended, ensure we finalize the span immediately\n    if (this._endTime) {\n      this._onSpanEnded();\n    }\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLink(_link) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLinks(_links) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   recordException(_exception, _time) {\n    // noop\n  }\n\n  /** @inheritdoc */\n   spanContext() {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n   setAttribute(key, value) {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttributes(attributes) {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for browser tracing where we want to adjust the start time afterwards.\n   * USE THIS WITH CAUTION!\n   *\n   * @hidden\n   * @internal\n   */\n   updateStartTime(timeInput) {\n    this._startTime = spanTimeInputToSeconds(timeInput);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateName(name) {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'custom');\n    return this;\n  }\n\n  /** @inheritdoc */\n   end(endTimestamp) {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n    logSpanEnd(this);\n\n    this._onSpanEnded();\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n   getSpanJSON() {\n    return dropUndefinedKeys({\n      data: this._attributes,\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: getStatusMessage(this._status),\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] ,\n      exclusive_time: this._attributes[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] ,\n      measurements: timedEventsToMeasurements(this._events),\n      is_segment: (this._isStandaloneSpan && getRootSpan(this) === this) || undefined,\n      segment_id: this._isStandaloneSpan ? getRootSpan(this).spanContext().spanId : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * @inheritdoc\n   */\n   addEvent(\n    name,\n    attributesOrStartTime,\n    startTime,\n  ) {\n    DEBUG_BUILD && logger.log('[Tracing] Adding an event to span:', name);\n\n    const time = isSpanTimeInput(attributesOrStartTime) ? attributesOrStartTime : startTime || timestampInSeconds();\n    const attributes = isSpanTimeInput(attributesOrStartTime) ? {} : attributesOrStartTime || {};\n\n    const event = {\n      name,\n      time: spanTimeInputToSeconds(time),\n      attributes,\n    };\n\n    this._events.push(event);\n\n    return this;\n  }\n\n  /**\n   * This method should generally not be used,\n   * but for now we need a way to publicly check if the `_isStandaloneSpan` flag is set.\n   * USE THIS WITH CAUTION!\n   * @internal\n   * @hidden\n   * @experimental\n   */\n   isStandaloneSpan() {\n    return !!this._isStandaloneSpan;\n  }\n\n  /** Emit `spanEnd` when the span is ended. */\n   _onSpanEnded() {\n    const client = getClient();\n    if (client) {\n      client.emit('spanEnd', this);\n    }\n\n    // A segment span is basically the root span of a local span tree.\n    // So for now, this is either what we previously refer to as the root span,\n    // or a standalone span.\n    const isSegmentSpan = this._isStandaloneSpan || this === getRootSpan(this);\n\n    if (!isSegmentSpan) {\n      return;\n    }\n\n    // if this is a standalone span, we send it immediately\n    if (this._isStandaloneSpan) {\n      if (this._sampled) {\n        sendSpanEnvelope(createSpanEnvelope([this], client));\n      } else {\n        DEBUG_BUILD &&\n          logger.log('[Tracing] Discarding standalone span because its trace was not chosen to be sampled.');\n        if (client) {\n          client.recordDroppedEvent('sample_rate', 'span');\n        }\n      }\n      return;\n    }\n\n    const transactionEvent = this._convertSpanToTransaction();\n    if (transactionEvent) {\n      const scope = getCapturedScopesOnSpan(this).scope || getCurrentScope();\n      scope.captureEvent(transactionEvent);\n    }\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _convertSpanToTransaction() {\n    // We can only convert finished spans\n    if (!isFullFinishedSpan(spanToJSON(this))) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n    const scope = capturedSpanScope || getCurrentScope();\n    const client = scope.getClient() || getClient();\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // The transaction span itself as well as any potential standalone spans should be filtered out\n    const finishedSpans = getSpanDescendants(this).filter(span => span !== this && !isStandaloneSpan(span));\n\n    const spans = finishedSpans.map(span => spanToJSON(span)).filter(isFullFinishedSpan);\n\n    const source = this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ;\n\n    // remove internal root span attributes we don't need to send.\n    /* eslint-disable @typescript-eslint/no-dynamic-delete */\n    delete this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n    spans.forEach(span => {\n      span.data && delete span.data[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n    });\n    // eslint-enabled-next-line @typescript-eslint/no-dynamic-delete\n\n    const transaction = {\n      contexts: {\n        trace: spanToTransactionTraceContext(this),\n      },\n      spans:\n        // spans.sort() mutates the array, but `spans` is already a copy so we can safely do this here\n        // we do not use spans anymore after this point\n        spans.length > MAX_SPAN_COUNT\n          ? spans.sort((a, b) => a.start_timestamp - b.start_timestamp).slice(0, MAX_SPAN_COUNT)\n          : spans,\n      start_timestamp: this._startTime,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...dropUndefinedKeys({\n          dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n        }),\n      },\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const measurements = timedEventsToMeasurements(this._events);\n    const hasMeasurements = measurements && Object.keys(measurements).length;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction event',\n          JSON.stringify(measurements, undefined, 2),\n        );\n      transaction.measurements = measurements;\n    }\n\n    return transaction;\n  }\n}\n\nfunction isSpanTimeInput(value) {\n  return (value && typeof value === 'number') || value instanceof Date || Array.isArray(value);\n}\n\n// We want to filter out any incomplete SpanJSON objects\nfunction isFullFinishedSpan(input) {\n  return !!input.start_timestamp && !!input.timestamp && !!input.span_id && !!input.trace_id;\n}\n\n/** `SentrySpan`s can be sent as a standalone span rather than belonging to a transaction */\nfunction isStandaloneSpan(span) {\n  return span instanceof SentrySpan && span.isStandaloneSpan();\n}\n\n/**\n * Sends a `SpanEnvelope`.\n *\n * Note: If the envelope's spans are dropped, e.g. via `beforeSendSpan`,\n * the envelope will not be sent either.\n */\nfunction sendSpanEnvelope(envelope) {\n  const client = getClient();\n  if (!client) {\n    return;\n  }\n\n  const spanItems = envelope[1];\n  if (!spanItems || spanItems.length === 0) {\n    client.recordDroppedEvent('before_send', 'span');\n    return;\n  }\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(envelope);\n}\n\nexport { SentrySpan };\n//# sourceMappingURL=sentrySpan.js.map\n","import { getMainCarrier } from '../carrier.js';\nimport { withScope, getCurrentScope, getIsolationScope, getClient } from '../currentScopes.js';\nimport { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { generateTraceId } from '../utils-hoist/propagationContext.js';\nimport { propagationContextFromHeaders } from '../utils-hoist/tracing.js';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { _setSpanForScope, _getSpanForScope } from '../utils/spanOnScope.js';\nimport { spanToJSON, addChildSpanToSpan, spanIsSampled, spanTimeInputToSeconds, getRootSpan } from '../utils/spanUtils.js';\nimport { getDynamicSamplingContextFromSpan, freezeDscOnSpan } from './dynamicSamplingContext.js';\nimport { logSpanStart } from './logSpans.js';\nimport { sampleSpan } from './sampling.js';\nimport { SentryNonRecordingSpan } from './sentryNonRecordingSpan.js';\nimport { SentrySpan } from './sentrySpan.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\nimport { setCapturedScopesOnSpan } from './utils.js';\n\nconst SUPPRESS_TRACING_KEY = '__SENTRY_SUPPRESS_TRACING__';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpan(options, callback) {\n  const acs = getAcs();\n  if (acs.startSpan) {\n    return acs.startSpan(options, callback);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  return withScope(options.scope, () => {\n    // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n    const wrapper = getActiveSpanWrapper(customParentSpan);\n\n    return wrapper(() => {\n      const scope = getCurrentScope();\n      const parentSpan = getParentSpan(scope);\n\n      const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? new SentryNonRecordingSpan()\n        : createChildOrRootSpan({\n            parentSpan,\n            spanArguments,\n            forceTransaction,\n            scope,\n          });\n\n      _setSpanForScope(scope, activeSpan);\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          const { status } = spanToJSON(activeSpan);\n          if (activeSpan.isRecording() && (!status || status === 'ok')) {\n            activeSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n          }\n        },\n        () => activeSpan.end(),\n      );\n    });\n  });\n}\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpanManual(options, callback) {\n  const acs = getAcs();\n  if (acs.startSpanManual) {\n    return acs.startSpanManual(options, callback);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  return withScope(options.scope, () => {\n    // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n    const wrapper = getActiveSpanWrapper(customParentSpan);\n\n    return wrapper(() => {\n      const scope = getCurrentScope();\n      const parentSpan = getParentSpan(scope);\n\n      const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? new SentryNonRecordingSpan()\n        : createChildOrRootSpan({\n            parentSpan,\n            spanArguments,\n            forceTransaction,\n            scope,\n          });\n\n      _setSpanForScope(scope, activeSpan);\n\n      function finishAndSetSpan() {\n        activeSpan.end();\n      }\n\n      return handleCallbackErrors(\n        () => callback(activeSpan, finishAndSetSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          const { status } = spanToJSON(activeSpan);\n          if (activeSpan.isRecording() && (!status || status === 'ok')) {\n            activeSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getActiveSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * This function will always return a span,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startInactiveSpan(options) {\n  const acs = getAcs();\n  if (acs.startInactiveSpan) {\n    return acs.startInactiveSpan(options);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  // If `options.scope` is defined, we use this as as a wrapper,\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = options.scope\n    ? (callback) => withScope(options.scope, callback)\n    : customParentSpan !== undefined\n      ? (callback) => withActiveSpan(customParentSpan, callback)\n      : (callback) => callback();\n\n  return wrapper(() => {\n    const scope = getCurrentScope();\n    const parentSpan = getParentSpan(scope);\n\n    const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n\n    if (shouldSkipSpan) {\n      return new SentryNonRecordingSpan();\n    }\n\n    return createChildOrRootSpan({\n      parentSpan,\n      spanArguments,\n      forceTransaction,\n      scope,\n    });\n  });\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n * and `<meta name=\"baggage\">` HTML tags.\n *\n * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n * be attached to the incoming trace.\n */\nconst continueTrace = (\n  options\n\n,\n  callback,\n) => {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.continueTrace) {\n    return acs.continueTrace(options, callback);\n  }\n\n  const { sentryTrace, baggage } = options;\n\n  return withScope(scope => {\n    const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n    scope.setPropagationContext(propagationContext);\n    return callback();\n  });\n};\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback. Can be\n * passed `null` to start an entirely new span tree.\n *\n * @param span Spans started in the context of the provided callback will be children of this span. If `null` is passed,\n * spans started within the callback will not be attached to a parent span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nfunction withActiveSpan(span, callback) {\n  const acs = getAcs();\n  if (acs.withActiveSpan) {\n    return acs.withActiveSpan(span, callback);\n  }\n\n  return withScope(scope => {\n    _setSpanForScope(scope, span || undefined);\n    return callback(scope);\n  });\n}\n\n/** Suppress tracing in the given callback, ensuring no spans are generated inside of it. */\nfunction suppressTracing(callback) {\n  const acs = getAcs();\n\n  if (acs.suppressTracing) {\n    return acs.suppressTracing(callback);\n  }\n\n  return withScope(scope => {\n    scope.setSDKProcessingMetadata({ [SUPPRESS_TRACING_KEY]: true });\n    return callback();\n  });\n}\n\n/**\n * Starts a new trace for the duration of the provided callback. Spans started within the\n * callback will be part of the new trace instead of a potentially previously started trace.\n *\n * Important: Only use this function if you want to override the default trace lifetime and\n * propagation mechanism of the SDK for the duration and scope of the provided callback.\n * The newly created trace will also be the root of a new distributed trace, for example if\n * you make http requests within the callback.\n * This function might be useful if the operation you want to instrument should not be part\n * of a potentially ongoing trace.\n *\n * Default behavior:\n * - Server-side: A new trace is started for each incoming request.\n * - Browser: A new trace is started for each page our route. Navigating to a new route\n *            or page will automatically create a new trace.\n */\nfunction startNewTrace(callback) {\n  return withScope(scope => {\n    scope.setPropagationContext({ traceId: generateTraceId() });\n    DEBUG_BUILD && logger.info(`Starting a new trace with id ${scope.getPropagationContext().traceId}`);\n    return withActiveSpan(null, callback);\n  });\n}\n\nfunction createChildOrRootSpan({\n  parentSpan,\n  spanArguments,\n  forceTransaction,\n  scope,\n}\n\n) {\n  if (!hasTracingEnabled()) {\n    return new SentryNonRecordingSpan();\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span;\n  if (parentSpan && !forceTransaction) {\n    span = _startChildSpan(parentSpan, scope, spanArguments);\n    addChildSpanToSpan(parentSpan, span);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const parentSampled = spanIsSampled(parentSpan);\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanArguments,\n      },\n      scope,\n      parentSampled,\n    );\n\n    freezeDscOnSpan(span, dsc);\n  } else {\n    const {\n      traceId,\n      dsc,\n      parentSpanId,\n      sampled: parentSampled,\n    } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanArguments,\n      },\n      scope,\n      parentSampled,\n    );\n\n    if (dsc) {\n      freezeDscOnSpan(span, dsc);\n    }\n  }\n\n  logSpanStart(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to SentrySpanArguments.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n */\nfunction parseSentrySpanArguments(options) {\n  const exp = options.experimental || {};\n  const initialCtx = {\n    isStandalone: exp.standalone,\n    ...options,\n  };\n\n  if (options.startTime) {\n    const ctx = { ...initialCtx };\n    ctx.startTimestamp = spanTimeInputToSeconds(options.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return initialCtx;\n}\n\nfunction getAcs() {\n  const carrier = getMainCarrier();\n  return getAsyncContextStrategy(carrier);\n}\n\nfunction _startRootSpan(spanArguments, scope, parentSampled) {\n  const client = getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const { name = '', attributes } = spanArguments;\n  const [sampled, sampleRate] = scope.getScopeData().sdkProcessingMetadata[SUPPRESS_TRACING_KEY]\n    ? [false]\n    : sampleSpan(options, {\n        name,\n        parentSampled,\n        attributes,\n        transactionContext: {\n          name,\n          parentSampled,\n        },\n      });\n\n  const rootSpan = new SentrySpan({\n    ...spanArguments,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n      ...spanArguments.attributes,\n    },\n    sampled,\n  });\n  if (sampleRate !== undefined) {\n    rootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  if (client) {\n    client.emit('spanStart', rootSpan);\n  }\n\n  return rootSpan;\n}\n\n/**\n * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n * This inherits the sampling decision from the parent span.\n */\nfunction _startChildSpan(parentSpan, scope, spanArguments) {\n  const { spanId, traceId } = parentSpan.spanContext();\n  const sampled = scope.getScopeData().sdkProcessingMetadata[SUPPRESS_TRACING_KEY] ? false : spanIsSampled(parentSpan);\n\n  const childSpan = sampled\n    ? new SentrySpan({\n        ...spanArguments,\n        parentSpanId: spanId,\n        traceId,\n        sampled,\n      })\n    : new SentryNonRecordingSpan({ traceId });\n\n  addChildSpanToSpan(parentSpan, childSpan);\n\n  const client = getClient();\n  if (client) {\n    client.emit('spanStart', childSpan);\n    // If it has an endTimestamp, it's already ended\n    if (spanArguments.endTimestamp) {\n      client.emit('spanEnd', childSpan);\n    }\n  }\n\n  return childSpan;\n}\n\nfunction getParentSpan(scope) {\n  const span = _getSpanForScope(scope) ;\n\n  if (!span) {\n    return undefined;\n  }\n\n  const client = getClient();\n  const options = client ? client.getOptions() : {};\n  if (options.parentSpanIsAlwaysRootSpan) {\n    return getRootSpan(span) ;\n  }\n\n  return span;\n}\n\nfunction getActiveSpanWrapper(parentSpan) {\n  return parentSpan !== undefined\n    ? (callback) => {\n        return withActiveSpan(parentSpan, callback);\n      }\n    : (callback) => callback();\n}\n\nexport { continueTrace, startInactiveSpan, startNewTrace, startSpan, startSpanManual, suppressTracing, withActiveSpan };\n//# sourceMappingURL=trace.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { isThenable } from './utils-hoist/is.js';\nimport { logger } from './utils-hoist/logger.js';\nimport { SyncPromise } from './utils-hoist/syncpromise.js';\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\nexport { notifyEventProcessors };\n//# sourceMappingURL=eventProcessors.js.map\n","import { GLOBAL_OBJ } from './worldwide.js';\n\nlet parsedStackResults;\nlet lastKeysCount;\nlet cachedFilenameDebugIds;\n\n/**\n * Returns a map of filenames to debug identifiers.\n */\nfunction getFilenameToDebugIdMap(stackParser) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n  if (!debugIdMap) {\n    return {};\n  }\n\n  const debugIdKeys = Object.keys(debugIdMap);\n\n  // If the count of registered globals hasn't changed since the last call, we\n  // can just return the cached result.\n  if (cachedFilenameDebugIds && debugIdKeys.length === lastKeysCount) {\n    return cachedFilenameDebugIds;\n  }\n\n  lastKeysCount = debugIdKeys.length;\n\n  // Build a map of filename -> debug_id.\n  cachedFilenameDebugIds = debugIdKeys.reduce((acc, stackKey) => {\n    if (!parsedStackResults) {\n      parsedStackResults = {};\n    }\n\n    const result = parsedStackResults[stackKey];\n\n    if (result) {\n      acc[result[0]] = result[1];\n    } else {\n      const parsedStack = stackParser(stackKey);\n\n      for (let i = parsedStack.length - 1; i >= 0; i--) {\n        const stackFrame = parsedStack[i];\n        const filename = stackFrame && stackFrame.filename;\n        const debugId = debugIdMap[stackKey];\n\n        if (filename && debugId) {\n          acc[filename] = debugId;\n          parsedStackResults[stackKey] = [filename, debugId];\n          break;\n        }\n      }\n    }\n\n    return acc;\n  }, {});\n\n  return cachedFilenameDebugIds;\n}\n\n/**\n * Returns a list of debug images for the given resources.\n */\nfunction getDebugImagesForResources(\n  stackParser,\n  resource_paths,\n) {\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  if (!filenameDebugIdMap) {\n    return [];\n  }\n\n  const images = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] ,\n      });\n    }\n  }\n\n  return images;\n}\n\nexport { getDebugImagesForResources, getFilenameToDebugIdMap };\n//# sourceMappingURL=debug-ids.js.map\n","import { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext.js';\nimport { dropUndefinedKeys } from '../utils-hoist/object.js';\nimport { merge } from './merge.js';\nimport { spanToTraceContext, getRootSpan, spanToJSON } from './spanUtils.js';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nfunction applyScopeDataToEvent(event, data) {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nfunction mergeScopeData(data, mergeData) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n\n  data.sdkProcessingMetadata = merge(data.sdkProcessingMetadata, sdkProcessingMetadata, 2);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nfunction mergeAndOverwriteScopeData\n\n(data, prop, mergeVal) {\n  data[prop] = merge(data[prop], mergeVal, 1);\n}\n\nfunction applyDataToEvent(event, data) {\n  const { extra, tags, user, contexts, level, transactionName } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  // transaction events get their `transaction` from the root span name\n  if (transactionName && event.type !== 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event, breadcrumbs) {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event, sdkProcessingMetadata) {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event, span) {\n  event.contexts = {\n    trace: spanToTraceContext(span),\n    ...event.contexts,\n  };\n\n  event.sdkProcessingMetadata = {\n    dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n    ...event.sdkProcessingMetadata,\n  };\n\n  const rootSpan = getRootSpan(span);\n  const transactionName = spanToJSON(rootSpan).description;\n  if (transactionName && !event.transaction && event.type === 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event, fingerprint) {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint\n    ? Array.isArray(event.fingerprint)\n      ? event.fingerprint\n      : [event.fingerprint]\n    : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n\nexport { applyScopeDataToEvent, mergeAndOverwriteScopeData, mergeScopeData };\n//# sourceMappingURL=applyScopeDataToEvent.js.map\n","import { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { getGlobalScope } from '../currentScopes.js';\nimport { notifyEventProcessors } from '../eventProcessors.js';\nimport { Scope } from '../scope.js';\nimport { getFilenameToDebugIdMap } from '../utils-hoist/debug-ids.js';\nimport { uuid4, addExceptionMechanism } from '../utils-hoist/misc.js';\nimport { normalize } from '../utils-hoist/normalize.js';\nimport { truncate } from '../utils-hoist/string.js';\nimport { dateTimestampInSeconds } from '../utils-hoist/time.js';\nimport { mergeScopeData, applyScopeDataToEvent } from './applyScopeDataToEvent.js';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n  isolationScope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  if (client) {\n    client.emit('applyFrameMetadata', event);\n  }\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Scope.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n * Enhances event using the client configuration.\n * It takes care of all \"static\" values like environment, release and `dist`,\n * as well as truncating overly long values.\n *\n * Only exported for tests.\n *\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  // empty strings do not make sense for environment, release, and dist\n  // so we handle them the same as if they were not provided\n  event.environment = event.environment || environment || DEFAULT_ENVIRONMENT;\n\n  if (!event.release && release) {\n    event.release = release;\n  }\n\n  if (!event.dist && dist) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (filenameDebugIdMap && frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.entries(filenameDebugIdMap).forEach(([filename, debug_id]) => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id,\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      return {\n        ...span,\n        ...(span.data && {\n          data: normalize(span.data, depth, maxBreadth),\n        }),\n      };\n    });\n  }\n\n  // event.contexts.flags (FeatureFlagContext) stores context for our feature\n  // flag integrations. It has a greater nesting depth than our other typed\n  // Contexts, so we re-normalize with a fixed depth of 3 here. We do not want\n  // to skip this in case of conflicting, user-provided context.\n  if (event.contexts && event.contexts.flags && normalized.contexts) {\n    normalized.contexts.flags = normalize(event.contexts.flags, 3, maxBreadth);\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(\n  scope,\n  captureContext,\n) {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nfunction parseEventHintOrCaptureContext(\n  hint,\n) {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint,\n) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\nconst captureContextKeys = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] ;\n\nfunction hintIsScopeContext(hint) {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key ));\n}\n\nexport { applyClientOptions, applyDebugIds, applyDebugMeta, parseEventHintOrCaptureContext, prepareEvent };\n//# sourceMappingURL=prepareEvent.js.map\n","import { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { getCurrentScope, getIsolationScope, getClient, withIsolationScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { makeSession, updateSession, closeSession } from './session.js';\nimport { isThenable } from './utils-hoist/is.js';\nimport { logger } from './utils-hoist/logger.js';\nimport { uuid4 } from './utils-hoist/misc.js';\nimport { timestampInSeconds } from './utils-hoist/time.js';\nimport { GLOBAL_OBJ } from './utils-hoist/worldwide.js';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent.js';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nfunction captureException(exception, hint) {\n  return getCurrentScope().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nfunction captureMessage(message, captureContext) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentScope().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentScope().captureEvent(event, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nfunction setContext(name, context) {\n  getIsolationScope().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getIsolationScope().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getIsolationScope().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getIsolationScope().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getIsolationScope().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getIsolationScope().setUser(user);\n}\n\n/**\n * The last error event id of the isolation scope.\n *\n * Warning: This function really returns the last recorded error event id on the current\n * isolation scope. If you call this function after handling a certain error and another error\n * is captured in between, the last one is returned instead of the one you might expect.\n * Also, ids of events that were never sent to Sentry (for example because\n * they were dropped in `beforeSend`) could be returned.\n *\n * @returns The last event id of the isolation scope.\n */\nfunction lastEventId() {\n  return getIsolationScope().lastEventId();\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  return withIsolationScope(() => {\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback();\n    } catch (e) {\n      finishCheckIn('error');\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      Promise.resolve(maybePromiseResult).then(\n        () => {\n          finishCheckIn('ok');\n        },\n        e => {\n          finishCheckIn('error');\n          throw e;\n        },\n      );\n    } else {\n      finishCheckIn('ok');\n    }\n\n    return maybePromiseResult;\n  });\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nfunction isInitialized() {\n  return !!getClient();\n}\n\n/** If the SDK is initialized & enabled. */\nfunction isEnabled() {\n  const client = getClient();\n  return !!client && client.getOptions().enabled !== false && !!client.getTransport();\n}\n\n/**\n * Add an event processor.\n * This will be added to the current isolation scope, ensuring any event that is processed in the current execution\n * context will have the processor applied.\n */\nfunction addEventProcessor(callback) {\n  getIsolationScope().addEventProcessor(callback);\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nfunction startSession(context) {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nfunction endSession() {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate() {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nfunction captureSession(end = false) {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n\nexport { addEventProcessor, captureCheckIn, captureEvent, captureException, captureMessage, captureSession, close, endSession, flush, isEnabled, isInitialized, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startSession, withMonitor };\n//# sourceMappingURL=exports.js.map\n","import { getIsolationScope } from './currentScopes.js';\nimport { dropUndefinedKeys } from './utils-hoist/object.js';\n\n/**\n * @deprecated `SessionFlusher` is deprecated and will be removed in the next major version of the SDK.\n */\n// TODO(v9): The goal for the SessionFlusher is to become a stupidly simple mechanism to aggregate \"Sessions\" (actually \"RequestSessions\"). It should probably live directly inside the Http integration/instrumentation.\n// eslint-disable-next-line deprecation/deprecation\nclass SessionFlusher  {\n\n  // We adjust the type here to add the `unref()` part, as setInterval can technically return a number or a NodeJS.Timer\n\n   constructor(client, attrs) {\n    this._client = client;\n    this.flushTimeout = 60;\n    this._pendingAggregates = new Map();\n    this._isEnabled = true;\n\n    // Call to setInterval, so that flush is called every 60 seconds.\n    this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1000);\n    if (this._intervalId.unref) {\n      this._intervalId.unref();\n    }\n    this._sessionAttrs = attrs;\n  }\n\n  /** Checks if `pendingAggregates` has entries, and if it does flushes them by calling `sendSession` */\n   flush() {\n    const sessionAggregates = this.getSessionAggregates();\n    if (sessionAggregates.aggregates.length === 0) {\n      return;\n    }\n    this._pendingAggregates = new Map();\n    this._client.sendSession(sessionAggregates);\n  }\n\n  /** Massages the entries in `pendingAggregates` and returns aggregated sessions */\n   getSessionAggregates() {\n    const aggregates = Array.from(this._pendingAggregates.values());\n\n    const sessionAggregates = {\n      attrs: this._sessionAttrs,\n      aggregates,\n    };\n    return dropUndefinedKeys(sessionAggregates);\n  }\n\n  /** JSDoc */\n   close() {\n    clearInterval(this._intervalId);\n    this._isEnabled = false;\n    this.flush();\n  }\n\n  /**\n   * Wrapper function for _incrementSessionStatusCount that checks if the instance of SessionFlusher is enabled then\n   * fetches the session status of the request from `Scope.getRequestSession().status` on the scope and passes them to\n   * `_incrementSessionStatusCount` along with the start date\n   */\n   incrementSessionStatusCount() {\n    if (!this._isEnabled) {\n      return;\n    }\n    const isolationScope = getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const requestSession = isolationScope.getRequestSession();\n\n    if (requestSession && requestSession.status) {\n      this._incrementSessionStatusCount(requestSession.status, new Date());\n      // This is not entirely necessarily but is added as a safe guard to indicate the bounds of a request and so in\n      // case captureRequestSession is called more than once to prevent double count\n      // eslint-disable-next-line deprecation/deprecation\n      isolationScope.setRequestSession(undefined);\n      /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    }\n  }\n\n  /**\n   * Increments status bucket in pendingAggregates buffer (internal state) corresponding to status of\n   * the session received\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   _incrementSessionStatusCount(status, date) {\n    // Truncate minutes and seconds on Session Started attribute to have one minute bucket keys\n    const sessionStartedTrunc = new Date(date).setSeconds(0, 0);\n\n    // corresponds to aggregated sessions in one specific minute bucket\n    // for example, {\"started\":\"2021-03-16T08:00:00.000Z\",\"exited\":4, \"errored\": 1}\n    let aggregationCounts = this._pendingAggregates.get(sessionStartedTrunc);\n    if (!aggregationCounts) {\n      aggregationCounts = { started: new Date(sessionStartedTrunc).toISOString() };\n      this._pendingAggregates.set(sessionStartedTrunc, aggregationCounts);\n    }\n\n    switch (status) {\n      case 'errored':\n        aggregationCounts.errored = (aggregationCounts.errored || 0) + 1;\n        return aggregationCounts.errored;\n      case 'ok':\n        aggregationCounts.exited = (aggregationCounts.exited || 0) + 1;\n        return aggregationCounts.exited;\n      default:\n        aggregationCounts.crashed = (aggregationCounts.crashed || 0) + 1;\n        return aggregationCounts.crashed;\n    }\n  }\n}\n\nexport { SessionFlusher };\n//# sourceMappingURL=sessionflusher.js.map\n","import { makeDsn, dsnToString } from './utils-hoist/dsn.js';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  const params = {\n    sentry_version: SENTRY_API_VERSION,\n  };\n\n  if (dsn.publicKey) {\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    params.sentry_key = dsn.publicKey;\n  }\n\n  if (sdkInfo) {\n    params.sentry_client = `${sdkInfo.name}/${sdkInfo.version}`;\n  }\n\n  return new URLSearchParams(params).toString();\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel, sdkInfo) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { getClient } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { logger } from './utils-hoist/logger.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preserve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach((currentInstance) => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach((integration) => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    const resolvedUserIntegrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(resolvedUserIntegrations) ? resolvedUserIntegrations : [resolvedUserIntegrations];\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = finalIntegrations.findIndex(integration => integration.name === 'Debug');\n  if (debugIndex > -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1) ;\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nfunction afterSetupIntegrations(client, integrations) {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1 && typeof integration.setupOnce === 'function') {\n    integration.setupOnce();\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current scope's client. */\nfunction addIntegration(integration) {\n  const client = getClient();\n\n  if (!client) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nfunction defineIntegration(fn) {\n  return fn;\n}\n\nexport { addIntegration, afterSetupIntegrations, defineIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor(\n     message,\n    logLevel = 'warn',\n  ) {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { getTraceContextFromScope, getCurrentScope, getIsolationScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegration, afterSetupIntegrations, setupIntegrations } from './integration.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromScope } from './tracing/dynamicSamplingContext.js';\nimport { createClientReportEnvelope } from './utils-hoist/clientreport.js';\nimport { makeDsn, dsnToString } from './utils-hoist/dsn.js';\nimport { addItemToEnvelope, createAttachmentEnvelopeItem } from './utils-hoist/envelope.js';\nimport { SentryError } from './utils-hoist/error.js';\nimport { isPrimitive, isThenable, isPlainObject, isParameterizedString } from './utils-hoist/is.js';\nimport { logger, consoleSandbox } from './utils-hoist/logger.js';\nimport { uuid4, checkOrSetAlreadyCaught } from './utils-hoist/misc.js';\nimport { resolvedSyncPromise, SyncPromise, rejectedSyncPromise } from './utils-hoist/syncpromise.js';\nimport { parseSampleRate } from './utils/parseSampleRate.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\nimport { showSpanDropWarning } from './utils/spanUtils.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(\n        this._dsn,\n        options.tunnel,\n        options._metadata ? options._metadata.sdk : undefined,\n      );\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n\n    // TODO(v9): Remove this deprecation warning\n    const tracingOptions = ['enableTracing', 'tracesSampleRate', 'tracesSampler'] ;\n    const undefinedOption = tracingOptions.find(option => option in options && options[option] == undefined);\n    if (undefinedOption) {\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[Sentry] Deprecation warning: \\`${undefinedOption}\\` is set to undefined, which leads to tracing being enabled. In v9, a value of \\`undefined\\` will result in tracing being disabled.`,\n        );\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint, scope) {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    this._process(\n      this.eventFromException(exception, hintWithEventId).then(event =>\n        this._captureEvent(event, hintWithEventId, scope),\n      ),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    level,\n    hint,\n    currentScope,\n  ) {\n    const hintWithEventId = {\n      event_id: uuid4(),\n      ...hint,\n    };\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hintWithEventId)\n      : this.eventFromException(message, hintWithEventId);\n\n    this._process(promisedEvent.then(event => this._captureEvent(event, hintWithEventId, currentScope)));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, currentScope) {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(this._captureEvent(event, hintWithEventId, capturedSpanScope || currentScope));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      this.emit('flush');\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      this.emit('close');\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /** @inheritdoc */\n   init() {\n    if (\n      this._isEnabled() ||\n      // Force integrations to be setup even if no DSN was set when we have\n      // Spotlight enabled. This is particularly important for browser as we\n      // don't support the `spotlight` option there and rely on the users\n      // adding the `spotlightBrowserIntegration()` to their integrations which\n      // wouldn't get initialized with the check below when there's no DSN set.\n      this._options.integrations.some(({ name }) => name.startsWith('Spotlight'))\n    ) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n   getIntegrationByName(integrationName) {\n    return this._integrations[integrationName] ;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(env, createAttachmentEnvelopeItem(attachment));\n    }\n\n    const promise = this.sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, eventOrCount) {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    const hooks = (this._hooks[hook] = this._hooks[hook] || []);\n\n    // @ts-expect-error We assume the types are correct\n    hooks.push(callback);\n\n    // This function returns a callback execution handler that, when invoked,\n    // deregisters a callback. This is crucial for managing instances where callbacks\n    // need to be unregistered to prevent self-referencing in callback closures,\n    // ensuring proper garbage collection.\n    return () => {\n      // @ts-expect-error We assume the types are correct\n      const cbIndex = hooks.indexOf(callback);\n      if (cbIndex > -1) {\n        hooks.splice(cbIndex, 1);\n      }\n    };\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    const callbacks = this._hooks[hook];\n    if (callbacks) {\n      callbacks.forEach(callback => callback(...rest));\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n   sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending envelope:', reason);\n        return reason;\n      });\n    }\n\n    DEBUG_BUILD && logger.error('Transport disabled');\n\n    return resolvedSyncPromise({});\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n   _setupIntegrations() {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = event.level === 'fatal';\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(\n    event,\n    hint,\n    currentScope = getCurrentScope(),\n    isolationScope = getIsolationScope(),\n  ) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    if (!event.type) {\n      isolationScope.setLastEventId(event.event_id || hint.event_id);\n    }\n\n    return prepareEvent(options, event, hint, currentScope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      evt.contexts = {\n        trace: getTraceContextFromScope(currentScope),\n        ...evt.contexts,\n      };\n\n      const dynamicSamplingContext = getDynamicSamplingContextFromScope(this, currentScope);\n\n      evt.sdkProcessingMetadata = {\n        dynamicSamplingContext,\n        ...evt.sdkProcessingMetadata,\n      };\n\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, currentScope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : parseSampleRate(sampleRate);\n    if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, currentScope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(this, options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = currentScope && currentScope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.entries(outcomes).map(([key, quantity]) => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity,\n      };\n    });\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    DEBUG_BUILD && logger.log('Flushing outcomes...');\n\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  client,\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction, beforeSendSpan } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event)) {\n    if (event.spans && beforeSendSpan) {\n      const processedSpans = [];\n      for (const span of event.spans) {\n        const processedSpan = beforeSendSpan(span);\n        if (processedSpan) {\n          processedSpans.push(processedSpan);\n        } else {\n          showSpanDropWarning();\n          client.recordDroppedEvent('before_send', 'span');\n        }\n      }\n      event.spans = processedSpans;\n    }\n\n    if (beforeSendTransaction) {\n      if (event.spans) {\n        // We store the # of spans before processing in SDK metadata,\n        // so we can compare it afterwards to determine how many spans were dropped\n        const spanCountBefore = event.spans.length;\n        event.sdkProcessingMetadata = {\n          ...event.sdkProcessingMetadata,\n          spanCountBeforeProcessing: spanCountBefore,\n        };\n      }\n      return beforeSendTransaction(event, hint);\n    }\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","import { dsnToString } from './utils-hoist/dsn.js';\nimport { createEnvelope } from './utils-hoist/envelope.js';\nimport { dropUndefinedKeys } from './utils-hoist/object.js';\n\n/**\n * Create envelope from check in item.\n */\nfunction createCheckInEnvelope(\n  checkIn,\n  dynamicSamplingContext,\n  metadata,\n  tunnel,\n  dsn,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  if (dynamicSamplingContext) {\n    headers.trace = dropUndefinedKeys(dynamicSamplingContext) ;\n  }\n\n  const item = createCheckInEnvelopeItem(checkIn);\n  return createEnvelope(headers, [item]);\n}\n\nfunction createCheckInEnvelopeItem(checkIn) {\n  const checkInHeaders = {\n    type: 'check_in',\n  };\n  return [checkInHeaders, checkIn];\n}\n\nexport { createCheckInEnvelope };\n//# sourceMappingURL=checkin.js.map\n","import { isParameterizedString, isError, isPlainObject, isErrorEvent } from './is.js';\nimport { addExceptionTypeValue, addExceptionMechanism } from './misc.js';\nimport { normalizeToSize } from './normalize.js';\nimport { extractExceptionKeysForMessage } from './object.js';\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser, error) {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nfunction exceptionFromError(stackParser, error) {\n  const exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getMessageForObject(exception) {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`;\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`;\n    }\n\n    return message;\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message;\n  }\n\n  const keys = extractExceptionKeysForMessage(exception);\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as exception with message \\`${exception.message}\\``;\n  }\n\n  const className = getObjectClassName(exception);\n\n  return `${\n    className && className !== 'Object' ? `'${className}'` : 'Object'\n  } captured as exception with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\nfunction getException(\n  client,\n  mechanism,\n  exception,\n  hint,\n) {\n  if (isError(exception)) {\n    return [exception, undefined];\n  }\n\n  // Mutate this!\n  mechanism.synthetic = true;\n\n  if (isPlainObject(exception)) {\n    const normalizeDepth = client && client.getOptions().normalizeDepth;\n    const extras = { ['__serialized__']: normalizeToSize(exception , normalizeDepth) };\n\n    const errorFromProp = getErrorPropertyFromObject(exception);\n    if (errorFromProp) {\n      return [errorFromProp, extras];\n    }\n\n    const message = getMessageForObject(exception);\n    const ex = (hint && hint.syntheticException) || new Error(message);\n    ex.message = message;\n\n    return [ex, extras];\n  }\n\n  // This handles when someone does: `throw \"something awesome\";`\n  // We use synthesized Error here so we can extract a (rough) stack trace.\n  const ex = (hint && hint.syntheticException) || new Error(exception );\n  ex.message = `${exception}`;\n\n  return [ex, undefined];\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nfunction eventFromUnknownInput(\n  client,\n  stackParser,\n  exception,\n  hint,\n) {\n  const providedMechanism =\n    hint && hint.data && (hint.data ).mechanism;\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  const [ex, extras] = getException(client, mechanism, exception, hint);\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n\n  if (extras) {\n    event.extra = extras;\n  }\n\n  addExceptionTypeValue(event, undefined, undefined);\n  addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const event = {\n    event_id: hint && hint.event_id,\n    level,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n      addExceptionMechanism(event, { synthetic: true });\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nexport { eventFromMessage, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { BaseClient } from './baseclient.js';\nimport { createCheckInEnvelope } from './checkin.js';\nimport { getIsolationScope, getTraceContextFromScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { SessionFlusher } from './sessionflusher.js';\nimport { registerSpanErrorInstrumentation } from './tracing/errors.js';\nimport './utils-hoist/debug-build.js';\nimport { logger } from './utils-hoist/logger.js';\nimport './utils-hoist/time.js';\nimport { _getSpanForScope } from './utils/spanOnScope.js';\nimport { spanToTraceContext } from './utils/spanUtils.js';\nimport { uuid4 } from './utils-hoist/misc.js';\nimport { resolvedSyncPromise } from './utils-hoist/syncpromise.js';\nimport { eventFromUnknownInput, eventFromMessage } from './utils-hoist/eventbuilder.js';\nimport { getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromScope } from './tracing/dynamicSamplingContext.js';\n\n/**\n * The Sentry Server Runtime Client SDK.\n */\nclass ServerRuntimeClient\n\n extends BaseClient {\n  // eslint-disable-next-line deprecation/deprecation\n\n  /**\n   * Creates a new Edge SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    // Server clients always support tracing\n    registerSpanErrorInstrumentation();\n\n    super(options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    const event = eventFromUnknownInput(this, this._options.stackParser, exception, hint);\n    event.level = 'error';\n\n    return resolvedSyncPromise(event);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    level = 'info',\n    hint,\n  ) {\n    return resolvedSyncPromise(\n      eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace),\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint, scope) {\n    // Check if `_sessionFlusher` exists because it is initialized (defined) only when the `autoSessionTracking` is enabled.\n    // The expectation is that session aggregates are only sent when `autoSessionTracking` is enabled.\n    // TODO(v9): Our goal in the future is to not have the `autoSessionTracking` option and instead rely on integrations doing the creation and sending of sessions. We will not have a central kill-switch for sessions.\n    // TODO(v9): This should move into the httpIntegration.\n    // eslint-disable-next-line deprecation/deprecation\n    if (this._options.autoSessionTracking && this._sessionFlusher) {\n      // eslint-disable-next-line deprecation/deprecation\n      const requestSession = getIsolationScope().getRequestSession();\n\n      // Necessary checks to ensure this is code block is executed only within a request\n      // Should override the status only if `requestSession.status` is `Ok`, which is its initial stage\n      if (requestSession && requestSession.status === 'ok') {\n        requestSession.status = 'errored';\n      }\n    }\n\n    return super.captureException(exception, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // Check if `_sessionFlusher` exists because it is initialized only when the `autoSessionTracking` is enabled.\n    // The expectation is that session aggregates are only sent when `autoSessionTracking` is enabled.\n    // TODO(v9): Our goal in the future is to not have the `autoSessionTracking` option and instead rely on integrations doing the creation and sending of sessions. We will not have a central kill-switch for sessions.\n    // TODO(v9): This should move into the httpIntegration.\n    // eslint-disable-next-line deprecation/deprecation\n    if (this._options.autoSessionTracking && this._sessionFlusher) {\n      const eventType = event.type || 'exception';\n      const isException =\n        eventType === 'exception' && event.exception && event.exception.values && event.exception.values.length > 0;\n\n      // If the event is of type Exception, then a request session should be captured\n      if (isException) {\n        // eslint-disable-next-line deprecation/deprecation\n        const requestSession = getIsolationScope().getRequestSession();\n\n        // Ensure that this is happening within the bounds of a request, and make sure not to override\n        // Session Status if Errored / Crashed\n        if (requestSession && requestSession.status === 'ok') {\n          requestSession.status = 'errored';\n        }\n      }\n    }\n\n    return super.captureEvent(event, hint, scope);\n  }\n\n  /**\n   *\n   * @inheritdoc\n   */\n   close(timeout) {\n    if (this._sessionFlusher) {\n      this._sessionFlusher.close();\n    }\n    return super.close(timeout);\n  }\n\n  /**\n   * Initializes an instance of SessionFlusher on the client which will aggregate and periodically flush session data.\n   *\n   * NOTICE: This method will implicitly create an interval that is periodically called.\n   * To clean up this resources, call `.close()` when you no longer intend to use the client.\n   * Not doing so will result in a memory leak.\n   */\n   initSessionFlusher() {\n    const { release, environment } = this._options;\n    if (!release) {\n      DEBUG_BUILD && logger.warn('Cannot initialize an instance of SessionFlusher if no release is provided!');\n    } else {\n      // eslint-disable-next-line deprecation/deprecation\n      this._sessionFlusher = new SessionFlusher(this, {\n        release,\n        environment,\n      });\n    }\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   */\n   captureCheckIn(checkIn, monitorConfig, scope) {\n    const id = 'checkInId' in checkIn && checkIn.checkInId ? checkIn.checkInId : uuid4();\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture checkin.');\n      return id;\n    }\n\n    const options = this.getOptions();\n    const { release, environment, tunnel } = options;\n\n    const serializedCheckIn = {\n      check_in_id: id,\n      monitor_slug: checkIn.monitorSlug,\n      status: checkIn.status,\n      release,\n      environment,\n    };\n\n    if ('duration' in checkIn) {\n      serializedCheckIn.duration = checkIn.duration;\n    }\n\n    if (monitorConfig) {\n      serializedCheckIn.monitor_config = {\n        schedule: monitorConfig.schedule,\n        checkin_margin: monitorConfig.checkinMargin,\n        max_runtime: monitorConfig.maxRuntime,\n        timezone: monitorConfig.timezone,\n        failure_issue_threshold: monitorConfig.failureIssueThreshold,\n        recovery_threshold: monitorConfig.recoveryThreshold,\n      };\n    }\n\n    const [dynamicSamplingContext, traceContext] = this._getTraceInfoFromScope(scope);\n    if (traceContext) {\n      serializedCheckIn.contexts = {\n        trace: traceContext,\n      };\n    }\n\n    const envelope = createCheckInEnvelope(\n      serializedCheckIn,\n      dynamicSamplingContext,\n      this.getSdkMetadata(),\n      tunnel,\n      this.getDsn(),\n    );\n\n    DEBUG_BUILD && logger.info('Sending checkin:', checkIn.monitorSlug, checkIn.status);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n\n    return id;\n  }\n\n  /**\n   * Method responsible for capturing/ending a request session by calling `incrementSessionStatusCount` to increment\n   * appropriate session aggregates bucket\n   *\n   * @deprecated This method should not be used or extended. It's functionality will move into the `httpIntegration` and not be part of any public API.\n   */\n   _captureRequestSession() {\n    if (!this._sessionFlusher) {\n      DEBUG_BUILD && logger.warn('Discarded request mode session because autoSessionTracking option was disabled');\n    } else {\n      this._sessionFlusher.incrementSessionStatusCount();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(\n    event,\n    hint,\n    scope,\n    isolationScope,\n  ) {\n    if (this._options.platform) {\n      event.platform = event.platform || this._options.platform;\n    }\n\n    if (this._options.runtime) {\n      event.contexts = {\n        ...event.contexts,\n        runtime: (event.contexts || {}).runtime || this._options.runtime,\n      };\n    }\n\n    if (this._options.serverName) {\n      event.server_name = event.server_name || this._options.serverName;\n    }\n\n    return super._prepareEvent(event, hint, scope, isolationScope);\n  }\n\n  /** Extract trace information from scope */\n   _getTraceInfoFromScope(\n    scope,\n  ) {\n    if (!scope) {\n      return [undefined, undefined];\n    }\n\n    const span = _getSpanForScope(scope);\n\n    const traceContext = span ? spanToTraceContext(span) : getTraceContextFromScope(scope);\n    const dynamicSamplingContext = span\n      ? getDynamicSamplingContextFromSpan(span)\n      : getDynamicSamplingContextFromScope(this, scope);\n    return [dynamicSamplingContext, traceContext];\n  }\n}\n\nexport { ServerRuntimeClient };\n//# sourceMappingURL=server-runtime-client.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) ;\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { forEachEnvelopeItem, envelopeItemTypeToDataCategory, createEnvelope, serializeEnvelope } from '../utils-hoist/envelope.js';\nimport { SentryError } from '../utils-hoist/error.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { makePromiseBuffer } from '../utils-hoist/promisebuffer.js';\nimport { isRateLimited, updateRateLimits } from '../utils-hoist/ratelimit.js';\nimport { resolvedSyncPromise } from '../utils-hoist/syncpromise.js';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise({});\n    }\n\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { envelopeContainsItemType } from '../utils-hoist/envelope.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { parseRetryAfterHeader } from '../utils-hoist/ratelimit.js';\n\nconst MIN_DELAY = 100; // 100 ms\nconst START_DELAY = 5000; // 5 seconds\nconst MAX_DELAY = 3.6e6; // 1 hour\n\n/**\n * Wraps a transport and stores and retries events when they fail to send.\n *\n * @param createTransport The transport to wrap.\n */\nfunction makeOfflineTransport(\n  createTransport,\n) {\n  function log(...args) {\n    DEBUG_BUILD && logger.info('[Offline]:', ...args);\n  }\n\n  return options => {\n    const transport = createTransport(options);\n\n    if (!options.createStore) {\n      throw new Error('No `createStore` function was provided');\n    }\n\n    const store = options.createStore(options);\n\n    let retryDelay = START_DELAY;\n    let flushTimer;\n\n    function shouldQueue(env, error, retryDelay) {\n      // We want to drop client reports because they can be generated when we retry sending events while offline.\n      if (envelopeContainsItemType(env, ['client_report'])) {\n        return false;\n      }\n\n      if (options.shouldStore) {\n        return options.shouldStore(env, error, retryDelay);\n      }\n\n      return true;\n    }\n\n    function flushIn(delay) {\n      if (flushTimer) {\n        clearTimeout(flushTimer );\n      }\n\n      flushTimer = setTimeout(async () => {\n        flushTimer = undefined;\n\n        const found = await store.shift();\n        if (found) {\n          log('Attempting to send previously queued event');\n\n          // We should to update the sent_at timestamp to the current time.\n          found[0].sent_at = new Date().toISOString();\n\n          void send(found, true).catch(e => {\n            log('Failed to retry sending', e);\n          });\n        }\n      }, delay) ;\n\n      // We need to unref the timer in node.js, otherwise the node process never exit.\n      if (typeof flushTimer !== 'number' && flushTimer.unref) {\n        flushTimer.unref();\n      }\n    }\n\n    function flushWithBackOff() {\n      if (flushTimer) {\n        return;\n      }\n\n      flushIn(retryDelay);\n\n      retryDelay = Math.min(retryDelay * 2, MAX_DELAY);\n    }\n\n    async function send(envelope, isRetry = false) {\n      // We queue all replay envelopes to avoid multiple replay envelopes being sent at the same time. If one fails, we\n      // need to retry them in order.\n      if (!isRetry && envelopeContainsItemType(envelope, ['replay_event', 'replay_recording'])) {\n        await store.push(envelope);\n        flushIn(MIN_DELAY);\n        return {};\n      }\n\n      try {\n        const result = await transport.send(envelope);\n\n        let delay = MIN_DELAY;\n\n        if (result) {\n          // If there's a retry-after header, use that as the next delay.\n          if (result.headers && result.headers['retry-after']) {\n            delay = parseRetryAfterHeader(result.headers['retry-after']);\n          } else if (result.headers && result.headers['x-sentry-rate-limits']) {\n            delay = 60000; // 60 seconds\n          } // If we have a server error, return now so we don't flush the queue.\n          else if ((result.statusCode || 0) >= 400) {\n            return result;\n          }\n        }\n\n        flushIn(delay);\n        retryDelay = START_DELAY;\n        return result;\n      } catch (e) {\n        if (await shouldQueue(envelope, e , retryDelay)) {\n          // If this envelope was a retry, we want to add it to the front of the queue so it's retried again first.\n          if (isRetry) {\n            await store.unshift(envelope);\n          } else {\n            await store.push(envelope);\n          }\n          flushWithBackOff();\n          log('Error sending. Event queued.', e );\n          return {};\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    if (options.flushAtStartup) {\n      flushWithBackOff();\n    }\n\n    return {\n      send,\n      flush: timeout => {\n        // If there's no timeout, we should attempt to flush the offline queue.\n        if (timeout === undefined) {\n          retryDelay = START_DELAY;\n          flushIn(MIN_DELAY);\n        }\n\n        return transport.flush(timeout);\n      },\n    };\n  };\n}\n\nexport { MIN_DELAY, START_DELAY, makeOfflineTransport };\n//# sourceMappingURL=offline.js.map\n","import { SDK_VERSION } from '../utils-hoist/version.js';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n\nexport { applySdkMetadata };\n//# sourceMappingURL=sdkMetadata.js.map\n","import { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { getMainCarrier } from '../carrier.js';\nimport { getClient, getCurrentScope } from '../currentScopes.js';\nimport { isEnabled } from '../exports.js';\nimport '../tracing/errors.js';\nimport '../utils-hoist/debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport '../debug-build.js';\nimport '../utils-hoist/time.js';\nimport { getActiveSpan, spanToTraceHeader } from './spanUtils.js';\nimport { TRACEPARENT_REGEXP, generateSentryTraceHeader } from '../utils-hoist/tracing.js';\nimport { getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromScope } from '../tracing/dynamicSamplingContext.js';\nimport { dynamicSamplingContextToSentryBaggageHeader } from '../utils-hoist/baggage.js';\n\n/**\n * Extracts trace propagation data from the current span or from the client's scope (via transaction or propagation\n * context) and serializes it to `sentry-trace` and `baggage` values to strings. These values can be used to propagate\n * a trace via our tracing Http headers or Html `<meta>` tags.\n *\n * This function also applies some validation to the generated sentry-trace and baggage values to ensure that\n * only valid strings are returned.\n *\n * @returns an object with the tracing data values. The object keys are the name of the tracing key to be used as header\n * or meta tag name.\n */\nfunction getTraceData(options = {}) {\n  const client = getClient();\n  if (!isEnabled() || !client) {\n    return {};\n  }\n\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getTraceData) {\n    return acs.getTraceData(options);\n  }\n\n  const scope = getCurrentScope();\n  const span = options.span || getActiveSpan();\n  const sentryTrace = span ? spanToTraceHeader(span) : scopeToTraceHeader(scope);\n  const dsc = span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromScope(client, scope);\n  const baggage = dynamicSamplingContextToSentryBaggageHeader(dsc);\n\n  const isValidSentryTraceHeader = TRACEPARENT_REGEXP.test(sentryTrace);\n  if (!isValidSentryTraceHeader) {\n    logger.warn('Invalid sentry-trace data. Cannot generate trace data');\n    return {};\n  }\n\n  return {\n    'sentry-trace': sentryTrace,\n    baggage,\n  };\n}\n\n/**\n * Get a sentry-trace header value for the given scope.\n */\nfunction scopeToTraceHeader(scope) {\n  // TODO(v9): Use generateSpanId() instead of spanId\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceId, sampled, spanId } = scope.getPropagationContext();\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\nexport { getTraceData };\n//# sourceMappingURL=traceData.js.map\n","import { getClient, getIsolationScope } from './currentScopes.js';\nimport { consoleSandbox } from './utils-hoist/logger.js';\nimport { dateTimestampInSeconds } from './utils-hoist/time.js';\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n */\nfunction addBreadcrumb(breadcrumb, hint) {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n\n  if (!client) return;\n\n  const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = client.getOptions();\n\n  if (maxBreadcrumbs <= 0) return;\n\n  const timestamp = dateTimestampInSeconds();\n  const mergedBreadcrumb = { timestamp, ...breadcrumb };\n  const finalBreadcrumb = beforeBreadcrumb\n    ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n    : mergedBreadcrumb;\n\n  if (finalBreadcrumb === null) return;\n\n  if (client.emit) {\n    client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n  }\n\n  isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n}\n\nexport { addBreadcrumb };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { getClient } from '../currentScopes.js';\nimport { defineIntegration } from '../integration.js';\nimport { getOriginalFunction } from '../utils-hoist/object.js';\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch (e) {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\nexport { functionToStringIntegration };\n//# sourceMappingURL=functiontostring.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { defineIntegration } from '../integration.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getEventDescription } from '../utils-hoist/misc.js';\nimport { stringMatchesSomePattern } from '../utils-hoist/string.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  \"undefined is not an object (evaluating 'a.L')\", // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n  /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\\d+, MethodName:simulateEvent, ParamCount:\\d+$/, // unactionable error from CEFSharp, a .NET library that embeds chromium in .NET apps\n];\n\n/** Options for the InboundFilters integration */\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) ;\n\nconst inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isUselessError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(\n          event,\n        )}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event) {\n  if (event.type) {\n    // event is not an error\n    return false;\n  }\n\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception || !event.exception.values || event.exception.values.length === 0) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n\nexport { inboundFiltersIntegration };\n//# sourceMappingURL=inboundfilters.js.map\n","import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","import { defineIntegration } from '../integration.js';\nimport { applyAggregateErrorsToEvent } from '../utils-hoist/aggregate-errors.js';\nimport { exceptionFromError } from '../utils-hoist/eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\nexport { linkedErrorsIntegration };\n//# sourceMappingURL=linkederrors.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  return (urlPath.split(/[?#]/, 1) )[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n *\n * @deprecated This function will be removed in the next major version.\n */\n// TODO(v9): Hoist this function into the places where we use it. (as it stands only react router v6 instrumentation)\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { CONSOLE_LEVELS, originalConsoleMethods } from '../logger.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n","/**\n * @deprecated This variable has been deprecated and will be removed in the next major version.\n */\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (\n    level === 'warn' ? 'warning' : ['fatal', 'error', 'warning', 'log', 'info', 'debug'].includes(level) ? level : 'log'\n  ) ;\n}\n\nexport { severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://github.com/calvinmetcalf/rollup-plugin-node-builtins/blob/63ab8aacd013767445ca299e468d9a60a95328d7/src/es6/path.js\n//\n// Copyright Joyent, Inc.and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\S+:\\\\|\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^/\\\\]+?|)(\\.[^./\\\\]*|))(?:[/\\\\]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n  // Truncate files names greater than 1024 characters to avoid regex dos\n  // https://github.com/getsentry/sentry-javascript/pull/8737#discussion_r1285719172\n  const truncated = filename.length > 1024 ? `<truncated>${filename.slice(-1024)}` : filename;\n  const parts = splitPathRe.exec(truncated);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve(...args) {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr) {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalizePath(path) {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nfunction join(...args) {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nfunction dirname(path) {\n  const result = splitPath(path);\n  const root = result[0] || '';\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nfunction basename(path, ext) {\n  let f = splitPath(path)[2] || '';\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n\nexport { basename, dirname, isAbsolute, join, normalizePath, relative, resolve };\n//# sourceMappingURL=path.js.map\n","const COUNTER_METRIC_TYPE = 'c' ;\nconst GAUGE_METRIC_TYPE = 'g' ;\nconst SET_METRIC_TYPE = 's' ;\nconst DISTRIBUTION_METRIC_TYPE = 'd' ;\n\n/**\n * This does not match spec in https://develop.sentry.dev/sdk/metrics\n * but was chosen to optimize for the most common case in browser environments.\n */\nconst DEFAULT_BROWSER_FLUSH_INTERVAL = 5000;\n\n/**\n * SDKs are required to bucket into 10 second intervals (rollup in seconds)\n * which is the current lower bound of metric accuracy.\n */\nconst DEFAULT_FLUSH_INTERVAL = 10000;\n\n/**\n * The maximum number of metrics that should be stored in memory.\n */\nconst MAX_WEIGHT = 10000;\n\nexport { COUNTER_METRIC_TYPE, DEFAULT_BROWSER_FLUSH_INTERVAL, DEFAULT_FLUSH_INTERVAL, DISTRIBUTION_METRIC_TYPE, GAUGE_METRIC_TYPE, MAX_WEIGHT, SET_METRIC_TYPE };\n//# sourceMappingURL=constants.js.map\n","import { getClient } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport '../tracing/errors.js';\nimport { getGlobalSingleton } from '../utils-hoist/worldwide.js';\nimport '../utils-hoist/debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { timestampInSeconds } from '../utils-hoist/time.js';\nimport { getActiveSpan, getRootSpan, spanToJSON } from '../utils/spanUtils.js';\nimport { startSpanManual } from '../tracing/trace.js';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors.js';\nimport { COUNTER_METRIC_TYPE, DISTRIBUTION_METRIC_TYPE, SET_METRIC_TYPE, GAUGE_METRIC_TYPE } from './constants.js';\n\n/**\n * Gets the metrics aggregator for a given client.\n * @param client The client for which to get the metrics aggregator.\n * @param Aggregator Optional metrics aggregator class to use to create an aggregator if one does not exist.\n */\nfunction getMetricsAggregatorForClient(\n  client,\n  Aggregator,\n) {\n  const globalMetricsAggregators = getGlobalSingleton(\n    'globalMetricsAggregators',\n    () => new WeakMap(),\n  );\n\n  const aggregator = globalMetricsAggregators.get(client);\n  if (aggregator) {\n    return aggregator;\n  }\n\n  const newAggregator = new Aggregator(client);\n  client.on('flush', () => newAggregator.flush());\n  client.on('close', () => newAggregator.close());\n  globalMetricsAggregators.set(client, newAggregator);\n\n  return newAggregator;\n}\n\nfunction addToMetricsAggregator(\n  Aggregator,\n  metricType,\n  name,\n  value,\n  data = {},\n) {\n  const client = data.client || getClient();\n\n  if (!client) {\n    return;\n  }\n\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n  const transactionName = rootSpan && spanToJSON(rootSpan).description;\n\n  const { unit, tags, timestamp } = data;\n  const { release, environment } = client.getOptions();\n  const metricTags = {};\n  if (release) {\n    metricTags.release = release;\n  }\n  if (environment) {\n    metricTags.environment = environment;\n  }\n  if (transactionName) {\n    metricTags.transaction = transactionName;\n  }\n\n  DEBUG_BUILD && logger.log(`Adding value of ${value} to ${metricType} metric ${name}`);\n\n  const aggregator = getMetricsAggregatorForClient(client, Aggregator);\n  aggregator.add(metricType, name, value, unit, { ...metricTags, ...tags }, timestamp);\n}\n\n/**\n * Adds a value to a counter metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction increment(aggregator, name, value = 1, data) {\n  addToMetricsAggregator(aggregator, COUNTER_METRIC_TYPE, name, ensureNumber(value), data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction distribution(aggregator, name, value, data) {\n  addToMetricsAggregator(aggregator, DISTRIBUTION_METRIC_TYPE, name, ensureNumber(value), data);\n}\n\n/**\n * Adds a timing metric.\n * The metric is added as a distribution metric.\n *\n * You can either directly capture a numeric `value`, or wrap a callback function in `timing`.\n * In the latter case, the duration of the callback execution will be captured as a span & a metric.\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction timing(\n  aggregator,\n  name,\n  value,\n  unit = 'second',\n  data,\n) {\n  // callback form\n  if (typeof value === 'function') {\n    const startTime = timestampInSeconds();\n\n    return startSpanManual(\n      {\n        op: 'metrics.timing',\n        name,\n        startTime,\n        onlyIfParent: true,\n      },\n      span => {\n        return handleCallbackErrors(\n          () => value(),\n          () => {\n            // no special error handling necessary\n          },\n          () => {\n            const endTime = timestampInSeconds();\n            const timeDiff = endTime - startTime;\n            // eslint-disable-next-line deprecation/deprecation\n            distribution(aggregator, name, timeDiff, { ...data, unit: 'second' });\n            span.end(endTime);\n          },\n        );\n      },\n    );\n  }\n\n  // value form\n  // eslint-disable-next-line deprecation/deprecation\n  distribution(aggregator, name, value, { ...data, unit });\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction set(aggregator, name, value, data) {\n  addToMetricsAggregator(aggregator, SET_METRIC_TYPE, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction gauge(aggregator, name, value, data) {\n  addToMetricsAggregator(aggregator, GAUGE_METRIC_TYPE, name, ensureNumber(value), data);\n}\n\n/**\n * The metrics API is used to capture custom metrics in Sentry.\n *\n * @deprecated The Sentry metrics beta has ended. This export will be removed in a future release.\n */\nconst metrics = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  timing,\n  /**\n   * @ignore This is for internal use only.\n   */\n  getMetricsAggregatorForClient,\n};\n\n// Although this is typed to be a number, we try to handle strings as well here\nfunction ensureNumber(number) {\n  return typeof number === 'string' ? parseInt(number) : number;\n}\n\nexport { metrics };\n//# sourceMappingURL=exports.js.map\n","import { dropUndefinedKeys } from '../utils-hoist/object.js';\n\n/**\n * Generate bucket key from metric properties.\n */\nfunction getBucketKey(\n  metricType,\n  name,\n  unit,\n  tags,\n) {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nfunction simpleHash(s) {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nfunction serializeMetricBuckets(metricBucketItems) {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/**\n * Sanitizes units\n *\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nfunction sanitizeUnit(unit) {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/**\n * Sanitizes metric keys\n *\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nfunction sanitizeMetricKey(key) {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\n/**\n * Sanitizes metric keys\n *\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nfunction sanitizeTagKey(key) {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\n/**\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nconst tagValueReplacements = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input) {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value) {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nfunction sanitizeTags(unsanitizedTags) {\n  const tags = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n\nexport { getBucketKey, sanitizeMetricKey, sanitizeTags, sanitizeUnit, serializeMetricBuckets, simpleHash };\n//# sourceMappingURL=utils.js.map\n","import { dsnToString } from '../utils-hoist/dsn.js';\nimport { createEnvelope } from '../utils-hoist/envelope.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { serializeMetricBuckets } from './utils.js';\n\n/**\n * Captures aggregated metrics to the supplied client.\n */\nfunction captureAggregateMetrics(client, metricBucketItems) {\n  logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n  const dsn = client.getDsn();\n  const metadata = client.getSdkMetadata();\n  const tunnel = client.getOptions().tunnel;\n\n  const metricsEnvelope = createMetricEnvelope(metricBucketItems, dsn, metadata, tunnel);\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(metricsEnvelope);\n}\n\n/**\n * Create envelope from a metric aggregate.\n */\nfunction createMetricEnvelope(\n  metricBucketItems,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems) {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n\nexport { captureAggregateMetrics, createMetricEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { COUNTER_METRIC_TYPE, GAUGE_METRIC_TYPE, DISTRIBUTION_METRIC_TYPE, SET_METRIC_TYPE } from './constants.js';\nimport { simpleHash } from './utils.js';\n\n/**\n * A metric instance representing a counter.\n */\nclass CounterMetric  {\n   constructor( _value) {this._value = _value;}\n\n  /** @inheritDoc */\n   get weight() {\n    return 1;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value += value;\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return `${this._value}`;\n  }\n}\n\n/**\n * A metric instance representing a gauge.\n */\nclass GaugeMetric  {\n\n   constructor(value) {\n    this._last = value;\n    this._min = value;\n    this._max = value;\n    this._sum = value;\n    this._count = 1;\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return 5;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._last = value;\n    if (value < this._min) {\n      this._min = value;\n    }\n    if (value > this._max) {\n      this._max = value;\n    }\n    this._sum += value;\n    this._count++;\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return `${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`;\n  }\n}\n\n/**\n * A metric instance representing a distribution.\n */\nclass DistributionMetric  {\n\n   constructor(first) {\n    this._value = [first];\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return this._value.length;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value.push(value);\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return this._value.join(':');\n  }\n}\n\n/**\n * A metric instance representing a set.\n */\nclass SetMetric  {\n\n   constructor( first) {this.first = first;\n    this._value = new Set([first]);\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return this._value.size;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value.add(value);\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return Array.from(this._value)\n      .map(val => (typeof val === 'string' ? simpleHash(val) : val))\n      .join(':');\n  }\n}\n\nconst METRIC_MAP = {\n  [COUNTER_METRIC_TYPE]: CounterMetric,\n  [GAUGE_METRIC_TYPE]: GaugeMetric,\n  [DISTRIBUTION_METRIC_TYPE]: DistributionMetric,\n  [SET_METRIC_TYPE]: SetMetric,\n};\n\nexport { CounterMetric, DistributionMetric, GaugeMetric, METRIC_MAP, SetMetric };\n//# sourceMappingURL=instance.js.map\n","import { timestampInSeconds } from '../utils-hoist/time.js';\nimport { updateMetricSummaryOnActiveSpan } from '../utils/spanUtils.js';\nimport { DEFAULT_FLUSH_INTERVAL, SET_METRIC_TYPE, MAX_WEIGHT } from './constants.js';\nimport { captureAggregateMetrics } from './envelope.js';\nimport { METRIC_MAP } from './instance.js';\nimport { sanitizeMetricKey, sanitizeTags, sanitizeUnit, getBucketKey } from './utils.js';\n\n/**\n * A metrics aggregator that aggregates metrics in memory and flushes them periodically.\n */\nclass MetricsAggregator  {\n  // TODO(@anonrig): Use FinalizationRegistry to have a proper way of flushing the buckets\n  // when the aggregator is garbage collected.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n\n  // Different metrics have different weights. We use this to limit the number of metrics\n  // that we store in memory.\n\n  // We adjust the type here to add the `unref()` part, as setInterval can technically return a number or a NodeJS.Timer\n\n  // SDKs are required to shift the flush interval by random() * rollup_in_seconds.\n  // That shift is determined once per startup to create jittering.\n\n  // An SDK is required to perform force flushing ahead of scheduled time if the memory\n  // pressure is too high. There is no rule for this other than that SDKs should be tracking\n  // abstract aggregation complexity (eg: a counter only carries a single float, whereas a\n  // distribution is a float per emission).\n  //\n  // Force flush is used on either shutdown, flush() or when we exceed the max weight.\n\n   constructor(  _client) {this._client = _client;\n    this._buckets = new Map();\n    this._bucketsTotalWeight = 0;\n\n    this._interval = setInterval(() => this._flush(), DEFAULT_FLUSH_INTERVAL);\n    if (this._interval.unref) {\n      this._interval.unref();\n    }\n\n    this._flushShift = Math.floor((Math.random() * DEFAULT_FLUSH_INTERVAL) / 1000);\n    this._forceFlush = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(\n    metricType,\n    unsanitizedName,\n    value,\n    unsanitizedUnit = 'none',\n    unsanitizedTags = {},\n    maybeFloatTimestamp = timestampInSeconds(),\n  ) {\n    const timestamp = Math.floor(maybeFloatTimestamp);\n    const name = sanitizeMetricKey(unsanitizedName);\n    const tags = sanitizeTags(unsanitizedTags);\n    const unit = sanitizeUnit(unsanitizedUnit );\n\n    const bucketKey = getBucketKey(metricType, name, unit, tags);\n\n    let bucketItem = this._buckets.get(bucketKey);\n    // If this is a set metric, we need to calculate the delta from the previous weight.\n    const previousWeight = bucketItem && metricType === SET_METRIC_TYPE ? bucketItem.metric.weight : 0;\n\n    if (bucketItem) {\n      bucketItem.metric.add(value);\n      // TODO(abhi): Do we need this check?\n      if (bucketItem.timestamp < timestamp) {\n        bucketItem.timestamp = timestamp;\n      }\n    } else {\n      bucketItem = {\n        // @ts-expect-error we don't need to narrow down the type of value here, saves bundle size.\n        metric: new METRIC_MAP[metricType](value),\n        timestamp,\n        metricType,\n        name,\n        unit,\n        tags,\n      };\n      this._buckets.set(bucketKey, bucketItem);\n    }\n\n    // If value is a string, it's a set metric so calculate the delta from the previous weight.\n    const val = typeof value === 'string' ? bucketItem.metric.weight - previousWeight : value;\n    updateMetricSummaryOnActiveSpan(metricType, name, val, unit, unsanitizedTags, bucketKey);\n\n    // We need to keep track of the total weight of the buckets so that we can\n    // flush them when we exceed the max weight.\n    this._bucketsTotalWeight += bucketItem.metric.weight;\n\n    if (this._bucketsTotalWeight >= MAX_WEIGHT) {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flushes the current metrics to the transport via the transport.\n   */\n   flush() {\n    this._forceFlush = true;\n    this._flush();\n  }\n\n  /**\n   * Shuts down metrics aggregator and clears all metrics.\n   */\n   close() {\n    this._forceFlush = true;\n    clearInterval(this._interval);\n    this._flush();\n  }\n\n  /**\n   * Flushes the buckets according to the internal state of the aggregator.\n   * If it is a force flush, which happens on shutdown, it will flush all buckets.\n   * Otherwise, it will only flush buckets that are older than the flush interval,\n   * and according to the flush shift.\n   *\n   * This function mutates `_forceFlush` and `_bucketsTotalWeight` properties.\n   */\n   _flush() {\n    // TODO(@anonrig): Add Atomics for locking to avoid having force flush and regular flush\n    // running at the same time.\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics\n\n    // This path eliminates the need for checking for timestamps since we're forcing a flush.\n    // Remember to reset the flag, or it will always flush all metrics.\n    if (this._forceFlush) {\n      this._forceFlush = false;\n      this._bucketsTotalWeight = 0;\n      this._captureMetrics(this._buckets);\n      this._buckets.clear();\n      return;\n    }\n    const cutoffSeconds = Math.floor(timestampInSeconds()) - DEFAULT_FLUSH_INTERVAL / 1000 - this._flushShift;\n    // TODO(@anonrig): Optimization opportunity.\n    // Convert this map to an array and store key in the bucketItem.\n    const flushedBuckets = new Map();\n    for (const [key, bucket] of this._buckets) {\n      if (bucket.timestamp <= cutoffSeconds) {\n        flushedBuckets.set(key, bucket);\n        this._bucketsTotalWeight -= bucket.metric.weight;\n      }\n    }\n\n    for (const [key] of flushedBuckets) {\n      this._buckets.delete(key);\n    }\n\n    this._captureMetrics(flushedBuckets);\n  }\n\n  /**\n   * Only captures a subset of the buckets passed to this function.\n   * @param flushedBuckets\n   */\n   _captureMetrics(flushedBuckets) {\n    if (flushedBuckets.size > 0) {\n      // TODO(@anonrig): Optimization opportunity.\n      // This copy operation can be avoided if we store the key in the bucketItem.\n      const buckets = Array.from(flushedBuckets).map(([, bucketItem]) => bucketItem);\n      captureAggregateMetrics(this._client, buckets);\n    }\n  }\n}\n\nexport { MetricsAggregator };\n//# sourceMappingURL=aggregator.js.map\n","import { MetricsAggregator } from './aggregator.js';\nimport { metrics } from './exports.js';\n\n/**\n * Adds a value to a counter metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction increment(name, value = 1, data) {\n  // eslint-disable-next-line deprecation/deprecation\n  metrics.increment(MetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction distribution(name, value, data) {\n  // eslint-disable-next-line deprecation/deprecation\n  metrics.distribution(MetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction set(name, value, data) {\n  // eslint-disable-next-line deprecation/deprecation\n  metrics.set(MetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction gauge(name, value, data) {\n  // eslint-disable-next-line deprecation/deprecation\n  metrics.gauge(MetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a timing metric.\n * The metric is added as a distribution metric.\n *\n * You can either directly capture a numeric `value`, or wrap a callback function in `timing`.\n * In the latter case, the duration of the callback execution will be captured as a span & a metric.\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\n\nfunction timing(\n  name,\n  value,\n  unit = 'second',\n  data,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  return metrics.timing(MetricsAggregator, name, value, unit, data);\n}\n\n/**\n * Returns the metrics aggregator for a given client.\n */\nfunction getMetricsAggregatorForClient(client) {\n  // eslint-disable-next-line deprecation/deprecation\n  return metrics.getMetricsAggregatorForClient(client, MetricsAggregator);\n}\n\n/**\n * The metrics API is used to capture custom metrics in Sentry.\n *\n * @deprecated The Sentry metrics beta has ended. This export will be removed in a future release.\n */\nconst metricsDefault\n\n = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  timing,\n  /**\n   * @ignore This is for internal use only.\n   */\n  getMetricsAggregatorForClient,\n};\n\nexport { metricsDefault };\n//# sourceMappingURL=exports-default.js.map\n","/**\n * Determine a breadcrumb's log level (only `warning` or `error`) based on an HTTP status code.\n */\nfunction getBreadcrumbLogLevelFromHttpStatusCode(statusCode) {\n  // NOTE: undefined defaults to 'info' in Sentry\n  if (statusCode === undefined) {\n    return undefined;\n  } else if (statusCode >= 400 && statusCode < 500) {\n    return 'warning';\n  } else if (statusCode >= 500) {\n    return 'error';\n  } else {\n    return undefined;\n  }\n}\n\nexport { getBreadcrumbLogLevelFromHttpStatusCode };\n//# sourceMappingURL=breadcrumb-log-level.js.map\n","import { UNKNOWN_FUNCTION } from './stacktrace.js';\n\n/**\n * Does this filename look like it's part of the app code?\n */\nfunction filenameIsInApp(filename, isNative = false) {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.match(/^[A-Z]:/) &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/');\n}\n\n/** Node Stack line parser */\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || UNKNOWN_FUNCTION;\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      // If it's a Windows path, trim the leading slash so that `/C:/foo` becomes `C:/foo`\n      if (filename && filename.match(/\\/[A-Z]:/)) {\n        filename = filename.slice(1);\n      }\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      return {\n        filename: filename ? decodeURI(filename) : undefined,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: _parseIntOrUndefined(lineMatch[3]),\n        colno: _parseIntOrUndefined(lineMatch[4]),\n        in_app: filenameIsInApp(filename || '', isNative),\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/core so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nfunction _parseIntOrUndefined(input) {\n  return parseInt(input || '', 10) || undefined;\n}\n\nexport { filenameIsInApp, node, nodeStackLineParser };\n//# sourceMappingURL=node-stack-trace.js.map\n","import { filenameIsInApp } from './node-stack-trace.js';\nimport { dropUndefinedKeys } from './object.js';\nimport { UNKNOWN_FUNCTION } from './stacktrace.js';\n\n/**\n * A node.js watchdog timer\n * @param pollInterval The interval that we expect to get polled at\n * @param anrThreshold The threshold for when we consider ANR\n * @param callback The callback to call for ANR\n * @returns An object with `poll` and `enabled` functions {@link WatchdogReturn}\n */\nfunction watchdogTimer(\n  createTimer,\n  pollInterval,\n  anrThreshold,\n  callback,\n) {\n  const timer = createTimer();\n  let triggered = false;\n  let enabled = true;\n\n  setInterval(() => {\n    const diffMs = timer.getTimeMs();\n\n    if (triggered === false && diffMs > pollInterval + anrThreshold) {\n      triggered = true;\n      if (enabled) {\n        callback();\n      }\n    }\n\n    if (diffMs < pollInterval + anrThreshold) {\n      triggered = false;\n    }\n  }, 20);\n\n  return {\n    poll: () => {\n      timer.reset();\n    },\n    enabled: (state) => {\n      enabled = state;\n    },\n  };\n}\n\n// types copied from inspector.d.ts\n\n/**\n * Converts Debugger.CallFrame to Sentry StackFrame\n */\nfunction callFrameToStackFrame(\n  frame,\n  url,\n  getModuleFromFilename,\n) {\n  const filename = url ? url.replace(/^file:\\/\\//, '') : undefined;\n\n  // CallFrame row/col are 0 based, whereas StackFrame are 1 based\n  const colno = frame.location.columnNumber ? frame.location.columnNumber + 1 : undefined;\n  const lineno = frame.location.lineNumber ? frame.location.lineNumber + 1 : undefined;\n\n  return dropUndefinedKeys({\n    filename,\n    module: getModuleFromFilename(filename),\n    function: frame.functionName || UNKNOWN_FUNCTION,\n    colno,\n    lineno,\n    in_app: filename ? filenameIsInApp(filename) : undefined,\n  });\n}\n\nexport { callFrameToStackFrame, watchdogTimer };\n//# sourceMappingURL=anr.js.map\n","/** A simple Least Recently Used map */\nclass LRUMap {\n\n   constructor(  _maxSize) {this._maxSize = _maxSize;\n    this._cache = new Map();\n  }\n\n  /** Get the current size of the cache */\n   get size() {\n    return this._cache.size;\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n   get(key) {\n    const value = this._cache.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key);\n    this._cache.set(key, value);\n    return value;\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n   set(key, value) {\n    if (this._cache.size >= this._maxSize) {\n      // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n   remove(key) {\n    const value = this._cache.get(key);\n    if (value) {\n      this._cache.delete(key);\n    }\n    return value;\n  }\n\n  /** Clear all entries */\n   clear() {\n    this._cache.clear();\n  }\n\n  /** Get all the keys */\n   keys() {\n    return Array.from(this._cache.keys());\n  }\n\n  /** Get all the values */\n   values() {\n    const values = [];\n    this._cache.forEach(value => values.push(value));\n    return values;\n  }\n}\n\nexport { LRUMap };\n//# sourceMappingURL=lru.js.map\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins\nexport var _globalThis = typeof globalThis === 'object' ? globalThis : global;\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.9.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VERSION } from '../version';\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(ownVersion) {\n    var acceptedVersions = new Set([ownVersion]);\n    var rejectedVersions = new Set();\n    var myVersionMatch = ownVersion.match(re);\n    if (!myVersionMatch) {\n        // we cannot guarantee compatibility so we always return noop\n        return function () { return false; };\n    }\n    var ownVersionParsed = {\n        major: +myVersionMatch[1],\n        minor: +myVersionMatch[2],\n        patch: +myVersionMatch[3],\n        prerelease: myVersionMatch[4],\n    };\n    // if ownVersion has a prerelease tag, versions must match exactly\n    if (ownVersionParsed.prerelease != null) {\n        return function isExactmatch(globalVersion) {\n            return globalVersion === ownVersion;\n        };\n    }\n    function _reject(v) {\n        rejectedVersions.add(v);\n        return false;\n    }\n    function _accept(v) {\n        acceptedVersions.add(v);\n        return true;\n    }\n    return function isCompatible(globalVersion) {\n        if (acceptedVersions.has(globalVersion)) {\n            return true;\n        }\n        if (rejectedVersions.has(globalVersion)) {\n            return false;\n        }\n        var globalVersionMatch = globalVersion.match(re);\n        if (!globalVersionMatch) {\n            // cannot parse other version\n            // we cannot guarantee compatibility so we always noop\n            return _reject(globalVersion);\n        }\n        var globalVersionParsed = {\n            major: +globalVersionMatch[1],\n            minor: +globalVersionMatch[2],\n            patch: +globalVersionMatch[3],\n            prerelease: globalVersionMatch[4],\n        };\n        // if globalVersion has a prerelease tag, versions must match exactly\n        if (globalVersionParsed.prerelease != null) {\n            return _reject(globalVersion);\n        }\n        // major versions must match\n        if (ownVersionParsed.major !== globalVersionParsed.major) {\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.major === 0) {\n            if (ownVersionParsed.minor === globalVersionParsed.minor &&\n                ownVersionParsed.patch <= globalVersionParsed.patch) {\n                return _accept(globalVersion);\n            }\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n            return _accept(globalVersion);\n        }\n        return _reject(globalVersion);\n    };\n}\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport var isCompatible = _makeCompatibilityCheck(VERSION);\n//# sourceMappingURL=semver.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\nvar major = VERSION.split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"opentelemetry.js.api.\" + major);\nvar _global = _globalThis;\nexport function registerGlobal(type, instance, diag, allowOverride) {\n    var _a;\n    if (allowOverride === void 0) { allowOverride = false; }\n    var api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n        version: VERSION,\n    });\n    if (!allowOverride && api[type]) {\n        // already registered an API of this type\n        var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    if (api.version !== VERSION) {\n        // All registered APIs must be of the same version exactly\n        var err = new Error(\"@opentelemetry/api: Registration of version v\" + api.version + \" for \" + type + \" does not match previously registered API v\" + VERSION);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    api[type] = instance;\n    diag.debug(\"@opentelemetry/api: Registered a global for \" + type + \" v\" + VERSION + \".\");\n    return true;\n}\nexport function getGlobal(type) {\n    var _a, _b;\n    var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n    if (!globalVersion || !isCompatible(globalVersion)) {\n        return;\n    }\n    return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nexport function unregisterGlobal(type, diag) {\n    diag.debug(\"@opentelemetry/api: Unregistering a global for \" + type + \" v\" + VERSION + \".\");\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (api) {\n        delete api[type];\n    }\n}\n//# sourceMappingURL=global-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { getGlobal } from '../internal/global-utils';\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nvar DiagComponentLogger = /** @class */ (function () {\n    function DiagComponentLogger(props) {\n        this._namespace = props.namespace || 'DiagComponentLogger';\n    }\n    DiagComponentLogger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('debug', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('error', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('info', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('warn', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.verbose = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('verbose', this._namespace, args);\n    };\n    return DiagComponentLogger;\n}());\nexport { DiagComponentLogger };\nfunction logProxy(funcName, namespace, args) {\n    var logger = getGlobal('diag');\n    // shortcut if logger not set\n    if (!logger) {\n        return;\n    }\n    args.unshift(namespace);\n    return logger[funcName].apply(logger, __spreadArray([], __read(args), false));\n}\n//# sourceMappingURL=ComponentLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport var DiagLogLevel;\n(function (DiagLogLevel) {\n    /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n    DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n    /** Identifies an error scenario */\n    DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n    /** Identifies a warning scenario */\n    DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n    /** General informational log message */\n    DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n    /** General debug log message */\n    DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n    /**\n     * Detailed trace level logging should only be used for development, should only be set\n     * in a development environment.\n     */\n    DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n    /** Used to set the logging level to include all logging */\n    DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel || (DiagLogLevel = {}));\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '../types';\nexport function createLogLevelDiagLogger(maxLevel, logger) {\n    if (maxLevel < DiagLogLevel.NONE) {\n        maxLevel = DiagLogLevel.NONE;\n    }\n    else if (maxLevel > DiagLogLevel.ALL) {\n        maxLevel = DiagLogLevel.ALL;\n    }\n    // In case the logger is null or undefined\n    logger = logger || {};\n    function _filterFunc(funcName, theLevel) {\n        var theFunc = logger[funcName];\n        if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n            return theFunc.bind(logger);\n        }\n        return function () { };\n    }\n    return {\n        error: _filterFunc('error', DiagLogLevel.ERROR),\n        warn: _filterFunc('warn', DiagLogLevel.WARN),\n        info: _filterFunc('info', DiagLogLevel.INFO),\n        debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n        verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n    };\n}\n//# sourceMappingURL=logLevelLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport { DiagLogLevel, } from '../diag/types';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */ (function () {\n    /**\n     * Private internal constructor\n     * @private\n     */\n    function DiagAPI() {\n        function _logProxy(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var logger = getGlobal('diag');\n                // shortcut if logger not set\n                if (!logger)\n                    return;\n                return logger[funcName].apply(logger, __spreadArray([], __read(args), false));\n            };\n        }\n        // Using self local variable for minification purposes as 'this' cannot be minified\n        var self = this;\n        // DiagAPI specific functions\n        var setLogger = function (logger, optionsOrLogLevel) {\n            var _a, _b, _c;\n            if (optionsOrLogLevel === void 0) { optionsOrLogLevel = { logLevel: DiagLogLevel.INFO }; }\n            if (logger === self) {\n                // There isn't much we can do here.\n                // Logging to the console might break the user application.\n                // Try to log to self. If a logger was previously registered it will receive the log.\n                var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n                self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n                return false;\n            }\n            if (typeof optionsOrLogLevel === 'number') {\n                optionsOrLogLevel = {\n                    logLevel: optionsOrLogLevel,\n                };\n            }\n            var oldLogger = getGlobal('diag');\n            var newLogger = createLogLevelDiagLogger((_b = optionsOrLogLevel.logLevel) !== null && _b !== void 0 ? _b : DiagLogLevel.INFO, logger);\n            // There already is an logger registered. We'll let it know before overwriting it.\n            if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n                var stack = (_c = new Error().stack) !== null && _c !== void 0 ? _c : '<failed to generate stacktrace>';\n                oldLogger.warn(\"Current logger will be overwritten from \" + stack);\n                newLogger.warn(\"Current logger will overwrite one already registered from \" + stack);\n            }\n            return registerGlobal('diag', newLogger, self, true);\n        };\n        self.setLogger = setLogger;\n        self.disable = function () {\n            unregisterGlobal(API_NAME, self);\n        };\n        self.createComponentLogger = function (options) {\n            return new DiagComponentLogger(options);\n        };\n        self.verbose = _logProxy('verbose');\n        self.debug = _logProxy('debug');\n        self.info = _logProxy('info');\n        self.warn = _logProxy('warn');\n        self.error = _logProxy('error');\n    }\n    /** Get the singleton instance of the DiagAPI API */\n    DiagAPI.instance = function () {\n        if (!this._instance) {\n            this._instance = new DiagAPI();\n        }\n        return this._instance;\n    };\n    return DiagAPI;\n}());\nexport { DiagAPI };\n//# sourceMappingURL=diag.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var _b = __read(_a, 2), k = _b[0], v = _b[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var e_1, _a;\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        try {\n            for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                var key = keys_1_1.value;\n                newBaggage._entries.delete(key);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\nexport { BaggageImpl };\n//# sourceMappingURL=baggage-impl.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport var baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n//# sourceMappingURL=symbol.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nvar diag = DiagAPI.instance();\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(entries) {\n    if (entries === void 0) { entries = {}; }\n    return new BaggageImpl(new Map(Object.entries(entries)));\n}\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(str) {\n    if (typeof str !== 'string') {\n        diag.error(\"Cannot create baggage metadata from unknown type: \" + typeof str);\n        str = '';\n    }\n    return {\n        __TYPE__: baggageEntryMetadataSymbol,\n        toString: function () {\n            return str;\n        },\n    };\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description) {\n    // The specification states that for the same input, multiple calls should\n    // return different keys. Due to the nature of the JS dependency management\n    // system, this creates problems where multiple versions of some package\n    // could hold different keys for the same property.\n    //\n    // Therefore, we use Symbol.for which returns the same key for the same input.\n    return Symbol.for(description);\n}\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        // for minification\n        var self = this;\n        self._currentContext = parentContext ? new Map(parentContext) : new Map();\n        self.getValue = function (key) { return self._currentContext.get(key); };\n        self.setValue = function (key, value) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.set(key, value);\n            return context;\n        };\n        self.deleteValue = function (key) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.delete(key);\n            return context;\n        };\n    }\n    return BaseContext;\n}());\n/** The root context is used as the default parent context when there is no active context */\nexport var ROOT_CONTEXT = new BaseContext();\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar consoleMap = [\n    { n: 'error', c: 'error' },\n    { n: 'warn', c: 'warn' },\n    { n: 'info', c: 'info' },\n    { n: 'debug', c: 'debug' },\n    { n: 'verbose', c: 'trace' },\n];\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nvar DiagConsoleLogger = /** @class */ (function () {\n    function DiagConsoleLogger() {\n        function _consoleFunc(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (console) {\n                    // Some environments only expose the console when the F12 developer console is open\n                    // eslint-disable-next-line no-console\n                    var theFunc = console[funcName];\n                    if (typeof theFunc !== 'function') {\n                        // Not all environments support all functions\n                        // eslint-disable-next-line no-console\n                        theFunc = console.log;\n                    }\n                    // One last final check\n                    if (typeof theFunc === 'function') {\n                        return theFunc.apply(console, args);\n                    }\n                }\n            };\n        }\n        for (var i = 0; i < consoleMap.length; i++) {\n            this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n        }\n    }\n    return DiagConsoleLogger;\n}());\nexport { DiagConsoleLogger };\n//# sourceMappingURL=consoleLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nvar NoopMeter = /** @class */ (function () {\n    function NoopMeter() {\n    }\n    /**\n     * @see {@link Meter.createGauge}\n     */\n    NoopMeter.prototype.createGauge = function (_name, _options) {\n        return NOOP_GAUGE_METRIC;\n    };\n    /**\n     * @see {@link Meter.createHistogram}\n     */\n    NoopMeter.prototype.createHistogram = function (_name, _options) {\n        return NOOP_HISTOGRAM_METRIC;\n    };\n    /**\n     * @see {@link Meter.createCounter}\n     */\n    NoopMeter.prototype.createCounter = function (_name, _options) {\n        return NOOP_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createUpDownCounter}\n     */\n    NoopMeter.prototype.createUpDownCounter = function (_name, _options) {\n        return NOOP_UP_DOWN_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableGauge}\n     */\n    NoopMeter.prototype.createObservableGauge = function (_name, _options) {\n        return NOOP_OBSERVABLE_GAUGE_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableCounter}\n     */\n    NoopMeter.prototype.createObservableCounter = function (_name, _options) {\n        return NOOP_OBSERVABLE_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableUpDownCounter}\n     */\n    NoopMeter.prototype.createObservableUpDownCounter = function (_name, _options) {\n        return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.addBatchObservableCallback}\n     */\n    NoopMeter.prototype.addBatchObservableCallback = function (_callback, _observables) { };\n    /**\n     * @see {@link Meter.removeBatchObservableCallback}\n     */\n    NoopMeter.prototype.removeBatchObservableCallback = function (_callback) { };\n    return NoopMeter;\n}());\nexport { NoopMeter };\nvar NoopMetric = /** @class */ (function () {\n    function NoopMetric() {\n    }\n    return NoopMetric;\n}());\nexport { NoopMetric };\nvar NoopCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopCounterMetric, _super);\n    function NoopCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopCounterMetric;\n}(NoopMetric));\nexport { NoopCounterMetric };\nvar NoopUpDownCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopUpDownCounterMetric, _super);\n    function NoopUpDownCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopUpDownCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopUpDownCounterMetric;\n}(NoopMetric));\nexport { NoopUpDownCounterMetric };\nvar NoopGaugeMetric = /** @class */ (function (_super) {\n    __extends(NoopGaugeMetric, _super);\n    function NoopGaugeMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopGaugeMetric.prototype.record = function (_value, _attributes) { };\n    return NoopGaugeMetric;\n}(NoopMetric));\nexport { NoopGaugeMetric };\nvar NoopHistogramMetric = /** @class */ (function (_super) {\n    __extends(NoopHistogramMetric, _super);\n    function NoopHistogramMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopHistogramMetric.prototype.record = function (_value, _attributes) { };\n    return NoopHistogramMetric;\n}(NoopMetric));\nexport { NoopHistogramMetric };\nvar NoopObservableMetric = /** @class */ (function () {\n    function NoopObservableMetric() {\n    }\n    NoopObservableMetric.prototype.addCallback = function (_callback) { };\n    NoopObservableMetric.prototype.removeCallback = function (_callback) { };\n    return NoopObservableMetric;\n}());\nexport { NoopObservableMetric };\nvar NoopObservableCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableCounterMetric, _super);\n    function NoopObservableCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableCounterMetric;\n}(NoopObservableMetric));\nexport { NoopObservableCounterMetric };\nvar NoopObservableGaugeMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableGaugeMetric, _super);\n    function NoopObservableGaugeMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableGaugeMetric;\n}(NoopObservableMetric));\nexport { NoopObservableGaugeMetric };\nvar NoopObservableUpDownCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableUpDownCounterMetric, _super);\n    function NoopObservableUpDownCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableUpDownCounterMetric;\n}(NoopObservableMetric));\nexport { NoopObservableUpDownCounterMetric };\nexport var NOOP_METER = new NoopMeter();\n// Synchronous instruments\nexport var NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport var NOOP_GAUGE_METRIC = new NoopGaugeMetric();\nexport var NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport var NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n// Asynchronous instruments\nexport var NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport var NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport var NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric();\n/**\n * Create a no-op Meter\n */\nexport function createNoopMeter() {\n    return NOOP_METER;\n}\n//# sourceMappingURL=NoopMeter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Type of value. It describes how the data is reported. */\nexport var ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"INT\"] = 0] = \"INT\";\n    ValueType[ValueType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n})(ValueType || (ValueType = {}));\n//# sourceMappingURL=Metric.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nexport var defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { ROOT_CONTEXT } from './context';\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return ROOT_CONTEXT;\n    };\n    NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return fn.call.apply(fn, __spreadArray([thisArg], __read(args), false));\n    };\n    NoopContextManager.prototype.bind = function (_context, target) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\nexport { NoopContextManager };\n//# sourceMappingURL=NoopContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager.\n     *\n     * @returns true if the context manager was successfully registered, else false\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    ContextAPI.prototype.with = function (context, fn, thisArg) {\n        var _a;\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return (_a = this._getContextManager()).with.apply(_a, __spreadArray([context, fn, thisArg], __read(args), false));\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     * @param target function or event emitter to bind\n     */\n    ContextAPI.prototype.bind = function (context, target) {\n        return this._getContextManager().bind(context, target);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    return ContextAPI;\n}());\nexport { ContextAPI };\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags || (TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TraceFlags } from './trace_flags';\nexport var INVALID_SPANID = '0000000000000000';\nexport var INVALID_TRACEID = '00000000000000000000000000000000';\nexport var INVALID_SPAN_CONTEXT = {\n    traceId: INVALID_TRACEID,\n    spanId: INVALID_SPANID,\n    traceFlags: TraceFlags.NONE,\n};\n//# sourceMappingURL=invalid-span-constants.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NonRecordingSpan = /** @class */ (function () {\n    function NonRecordingSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NonRecordingSpan.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    NonRecordingSpan.prototype.addLink = function (_link) {\n        return this;\n    };\n    NonRecordingSpan.prototype.addLinks = function (_links) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for NonRecordingSpan.\n    NonRecordingSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.recordException = function (_exception, _time) { };\n    return NonRecordingSpan;\n}());\nexport { NonRecordingSpan };\n//# sourceMappingURL=NonRecordingSpan.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '../context/context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n/**\n * span key\n */\nvar SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan() {\n    return getSpan(ContextAPI.getInstance().active());\n}\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context) {\n    return context.deleteValue(SPAN_KEY);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(context, spanContext) {\n    return setSpan(context, new NonRecordingSpan(spanContext));\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.spanContext();\n}\n//# sourceMappingURL=context-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nexport function isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\nexport function isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext) {\n    return new NonRecordingSpan(spanContext);\n}\n//# sourceMappingURL=spancontext-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { isSpanContextValid } from './spancontext-utils';\nvar contextApi = ContextAPI.getInstance();\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        if (context === void 0) { context = contextApi.active(); }\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return new NonRecordingSpan();\n        }\n        var parentFromContext = context && getSpanContext(context);\n        if (isSpanContext(parentFromContext) &&\n            isSpanContextValid(parentFromContext)) {\n            return new NonRecordingSpan(parentFromContext);\n        }\n        else {\n            return new NonRecordingSpan();\n        }\n    };\n    NoopTracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : contextApi.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = setSpan(parentContext, span);\n        return contextApi.with(contextWithSpanSet, fn, undefined, span);\n    };\n    return NoopTracer;\n}());\nexport { NoopTracer };\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\n//# sourceMappingURL=NoopTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\nvar NOOP_TRACER = new NoopTracer();\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version, options) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n        this.options = options;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    ProxyTracer.prototype.startActiveSpan = function (_name, _options, _context, _fn) {\n        var tracer = this._getTracer();\n        return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version, this.options);\n        if (!tracer) {\n            return NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\nexport { ProxyTracer };\n//# sourceMappingURL=ProxyTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version, _options) {\n        return new NoopTracer();\n    };\n    return NoopTracerProvider;\n}());\nexport { NoopTracerProvider };\n//# sourceMappingURL=NoopTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nvar NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version, options) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version, options)) !== null && _a !== void 0 ? _a : new ProxyTracer(this, name, version, options));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version, options) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version, options);\n    };\n    return ProxyTracerProvider;\n}());\nexport { ProxyTracerProvider };\n//# sourceMappingURL=ProxyTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map","/**\n * An enumeration of status codes.\n */\nexport var SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=status.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=tracestate-validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from './tracestate-validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceStateImpl = /** @class */ (function () {\n    function TraceStateImpl(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceStateImpl.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceStateImpl.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceStateImpl.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceStateImpl.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceStateImpl.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceStateImpl.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceStateImpl.prototype._clone = function () {\n        var traceState = new TraceStateImpl();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceStateImpl;\n}());\nexport { TraceStateImpl };\n//# sourceMappingURL=tracestate-impl.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TraceStateImpl } from './tracestate-impl';\nexport function createTraceState(rawTraceState) {\n    return new TraceStateImpl(rawTraceState);\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport var context = ContextAPI.getInstance();\n//# sourceMappingURL=context-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport var diag = DiagAPI.instance();\n//# sourceMappingURL=diag-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER } from './NoopMeter';\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */ (function () {\n    function NoopMeterProvider() {\n    }\n    NoopMeterProvider.prototype.getMeter = function (_name, _version, _options) {\n        return NOOP_METER;\n    };\n    return NoopMeterProvider;\n}());\nexport { NoopMeterProvider };\nexport var NOOP_METER_PROVIDER = new NoopMeterProvider();\n//# sourceMappingURL=NoopMeterProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER_PROVIDER } from '../metrics/NoopMeterProvider';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'metrics';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nvar MetricsAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function MetricsAPI() {\n    }\n    /** Get the singleton instance of the Metrics API */\n    MetricsAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new MetricsAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global meter provider.\n     * Returns true if the meter provider was successfully registered, else false.\n     */\n    MetricsAPI.prototype.setGlobalMeterProvider = function (provider) {\n        return registerGlobal(API_NAME, provider, DiagAPI.instance());\n    };\n    /**\n     * Returns the global meter provider.\n     */\n    MetricsAPI.prototype.getMeterProvider = function () {\n        return getGlobal(API_NAME) || NOOP_METER_PROVIDER;\n    };\n    /**\n     * Returns a meter from the global meter provider.\n     */\n    MetricsAPI.prototype.getMeter = function (name, version, options) {\n        return this.getMeterProvider().getMeter(name, version, options);\n    };\n    /** Remove the global meter provider */\n    MetricsAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    return MetricsAPI;\n}());\nexport { MetricsAPI };\n//# sourceMappingURL=metrics.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport var metrics = MetricsAPI.getInstance();\n//# sourceMappingURL=metrics-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\nexport { NoopTextMapPropagator };\n//# sourceMappingURL=NoopTextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { createContextKey } from '../context/context';\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\n/**\n * Retrieve the current baggage from the active/current context\n *\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getActiveBaggage() {\n    return getBaggage(ContextAPI.getInstance().active());\n}\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context) {\n    return context.deleteValue(BAGGAGE_KEY);\n}\n//# sourceMappingURL=context-helpers.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport { defaultTextMapGetter, defaultTextMapSetter, } from '../propagation/TextMapPropagator';\nimport { getBaggage, getActiveBaggage, setBaggage, deleteBaggage, } from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'propagation';\nvar NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n        this.createBaggage = createBaggage;\n        this.getBaggage = getBaggage;\n        this.getActiveBaggage = getActiveBaggage;\n        this.setBaggage = setBaggage;\n        this.deleteBaggage = deleteBaggage;\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator.\n     *\n     * @returns true if the propagator was successfully registered, else false\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = defaultTextMapSetter; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = defaultTextMapGetter; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n    };\n    return PropagationAPI;\n}());\nexport { PropagationAPI };\n//# sourceMappingURL=propagation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport var propagation = PropagationAPI.getInstance();\n//# sourceMappingURL=propagation-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport { isSpanContextValid, wrapSpanContext, } from '../trace/spancontext-utils';\nimport { deleteSpan, getActiveSpan, getSpan, getSpanContext, setSpan, setSpanContext, } from '../trace/context-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new ProxyTracerProvider();\n        this.wrapSpanContext = wrapSpanContext;\n        this.isSpanContextValid = isSpanContextValid;\n        this.deleteSpan = deleteSpan;\n        this.getSpan = getSpan;\n        this.getActiveSpan = getActiveSpan;\n        this.getSpanContext = getSpanContext;\n        this.setSpan = setSpan;\n        this.setSpanContext = setSpanContext;\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer.\n     *\n     * @returns true if the tracer provider was successfully registered, else false\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        var success = registerGlobal(API_NAME, this._proxyTracerProvider, DiagAPI.instance());\n        if (success) {\n            this._proxyTracerProvider.setDelegate(provider);\n        }\n        return success;\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        return getGlobal(API_NAME) || this._proxyTracerProvider;\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n        this._proxyTracerProvider = new ProxyTracerProvider();\n    };\n    return TraceAPI;\n}());\nexport { TraceAPI };\n//# sourceMappingURL=trace.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport var trace = TraceAPI.getInstance();\n//# sourceMappingURL=trace-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { baggageEntryMetadataFromString } from './baggage/utils';\n// Context APIs\nexport { createContextKey, ROOT_CONTEXT } from './context/context';\n// Diag APIs\nexport { DiagConsoleLogger } from './diag/consoleLogger';\nexport { DiagLogLevel, } from './diag/types';\n// Metrics APIs\nexport { createNoopMeter } from './metrics/NoopMeter';\nexport { ValueType, } from './metrics/Metric';\n// Propagation APIs\nexport { defaultTextMapGetter, defaultTextMapSetter, } from './propagation/TextMapPropagator';\nexport { ProxyTracer } from './trace/ProxyTracer';\nexport { ProxyTracerProvider } from './trace/ProxyTracerProvider';\nexport { SamplingDecision } from './trace/SamplingResult';\nexport { SpanKind } from './trace/span_kind';\nexport { SpanStatusCode } from './trace/status';\nexport { TraceFlags } from './trace/trace_flags';\nexport { createTraceState } from './trace/internal/utils';\nexport { isSpanContextValid, isValidTraceId, isValidSpanId, } from './trace/spancontext-utils';\nexport { INVALID_SPANID, INVALID_TRACEID, INVALID_SPAN_CONTEXT, } from './trace/invalid-span-constants';\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { context } from './context-api';\nimport { diag } from './diag-api';\nimport { metrics } from './metrics-api';\nimport { propagation } from './propagation-api';\nimport { trace } from './trace-api';\n// Named export.\nexport { context, diag, metrics, propagation, trace };\n// Default export.\nexport default {\n    context: context,\n    diag: diag,\n    metrics: metrics,\n    propagation: propagation,\n    trace: trace,\n};\n//# sourceMappingURL=index.js.map","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, safeSrc: src, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const r = new RegExp(`^${this.options.loose ? src[t.PRERELEASELOOSE] : src[t.PRERELEASE]}$`)\n        const match = `-${identifier}`.match(r)\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar NoopLogger = /** @class */ (function () {\n    function NoopLogger() {\n    }\n    NoopLogger.prototype.emit = function (_logRecord) { };\n    return NoopLogger;\n}());\nexport { NoopLogger };\nexport var NOOP_LOGGER = new NoopLogger();\n//# sourceMappingURL=NoopLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopLogger } from './NoopLogger';\nvar NoopLoggerProvider = /** @class */ (function () {\n    function NoopLoggerProvider() {\n    }\n    NoopLoggerProvider.prototype.getLogger = function (_name, _version, _options) {\n        return new NoopLogger();\n    };\n    return NoopLoggerProvider;\n}());\nexport { NoopLoggerProvider };\nexport var NOOP_LOGGER_PROVIDER = new NoopLoggerProvider();\n//# sourceMappingURL=NoopLoggerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_LOGGER } from './NoopLogger';\nvar ProxyLogger = /** @class */ (function () {\n    function ProxyLogger(_provider, name, version, options) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n        this.options = options;\n    }\n    /**\n     * Emit a log record. This method should only be used by log appenders.\n     *\n     * @param logRecord\n     */\n    ProxyLogger.prototype.emit = function (logRecord) {\n        this._getLogger().emit(logRecord);\n    };\n    /**\n     * Try to get a logger from the proxy logger provider.\n     * If the proxy logger provider has no delegate, return a noop logger.\n     */\n    ProxyLogger.prototype._getLogger = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var logger = this._provider.getDelegateLogger(this.name, this.version, this.options);\n        if (!logger) {\n            return NOOP_LOGGER;\n        }\n        this._delegate = logger;\n        return this._delegate;\n    };\n    return ProxyLogger;\n}());\nexport { ProxyLogger };\n//# sourceMappingURL=ProxyLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_LOGGER_PROVIDER } from './NoopLoggerProvider';\nimport { ProxyLogger } from './ProxyLogger';\nvar ProxyLoggerProvider = /** @class */ (function () {\n    function ProxyLoggerProvider() {\n    }\n    ProxyLoggerProvider.prototype.getLogger = function (name, version, options) {\n        var _a;\n        return ((_a = this.getDelegateLogger(name, version, options)) !== null && _a !== void 0 ? _a : new ProxyLogger(this, name, version, options));\n    };\n    ProxyLoggerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_LOGGER_PROVIDER;\n    };\n    /**\n     * Set the delegate logger provider\n     */\n    ProxyLoggerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyLoggerProvider.prototype.getDelegateLogger = function (name, version, options) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getLogger(name, version, options);\n    };\n    return ProxyLoggerProvider;\n}());\nexport { ProxyLoggerProvider };\n//# sourceMappingURL=ProxyLoggerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins\nexport var _globalThis = typeof globalThis === 'object' ? globalThis : global;\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nexport var GLOBAL_LOGS_API_KEY = Symbol.for('io.opentelemetry.js.api.logs');\nexport var _global = _globalThis;\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter(requiredVersion, instance, fallback) {\n    return function (version) {\n        return version === requiredVersion ? instance : fallback;\n    };\n}\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport var API_BACKWARDS_COMPATIBILITY_VERSION = 1;\n//# sourceMappingURL=global-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { API_BACKWARDS_COMPATIBILITY_VERSION, GLOBAL_LOGS_API_KEY, _global, makeGetter, } from '../internal/global-utils';\nimport { NOOP_LOGGER_PROVIDER } from '../NoopLoggerProvider';\nimport { ProxyLoggerProvider } from '../ProxyLoggerProvider';\nvar LogsAPI = /** @class */ (function () {\n    function LogsAPI() {\n        this._proxyLoggerProvider = new ProxyLoggerProvider();\n    }\n    LogsAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new LogsAPI();\n        }\n        return this._instance;\n    };\n    LogsAPI.prototype.setGlobalLoggerProvider = function (provider) {\n        if (_global[GLOBAL_LOGS_API_KEY]) {\n            return this.getLoggerProvider();\n        }\n        _global[GLOBAL_LOGS_API_KEY] = makeGetter(API_BACKWARDS_COMPATIBILITY_VERSION, provider, NOOP_LOGGER_PROVIDER);\n        this._proxyLoggerProvider.setDelegate(provider);\n        return provider;\n    };\n    /**\n     * Returns the global logger provider.\n     *\n     * @returns LoggerProvider\n     */\n    LogsAPI.prototype.getLoggerProvider = function () {\n        var _a, _b;\n        return ((_b = (_a = _global[GLOBAL_LOGS_API_KEY]) === null || _a === void 0 ? void 0 : _a.call(_global, API_BACKWARDS_COMPATIBILITY_VERSION)) !== null && _b !== void 0 ? _b : this._proxyLoggerProvider);\n    };\n    /**\n     * Returns a logger from the global logger provider.\n     *\n     * @returns Logger\n     */\n    LogsAPI.prototype.getLogger = function (name, version, options) {\n        return this.getLoggerProvider().getLogger(name, version, options);\n    };\n    /** Remove the global logger provider */\n    LogsAPI.prototype.disable = function () {\n        delete _global[GLOBAL_LOGS_API_KEY];\n        this._proxyLoggerProvider = new ProxyLoggerProvider();\n    };\n    return LogsAPI;\n}());\nexport { LogsAPI };\n//# sourceMappingURL=logs.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { SeverityNumber, } from './types/LogRecord';\nexport { NOOP_LOGGER, NoopLogger } from './NoopLogger';\nexport { NOOP_LOGGER_PROVIDER, NoopLoggerProvider } from './NoopLoggerProvider';\nexport { ProxyLogger } from './ProxyLogger';\nexport { ProxyLoggerProvider } from './ProxyLoggerProvider';\nimport { LogsAPI } from './api/logs';\nexport var logs = LogsAPI.getInstance();\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nexport function enableInstrumentations(instrumentations, tracerProvider, meterProvider, loggerProvider) {\n    for (var i = 0, j = instrumentations.length; i < j; i++) {\n        var instrumentation = instrumentations[i];\n        if (tracerProvider) {\n            instrumentation.setTracerProvider(tracerProvider);\n        }\n        if (meterProvider) {\n            instrumentation.setMeterProvider(meterProvider);\n        }\n        if (loggerProvider && instrumentation.setLoggerProvider) {\n            instrumentation.setLoggerProvider(loggerProvider);\n        }\n        // instrumentations have been already enabled during creation\n        // so enable only if user prevented that by setting enabled to false\n        // this is to prevent double enabling but when calling register all\n        // instrumentations should be now enabled\n        if (!instrumentation.getConfig().enabled) {\n            instrumentation.enable();\n        }\n    }\n}\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nexport function disableInstrumentations(instrumentations) {\n    instrumentations.forEach(function (instrumentation) { return instrumentation.disable(); });\n}\n//# sourceMappingURL=autoLoaderUtils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { trace, metrics } from '@opentelemetry/api';\nimport { logs } from '@opentelemetry/api-logs';\nimport { disableInstrumentations, enableInstrumentations, } from './autoLoaderUtils';\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nexport function registerInstrumentations(options) {\n    var _a, _b;\n    var tracerProvider = options.tracerProvider || trace.getTracerProvider();\n    var meterProvider = options.meterProvider || metrics.getMeterProvider();\n    var loggerProvider = options.loggerProvider || logs.getLoggerProvider();\n    var instrumentations = (_b = (_a = options.instrumentations) === null || _a === void 0 ? void 0 : _a.flat()) !== null && _b !== void 0 ? _b : [];\n    enableInstrumentations(instrumentations, tracerProvider, meterProvider, loggerProvider);\n    return function () {\n        disableInstrumentations(instrumentations);\n    };\n}\n//# sourceMappingURL=autoLoader.js.map","'use strict'\n\nfunction isFunction (funktion) {\n  return typeof funktion === 'function'\n}\n\n// Default to complaining loudly when things don't go according to plan.\nvar logger = console.error.bind(console)\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty (obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name)\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  })\n}\n\n// Keep initialization idempotent.\nfunction shimmer (options) {\n  if (options && options.logger) {\n    if (!isFunction(options.logger)) logger(\"new logger isn't a function, not replacing\")\n    else logger = options.logger\n  }\n}\n\nfunction wrap (nodule, name, wrapper) {\n  if (!nodule || !nodule[name]) {\n    logger('no original function ' + name + ' to wrap')\n    return\n  }\n\n  if (!wrapper) {\n    logger('no wrapper function')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!isFunction(nodule[name]) || !isFunction(wrapper)) {\n    logger('original object and wrapper must be functions')\n    return\n  }\n\n  var original = nodule[name]\n  var wrapped = wrapper(original, name)\n\n  defineProperty(wrapped, '__original', original)\n  defineProperty(wrapped, '__unwrap', function () {\n    if (nodule[name] === wrapped) defineProperty(nodule, name, original)\n  })\n  defineProperty(wrapped, '__wrapped', true)\n\n  defineProperty(nodule, name, wrapped)\n  return wrapped\n}\n\nfunction massWrap (nodules, names, wrapper) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to wrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      wrap(nodule, name, wrapper)\n    })\n  })\n}\n\nfunction unwrap (nodule, name) {\n  if (!nodule || !nodule[name]) {\n    logger('no function to unwrap.')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!nodule[name].__unwrap) {\n    logger('no original to unwrap to -- has ' + name + ' already been unwrapped?')\n  } else {\n    return nodule[name].__unwrap()\n  }\n}\n\nfunction massUnwrap (nodules, names) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to unwrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      unwrap(nodule, name)\n    })\n  })\n}\n\nshimmer.wrap = wrap\nshimmer.massWrap = massWrap\nshimmer.unwrap = unwrap\nshimmer.massUnwrap = massUnwrap\n\nmodule.exports = shimmer\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { diag, metrics, trace, } from '@opentelemetry/api';\nimport { logs } from '@opentelemetry/api-logs';\nimport * as shimmer from 'shimmer';\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nvar InstrumentationAbstract = /** @class */ (function () {\n    function InstrumentationAbstract(instrumentationName, instrumentationVersion, config) {\n        this.instrumentationName = instrumentationName;\n        this.instrumentationVersion = instrumentationVersion;\n        this._config = {};\n        /* Api to wrap instrumented method */\n        this._wrap = shimmer.wrap;\n        /* Api to unwrap instrumented methods */\n        this._unwrap = shimmer.unwrap;\n        /* Api to mass wrap instrumented method */\n        this._massWrap = shimmer.massWrap;\n        /* Api to mass unwrap instrumented methods */\n        this._massUnwrap = shimmer.massUnwrap;\n        this.setConfig(config);\n        this._diag = diag.createComponentLogger({\n            namespace: instrumentationName,\n        });\n        this._tracer = trace.getTracer(instrumentationName, instrumentationVersion);\n        this._meter = metrics.getMeter(instrumentationName, instrumentationVersion);\n        this._logger = logs.getLogger(instrumentationName, instrumentationVersion);\n        this._updateMetricInstruments();\n    }\n    Object.defineProperty(InstrumentationAbstract.prototype, \"meter\", {\n        /* Returns meter */\n        get: function () {\n            return this._meter;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Sets MeterProvider to this plugin\n     * @param meterProvider\n     */\n    InstrumentationAbstract.prototype.setMeterProvider = function (meterProvider) {\n        this._meter = meterProvider.getMeter(this.instrumentationName, this.instrumentationVersion);\n        this._updateMetricInstruments();\n    };\n    Object.defineProperty(InstrumentationAbstract.prototype, \"logger\", {\n        /* Returns logger */\n        get: function () {\n            return this._logger;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Sets LoggerProvider to this plugin\n     * @param loggerProvider\n     */\n    InstrumentationAbstract.prototype.setLoggerProvider = function (loggerProvider) {\n        this._logger = loggerProvider.getLogger(this.instrumentationName, this.instrumentationVersion);\n    };\n    /**\n     * @experimental\n     *\n     * Get module definitions defined by {@link init}.\n     * This can be used for experimental compile-time instrumentation.\n     *\n     * @returns an array of {@link InstrumentationModuleDefinition}\n     */\n    InstrumentationAbstract.prototype.getModuleDefinitions = function () {\n        var _a;\n        var initResult = (_a = this.init()) !== null && _a !== void 0 ? _a : [];\n        if (!Array.isArray(initResult)) {\n            return [initResult];\n        }\n        return initResult;\n    };\n    /**\n     * Sets the new metric instruments with the current Meter.\n     */\n    InstrumentationAbstract.prototype._updateMetricInstruments = function () {\n        return;\n    };\n    /* Returns InstrumentationConfig */\n    InstrumentationAbstract.prototype.getConfig = function () {\n        return this._config;\n    };\n    /**\n     * Sets InstrumentationConfig to this plugin\n     * @param config\n     */\n    InstrumentationAbstract.prototype.setConfig = function (config) {\n        // copy config first level properties to ensure they are immutable.\n        // nested properties are not copied, thus are mutable from the outside.\n        this._config = __assign({ enabled: true }, config);\n    };\n    /**\n     * Sets TraceProvider to this plugin\n     * @param tracerProvider\n     */\n    InstrumentationAbstract.prototype.setTracerProvider = function (tracerProvider) {\n        this._tracer = tracerProvider.getTracer(this.instrumentationName, this.instrumentationVersion);\n    };\n    Object.defineProperty(InstrumentationAbstract.prototype, \"tracer\", {\n        /* Returns tracer */\n        get: function () {\n            return this._tracer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Execute span customization hook, if configured, and log any errors.\n     * Any semantics of the trigger and info are defined by the specific instrumentation.\n     * @param hookHandler The optional hook handler which the user has configured via instrumentation config\n     * @param triggerName The name of the trigger for executing the hook for logging purposes\n     * @param span The span to which the hook should be applied\n     * @param info The info object to be passed to the hook, with useful data the hook may use\n     */\n    InstrumentationAbstract.prototype._runSpanCustomizationHook = function (hookHandler, triggerName, span, info) {\n        if (!hookHandler) {\n            return;\n        }\n        try {\n            hookHandler(span, info);\n        }\n        catch (e) {\n            this._diag.error(\"Error running span customization hook due to exception in handler\", { triggerName: triggerName }, e);\n        }\n    };\n    return InstrumentationAbstract;\n}());\nexport { InstrumentationAbstract };\n//# sourceMappingURL=instrumentation.js.map","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(' ', ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","'use strict'\n\nvar path = require('path')\n\nmodule.exports = function (file) {\n  var segments = file.split(path.sep)\n  var index = segments.lastIndexOf('node_modules')\n  if (index === -1) return\n  if (!segments[index + 1]) return\n  var scoped = segments[index + 1][0] === '@'\n  var name = scoped ? segments[index + 1] + '/' + segments[index + 2] : segments[index + 1]\n  var offset = scoped ? 3 : 2\n  return {\n    name: name,\n    basedir: segments.slice(0, index + offset).join(path.sep),\n    path: segments.slice(index + offset).join(path.sep)\n  }\n}\n","'use strict';\n\nvar os = require('os');\n\n// adapted from https://github.com/sindresorhus/os-homedir/blob/11e089f4754db38bb535e5a8416320c4446e8cfd/index.js\n\nmodule.exports = os.homedir || function homedir() {\n    var home = process.env.HOME;\n    var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n\n    if (process.platform === 'win32') {\n        return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;\n    }\n\n    if (process.platform === 'darwin') {\n        return home || (user ? '/Users/' + user : null);\n    }\n\n    if (process.platform === 'linux') {\n        return home || (process.getuid() === 0 ? '/root' : (user ? '/home/' + user : null)); // eslint-disable-line no-extra-parens\n    }\n\n    return home || null;\n};\n","module.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n","'use strict';\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into into [dir, root, basename, name, ext]\nvar splitWindowsRe =\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\n\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  return splitWindowsRe.exec(filename).slice(1);\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[1],\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3]\n  };\n};\n\n\n\n// Split a filename into [dir, root, basename, name, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3],\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n","var path = require('path');\nvar parse = path.parse || require('path-parse'); // eslint-disable-line global-require\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n","module.exports = function (x, opts) {\n    /**\n     * This file is purposefully a passthrough. It's expected that third-party\n     * environments will override it at runtime in order to inject special logic\n     * into `resolve` (by manipulating the options). One such example is the PnP\n     * code path in Yarn.\n     */\n\n    return opts || {};\n};\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","'use strict';\n\nvar hasOwn = require('hasown');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn hasOwn(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n","var fs = require('fs');\nvar getHomedir = require('./homedir');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\nvar isCore = require('is-core-module');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultRealpath = function realpath(x, cb) {\n    realpathFS(x, function (realpathErr, realPath) {\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\n        else cb(null, realpathErr ? x : realPath);\n    });\n};\n\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n    if (opts && opts.preserveSymlinks === false) {\n        realpath(x, cb);\n    } else {\n        cb(null, x);\n    }\n};\n\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\n    readFile(pkgfile, function (readFileErr, body) {\n        if (readFileErr) cb(readFileErr);\n        else {\n            try {\n                var pkg = JSON.parse(body);\n                cb(null, pkg);\n            } catch (jsonErr) {\n                cb(null);\n            }\n        }\n    });\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n    var realpath = opts.realpath || defaultRealpath;\n    var readPackage = opts.readPackage || defaultReadPackage;\n    if (opts.readFile && opts.readPackage) {\n        var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\n        return process.nextTick(function () {\n            cb(conflictErr);\n        });\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    maybeRealpath(\n        realpath,\n        absoluteStart,\n        opts,\n        function (err, realStart) {\n            if (err) cb(err);\n            else init(realStart);\n        }\n    );\n\n    var res;\n    function init(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else if (includeCoreModules && isCore(x)) {\n            return cb(null, x);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) {\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realN, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) {\n                maybeRealpath(realpath, d, opts, function (err, realD) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realD, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                // on err, ex is false\n                if (!ex) return loadpkg(path.dirname(dir), cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n                    cb(null, pkg, dir);\n                });\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return cb(unwrapErr);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                if (err) return cb(err);\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) return cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return cb(mainError);\n                        }\n                        if (pkg.main === '.' || pkg.main === './') {\n                            pkg.main = 'index';\n                        }\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                            if (err) return cb(err);\n                            if (m) return cb(null, m, pkg);\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                            var dir = path.resolve(x, pkg.main);\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                                if (err) return cb(err);\n                                if (n) return cb(null, n, pkg);\n                                loadAsFile(path.join(x, 'index'), pkg, cb);\n                            });\n                        });\n                        return;\n                    }\n\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\n                });\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(path.dirname(dir), isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            loadAsFile(dir, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(dir, opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        processDirs(\n            cb,\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\n        );\n    }\n};\n","'use strict';\n\nvar isCoreModule = require('is-core-module');\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = isCoreModule(mod);\n    }\n}\nmodule.exports = core;\n","var isCoreModule = require('is-core-module');\n\nmodule.exports = function isCore(x) {\n    return isCoreModule(x);\n};\n","var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar getHomedir = require('./homedir');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && (stat.isFile() || stat.isFIFO());\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    var body = readFileSync(pkgfile);\n    try {\n        var pkg = JSON.parse(body);\n        return pkg;\n    } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg = readPackageSync(readFileSync, pkgfile);\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n","var async = require('./lib/async');\nasync.core = require('./lib/core');\nasync.isCore = require('./lib/is-core');\nasync.sync = require('./lib/sync');\n\nmodule.exports = async;\n","'use strict'\n\nconst path = require('path')\nconst Module = require('module')\nconst debug = require('debug')('require-in-the-middle')\nconst moduleDetailsFromPath = require('module-details-from-path')\n\n// Using the default export is discouraged, but kept for backward compatibility.\n// Use this instead:\n//    const { Hook } = require('require-in-the-middle')\nmodule.exports = Hook\nmodule.exports.Hook = Hook\n\nlet builtinModules // Set<string>\n\n/**\n * Is the given module a \"core\" module?\n * https://nodejs.org/api/modules.html#core-modules\n *\n * @type {(moduleName: string) => boolean}\n */\nlet isCore\nif (Module.isBuiltin) { // Added in node v18.6.0, v16.17.0\n  isCore = Module.isBuiltin\n} else if (Module.builtinModules) { // Added in node v9.3.0, v8.10.0, v6.13.0\n  isCore = moduleName => {\n    if (moduleName.startsWith('node:')) {\n      return true\n    }\n\n    if (builtinModules === undefined) {\n      builtinModules = new Set(Module.builtinModules)\n    }\n\n    return builtinModules.has(moduleName)\n  }\n} else {\n  const _resolve = require('resolve')\n  const [major, minor] = process.versions.node.split('.').map(Number)\n  if (major === 8 && minor < 8) {\n    // For node versions `[8.0, 8.8)` the \"http2\" module was built-in but\n    // behind the `--expose-http2` flag. `resolve` only considers unflagged\n    // modules to be core: https://github.com/browserify/resolve/issues/139\n    // However, for `ExportsCache` to work for \"http2\" we need it to be\n    // considered core.\n    isCore = moduleName => {\n      if (moduleName === 'http2') {\n        return true\n      }\n      // Prefer `resolve.core` lookup to `resolve.isCore(moduleName)` because\n      // the latter is doing version range matches for every call.\n      return !!_resolve.core[moduleName]\n    }\n  } else {\n    isCore = moduleName => {\n      // Prefer `resolve.core` lookup to `resolve.isCore(moduleName)` because\n      // the latter is doing version range matches for every call.\n      return !!_resolve.core[moduleName]\n    }\n  }\n}\n\nlet _resolve\n\nfunction resolve (moduleName, basedir) {\n  // Feature detection: This property was added in Node.js 8.9.0, the same time\n  // as the `paths` options argument was added to the `require.resolve` function,\n  // which is the one we want\n  if (!_resolve) {\n    // require.resolve might be undefined when using Node SEA mode:\n    // https://nodejs.org/api/single-executable-applications.html\n    // Also see https://github.com/nodejs/require-in-the-middle/issues/105\n    if (require.resolve && require.resolve.paths) {\n      _resolve = function (moduleName, basedir) {\n        return require.resolve(moduleName, { paths: [basedir] })\n      }\n    } else {\n      const resolve = require('resolve')\n      _resolve = function (moduleName, basedir) {\n        return resolve.sync(moduleName, { basedir })\n      }\n    }\n  }\n\n  return _resolve(moduleName, basedir)\n}\n\n// 'foo/bar.js' or 'foo/bar/index.js' => 'foo/bar'\nconst normalize = /([/\\\\]index)?(\\.js)?$/\n\n// Cache `onrequire`-patched exports for modules.\n//\n// Exports for built-in (a.k.a. \"core\") modules are stored in an internal Map.\n//\n// Exports for non-core modules are stored on a private field on the `Module`\n// object in `require.cache`. This allows users to delete from `require.cache`\n// to trigger a re-load (and re-run of the hook's `onrequire`) of a module the\n// next time it is required.\n// https://nodejs.org/docs/latest/api/all.html#all_modules_requirecache\n//\n// In some special cases -- e.g. some other `require()` hook swapping out\n// `Module._cache` like `@babel/register` -- a non-core module won't be in\n// `require.cache`. In that case this falls back to caching on the internal Map.\nclass ExportsCache {\n  constructor () {\n    this._localCache = new Map() // <module filename or id> -> <exports>\n    this._kRitmExports = Symbol('RitmExports')\n  }\n\n  has (filename, isBuiltin) {\n    if (this._localCache.has(filename)) {\n      return true\n    } else if (!isBuiltin) {\n      const mod = require.cache[filename]\n      return !!(mod && this._kRitmExports in mod)\n    } else {\n      return false\n    }\n  }\n\n  get (filename, isBuiltin) {\n    const cachedExports = this._localCache.get(filename)\n    if (cachedExports !== undefined) {\n      return cachedExports\n    } else if (!isBuiltin) {\n      const mod = require.cache[filename]\n      return (mod && mod[this._kRitmExports])\n    }\n  }\n\n  set (filename, exports, isBuiltin) {\n    if (isBuiltin) {\n      this._localCache.set(filename, exports)\n    } else if (filename in require.cache) {\n      require.cache[filename][this._kRitmExports] = exports\n    } else {\n      debug('non-core module is unexpectedly not in require.cache: \"%s\"', filename)\n      this._localCache.set(filename, exports)\n    }\n  }\n}\n\nfunction Hook (modules, options, onrequire) {\n  if ((this instanceof Hook) === false) return new Hook(modules, options, onrequire)\n  if (typeof modules === 'function') {\n    onrequire = modules\n    modules = null\n    options = null\n  } else if (typeof options === 'function') {\n    onrequire = options\n    options = null\n  }\n\n  if (typeof Module._resolveFilename !== 'function') {\n    console.error('Error: Expected Module._resolveFilename to be a function (was: %s) - aborting!', typeof Module._resolveFilename)\n    console.error('Please report this error as an issue related to Node.js %s at %s', process.version, require('./package.json').bugs.url)\n    return\n  }\n\n  this._cache = new ExportsCache()\n\n  this._unhooked = false\n  this._origRequire = Module.prototype.require\n\n  const self = this\n  const patching = new Set()\n  const internals = options ? options.internals === true : false\n  const hasWhitelist = Array.isArray(modules)\n\n  debug('registering require hook')\n\n  this._require = Module.prototype.require = function (id) {\n    if (self._unhooked === true) {\n      // if the patched require function could not be removed because\n      // someone else patched it after it was patched here, we just\n      // abort and pass the request onwards to the original require\n      debug('ignoring require call - module is soft-unhooked')\n      return self._origRequire.apply(this, arguments)\n    }\n\n    return patchedRequire.call(this, arguments, false)\n  }\n\n  if (typeof process.getBuiltinModule === 'function') {\n    this._origGetBuiltinModule = process.getBuiltinModule\n    this._getBuiltinModule = process.getBuiltinModule = function (id) {\n      if (self._unhooked === true) {\n        // if the patched process.getBuiltinModule function could not be removed because\n        // someone else patched it after it was patched here, we just abort and pass the\n        // request onwards to the original process.getBuiltinModule\n        debug('ignoring process.getBuiltinModule call - module is soft-unhooked')\n        return self._origGetBuiltinModule.apply(this, arguments)\n      }\n\n      return patchedRequire.call(this, arguments, true)\n    }\n  }\n\n  // Preserve the original require/process.getBuiltinModule arguments in `args`\n  function patchedRequire (args, coreOnly) {\n    const id = args[0]\n    const core = isCore(id)\n    let filename // the string used for caching\n    if (core) {\n      filename = id\n      // If this is a builtin module that can be identified both as 'foo' and\n      // 'node:foo', then prefer 'foo' as the caching key.\n      if (id.startsWith('node:')) {\n        const idWithoutPrefix = id.slice(5)\n        if (isCore(idWithoutPrefix)) {\n          filename = idWithoutPrefix\n        }\n      }\n    } else if (coreOnly) {\n      // `coreOnly` is `true` if this was a call to `process.getBuiltinModule`, in which case\n      // we don't want to return anything if the requested `id` isn't a core module. Falling\n      // back to default behaviour, which at the time of this wrting is simply returning `undefined`\n      debug('call to process.getBuiltinModule with unknown built-in id')\n      return self._origGetBuiltinModule.apply(this, args)\n    } else {\n      try {\n        filename = Module._resolveFilename(id, this)\n      } catch (resolveErr) {\n        // If someone *else* monkey-patches before this monkey-patch, then that\n        // code might expect `require(someId)` to get through so it can be\n        // handled, even if `someId` cannot be resolved to a filename. In this\n        // case, instead of throwing we defer to the underlying `require`.\n        //\n        // For example the Azure Functions Node.js worker module does this,\n        // where `@azure/functions-core` resolves to an internal object.\n        // https://github.com/Azure/azure-functions-nodejs-worker/blob/v3.5.2/src/setupCoreModule.ts#L46-L54\n        debug('Module._resolveFilename(\"%s\") threw %j, calling original Module.require', id, resolveErr.message)\n        return self._origRequire.apply(this, args)\n      }\n    }\n\n    let moduleName, basedir\n\n    debug('processing %s module require(\\'%s\\'): %s', core === true ? 'core' : 'non-core', id, filename)\n\n    // return known patched modules immediately\n    if (self._cache.has(filename, core) === true) {\n      debug('returning already patched cached module: %s', filename)\n      return self._cache.get(filename, core)\n    }\n\n    // Check if this module has a patcher in-progress already.\n    // Otherwise, mark this module as patching in-progress.\n    const isPatching = patching.has(filename)\n    if (isPatching === false) {\n      patching.add(filename)\n    }\n\n    const exports = coreOnly\n      ? self._origGetBuiltinModule.apply(this, args)\n      : self._origRequire.apply(this, args)\n\n    // If it's already patched, just return it as-is.\n    if (isPatching === true) {\n      debug('module is in the process of being patched already - ignoring: %s', filename)\n      return exports\n    }\n\n    // The module has already been loaded,\n    // so the patching mark can be cleaned up.\n    patching.delete(filename)\n\n    if (core === true) {\n      if (hasWhitelist === true && modules.includes(filename) === false) {\n        debug('ignoring core module not on whitelist: %s', filename)\n        return exports // abort if module name isn't on whitelist\n      }\n      moduleName = filename\n    } else if (hasWhitelist === true && modules.includes(filename)) {\n      // whitelist includes the absolute path to the file including extension\n      const parsedPath = path.parse(filename)\n      moduleName = parsedPath.name\n      basedir = parsedPath.dir\n    } else {\n      const stat = moduleDetailsFromPath(filename)\n      if (stat === undefined) {\n        debug('could not parse filename: %s', filename)\n        return exports // abort if filename could not be parsed\n      }\n      moduleName = stat.name\n      basedir = stat.basedir\n\n      // Ex: require('foo/lib/../bar.js')\n      // moduleName = 'foo'\n      // fullModuleName = 'foo/bar'\n      const fullModuleName = resolveModuleName(stat)\n\n      debug('resolved filename to module: %s (id: %s, resolved: %s, basedir: %s)', moduleName, id, fullModuleName, basedir)\n\n      let matchFound = false\n      if (hasWhitelist) {\n        if (!id.startsWith('.') && modules.includes(id)) {\n          // Not starting with '.' means `id` is identifying a module path,\n          // as opposed to a local file path. (Note: I'm not sure about\n          // absolute paths, but those are handled above.)\n          // If this `id` is in `modules`, then this could be a match to an\n          // package \"exports\" entry point that wouldn't otherwise match below.\n          moduleName = id\n          matchFound = true\n        }\n\n        // abort if module name isn't on whitelist\n        if (!modules.includes(moduleName) && !modules.includes(fullModuleName)) {\n          return exports\n        }\n\n        if (modules.includes(fullModuleName) && fullModuleName !== moduleName) {\n          // if we get to this point, it means that we're requiring a whitelisted sub-module\n          moduleName = fullModuleName\n          matchFound = true\n        }\n      }\n\n      if (!matchFound) {\n        // figure out if this is the main module file, or a file inside the module\n        let res\n        try {\n          res = resolve(moduleName, basedir)\n        } catch (e) {\n          debug('could not resolve module: %s', moduleName)\n          self._cache.set(filename, exports, core)\n          return exports // abort if module could not be resolved (e.g. no main in package.json and no index.js file)\n        }\n\n        if (res !== filename) {\n          // this is a module-internal file\n          if (internals === true) {\n            // use the module-relative path to the file, prefixed by original module name\n            moduleName = moduleName + path.sep + path.relative(basedir, filename)\n            debug('preparing to process require of internal file: %s', moduleName)\n          } else {\n            debug('ignoring require of non-main module file: %s', res)\n            self._cache.set(filename, exports, core)\n            return exports // abort if not main module file\n          }\n        }\n      }\n    }\n\n    // ensure that the cache entry is assigned a value before calling\n    // onrequire, in case calling onrequire requires the same module.\n    self._cache.set(filename, exports, core)\n    debug('calling require hook: %s', moduleName)\n    const patchedExports = onrequire(exports, moduleName, basedir)\n    self._cache.set(filename, patchedExports, core)\n\n    debug('returning module: %s', moduleName)\n    return patchedExports\n  }\n}\n\nHook.prototype.unhook = function () {\n  this._unhooked = true\n\n  if (this._require === Module.prototype.require) {\n    Module.prototype.require = this._origRequire\n    debug('require unhook successful')\n  } else {\n    debug('require unhook unsuccessful')\n  }\n\n  if (process.getBuiltinModule !== undefined) {\n    if (this._getBuiltinModule === process.getBuiltinModule) {\n      process.getBuiltinModule = this._origGetBuiltinModule\n      debug('process.getBuiltinModule unhook successful')\n    } else {\n      debug('process.getBuiltinModule unhook unsuccessful')\n    }\n  }\n}\n\nfunction resolveModuleName (stat) {\n  const normalizedPath = path.sep !== '/' ? stat.path.split(path.sep).join('/') : stat.path\n  return path.posix.join(stat.name, normalizedPath).replace(normalize, '')\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nexport var ModuleNameSeparator = '/';\n/**\n * Node in a `ModuleNameTrie`\n */\nvar ModuleNameTrieNode = /** @class */ (function () {\n    function ModuleNameTrieNode() {\n        this.hooks = [];\n        this.children = new Map();\n    }\n    return ModuleNameTrieNode;\n}());\n/**\n * Trie containing nodes that represent a part of a module name (i.e. the parts separated by forward slash)\n */\nvar ModuleNameTrie = /** @class */ (function () {\n    function ModuleNameTrie() {\n        this._trie = new ModuleNameTrieNode();\n        this._counter = 0;\n    }\n    /**\n     * Insert a module hook into the trie\n     *\n     * @param {Hooked} hook Hook\n     */\n    ModuleNameTrie.prototype.insert = function (hook) {\n        var e_1, _a;\n        var trieNode = this._trie;\n        try {\n            for (var _b = __values(hook.moduleName.split(ModuleNameSeparator)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var moduleNamePart = _c.value;\n                var nextNode = trieNode.children.get(moduleNamePart);\n                if (!nextNode) {\n                    nextNode = new ModuleNameTrieNode();\n                    trieNode.children.set(moduleNamePart, nextNode);\n                }\n                trieNode = nextNode;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        trieNode.hooks.push({ hook: hook, insertedId: this._counter++ });\n    };\n    /**\n     * Search for matching hooks in the trie\n     *\n     * @param {string} moduleName Module name\n     * @param {boolean} maintainInsertionOrder Whether to return the results in insertion order\n     * @param {boolean} fullOnly Whether to return only full matches\n     * @returns {Hooked[]} Matching hooks\n     */\n    ModuleNameTrie.prototype.search = function (moduleName, _a) {\n        var e_2, _b;\n        var _c = _a === void 0 ? {} : _a, maintainInsertionOrder = _c.maintainInsertionOrder, fullOnly = _c.fullOnly;\n        var trieNode = this._trie;\n        var results = [];\n        var foundFull = true;\n        try {\n            for (var _d = __values(moduleName.split(ModuleNameSeparator)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var moduleNamePart = _e.value;\n                var nextNode = trieNode.children.get(moduleNamePart);\n                if (!nextNode) {\n                    foundFull = false;\n                    break;\n                }\n                if (!fullOnly) {\n                    results.push.apply(results, __spreadArray([], __read(nextNode.hooks), false));\n                }\n                trieNode = nextNode;\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        if (fullOnly && foundFull) {\n            results.push.apply(results, __spreadArray([], __read(trieNode.hooks), false));\n        }\n        if (results.length === 0) {\n            return [];\n        }\n        if (results.length === 1) {\n            return [results[0].hook];\n        }\n        if (maintainInsertionOrder) {\n            results.sort(function (a, b) { return a.insertedId - b.insertedId; });\n        }\n        return results.map(function (_a) {\n            var hook = _a.hook;\n            return hook;\n        });\n    };\n    return ModuleNameTrie;\n}());\nexport { ModuleNameTrie };\n//# sourceMappingURL=ModuleNameTrie.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { Hook } from 'require-in-the-middle';\nimport * as path from 'path';\nimport { ModuleNameTrie, ModuleNameSeparator } from './ModuleNameTrie';\n/**\n * Whether Mocha is running in this process\n * Inspired by https://github.com/AndreasPizsa/detect-mocha\n *\n * @type {boolean}\n */\nvar isMocha = [\n    'afterEach',\n    'after',\n    'beforeEach',\n    'before',\n    'describe',\n    'it',\n].every(function (fn) {\n    // @ts-expect-error TS7053: Element implicitly has an 'any' type\n    return typeof global[fn] === 'function';\n});\n/**\n * Singleton class for `require-in-the-middle`\n * Allows instrumentation plugins to patch modules with only a single `require` patch\n * WARNING: Because this class will create its own `require-in-the-middle` (RITM) instance,\n * we should minimize the number of new instances of this class.\n * Multiple instances of `@opentelemetry/instrumentation` (e.g. multiple versions) in a single process\n * will result in multiple instances of RITM, which will have an impact\n * on the performance of instrumentation hooks being applied.\n */\nvar RequireInTheMiddleSingleton = /** @class */ (function () {\n    function RequireInTheMiddleSingleton() {\n        this._moduleNameTrie = new ModuleNameTrie();\n        this._initialize();\n    }\n    RequireInTheMiddleSingleton.prototype._initialize = function () {\n        var _this = this;\n        new Hook(\n        // Intercept all `require` calls; we will filter the matching ones below\n        null, { internals: true }, function (exports, name, basedir) {\n            var e_1, _a;\n            // For internal files on Windows, `name` will use backslash as the path separator\n            var normalizedModuleName = normalizePathSeparators(name);\n            var matches = _this._moduleNameTrie.search(normalizedModuleName, {\n                maintainInsertionOrder: true,\n                // For core modules (e.g. `fs`), do not match on sub-paths (e.g. `fs/promises').\n                // This matches the behavior of `require-in-the-middle`.\n                // `basedir` is always `undefined` for core modules.\n                fullOnly: basedir === undefined,\n            });\n            try {\n                for (var matches_1 = __values(matches), matches_1_1 = matches_1.next(); !matches_1_1.done; matches_1_1 = matches_1.next()) {\n                    var onRequire = matches_1_1.value.onRequire;\n                    exports = onRequire(exports, name, basedir);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (matches_1_1 && !matches_1_1.done && (_a = matches_1.return)) _a.call(matches_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return exports;\n        });\n    };\n    /**\n     * Register a hook with `require-in-the-middle`\n     *\n     * @param {string} moduleName Module name\n     * @param {OnRequireFn} onRequire Hook function\n     * @returns {Hooked} Registered hook\n     */\n    RequireInTheMiddleSingleton.prototype.register = function (moduleName, onRequire) {\n        var hooked = { moduleName: moduleName, onRequire: onRequire };\n        this._moduleNameTrie.insert(hooked);\n        return hooked;\n    };\n    /**\n     * Get the `RequireInTheMiddleSingleton` singleton\n     *\n     * @returns {RequireInTheMiddleSingleton} Singleton of `RequireInTheMiddleSingleton`\n     */\n    RequireInTheMiddleSingleton.getInstance = function () {\n        var _a;\n        // Mocha runs all test suites in the same process\n        // This prevents test suites from sharing a singleton\n        if (isMocha)\n            return new RequireInTheMiddleSingleton();\n        return (this._instance =\n            (_a = this._instance) !== null && _a !== void 0 ? _a : new RequireInTheMiddleSingleton());\n    };\n    return RequireInTheMiddleSingleton;\n}());\nexport { RequireInTheMiddleSingleton };\n/**\n * Normalize the path separators to forward slash in a module name or path\n *\n * @param {string} moduleNameOrPath Module name or path\n * @returns {string} Normalized module name or path\n */\nfunction normalizePathSeparators(moduleNameOrPath) {\n    return path.sep !== ModuleNameSeparator\n        ? moduleNameOrPath.split(path.sep).join(ModuleNameSeparator)\n        : moduleNameOrPath;\n}\n//# sourceMappingURL=RequireInTheMiddleSingleton.js.map","// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.\n//\n// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2021 Datadog, Inc.\n\nconst importHooks = [] // TODO should this be a Set?\nconst setters = new WeakMap()\nconst getters = new WeakMap()\nconst specifiers = new Map()\nconst toHook = []\n\nconst proxyHandler = {\n  set (target, name, value) {\n    return setters.get(target)[name](value)\n  },\n\n  get (target, name) {\n    if (name === Symbol.toStringTag) {\n      return 'Module'\n    }\n\n    const getter = getters.get(target)[name]\n\n    if (typeof getter === 'function') {\n      return getter()\n    }\n  },\n\n  defineProperty (target, property, descriptor) {\n    if ((!('value' in descriptor))) {\n      throw new Error('Getters/setters are not supported for exports property descriptors.')\n    }\n\n    return setters.get(target)[property](descriptor.value)\n  }\n}\n\nfunction register (name, namespace, set, get, specifier) {\n  specifiers.set(name, specifier)\n  setters.set(namespace, set)\n  getters.set(namespace, get)\n  const proxy = new Proxy(namespace, proxyHandler)\n  importHooks.forEach(hook => hook(name, proxy))\n  toHook.push([name, proxy])\n}\n\nexports.register = register\nexports.importHooks = importHooks\nexports.specifiers = specifiers\nexports.toHook = toHook\n","// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.\n//\n// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2021 Datadog, Inc.\n\nconst path = require('path')\nconst parse = require('module-details-from-path')\nconst { fileURLToPath } = require('url')\nconst { MessageChannel } = require('worker_threads')\n\nconst {\n  importHooks,\n  specifiers,\n  toHook\n} = require('./lib/register')\n\nfunction addHook (hook) {\n  importHooks.push(hook)\n  toHook.forEach(([name, namespace]) => hook(name, namespace))\n}\n\nfunction removeHook (hook) {\n  const index = importHooks.indexOf(hook)\n  if (index > -1) {\n    importHooks.splice(index, 1)\n  }\n}\n\nfunction callHookFn (hookFn, namespace, name, baseDir) {\n  const newDefault = hookFn(namespace, name, baseDir)\n  if (newDefault && newDefault !== namespace) {\n    namespace.default = newDefault\n  }\n}\n\nlet sendModulesToLoader\n\n/**\n * EXPERIMENTAL\n * This feature is experimental and may change in minor versions.\n * **NOTE** This feature is incompatible with the {internals: true} Hook option.\n *\n * Creates a message channel with a port that can be used to add hooks to the\n * list of exclusively included modules.\n *\n * This can be used to only wrap modules that are Hook'ed, however modules need\n * to be hooked before they are imported.\n *\n * ```ts\n * import { register } from 'module'\n * import { Hook, createAddHookMessageChannel } from 'import-in-the-middle'\n *\n * const { registerOptions, waitForAllMessagesAcknowledged } = createAddHookMessageChannel()\n *\n * register('import-in-the-middle/hook.mjs', import.meta.url, registerOptions)\n *\n * Hook(['fs'], (exported, name, baseDir) => {\n *   // Instrument the fs module\n * })\n *\n * // Ensure that the loader has acknowledged all the modules\n * // before we allow execution to continue\n * await waitForAllMessagesAcknowledged()\n * ```\n */\nfunction createAddHookMessageChannel () {\n  const { port1, port2 } = new MessageChannel()\n  let pendingAckCount = 0\n  let resolveFn\n\n  sendModulesToLoader = (modules) => {\n    pendingAckCount++\n    port1.postMessage(modules)\n  }\n\n  port1.on('message', () => {\n    pendingAckCount--\n\n    if (resolveFn && pendingAckCount <= 0) {\n      resolveFn()\n    }\n  }).unref()\n\n  function waitForAllMessagesAcknowledged () {\n    // This timer is to prevent the process from exiting with code 13:\n    // 13: Unsettled Top-Level Await.\n    const timer = setInterval(() => { }, 1000)\n    const promise = new Promise((resolve) => {\n      resolveFn = resolve\n    }).then(() => { clearInterval(timer) })\n\n    if (pendingAckCount === 0) {\n      resolveFn()\n    }\n\n    return promise\n  }\n\n  const addHookMessagePort = port2\n  const registerOptions = { data: { addHookMessagePort, include: [] }, transferList: [addHookMessagePort] }\n\n  return { registerOptions, addHookMessagePort, waitForAllMessagesAcknowledged }\n}\n\nfunction Hook (modules, options, hookFn) {\n  if ((this instanceof Hook) === false) return new Hook(modules, options, hookFn)\n  if (typeof modules === 'function') {\n    hookFn = modules\n    modules = null\n    options = null\n  } else if (typeof options === 'function') {\n    hookFn = options\n    options = null\n  }\n  const internals = options ? options.internals === true : false\n\n  if (sendModulesToLoader && Array.isArray(modules)) {\n    sendModulesToLoader(modules)\n  }\n\n  this._iitmHook = (name, namespace) => {\n    const filename = name\n    const isBuiltin = name.startsWith('node:')\n    let baseDir\n\n    if (isBuiltin) {\n      name = name.replace(/^node:/, '')\n    } else {\n      if (name.startsWith('file://')) {\n        try {\n          name = fileURLToPath(name)\n        } catch (e) {}\n      }\n      const details = parse(name)\n      if (details) {\n        name = details.name\n        baseDir = details.basedir\n      }\n    }\n\n    if (modules) {\n      for (const moduleName of modules) {\n        if (moduleName === name) {\n          if (baseDir) {\n            if (internals) {\n              name = name + path.sep + path.relative(baseDir, fileURLToPath(filename))\n            } else {\n              if (!baseDir.endsWith(specifiers.get(filename))) continue\n            }\n          }\n          callHookFn(hookFn, namespace, name, baseDir)\n        }\n      }\n    } else {\n      callHookFn(hookFn, namespace, name, baseDir)\n    }\n  }\n\n  addHook(this._iitmHook)\n}\n\nHook.prototype.unhook = function () {\n  removeHook(this._iitmHook)\n}\n\nmodule.exports = Hook\nmodule.exports.Hook = Hook\nmodule.exports.addHook = addHook\nmodule.exports.removeHook = removeHook\nmodule.exports.createAddHookMessageChannel = createAddHookMessageChannel\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddle(execute, onFinish, preventThrowingError) {\n    var error;\n    var result;\n    try {\n        result = execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddleAsync(execute, onFinish, preventThrowingError) {\n    return __awaiter(this, void 0, void 0, function () {\n        var error, result, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, 3, 4]);\n                    return [4 /*yield*/, execute()];\n                case 1:\n                    result = _a.sent();\n                    return [3 /*break*/, 4];\n                case 2:\n                    e_1 = _a.sent();\n                    error = e_1;\n                    return [3 /*break*/, 4];\n                case 3:\n                    onFinish(error, result);\n                    if (error && !preventThrowingError) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw error;\n                    }\n                    // eslint-disable-next-line no-unsafe-finally\n                    return [2 /*return*/, result];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport * as path from 'path';\nimport { types as utilTypes } from 'util';\nimport { satisfies } from 'semver';\nimport { wrap, unwrap } from 'shimmer';\nimport { InstrumentationAbstract } from '../../instrumentation';\nimport { RequireInTheMiddleSingleton, } from './RequireInTheMiddleSingleton';\nimport { Hook as HookImport } from 'import-in-the-middle';\nimport { diag } from '@opentelemetry/api';\nimport { Hook as HookRequire } from 'require-in-the-middle';\nimport { readFileSync } from 'fs';\nimport { isWrapped } from '../../utils';\n/**\n * Base abstract class for instrumenting node plugins\n */\nvar InstrumentationBase = /** @class */ (function (_super) {\n    __extends(InstrumentationBase, _super);\n    function InstrumentationBase(instrumentationName, instrumentationVersion, config) {\n        var _this = _super.call(this, instrumentationName, instrumentationVersion, config) || this;\n        _this._hooks = [];\n        _this._requireInTheMiddleSingleton = RequireInTheMiddleSingleton.getInstance();\n        _this._enabled = false;\n        _this._wrap = function (moduleExports, name, wrapper) {\n            if (isWrapped(moduleExports[name])) {\n                _this._unwrap(moduleExports, name);\n            }\n            if (!utilTypes.isProxy(moduleExports)) {\n                return wrap(moduleExports, name, wrapper);\n            }\n            else {\n                var wrapped = wrap(Object.assign({}, moduleExports), name, wrapper);\n                Object.defineProperty(moduleExports, name, {\n                    value: wrapped,\n                });\n                return wrapped;\n            }\n        };\n        _this._unwrap = function (moduleExports, name) {\n            if (!utilTypes.isProxy(moduleExports)) {\n                return unwrap(moduleExports, name);\n            }\n            else {\n                return Object.defineProperty(moduleExports, name, {\n                    value: moduleExports[name],\n                });\n            }\n        };\n        _this._massWrap = function (moduleExportsArray, names, wrapper) {\n            if (!moduleExportsArray) {\n                diag.error('must provide one or more modules to patch');\n                return;\n            }\n            else if (!Array.isArray(moduleExportsArray)) {\n                moduleExportsArray = [moduleExportsArray];\n            }\n            if (!(names && Array.isArray(names))) {\n                diag.error('must provide one or more functions to wrap on modules');\n                return;\n            }\n            moduleExportsArray.forEach(function (moduleExports) {\n                names.forEach(function (name) {\n                    _this._wrap(moduleExports, name, wrapper);\n                });\n            });\n        };\n        _this._massUnwrap = function (moduleExportsArray, names) {\n            if (!moduleExportsArray) {\n                diag.error('must provide one or more modules to patch');\n                return;\n            }\n            else if (!Array.isArray(moduleExportsArray)) {\n                moduleExportsArray = [moduleExportsArray];\n            }\n            if (!(names && Array.isArray(names))) {\n                diag.error('must provide one or more functions to wrap on modules');\n                return;\n            }\n            moduleExportsArray.forEach(function (moduleExports) {\n                names.forEach(function (name) {\n                    _this._unwrap(moduleExports, name);\n                });\n            });\n        };\n        var modules = _this.init();\n        if (modules && !Array.isArray(modules)) {\n            modules = [modules];\n        }\n        _this._modules = modules || [];\n        if (_this._config.enabled) {\n            _this.enable();\n        }\n        return _this;\n    }\n    InstrumentationBase.prototype._warnOnPreloadedModules = function () {\n        var _this = this;\n        this._modules.forEach(function (module) {\n            var name = module.name;\n            try {\n                var resolvedModule = require.resolve(name);\n                if (require.cache[resolvedModule]) {\n                    // Module is already cached, which means the instrumentation hook might not work\n                    _this._diag.warn(\"Module \" + name + \" has been loaded before \" + _this.instrumentationName + \" so it might not work, please initialize it before requiring \" + name);\n                }\n            }\n            catch (_a) {\n                // Module isn't available, we can simply skip\n            }\n        });\n    };\n    InstrumentationBase.prototype._extractPackageVersion = function (baseDir) {\n        try {\n            var json = readFileSync(path.join(baseDir, 'package.json'), {\n                encoding: 'utf8',\n            });\n            var version = JSON.parse(json).version;\n            return typeof version === 'string' ? version : undefined;\n        }\n        catch (error) {\n            diag.warn('Failed extracting version', baseDir);\n        }\n        return undefined;\n    };\n    InstrumentationBase.prototype._onRequire = function (module, exports, name, baseDir) {\n        var _this = this;\n        var _a;\n        if (!baseDir) {\n            if (typeof module.patch === 'function') {\n                module.moduleExports = exports;\n                if (this._enabled) {\n                    this._diag.debug('Applying instrumentation patch for nodejs core module on require hook', {\n                        module: module.name,\n                    });\n                    return module.patch(exports);\n                }\n            }\n            return exports;\n        }\n        var version = this._extractPackageVersion(baseDir);\n        module.moduleVersion = version;\n        if (module.name === name) {\n            // main module\n            if (isSupported(module.supportedVersions, version, module.includePrerelease)) {\n                if (typeof module.patch === 'function') {\n                    module.moduleExports = exports;\n                    if (this._enabled) {\n                        this._diag.debug('Applying instrumentation patch for module on require hook', {\n                            module: module.name,\n                            version: module.moduleVersion,\n                            baseDir: baseDir,\n                        });\n                        return module.patch(exports, module.moduleVersion);\n                    }\n                }\n            }\n            return exports;\n        }\n        // internal file\n        var files = (_a = module.files) !== null && _a !== void 0 ? _a : [];\n        var normalizedName = path.normalize(name);\n        var supportedFileInstrumentations = files\n            .filter(function (f) { return f.name === normalizedName; })\n            .filter(function (f) {\n            return isSupported(f.supportedVersions, version, module.includePrerelease);\n        });\n        return supportedFileInstrumentations.reduce(function (patchedExports, file) {\n            file.moduleExports = patchedExports;\n            if (_this._enabled) {\n                _this._diag.debug('Applying instrumentation patch for nodejs module file on require hook', {\n                    module: module.name,\n                    version: module.moduleVersion,\n                    fileName: file.name,\n                    baseDir: baseDir,\n                });\n                // patch signature is not typed, so we cast it assuming it's correct\n                return file.patch(patchedExports, module.moduleVersion);\n            }\n            return patchedExports;\n        }, exports);\n    };\n    InstrumentationBase.prototype.enable = function () {\n        var e_1, _a, e_2, _b, e_3, _c;\n        var _this = this;\n        if (this._enabled) {\n            return;\n        }\n        this._enabled = true;\n        // already hooked, just call patch again\n        if (this._hooks.length > 0) {\n            try {\n                for (var _d = __values(this._modules), _e = _d.next(); !_e.done; _e = _d.next()) {\n                    var module_1 = _e.value;\n                    if (typeof module_1.patch === 'function' && module_1.moduleExports) {\n                        this._diag.debug('Applying instrumentation patch for nodejs module on instrumentation enabled', {\n                            module: module_1.name,\n                            version: module_1.moduleVersion,\n                        });\n                        module_1.patch(module_1.moduleExports, module_1.moduleVersion);\n                    }\n                    try {\n                        for (var _f = (e_2 = void 0, __values(module_1.files)), _g = _f.next(); !_g.done; _g = _f.next()) {\n                            var file = _g.value;\n                            if (file.moduleExports) {\n                                this._diag.debug('Applying instrumentation patch for nodejs module file on instrumentation enabled', {\n                                    module: module_1.name,\n                                    version: module_1.moduleVersion,\n                                    fileName: file.name,\n                                });\n                                file.patch(file.moduleExports, module_1.moduleVersion);\n                            }\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return;\n        }\n        this._warnOnPreloadedModules();\n        var _loop_1 = function (module_2) {\n            var hookFn = function (exports, name, baseDir) {\n                if (!baseDir && path.isAbsolute(name)) {\n                    var parsedPath = path.parse(name);\n                    name = parsedPath.name;\n                    baseDir = parsedPath.dir;\n                }\n                return _this._onRequire(module_2, exports, name, baseDir);\n            };\n            var onRequire = function (exports, name, baseDir) {\n                return _this._onRequire(module_2, exports, name, baseDir);\n            };\n            // `RequireInTheMiddleSingleton` does not support absolute paths.\n            // For an absolute paths, we must create a separate instance of the\n            // require-in-the-middle `Hook`.\n            var hook = path.isAbsolute(module_2.name)\n                ? new HookRequire([module_2.name], { internals: true }, onRequire)\n                : this_1._requireInTheMiddleSingleton.register(module_2.name, onRequire);\n            this_1._hooks.push(hook);\n            var esmHook = new HookImport([module_2.name], { internals: false }, hookFn);\n            this_1._hooks.push(esmHook);\n        };\n        var this_1 = this;\n        try {\n            for (var _h = __values(this._modules), _j = _h.next(); !_j.done; _j = _h.next()) {\n                var module_2 = _j.value;\n                _loop_1(module_2);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    InstrumentationBase.prototype.disable = function () {\n        var e_4, _a, e_5, _b;\n        if (!this._enabled) {\n            return;\n        }\n        this._enabled = false;\n        try {\n            for (var _c = __values(this._modules), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var module_3 = _d.value;\n                if (typeof module_3.unpatch === 'function' && module_3.moduleExports) {\n                    this._diag.debug('Removing instrumentation patch for nodejs module on instrumentation disabled', {\n                        module: module_3.name,\n                        version: module_3.moduleVersion,\n                    });\n                    module_3.unpatch(module_3.moduleExports, module_3.moduleVersion);\n                }\n                try {\n                    for (var _e = (e_5 = void 0, __values(module_3.files)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var file = _f.value;\n                        if (file.moduleExports) {\n                            this._diag.debug('Removing instrumentation patch for nodejs module file on instrumentation disabled', {\n                                module: module_3.name,\n                                version: module_3.moduleVersion,\n                                fileName: file.name,\n                            });\n                            file.unpatch(file.moduleExports, module_3.moduleVersion);\n                        }\n                    }\n                }\n                catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                    }\n                    finally { if (e_5) throw e_5.error; }\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    };\n    InstrumentationBase.prototype.isEnabled = function () {\n        return this._enabled;\n    };\n    return InstrumentationBase;\n}(InstrumentationAbstract));\nexport { InstrumentationBase };\nfunction isSupported(supportedVersions, version, includePrerelease) {\n    if (typeof version === 'undefined') {\n        // If we don't have the version, accept the wildcard case only\n        return supportedVersions.includes('*');\n    }\n    return supportedVersions.some(function (supportedVersion) {\n        return satisfies(version, supportedVersion, { includePrerelease: includePrerelease });\n    });\n}\n//# sourceMappingURL=instrumentation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar InstrumentationNodeModuleDefinition = /** @class */ (function () {\n    function InstrumentationNodeModuleDefinition(name, supportedVersions, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    patch, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    unpatch, files) {\n        this.name = name;\n        this.supportedVersions = supportedVersions;\n        this.patch = patch;\n        this.unpatch = unpatch;\n        this.files = files || [];\n    }\n    return InstrumentationNodeModuleDefinition;\n}());\nexport { InstrumentationNodeModuleDefinition };\n//# sourceMappingURL=instrumentationNodeModuleDefinition.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { normalize } from './platform/index';\nvar InstrumentationNodeModuleFile = /** @class */ (function () {\n    function InstrumentationNodeModuleFile(name, supportedVersions, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    patch, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    unpatch) {\n        this.supportedVersions = supportedVersions;\n        this.patch = patch;\n        this.unpatch = unpatch;\n        this.name = normalize(name);\n    }\n    return InstrumentationNodeModuleFile;\n}());\nexport { InstrumentationNodeModuleFile };\n//# sourceMappingURL=instrumentationNodeModuleFile.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createConstMap } from '../internal/utils';\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticAttributes\n//----------------------------------------------------------------------------------------------------------\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';\nvar TMP_DB_SYSTEM = 'db.system';\nvar TMP_DB_CONNECTION_STRING = 'db.connection_string';\nvar TMP_DB_USER = 'db.user';\nvar TMP_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';\nvar TMP_DB_NAME = 'db.name';\nvar TMP_DB_STATEMENT = 'db.statement';\nvar TMP_DB_OPERATION = 'db.operation';\nvar TMP_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';\nvar TMP_DB_CASSANDRA_KEYSPACE = 'db.cassandra.keyspace';\nvar TMP_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';\nvar TMP_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';\nvar TMP_DB_CASSANDRA_TABLE = 'db.cassandra.table';\nvar TMP_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';\nvar TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = 'db.cassandra.speculative_execution_count';\nvar TMP_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';\nvar TMP_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';\nvar TMP_DB_HBASE_NAMESPACE = 'db.hbase.namespace';\nvar TMP_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';\nvar TMP_DB_MONGODB_COLLECTION = 'db.mongodb.collection';\nvar TMP_DB_SQL_TABLE = 'db.sql.table';\nvar TMP_EXCEPTION_TYPE = 'exception.type';\nvar TMP_EXCEPTION_MESSAGE = 'exception.message';\nvar TMP_EXCEPTION_STACKTRACE = 'exception.stacktrace';\nvar TMP_EXCEPTION_ESCAPED = 'exception.escaped';\nvar TMP_FAAS_TRIGGER = 'faas.trigger';\nvar TMP_FAAS_EXECUTION = 'faas.execution';\nvar TMP_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';\nvar TMP_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';\nvar TMP_FAAS_DOCUMENT_TIME = 'faas.document.time';\nvar TMP_FAAS_DOCUMENT_NAME = 'faas.document.name';\nvar TMP_FAAS_TIME = 'faas.time';\nvar TMP_FAAS_CRON = 'faas.cron';\nvar TMP_FAAS_COLDSTART = 'faas.coldstart';\nvar TMP_FAAS_INVOKED_NAME = 'faas.invoked_name';\nvar TMP_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';\nvar TMP_FAAS_INVOKED_REGION = 'faas.invoked_region';\nvar TMP_NET_TRANSPORT = 'net.transport';\nvar TMP_NET_PEER_IP = 'net.peer.ip';\nvar TMP_NET_PEER_PORT = 'net.peer.port';\nvar TMP_NET_PEER_NAME = 'net.peer.name';\nvar TMP_NET_HOST_IP = 'net.host.ip';\nvar TMP_NET_HOST_PORT = 'net.host.port';\nvar TMP_NET_HOST_NAME = 'net.host.name';\nvar TMP_NET_HOST_CONNECTION_TYPE = 'net.host.connection.type';\nvar TMP_NET_HOST_CONNECTION_SUBTYPE = 'net.host.connection.subtype';\nvar TMP_NET_HOST_CARRIER_NAME = 'net.host.carrier.name';\nvar TMP_NET_HOST_CARRIER_MCC = 'net.host.carrier.mcc';\nvar TMP_NET_HOST_CARRIER_MNC = 'net.host.carrier.mnc';\nvar TMP_NET_HOST_CARRIER_ICC = 'net.host.carrier.icc';\nvar TMP_PEER_SERVICE = 'peer.service';\nvar TMP_ENDUSER_ID = 'enduser.id';\nvar TMP_ENDUSER_ROLE = 'enduser.role';\nvar TMP_ENDUSER_SCOPE = 'enduser.scope';\nvar TMP_THREAD_ID = 'thread.id';\nvar TMP_THREAD_NAME = 'thread.name';\nvar TMP_CODE_FUNCTION = 'code.function';\nvar TMP_CODE_NAMESPACE = 'code.namespace';\nvar TMP_CODE_FILEPATH = 'code.filepath';\nvar TMP_CODE_LINENO = 'code.lineno';\nvar TMP_HTTP_METHOD = 'http.method';\nvar TMP_HTTP_URL = 'http.url';\nvar TMP_HTTP_TARGET = 'http.target';\nvar TMP_HTTP_HOST = 'http.host';\nvar TMP_HTTP_SCHEME = 'http.scheme';\nvar TMP_HTTP_STATUS_CODE = 'http.status_code';\nvar TMP_HTTP_FLAVOR = 'http.flavor';\nvar TMP_HTTP_USER_AGENT = 'http.user_agent';\nvar TMP_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';\nvar TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = 'http.request_content_length_uncompressed';\nvar TMP_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';\nvar TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = 'http.response_content_length_uncompressed';\nvar TMP_HTTP_SERVER_NAME = 'http.server_name';\nvar TMP_HTTP_ROUTE = 'http.route';\nvar TMP_HTTP_CLIENT_IP = 'http.client_ip';\nvar TMP_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';\nvar TMP_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';\nvar TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = 'aws.dynamodb.item_collection_metrics';\nvar TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = 'aws.dynamodb.provisioned_read_capacity';\nvar TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = 'aws.dynamodb.provisioned_write_capacity';\nvar TMP_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';\nvar TMP_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';\nvar TMP_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';\nvar TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';\nvar TMP_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';\nvar TMP_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';\nvar TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = 'aws.dynamodb.global_secondary_indexes';\nvar TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = 'aws.dynamodb.local_secondary_indexes';\nvar TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = 'aws.dynamodb.exclusive_start_table';\nvar TMP_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';\nvar TMP_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';\nvar TMP_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';\nvar TMP_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';\nvar TMP_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';\nvar TMP_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';\nvar TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = 'aws.dynamodb.attribute_definitions';\nvar TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = 'aws.dynamodb.global_secondary_index_updates';\nvar TMP_MESSAGING_SYSTEM = 'messaging.system';\nvar TMP_MESSAGING_DESTINATION = 'messaging.destination';\nvar TMP_MESSAGING_DESTINATION_KIND = 'messaging.destination_kind';\nvar TMP_MESSAGING_TEMP_DESTINATION = 'messaging.temp_destination';\nvar TMP_MESSAGING_PROTOCOL = 'messaging.protocol';\nvar TMP_MESSAGING_PROTOCOL_VERSION = 'messaging.protocol_version';\nvar TMP_MESSAGING_URL = 'messaging.url';\nvar TMP_MESSAGING_MESSAGE_ID = 'messaging.message_id';\nvar TMP_MESSAGING_CONVERSATION_ID = 'messaging.conversation_id';\nvar TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = 'messaging.message_payload_size_bytes';\nvar TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = 'messaging.message_payload_compressed_size_bytes';\nvar TMP_MESSAGING_OPERATION = 'messaging.operation';\nvar TMP_MESSAGING_CONSUMER_ID = 'messaging.consumer_id';\nvar TMP_MESSAGING_RABBITMQ_ROUTING_KEY = 'messaging.rabbitmq.routing_key';\nvar TMP_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message_key';\nvar TMP_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer_group';\nvar TMP_MESSAGING_KAFKA_CLIENT_ID = 'messaging.kafka.client_id';\nvar TMP_MESSAGING_KAFKA_PARTITION = 'messaging.kafka.partition';\nvar TMP_MESSAGING_KAFKA_TOMBSTONE = 'messaging.kafka.tombstone';\nvar TMP_RPC_SYSTEM = 'rpc.system';\nvar TMP_RPC_SERVICE = 'rpc.service';\nvar TMP_RPC_METHOD = 'rpc.method';\nvar TMP_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';\nvar TMP_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';\nvar TMP_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';\nvar TMP_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';\nvar TMP_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';\nvar TMP_MESSAGE_TYPE = 'message.type';\nvar TMP_MESSAGE_ID = 'message.id';\nvar TMP_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';\nvar TMP_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';\n/**\n * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n *\n * Note: This may be different from `faas.id` if an alias is involved.\n *\n * @deprecated Use ATTR_AWS_LAMBDA_INVOKED_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_LAMBDA_INVOKED_ARN = TMP_AWS_LAMBDA_INVOKED_ARN;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use ATTR_DB_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_SYSTEM = TMP_DB_SYSTEM;\n/**\n * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n *\n * @deprecated Use ATTR_DB_CONNECTION_STRING in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CONNECTION_STRING = TMP_DB_CONNECTION_STRING;\n/**\n * Username for accessing the database.\n *\n * @deprecated Use ATTR_DB_USER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_USER = TMP_DB_USER;\n/**\n * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n *\n * @deprecated Use ATTR_DB_JDBC_DRIVER_CLASSNAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = TMP_DB_JDBC_DRIVER_CLASSNAME;\n/**\n * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n *\n * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_NAME = TMP_DB_NAME;\n/**\n * The database statement being executed.\n *\n * Note: The value may be sanitized to exclude sensitive information.\n *\n * @deprecated Use ATTR_DB_STATEMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_STATEMENT = TMP_DB_STATEMENT;\n/**\n * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n *\n * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n *\n * @deprecated Use ATTR_DB_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_OPERATION = TMP_DB_OPERATION;\n/**\n * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n *\n * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n *\n * @deprecated Use ATTR_DB_MSSQL_INSTANCE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_MSSQL_INSTANCE_NAME = TMP_DB_MSSQL_INSTANCE_NAME;\n/**\n * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_KEYSPACE = TMP_DB_CASSANDRA_KEYSPACE;\n/**\n * The fetch size used for paging, i.e. how many rows will be returned at once.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_PAGE_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_PAGE_SIZE = TMP_DB_CASSANDRA_PAGE_SIZE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL = TMP_DB_CASSANDRA_CONSISTENCY_LEVEL;\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_TABLE = TMP_DB_CASSANDRA_TABLE;\n/**\n * Whether or not the query is idempotent.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_IDEMPOTENCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = TMP_DB_CASSANDRA_IDEMPOTENCE;\n/**\n * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT;\n/**\n * The ID of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_COORDINATOR_ID = TMP_DB_CASSANDRA_COORDINATOR_ID;\n/**\n * The data center of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_DC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_COORDINATOR_DC = TMP_DB_CASSANDRA_COORDINATOR_DC;\n/**\n * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_HBASE_NAMESPACE = TMP_DB_HBASE_NAMESPACE;\n/**\n * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_REDIS_DATABASE_INDEX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_REDIS_DATABASE_INDEX = TMP_DB_REDIS_DATABASE_INDEX;\n/**\n * The collection being accessed within the database stated in `db.name`.\n *\n * @deprecated Use ATTR_DB_MONGODB_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_MONGODB_COLLECTION = TMP_DB_MONGODB_COLLECTION;\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_SQL_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_SQL_TABLE = TMP_DB_SQL_TABLE;\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n *\n * @deprecated Use ATTR_EXCEPTION_TYPE.\n */\nexport var SEMATTRS_EXCEPTION_TYPE = TMP_EXCEPTION_TYPE;\n/**\n * The exception message.\n *\n * @deprecated Use ATTR_EXCEPTION_MESSAGE.\n */\nexport var SEMATTRS_EXCEPTION_MESSAGE = TMP_EXCEPTION_MESSAGE;\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @deprecated Use ATTR_EXCEPTION_STACKTRACE.\n */\nexport var SEMATTRS_EXCEPTION_STACKTRACE = TMP_EXCEPTION_STACKTRACE;\n/**\n* SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n*\n* Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n*\n* @deprecated Use ATTR_EXCEPTION_ESCAPED.\n*/\nexport var SEMATTRS_EXCEPTION_ESCAPED = TMP_EXCEPTION_ESCAPED;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use ATTR_FAAS_TRIGGER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_TRIGGER = TMP_FAAS_TRIGGER;\n/**\n * The execution ID of the current function execution.\n *\n * @deprecated Use ATTR_FAAS_INVOCATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_EXECUTION = TMP_FAAS_EXECUTION;\n/**\n * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_COLLECTION = TMP_FAAS_DOCUMENT_COLLECTION;\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_OPERATION = TMP_FAAS_DOCUMENT_OPERATION;\n/**\n * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_TIME = TMP_FAAS_DOCUMENT_TIME;\n/**\n * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_NAME = TMP_FAAS_DOCUMENT_NAME;\n/**\n * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_TIME = TMP_FAAS_TIME;\n/**\n * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n *\n * @deprecated Use ATTR_FAAS_CRON in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_CRON = TMP_FAAS_CRON;\n/**\n * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n *\n * @deprecated Use ATTR_FAAS_COLDSTART in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_COLDSTART = TMP_FAAS_COLDSTART;\n/**\n * The name of the invoked function.\n *\n * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_INVOKED_NAME = TMP_FAAS_INVOKED_NAME;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_INVOKED_PROVIDER = TMP_FAAS_INVOKED_PROVIDER;\n/**\n * The cloud region of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_INVOKED_REGION = TMP_FAAS_INVOKED_REGION;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use ATTR_NET_TRANSPORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_TRANSPORT = TMP_NET_TRANSPORT;\n/**\n * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n *\n * @deprecated Use ATTR_NET_PEER_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_PEER_IP = TMP_NET_PEER_IP;\n/**\n * Remote port number.\n *\n * @deprecated Use ATTR_NET_PEER_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_PEER_PORT = TMP_NET_PEER_PORT;\n/**\n * Remote hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_PEER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_PEER_NAME = TMP_NET_PEER_NAME;\n/**\n * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n *\n * @deprecated Use ATTR_NET_HOST_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_IP = TMP_NET_HOST_IP;\n/**\n * Like `net.peer.port` but for the host port.\n *\n * @deprecated Use ATTR_NET_HOST_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_PORT = TMP_NET_HOST_PORT;\n/**\n * Local hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_NAME = TMP_NET_HOST_NAME;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CONNECTION_TYPE = TMP_NET_HOST_CONNECTION_TYPE;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_SUBTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CONNECTION_SUBTYPE = TMP_NET_HOST_CONNECTION_SUBTYPE;\n/**\n * The name of the mobile carrier.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_NAME = TMP_NET_HOST_CARRIER_NAME;\n/**\n * The mobile carrier country code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MCC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_MCC = TMP_NET_HOST_CARRIER_MCC;\n/**\n * The mobile carrier network code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MNC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_MNC = TMP_NET_HOST_CARRIER_MNC;\n/**\n * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_ICC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_ICC = TMP_NET_HOST_CARRIER_ICC;\n/**\n * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n *\n * @deprecated Use ATTR_PEER_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_PEER_SERVICE = TMP_PEER_SERVICE;\n/**\n * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n *\n * @deprecated Use ATTR_ENDUSER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_ENDUSER_ID = TMP_ENDUSER_ID;\n/**\n * Actual/assumed role the client is making the request under extracted from token or application security context.\n *\n * @deprecated Use ATTR_ENDUSER_ROLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_ENDUSER_ROLE = TMP_ENDUSER_ROLE;\n/**\n * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n *\n * @deprecated Use ATTR_ENDUSER_SCOPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_ENDUSER_SCOPE = TMP_ENDUSER_SCOPE;\n/**\n * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n *\n * @deprecated Use ATTR_THREAD_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_THREAD_ID = TMP_THREAD_ID;\n/**\n * Current thread name.\n *\n * @deprecated Use ATTR_THREAD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_THREAD_NAME = TMP_THREAD_NAME;\n/**\n * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n *\n * @deprecated Use ATTR_CODE_FUNCTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_FUNCTION = TMP_CODE_FUNCTION;\n/**\n * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n *\n * @deprecated Use ATTR_CODE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_NAMESPACE = TMP_CODE_NAMESPACE;\n/**\n * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n *\n * @deprecated Use ATTR_CODE_FILEPATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_FILEPATH = TMP_CODE_FILEPATH;\n/**\n * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n *\n * @deprecated Use ATTR_CODE_LINENO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_LINENO = TMP_CODE_LINENO;\n/**\n * HTTP request method.\n *\n * @deprecated Use ATTR_HTTP_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_METHOD = TMP_HTTP_METHOD;\n/**\n * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n *\n * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n *\n * @deprecated Use ATTR_HTTP_URL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_URL = TMP_HTTP_URL;\n/**\n * The full request target as passed in a HTTP request line or equivalent.\n *\n * @deprecated Use ATTR_HTTP_TARGET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_TARGET = TMP_HTTP_TARGET;\n/**\n * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n *\n * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n *\n * @deprecated Use ATTR_HTTP_HOST in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_HOST = TMP_HTTP_HOST;\n/**\n * The URI scheme identifying the used protocol.\n *\n * @deprecated Use ATTR_HTTP_SCHEME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_SCHEME = TMP_HTTP_SCHEME;\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n *\n * @deprecated Use ATTR_HTTP_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_STATUS_CODE = TMP_HTTP_STATUS_CODE;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use ATTR_HTTP_FLAVOR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_FLAVOR = TMP_HTTP_FLAVOR;\n/**\n * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n *\n * @deprecated Use ATTR_HTTP_USER_AGENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_USER_AGENT = TMP_HTTP_USER_AGENT;\n/**\n * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH = TMP_HTTP_REQUEST_CONTENT_LENGTH;\n/**\n * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED;\n/**\n * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH = TMP_HTTP_RESPONSE_CONTENT_LENGTH;\n/**\n * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED;\n/**\n * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n *\n * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n *\n * @deprecated Use ATTR_HTTP_SERVER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_SERVER_NAME = TMP_HTTP_SERVER_NAME;\n/**\n * The matched route (path template).\n *\n * @deprecated Use ATTR_HTTP_ROUTE.\n */\nexport var SEMATTRS_HTTP_ROUTE = TMP_HTTP_ROUTE;\n/**\n* The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n*\n* Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n*\n* @deprecated Use ATTR_HTTP_CLIENT_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMATTRS_HTTP_CLIENT_IP = TMP_HTTP_CLIENT_IP;\n/**\n * The keys in the `RequestItems` object field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = TMP_AWS_DYNAMODB_TABLE_NAMES;\n/**\n * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY = TMP_AWS_DYNAMODB_CONSUMED_CAPACITY;\n/**\n * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS;\n/**\n * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY;\n/**\n * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY;\n/**\n * The value of the `ConsistentRead` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSISTENT_READ in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ = TMP_AWS_DYNAMODB_CONSISTENT_READ;\n/**\n * The value of the `ProjectionExpression` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROJECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_PROJECTION = TMP_AWS_DYNAMODB_PROJECTION;\n/**\n * The value of the `Limit` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LIMIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_LIMIT = TMP_AWS_DYNAMODB_LIMIT;\n/**\n * The value of the `AttributesToGet` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET = TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET;\n/**\n * The value of the `IndexName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_INDEX_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_INDEX_NAME = TMP_AWS_DYNAMODB_INDEX_NAME;\n/**\n * The value of the `Select` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SELECT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SELECT = TMP_AWS_DYNAMODB_SELECT;\n/**\n * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES;\n/**\n * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES;\n/**\n * The value of the `ExclusiveStartTableName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE;\n/**\n * The the number of items in the `TableNames` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = TMP_AWS_DYNAMODB_TABLE_COUNT;\n/**\n * The value of the `ScanIndexForward` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCAN_FORWARD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = TMP_AWS_DYNAMODB_SCAN_FORWARD;\n/**\n * The value of the `Segment` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SEGMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SEGMENT = TMP_AWS_DYNAMODB_SEGMENT;\n/**\n * The value of the `TotalSegments` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS = TMP_AWS_DYNAMODB_TOTAL_SEGMENTS;\n/**\n * The value of the `Count` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_COUNT = TMP_AWS_DYNAMODB_COUNT;\n/**\n * The value of the `ScannedCount` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCANNED_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT = TMP_AWS_DYNAMODB_SCANNED_COUNT;\n/**\n * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS;\n/**\n * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES;\n/**\n * A string identifying the messaging system.\n *\n * @deprecated Use ATTR_MESSAGING_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_SYSTEM = TMP_MESSAGING_SYSTEM;\n/**\n * The message destination name. This might be equal to the span name but is required nevertheless.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_DESTINATION = TMP_MESSAGING_DESTINATION;\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport var SEMATTRS_MESSAGING_DESTINATION_KIND = TMP_MESSAGING_DESTINATION_KIND;\n/**\n * A boolean that is true if the message destination is temporary.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_TEMPORARY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_TEMP_DESTINATION = TMP_MESSAGING_TEMP_DESTINATION;\n/**\n * The name of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_NAME.\n */\nexport var SEMATTRS_MESSAGING_PROTOCOL = TMP_MESSAGING_PROTOCOL;\n/**\n * The version of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_VERSION.\n */\nexport var SEMATTRS_MESSAGING_PROTOCOL_VERSION = TMP_MESSAGING_PROTOCOL_VERSION;\n/**\n * Connection string.\n *\n * @deprecated Removed in semconv v1.17.0.\n */\nexport var SEMATTRS_MESSAGING_URL = TMP_MESSAGING_URL;\n/**\n * A value used by the messaging system as an identifier for the message, represented as a string.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_MESSAGE_ID = TMP_MESSAGING_MESSAGE_ID;\n/**\n * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_CONVERSATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_CONVERSATION_ID = TMP_MESSAGING_CONVERSATION_ID;\n/**\n * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_BODY_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES;\n/**\n * The compressed size of the message payload in bytes.\n *\n * @deprecated Removed in semconv v1.22.0.\n */\nexport var SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES;\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use ATTR_MESSAGING_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_OPERATION = TMP_MESSAGING_OPERATION;\n/**\n * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n *\n * @deprecated Removed in semconv v1.21.0.\n */\nexport var SEMATTRS_MESSAGING_CONSUMER_ID = TMP_MESSAGING_CONSUMER_ID;\n/**\n * RabbitMQ message routing key.\n *\n * @deprecated Use ATTR_MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY = TMP_MESSAGING_RABBITMQ_ROUTING_KEY;\n/**\n * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n *\n * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY = TMP_MESSAGING_KAFKA_MESSAGE_KEY;\n/**\n * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_CONSUMER_GROUP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP = TMP_MESSAGING_KAFKA_CONSUMER_GROUP;\n/**\n * Client Id for the Consumer or Producer that is handling the message.\n *\n * @deprecated Use ATTR_MESSAGING_CLIENT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = TMP_MESSAGING_KAFKA_CLIENT_ID;\n/**\n * Partition the message is sent to.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_DESTINATION_PARTITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_PARTITION = TMP_MESSAGING_KAFKA_PARTITION;\n/**\n * A boolean that is true if the message is a tombstone.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_TOMBSTONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = TMP_MESSAGING_KAFKA_TOMBSTONE;\n/**\n * A string identifying the remoting system.\n *\n * @deprecated Use ATTR_RPC_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_SYSTEM = TMP_RPC_SYSTEM;\n/**\n * The full (logical) name of the service being called, including its package name, if applicable.\n *\n * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n *\n * @deprecated Use ATTR_RPC_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_SERVICE = TMP_RPC_SERVICE;\n/**\n * The name of the (logical) method being called, must be equal to the $method part in the span name.\n *\n * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n *\n * @deprecated Use ATTR_RPC_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_METHOD = TMP_RPC_METHOD;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use ATTR_RPC_GRPC_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_GRPC_STATUS_CODE = TMP_RPC_GRPC_STATUS_CODE;\n/**\n * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_VERSION = TMP_RPC_JSONRPC_VERSION;\n/**\n * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_REQUEST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_REQUEST_ID = TMP_RPC_JSONRPC_REQUEST_ID;\n/**\n * `error.code` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_ERROR_CODE = TMP_RPC_JSONRPC_ERROR_CODE;\n/**\n * `error.message` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_MESSAGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = TMP_RPC_JSONRPC_ERROR_MESSAGE;\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use ATTR_MESSAGE_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_TYPE = TMP_MESSAGE_TYPE;\n/**\n * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n *\n * Note: This way we guarantee that the values will be consistent between different implementations.\n *\n * @deprecated Use ATTR_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_ID = TMP_MESSAGE_ID;\n/**\n * Compressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_COMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_COMPRESSED_SIZE = TMP_MESSAGE_COMPRESSED_SIZE;\n/**\n * Uncompressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_UNCOMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = TMP_MESSAGE_UNCOMPRESSED_SIZE;\n/**\n * Create exported Value Map for SemanticAttributes values\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification\n */\nexport var SemanticAttributes = \n/*#__PURE__*/ createConstMap([\n    TMP_AWS_LAMBDA_INVOKED_ARN,\n    TMP_DB_SYSTEM,\n    TMP_DB_CONNECTION_STRING,\n    TMP_DB_USER,\n    TMP_DB_JDBC_DRIVER_CLASSNAME,\n    TMP_DB_NAME,\n    TMP_DB_STATEMENT,\n    TMP_DB_OPERATION,\n    TMP_DB_MSSQL_INSTANCE_NAME,\n    TMP_DB_CASSANDRA_KEYSPACE,\n    TMP_DB_CASSANDRA_PAGE_SIZE,\n    TMP_DB_CASSANDRA_CONSISTENCY_LEVEL,\n    TMP_DB_CASSANDRA_TABLE,\n    TMP_DB_CASSANDRA_IDEMPOTENCE,\n    TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT,\n    TMP_DB_CASSANDRA_COORDINATOR_ID,\n    TMP_DB_CASSANDRA_COORDINATOR_DC,\n    TMP_DB_HBASE_NAMESPACE,\n    TMP_DB_REDIS_DATABASE_INDEX,\n    TMP_DB_MONGODB_COLLECTION,\n    TMP_DB_SQL_TABLE,\n    TMP_EXCEPTION_TYPE,\n    TMP_EXCEPTION_MESSAGE,\n    TMP_EXCEPTION_STACKTRACE,\n    TMP_EXCEPTION_ESCAPED,\n    TMP_FAAS_TRIGGER,\n    TMP_FAAS_EXECUTION,\n    TMP_FAAS_DOCUMENT_COLLECTION,\n    TMP_FAAS_DOCUMENT_OPERATION,\n    TMP_FAAS_DOCUMENT_TIME,\n    TMP_FAAS_DOCUMENT_NAME,\n    TMP_FAAS_TIME,\n    TMP_FAAS_CRON,\n    TMP_FAAS_COLDSTART,\n    TMP_FAAS_INVOKED_NAME,\n    TMP_FAAS_INVOKED_PROVIDER,\n    TMP_FAAS_INVOKED_REGION,\n    TMP_NET_TRANSPORT,\n    TMP_NET_PEER_IP,\n    TMP_NET_PEER_PORT,\n    TMP_NET_PEER_NAME,\n    TMP_NET_HOST_IP,\n    TMP_NET_HOST_PORT,\n    TMP_NET_HOST_NAME,\n    TMP_NET_HOST_CONNECTION_TYPE,\n    TMP_NET_HOST_CONNECTION_SUBTYPE,\n    TMP_NET_HOST_CARRIER_NAME,\n    TMP_NET_HOST_CARRIER_MCC,\n    TMP_NET_HOST_CARRIER_MNC,\n    TMP_NET_HOST_CARRIER_ICC,\n    TMP_PEER_SERVICE,\n    TMP_ENDUSER_ID,\n    TMP_ENDUSER_ROLE,\n    TMP_ENDUSER_SCOPE,\n    TMP_THREAD_ID,\n    TMP_THREAD_NAME,\n    TMP_CODE_FUNCTION,\n    TMP_CODE_NAMESPACE,\n    TMP_CODE_FILEPATH,\n    TMP_CODE_LINENO,\n    TMP_HTTP_METHOD,\n    TMP_HTTP_URL,\n    TMP_HTTP_TARGET,\n    TMP_HTTP_HOST,\n    TMP_HTTP_SCHEME,\n    TMP_HTTP_STATUS_CODE,\n    TMP_HTTP_FLAVOR,\n    TMP_HTTP_USER_AGENT,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_SERVER_NAME,\n    TMP_HTTP_ROUTE,\n    TMP_HTTP_CLIENT_IP,\n    TMP_AWS_DYNAMODB_TABLE_NAMES,\n    TMP_AWS_DYNAMODB_CONSUMED_CAPACITY,\n    TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,\n    TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY,\n    TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY,\n    TMP_AWS_DYNAMODB_CONSISTENT_READ,\n    TMP_AWS_DYNAMODB_PROJECTION,\n    TMP_AWS_DYNAMODB_LIMIT,\n    TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET,\n    TMP_AWS_DYNAMODB_INDEX_NAME,\n    TMP_AWS_DYNAMODB_SELECT,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE,\n    TMP_AWS_DYNAMODB_TABLE_COUNT,\n    TMP_AWS_DYNAMODB_SCAN_FORWARD,\n    TMP_AWS_DYNAMODB_SEGMENT,\n    TMP_AWS_DYNAMODB_TOTAL_SEGMENTS,\n    TMP_AWS_DYNAMODB_COUNT,\n    TMP_AWS_DYNAMODB_SCANNED_COUNT,\n    TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES,\n    TMP_MESSAGING_SYSTEM,\n    TMP_MESSAGING_DESTINATION,\n    TMP_MESSAGING_DESTINATION_KIND,\n    TMP_MESSAGING_TEMP_DESTINATION,\n    TMP_MESSAGING_PROTOCOL,\n    TMP_MESSAGING_PROTOCOL_VERSION,\n    TMP_MESSAGING_URL,\n    TMP_MESSAGING_MESSAGE_ID,\n    TMP_MESSAGING_CONVERSATION_ID,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES,\n    TMP_MESSAGING_OPERATION,\n    TMP_MESSAGING_CONSUMER_ID,\n    TMP_MESSAGING_RABBITMQ_ROUTING_KEY,\n    TMP_MESSAGING_KAFKA_MESSAGE_KEY,\n    TMP_MESSAGING_KAFKA_CONSUMER_GROUP,\n    TMP_MESSAGING_KAFKA_CLIENT_ID,\n    TMP_MESSAGING_KAFKA_PARTITION,\n    TMP_MESSAGING_KAFKA_TOMBSTONE,\n    TMP_RPC_SYSTEM,\n    TMP_RPC_SERVICE,\n    TMP_RPC_METHOD,\n    TMP_RPC_GRPC_STATUS_CODE,\n    TMP_RPC_JSONRPC_VERSION,\n    TMP_RPC_JSONRPC_REQUEST_ID,\n    TMP_RPC_JSONRPC_ERROR_CODE,\n    TMP_RPC_JSONRPC_ERROR_MESSAGE,\n    TMP_MESSAGE_TYPE,\n    TMP_MESSAGE_ID,\n    TMP_MESSAGE_COMPRESSED_SIZE,\n    TMP_MESSAGE_UNCOMPRESSED_SIZE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_DBSYSTEMVALUES_OTHER_SQL = 'other_sql';\nvar TMP_DBSYSTEMVALUES_MSSQL = 'mssql';\nvar TMP_DBSYSTEMVALUES_MYSQL = 'mysql';\nvar TMP_DBSYSTEMVALUES_ORACLE = 'oracle';\nvar TMP_DBSYSTEMVALUES_DB2 = 'db2';\nvar TMP_DBSYSTEMVALUES_POSTGRESQL = 'postgresql';\nvar TMP_DBSYSTEMVALUES_REDSHIFT = 'redshift';\nvar TMP_DBSYSTEMVALUES_HIVE = 'hive';\nvar TMP_DBSYSTEMVALUES_CLOUDSCAPE = 'cloudscape';\nvar TMP_DBSYSTEMVALUES_HSQLDB = 'hsqldb';\nvar TMP_DBSYSTEMVALUES_PROGRESS = 'progress';\nvar TMP_DBSYSTEMVALUES_MAXDB = 'maxdb';\nvar TMP_DBSYSTEMVALUES_HANADB = 'hanadb';\nvar TMP_DBSYSTEMVALUES_INGRES = 'ingres';\nvar TMP_DBSYSTEMVALUES_FIRSTSQL = 'firstsql';\nvar TMP_DBSYSTEMVALUES_EDB = 'edb';\nvar TMP_DBSYSTEMVALUES_CACHE = 'cache';\nvar TMP_DBSYSTEMVALUES_ADABAS = 'adabas';\nvar TMP_DBSYSTEMVALUES_FIREBIRD = 'firebird';\nvar TMP_DBSYSTEMVALUES_DERBY = 'derby';\nvar TMP_DBSYSTEMVALUES_FILEMAKER = 'filemaker';\nvar TMP_DBSYSTEMVALUES_INFORMIX = 'informix';\nvar TMP_DBSYSTEMVALUES_INSTANTDB = 'instantdb';\nvar TMP_DBSYSTEMVALUES_INTERBASE = 'interbase';\nvar TMP_DBSYSTEMVALUES_MARIADB = 'mariadb';\nvar TMP_DBSYSTEMVALUES_NETEZZA = 'netezza';\nvar TMP_DBSYSTEMVALUES_PERVASIVE = 'pervasive';\nvar TMP_DBSYSTEMVALUES_POINTBASE = 'pointbase';\nvar TMP_DBSYSTEMVALUES_SQLITE = 'sqlite';\nvar TMP_DBSYSTEMVALUES_SYBASE = 'sybase';\nvar TMP_DBSYSTEMVALUES_TERADATA = 'teradata';\nvar TMP_DBSYSTEMVALUES_VERTICA = 'vertica';\nvar TMP_DBSYSTEMVALUES_H2 = 'h2';\nvar TMP_DBSYSTEMVALUES_COLDFUSION = 'coldfusion';\nvar TMP_DBSYSTEMVALUES_CASSANDRA = 'cassandra';\nvar TMP_DBSYSTEMVALUES_HBASE = 'hbase';\nvar TMP_DBSYSTEMVALUES_MONGODB = 'mongodb';\nvar TMP_DBSYSTEMVALUES_REDIS = 'redis';\nvar TMP_DBSYSTEMVALUES_COUCHBASE = 'couchbase';\nvar TMP_DBSYSTEMVALUES_COUCHDB = 'couchdb';\nvar TMP_DBSYSTEMVALUES_COSMOSDB = 'cosmosdb';\nvar TMP_DBSYSTEMVALUES_DYNAMODB = 'dynamodb';\nvar TMP_DBSYSTEMVALUES_NEO4J = 'neo4j';\nvar TMP_DBSYSTEMVALUES_GEODE = 'geode';\nvar TMP_DBSYSTEMVALUES_ELASTICSEARCH = 'elasticsearch';\nvar TMP_DBSYSTEMVALUES_MEMCACHED = 'memcached';\nvar TMP_DBSYSTEMVALUES_COCKROACHDB = 'cockroachdb';\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_OTHER_SQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_OTHER_SQL = TMP_DBSYSTEMVALUES_OTHER_SQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MSSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MSSQL = TMP_DBSYSTEMVALUES_MSSQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MYSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MYSQL = TMP_DBSYSTEMVALUES_MYSQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ORACLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_ORACLE = TMP_DBSYSTEMVALUES_ORACLE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DB2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_DB2 = TMP_DBSYSTEMVALUES_DB2;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POSTGRESQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_POSTGRESQL = TMP_DBSYSTEMVALUES_POSTGRESQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDSHIFT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_REDSHIFT = TMP_DBSYSTEMVALUES_REDSHIFT;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HIVE = TMP_DBSYSTEMVALUES_HIVE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CLOUDSCAPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_CLOUDSCAPE = TMP_DBSYSTEMVALUES_CLOUDSCAPE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HSQLDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HSQLDB = TMP_DBSYSTEMVALUES_HSQLDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PROGRESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_PROGRESS = TMP_DBSYSTEMVALUES_PROGRESS;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MAXDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MAXDB = TMP_DBSYSTEMVALUES_MAXDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HANADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HANADB = TMP_DBSYSTEMVALUES_HANADB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INGRES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INGRES = TMP_DBSYSTEMVALUES_INGRES;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIRSTSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_FIRSTSQL = TMP_DBSYSTEMVALUES_FIRSTSQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_EDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_EDB = TMP_DBSYSTEMVALUES_EDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CACHE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_CACHE = TMP_DBSYSTEMVALUES_CACHE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ADABAS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_ADABAS = TMP_DBSYSTEMVALUES_ADABAS;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIREBIRD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_FIREBIRD = TMP_DBSYSTEMVALUES_FIREBIRD;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DERBY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_DERBY = TMP_DBSYSTEMVALUES_DERBY;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FILEMAKER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_FILEMAKER = TMP_DBSYSTEMVALUES_FILEMAKER;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INFORMIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INFORMIX = TMP_DBSYSTEMVALUES_INFORMIX;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INSTANTDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INSTANTDB = TMP_DBSYSTEMVALUES_INSTANTDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INTERBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INTERBASE = TMP_DBSYSTEMVALUES_INTERBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MARIADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MARIADB = TMP_DBSYSTEMVALUES_MARIADB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NETEZZA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_NETEZZA = TMP_DBSYSTEMVALUES_NETEZZA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PERVASIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_PERVASIVE = TMP_DBSYSTEMVALUES_PERVASIVE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POINTBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_POINTBASE = TMP_DBSYSTEMVALUES_POINTBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SQLITE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_SQLITE = TMP_DBSYSTEMVALUES_SQLITE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SYBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_SYBASE = TMP_DBSYSTEMVALUES_SYBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_TERADATA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_TERADATA = TMP_DBSYSTEMVALUES_TERADATA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_VERTICA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_VERTICA = TMP_DBSYSTEMVALUES_VERTICA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_H2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_H2 = TMP_DBSYSTEMVALUES_H2;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COLDFUSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COLDFUSION = TMP_DBSYSTEMVALUES_COLDFUSION;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CASSANDRA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_CASSANDRA = TMP_DBSYSTEMVALUES_CASSANDRA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HBASE = TMP_DBSYSTEMVALUES_HBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MONGODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MONGODB = TMP_DBSYSTEMVALUES_MONGODB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_REDIS = TMP_DBSYSTEMVALUES_REDIS;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COUCHBASE = TMP_DBSYSTEMVALUES_COUCHBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COUCHDB = TMP_DBSYSTEMVALUES_COUCHDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COSMOSDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COSMOSDB = TMP_DBSYSTEMVALUES_COSMOSDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DYNAMODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_DYNAMODB = TMP_DBSYSTEMVALUES_DYNAMODB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NEO4J in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_NEO4J = TMP_DBSYSTEMVALUES_NEO4J;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_GEODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_GEODE = TMP_DBSYSTEMVALUES_GEODE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ELASTICSEARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_ELASTICSEARCH = TMP_DBSYSTEMVALUES_ELASTICSEARCH;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MEMCACHED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MEMCACHED = TMP_DBSYSTEMVALUES_MEMCACHED;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COCKROACHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COCKROACHDB = TMP_DBSYSTEMVALUES_COCKROACHDB;\n/**\n * The constant map of values for DbSystemValues.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport var DbSystemValues = \n/*#__PURE__*/ createConstMap([\n    TMP_DBSYSTEMVALUES_OTHER_SQL,\n    TMP_DBSYSTEMVALUES_MSSQL,\n    TMP_DBSYSTEMVALUES_MYSQL,\n    TMP_DBSYSTEMVALUES_ORACLE,\n    TMP_DBSYSTEMVALUES_DB2,\n    TMP_DBSYSTEMVALUES_POSTGRESQL,\n    TMP_DBSYSTEMVALUES_REDSHIFT,\n    TMP_DBSYSTEMVALUES_HIVE,\n    TMP_DBSYSTEMVALUES_CLOUDSCAPE,\n    TMP_DBSYSTEMVALUES_HSQLDB,\n    TMP_DBSYSTEMVALUES_PROGRESS,\n    TMP_DBSYSTEMVALUES_MAXDB,\n    TMP_DBSYSTEMVALUES_HANADB,\n    TMP_DBSYSTEMVALUES_INGRES,\n    TMP_DBSYSTEMVALUES_FIRSTSQL,\n    TMP_DBSYSTEMVALUES_EDB,\n    TMP_DBSYSTEMVALUES_CACHE,\n    TMP_DBSYSTEMVALUES_ADABAS,\n    TMP_DBSYSTEMVALUES_FIREBIRD,\n    TMP_DBSYSTEMVALUES_DERBY,\n    TMP_DBSYSTEMVALUES_FILEMAKER,\n    TMP_DBSYSTEMVALUES_INFORMIX,\n    TMP_DBSYSTEMVALUES_INSTANTDB,\n    TMP_DBSYSTEMVALUES_INTERBASE,\n    TMP_DBSYSTEMVALUES_MARIADB,\n    TMP_DBSYSTEMVALUES_NETEZZA,\n    TMP_DBSYSTEMVALUES_PERVASIVE,\n    TMP_DBSYSTEMVALUES_POINTBASE,\n    TMP_DBSYSTEMVALUES_SQLITE,\n    TMP_DBSYSTEMVALUES_SYBASE,\n    TMP_DBSYSTEMVALUES_TERADATA,\n    TMP_DBSYSTEMVALUES_VERTICA,\n    TMP_DBSYSTEMVALUES_H2,\n    TMP_DBSYSTEMVALUES_COLDFUSION,\n    TMP_DBSYSTEMVALUES_CASSANDRA,\n    TMP_DBSYSTEMVALUES_HBASE,\n    TMP_DBSYSTEMVALUES_MONGODB,\n    TMP_DBSYSTEMVALUES_REDIS,\n    TMP_DBSYSTEMVALUES_COUCHBASE,\n    TMP_DBSYSTEMVALUES_COUCHDB,\n    TMP_DBSYSTEMVALUES_COSMOSDB,\n    TMP_DBSYSTEMVALUES_DYNAMODB,\n    TMP_DBSYSTEMVALUES_NEO4J,\n    TMP_DBSYSTEMVALUES_GEODE,\n    TMP_DBSYSTEMVALUES_ELASTICSEARCH,\n    TMP_DBSYSTEMVALUES_MEMCACHED,\n    TMP_DBSYSTEMVALUES_COCKROACHDB,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL = 'all';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = 'each_quorum';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = 'quorum';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = 'local_quorum';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE = 'one';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO = 'two';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE = 'three';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = 'local_one';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY = 'any';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = 'serial';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = 'local_serial';\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_ALL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_ONE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_TWO = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_THREE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_ANY = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL;\n/**\n * The constant map of values for DbCassandraConsistencyLevelValues.\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport var DbCassandraConsistencyLevelValues = \n/*#__PURE__*/ createConstMap([\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_FAASTRIGGERVALUES_DATASOURCE = 'datasource';\nvar TMP_FAASTRIGGERVALUES_HTTP = 'http';\nvar TMP_FAASTRIGGERVALUES_PUBSUB = 'pubsub';\nvar TMP_FAASTRIGGERVALUES_TIMER = 'timer';\nvar TMP_FAASTRIGGERVALUES_OTHER = 'other';\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_DATASOURCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_DATASOURCE = TMP_FAASTRIGGERVALUES_DATASOURCE;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_HTTP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_HTTP = TMP_FAASTRIGGERVALUES_HTTP;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_PUBSUB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_PUBSUB = TMP_FAASTRIGGERVALUES_PUBSUB;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_TIMER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_TIMER = TMP_FAASTRIGGERVALUES_TIMER;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_OTHER = TMP_FAASTRIGGERVALUES_OTHER;\n/**\n * The constant map of values for FaasTriggerValues.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport var FaasTriggerValues = \n/*#__PURE__*/ createConstMap([\n    TMP_FAASTRIGGERVALUES_DATASOURCE,\n    TMP_FAASTRIGGERVALUES_HTTP,\n    TMP_FAASTRIGGERVALUES_PUBSUB,\n    TMP_FAASTRIGGERVALUES_TIMER,\n    TMP_FAASTRIGGERVALUES_OTHER,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_FAASDOCUMENTOPERATIONVALUES_INSERT = 'insert';\nvar TMP_FAASDOCUMENTOPERATIONVALUES_EDIT = 'edit';\nvar TMP_FAASDOCUMENTOPERATIONVALUES_DELETE = 'delete';\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_INSERT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASDOCUMENTOPERATIONVALUES_INSERT = TMP_FAASDOCUMENTOPERATIONVALUES_INSERT;\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_EDIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASDOCUMENTOPERATIONVALUES_EDIT = TMP_FAASDOCUMENTOPERATIONVALUES_EDIT;\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_DELETE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASDOCUMENTOPERATIONVALUES_DELETE = TMP_FAASDOCUMENTOPERATIONVALUES_DELETE;\n/**\n * The constant map of values for FaasDocumentOperationValues.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport var FaasDocumentOperationValues = \n/*#__PURE__*/ createConstMap([\n    TMP_FAASDOCUMENTOPERATIONVALUES_INSERT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_EDIT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_DELETE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nvar TMP_FAASINVOKEDPROVIDERVALUES_AWS = 'aws';\nvar TMP_FAASINVOKEDPROVIDERVALUES_AZURE = 'azure';\nvar TMP_FAASINVOKEDPROVIDERVALUES_GCP = 'gcp';\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_AWS = TMP_FAASINVOKEDPROVIDERVALUES_AWS;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_AZURE = TMP_FAASINVOKEDPROVIDERVALUES_AZURE;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_GCP = TMP_FAASINVOKEDPROVIDERVALUES_GCP;\n/**\n * The constant map of values for FaasInvokedProviderValues.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport var FaasInvokedProviderValues = \n/*#__PURE__*/ createConstMap([\n    TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_FAASINVOKEDPROVIDERVALUES_AWS,\n    TMP_FAASINVOKEDPROVIDERVALUES_AZURE,\n    TMP_FAASINVOKEDPROVIDERVALUES_GCP,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_NETTRANSPORTVALUES_IP_TCP = 'ip_tcp';\nvar TMP_NETTRANSPORTVALUES_IP_UDP = 'ip_udp';\nvar TMP_NETTRANSPORTVALUES_IP = 'ip';\nvar TMP_NETTRANSPORTVALUES_UNIX = 'unix';\nvar TMP_NETTRANSPORTVALUES_PIPE = 'pipe';\nvar TMP_NETTRANSPORTVALUES_INPROC = 'inproc';\nvar TMP_NETTRANSPORTVALUES_OTHER = 'other';\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_TCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_IP_TCP = TMP_NETTRANSPORTVALUES_IP_TCP;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_UDP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_IP_UDP = TMP_NETTRANSPORTVALUES_IP_UDP;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport var NETTRANSPORTVALUES_IP = TMP_NETTRANSPORTVALUES_IP;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport var NETTRANSPORTVALUES_UNIX = TMP_NETTRANSPORTVALUES_UNIX;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_PIPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_PIPE = TMP_NETTRANSPORTVALUES_PIPE;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_INPROC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_INPROC = TMP_NETTRANSPORTVALUES_INPROC;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_OTHER = TMP_NETTRANSPORTVALUES_OTHER;\n/**\n * The constant map of values for NetTransportValues.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport var NetTransportValues = \n/*#__PURE__*/ createConstMap([\n    TMP_NETTRANSPORTVALUES_IP_TCP,\n    TMP_NETTRANSPORTVALUES_IP_UDP,\n    TMP_NETTRANSPORTVALUES_IP,\n    TMP_NETTRANSPORTVALUES_UNIX,\n    TMP_NETTRANSPORTVALUES_PIPE,\n    TMP_NETTRANSPORTVALUES_INPROC,\n    TMP_NETTRANSPORTVALUES_OTHER,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI = 'wifi';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED = 'wired';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_CELL = 'cell';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = 'unavailable';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = 'unknown';\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIFI in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_WIFI = TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIRED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_WIRED = TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_CELL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_CELL = TMP_NETHOSTCONNECTIONTYPEVALUES_CELL;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN;\n/**\n * The constant map of values for NetHostConnectionTypeValues.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport var NetHostConnectionTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_CELL,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = 'gprs';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = 'edge';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = 'umts';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = 'cdma';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = 'evdo_0';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = 'evdo_a';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = 'cdma2000_1xrtt';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = 'hsdpa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = 'hsupa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = 'hspa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = 'iden';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = 'evdo_b';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE = 'lte';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = 'ehrpd';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = 'hspap';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM = 'gsm';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = 'td_scdma';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = 'iwlan';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR = 'nr';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = 'nrnsa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = 'lte_ca';\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GPRS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EDGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_UMTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_A in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSDPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSUPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IDEN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_B in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_LTE = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EHRPD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPAP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GSM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_GSM = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_TD_SCDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IWLAN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_NR = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NRNSA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE_CA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA;\n/**\n * The constant map of values for NetHostConnectionSubtypeValues.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport var NetHostConnectionSubtypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_HTTPFLAVORVALUES_HTTP_1_0 = '1.0';\nvar TMP_HTTPFLAVORVALUES_HTTP_1_1 = '1.1';\nvar TMP_HTTPFLAVORVALUES_HTTP_2_0 = '2.0';\nvar TMP_HTTPFLAVORVALUES_SPDY = 'SPDY';\nvar TMP_HTTPFLAVORVALUES_QUIC = 'QUIC';\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_HTTP_1_0 = TMP_HTTPFLAVORVALUES_HTTP_1_0;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_1 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_HTTP_1_1 = TMP_HTTPFLAVORVALUES_HTTP_1_1;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_2_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_HTTP_2_0 = TMP_HTTPFLAVORVALUES_HTTP_2_0;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_SPDY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_SPDY = TMP_HTTPFLAVORVALUES_SPDY;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_QUIC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_QUIC = TMP_HTTPFLAVORVALUES_QUIC;\n/**\n * The constant map of values for HttpFlavorValues.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport var HttpFlavorValues = {\n    HTTP_1_0: TMP_HTTPFLAVORVALUES_HTTP_1_0,\n    HTTP_1_1: TMP_HTTPFLAVORVALUES_HTTP_1_1,\n    HTTP_2_0: TMP_HTTPFLAVORVALUES_HTTP_2_0,\n    SPDY: TMP_HTTPFLAVORVALUES_SPDY,\n    QUIC: TMP_HTTPFLAVORVALUES_QUIC,\n};\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE = 'queue';\nvar TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC = 'topic';\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport var MESSAGINGDESTINATIONKINDVALUES_QUEUE = TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE;\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport var MESSAGINGDESTINATIONKINDVALUES_TOPIC = TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC;\n/**\n * The constant map of values for MessagingDestinationKindValues.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport var MessagingDestinationKindValues = \n/*#__PURE__*/ createConstMap([\n    TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n    TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_MESSAGINGOPERATIONVALUES_RECEIVE = 'receive';\nvar TMP_MESSAGINGOPERATIONVALUES_PROCESS = 'process';\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_RECEIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGINGOPERATIONVALUES_RECEIVE = TMP_MESSAGINGOPERATIONVALUES_RECEIVE;\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_PROCESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGINGOPERATIONVALUES_PROCESS = TMP_MESSAGINGOPERATIONVALUES_PROCESS;\n/**\n * The constant map of values for MessagingOperationValues.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport var MessagingOperationValues = \n/*#__PURE__*/ createConstMap([\n    TMP_MESSAGINGOPERATIONVALUES_RECEIVE,\n    TMP_MESSAGINGOPERATIONVALUES_PROCESS,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_RPCGRPCSTATUSCODEVALUES_OK = 0;\nvar TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED = 1;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN = 2;\nvar TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = 3;\nvar TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = 4;\nvar TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND = 5;\nvar TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = 6;\nvar TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = 7;\nvar TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = 8;\nvar TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = 9;\nvar TMP_RPCGRPCSTATUSCODEVALUES_ABORTED = 10;\nvar TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = 11;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = 12;\nvar TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL = 13;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = 14;\nvar TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS = 15;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = 16;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_OK = TMP_RPCGRPCSTATUSCODEVALUES_OK;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_CANCELLED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_CANCELLED = TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNKNOWN = TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_NOT_FOUND = TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ABORTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_ABORTED = TMP_RPCGRPCSTATUSCODEVALUES_ABORTED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INTERNAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_INTERNAL = TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_DATA_LOSS = TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED;\n/**\n * The constant map of values for RpcGrpcStatusCodeValues.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport var RpcGrpcStatusCodeValues = {\n    OK: TMP_RPCGRPCSTATUSCODEVALUES_OK,\n    CANCELLED: TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED,\n    UNKNOWN: TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN,\n    INVALID_ARGUMENT: TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT,\n    DEADLINE_EXCEEDED: TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED,\n    NOT_FOUND: TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND,\n    ALREADY_EXISTS: TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS,\n    PERMISSION_DENIED: TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED,\n    RESOURCE_EXHAUSTED: TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED,\n    FAILED_PRECONDITION: TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION,\n    ABORTED: TMP_RPCGRPCSTATUSCODEVALUES_ABORTED,\n    OUT_OF_RANGE: TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE,\n    UNIMPLEMENTED: TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED,\n    INTERNAL: TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL,\n    UNAVAILABLE: TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE,\n    DATA_LOSS: TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS,\n    UNAUTHENTICATED: TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED,\n};\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_MESSAGETYPEVALUES_SENT = 'SENT';\nvar TMP_MESSAGETYPEVALUES_RECEIVED = 'RECEIVED';\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_SENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGETYPEVALUES_SENT = TMP_MESSAGETYPEVALUES_SENT;\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_RECEIVED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGETYPEVALUES_RECEIVED = TMP_MESSAGETYPEVALUES_RECEIVED;\n/**\n * The constant map of values for MessageTypeValues.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport var MessageTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_MESSAGETYPEVALUES_SENT,\n    TMP_MESSAGETYPEVALUES_RECEIVED,\n]);\n//# sourceMappingURL=SemanticAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createConstMap } from '../internal/utils';\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticResourceAttributes\n//----------------------------------------------------------------------------------------------------------\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUD_PROVIDER = 'cloud.provider';\nvar TMP_CLOUD_ACCOUNT_ID = 'cloud.account.id';\nvar TMP_CLOUD_REGION = 'cloud.region';\nvar TMP_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\nvar TMP_CLOUD_PLATFORM = 'cloud.platform';\nvar TMP_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';\nvar TMP_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';\nvar TMP_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';\nvar TMP_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';\nvar TMP_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';\nvar TMP_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';\nvar TMP_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';\nvar TMP_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';\nvar TMP_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';\nvar TMP_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';\nvar TMP_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';\nvar TMP_CONTAINER_NAME = 'container.name';\nvar TMP_CONTAINER_ID = 'container.id';\nvar TMP_CONTAINER_RUNTIME = 'container.runtime';\nvar TMP_CONTAINER_IMAGE_NAME = 'container.image.name';\nvar TMP_CONTAINER_IMAGE_TAG = 'container.image.tag';\nvar TMP_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';\nvar TMP_DEVICE_ID = 'device.id';\nvar TMP_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';\nvar TMP_DEVICE_MODEL_NAME = 'device.model.name';\nvar TMP_FAAS_NAME = 'faas.name';\nvar TMP_FAAS_ID = 'faas.id';\nvar TMP_FAAS_VERSION = 'faas.version';\nvar TMP_FAAS_INSTANCE = 'faas.instance';\nvar TMP_FAAS_MAX_MEMORY = 'faas.max_memory';\nvar TMP_HOST_ID = 'host.id';\nvar TMP_HOST_NAME = 'host.name';\nvar TMP_HOST_TYPE = 'host.type';\nvar TMP_HOST_ARCH = 'host.arch';\nvar TMP_HOST_IMAGE_NAME = 'host.image.name';\nvar TMP_HOST_IMAGE_ID = 'host.image.id';\nvar TMP_HOST_IMAGE_VERSION = 'host.image.version';\nvar TMP_K8S_CLUSTER_NAME = 'k8s.cluster.name';\nvar TMP_K8S_NODE_NAME = 'k8s.node.name';\nvar TMP_K8S_NODE_UID = 'k8s.node.uid';\nvar TMP_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\nvar TMP_K8S_POD_UID = 'k8s.pod.uid';\nvar TMP_K8S_POD_NAME = 'k8s.pod.name';\nvar TMP_K8S_CONTAINER_NAME = 'k8s.container.name';\nvar TMP_K8S_REPLICASET_UID = 'k8s.replicaset.uid';\nvar TMP_K8S_REPLICASET_NAME = 'k8s.replicaset.name';\nvar TMP_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';\nvar TMP_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\nvar TMP_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';\nvar TMP_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';\nvar TMP_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';\nvar TMP_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';\nvar TMP_K8S_JOB_UID = 'k8s.job.uid';\nvar TMP_K8S_JOB_NAME = 'k8s.job.name';\nvar TMP_K8S_CRONJOB_UID = 'k8s.cronjob.uid';\nvar TMP_K8S_CRONJOB_NAME = 'k8s.cronjob.name';\nvar TMP_OS_TYPE = 'os.type';\nvar TMP_OS_DESCRIPTION = 'os.description';\nvar TMP_OS_NAME = 'os.name';\nvar TMP_OS_VERSION = 'os.version';\nvar TMP_PROCESS_PID = 'process.pid';\nvar TMP_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\nvar TMP_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\nvar TMP_PROCESS_COMMAND = 'process.command';\nvar TMP_PROCESS_COMMAND_LINE = 'process.command_line';\nvar TMP_PROCESS_COMMAND_ARGS = 'process.command_args';\nvar TMP_PROCESS_OWNER = 'process.owner';\nvar TMP_PROCESS_RUNTIME_NAME = 'process.runtime.name';\nvar TMP_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\nvar TMP_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\nvar TMP_SERVICE_NAME = 'service.name';\nvar TMP_SERVICE_NAMESPACE = 'service.namespace';\nvar TMP_SERVICE_INSTANCE_ID = 'service.instance.id';\nvar TMP_SERVICE_VERSION = 'service.version';\nvar TMP_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';\nvar TMP_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';\nvar TMP_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';\nvar TMP_TELEMETRY_AUTO_VERSION = 'telemetry.auto.version';\nvar TMP_WEBENGINE_NAME = 'webengine.name';\nvar TMP_WEBENGINE_VERSION = 'webengine.version';\nvar TMP_WEBENGINE_DESCRIPTION = 'webengine.description';\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use ATTR_CLOUD_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_PROVIDER = TMP_CLOUD_PROVIDER;\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @deprecated Use ATTR_CLOUD_ACCOUNT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_ACCOUNT_ID = TMP_CLOUD_ACCOUNT_ID;\n/**\n * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n *\n * @deprecated Use ATTR_CLOUD_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_REGION = TMP_CLOUD_REGION;\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n *\n * @deprecated Use ATTR_CLOUD_AVAILABILITY_ZONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = TMP_CLOUD_AVAILABILITY_ZONE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use ATTR_CLOUD_PLATFORM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_PLATFORM = TMP_CLOUD_PLATFORM;\n/**\n * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CONTAINER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_CONTAINER_ARN = TMP_AWS_ECS_CONTAINER_ARN;\n/**\n * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_CLUSTER_ARN = TMP_AWS_ECS_CLUSTER_ARN;\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use ATTR_AWS_ECS_LAUNCHTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_LAUNCHTYPE = TMP_AWS_ECS_LAUNCHTYPE;\n/**\n * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_ARN = TMP_AWS_ECS_TASK_ARN;\n/**\n * The task definition family this task definition is a member of.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_FAMILY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_FAMILY = TMP_AWS_ECS_TASK_FAMILY;\n/**\n * The revision for this task definition.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_REVISION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_REVISION = TMP_AWS_ECS_TASK_REVISION;\n/**\n * The ARN of an EKS cluster.\n *\n * @deprecated Use ATTR_AWS_EKS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_EKS_CLUSTER_ARN = TMP_AWS_EKS_CLUSTER_ARN;\n/**\n * The name(s) of the AWS log group(s) an application is writing to.\n *\n * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_GROUP_NAMES = TMP_AWS_LOG_GROUP_NAMES;\n/**\n * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n *\n * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_GROUP_ARNS = TMP_AWS_LOG_GROUP_ARNS;\n/**\n * The name(s) of the AWS log stream(s) an application is writing to.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_STREAM_NAMES = TMP_AWS_LOG_STREAM_NAMES;\n/**\n * The ARN(s) of the AWS log stream(s).\n *\n * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_STREAM_ARNS = TMP_AWS_LOG_STREAM_ARNS;\n/**\n * Container name.\n *\n * @deprecated Use ATTR_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_NAME = TMP_CONTAINER_NAME;\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n *\n * @deprecated Use ATTR_CONTAINER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_ID = TMP_CONTAINER_ID;\n/**\n * The container runtime managing this container.\n *\n * @deprecated Use ATTR_CONTAINER_RUNTIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_RUNTIME = TMP_CONTAINER_RUNTIME;\n/**\n * Name of the image the container was built on.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_IMAGE_NAME = TMP_CONTAINER_IMAGE_NAME;\n/**\n * Container image tag.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_TAGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_IMAGE_TAG = TMP_CONTAINER_IMAGE_TAG;\n/**\n * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n *\n * @deprecated Use ATTR_DEPLOYMENT_ENVIRONMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = TMP_DEPLOYMENT_ENVIRONMENT;\n/**\n * A unique identifier representing the device.\n *\n * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n *\n * @deprecated Use ATTR_DEVICE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_ID = TMP_DEVICE_ID;\n/**\n * The model identifier for the device.\n *\n * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_IDENTIFIER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = TMP_DEVICE_MODEL_IDENTIFIER;\n/**\n * The marketing name for the device model.\n *\n * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_MODEL_NAME = TMP_DEVICE_MODEL_NAME;\n/**\n * The name of the single function that this runtime instance executes.\n *\n * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n *\n * @deprecated Use ATTR_FAAS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_NAME = TMP_FAAS_NAME;\n/**\n* The unique ID of the single function that this runtime instance executes.\n*\n* Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n*\n* @deprecated Use ATTR_CLOUD_RESOURCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMRESATTRS_FAAS_ID = TMP_FAAS_ID;\n/**\n* The immutable version of the function being executed.\n*\n* Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n*\n* @deprecated Use ATTR_FAAS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMRESATTRS_FAAS_VERSION = TMP_FAAS_VERSION;\n/**\n * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n *\n * Note: * **AWS Lambda:** Use the (full) log stream name.\n *\n * @deprecated Use ATTR_FAAS_INSTANCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_INSTANCE = TMP_FAAS_INSTANCE;\n/**\n * The amount of memory available to the serverless function in MiB.\n *\n * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n *\n * @deprecated Use ATTR_FAAS_MAX_MEMORY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_MAX_MEMORY = TMP_FAAS_MAX_MEMORY;\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n *\n * @deprecated Use ATTR_HOST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_ID = TMP_HOST_ID;\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @deprecated Use ATTR_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_NAME = TMP_HOST_NAME;\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @deprecated Use ATTR_HOST_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_TYPE = TMP_HOST_TYPE;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use ATTR_HOST_ARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_ARCH = TMP_HOST_ARCH;\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @deprecated Use ATTR_HOST_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_NAME = TMP_HOST_IMAGE_NAME;\n/**\n * VM image ID. For Cloud, this value is from the provider.\n *\n * @deprecated Use ATTR_HOST_IMAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_ID = TMP_HOST_IMAGE_ID;\n/**\n * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n *\n * @deprecated Use ATTR_HOST_IMAGE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_VERSION = TMP_HOST_IMAGE_VERSION;\n/**\n * The name of the cluster.\n *\n * @deprecated Use ATTR_K8S_CLUSTER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CLUSTER_NAME = TMP_K8S_CLUSTER_NAME;\n/**\n * The name of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NODE_NAME = TMP_K8S_NODE_NAME;\n/**\n * The UID of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NODE_UID = TMP_K8S_NODE_UID;\n/**\n * The name of the namespace that the pod is running in.\n *\n * @deprecated Use ATTR_K8S_NAMESPACE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NAMESPACE_NAME = TMP_K8S_NAMESPACE_NAME;\n/**\n * The UID of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_POD_UID = TMP_K8S_POD_UID;\n/**\n * The name of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_POD_NAME = TMP_K8S_POD_NAME;\n/**\n * The name of the Container in a Pod template.\n *\n * @deprecated Use ATTR_K8S_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CONTAINER_NAME = TMP_K8S_CONTAINER_NAME;\n/**\n * The UID of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_REPLICASET_UID = TMP_K8S_REPLICASET_UID;\n/**\n * The name of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_REPLICASET_NAME = TMP_K8S_REPLICASET_NAME;\n/**\n * The UID of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DEPLOYMENT_UID = TMP_K8S_DEPLOYMENT_UID;\n/**\n * The name of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DEPLOYMENT_NAME = TMP_K8S_DEPLOYMENT_NAME;\n/**\n * The UID of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_STATEFULSET_UID = TMP_K8S_STATEFULSET_UID;\n/**\n * The name of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_STATEFULSET_NAME = TMP_K8S_STATEFULSET_NAME;\n/**\n * The UID of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DAEMONSET_UID = TMP_K8S_DAEMONSET_UID;\n/**\n * The name of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DAEMONSET_NAME = TMP_K8S_DAEMONSET_NAME;\n/**\n * The UID of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_JOB_UID = TMP_K8S_JOB_UID;\n/**\n * The name of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_JOB_NAME = TMP_K8S_JOB_NAME;\n/**\n * The UID of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CRONJOB_UID = TMP_K8S_CRONJOB_UID;\n/**\n * The name of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CRONJOB_NAME = TMP_K8S_CRONJOB_NAME;\n/**\n * The operating system type.\n *\n * @deprecated Use ATTR_OS_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_TYPE = TMP_OS_TYPE;\n/**\n * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n *\n * @deprecated Use ATTR_OS_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_DESCRIPTION = TMP_OS_DESCRIPTION;\n/**\n * Human readable operating system name.\n *\n * @deprecated Use ATTR_OS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_NAME = TMP_OS_NAME;\n/**\n * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n *\n * @deprecated Use ATTR_OS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_VERSION = TMP_OS_VERSION;\n/**\n * Process identifier (PID).\n *\n * @deprecated Use ATTR_PROCESS_PID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_PID = TMP_PROCESS_PID;\n/**\n * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_EXECUTABLE_NAME = TMP_PROCESS_EXECUTABLE_NAME;\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_PATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_EXECUTABLE_PATH = TMP_PROCESS_EXECUTABLE_PATH;\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND = TMP_PROCESS_COMMAND;\n/**\n * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_LINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND_LINE = TMP_PROCESS_COMMAND_LINE;\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_ARGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND_ARGS = TMP_PROCESS_COMMAND_ARGS;\n/**\n * The username of the user that owns the process.\n *\n * @deprecated Use ATTR_PROCESS_OWNER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_OWNER = TMP_PROCESS_OWNER;\n/**\n * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_NAME = TMP_PROCESS_RUNTIME_NAME;\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_VERSION = TMP_PROCESS_RUNTIME_VERSION;\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION = TMP_PROCESS_RUNTIME_DESCRIPTION;\n/**\n * Logical name of the service.\n *\n * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n *\n * @deprecated Use ATTR_SERVICE_NAME.\n */\nexport var SEMRESATTRS_SERVICE_NAME = TMP_SERVICE_NAME;\n/**\n * A namespace for `service.name`.\n *\n * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @deprecated Use ATTR_SERVICE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_SERVICE_NAMESPACE = TMP_SERVICE_NAMESPACE;\n/**\n * The string ID of the service instance.\n *\n * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n *\n * @deprecated Use ATTR_SERVICE_INSTANCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_SERVICE_INSTANCE_ID = TMP_SERVICE_INSTANCE_ID;\n/**\n * The version string of the service API or implementation.\n *\n * @deprecated Use ATTR_SERVICE_VERSION.\n */\nexport var SEMRESATTRS_SERVICE_VERSION = TMP_SERVICE_VERSION;\n/**\n * The name of the telemetry SDK as defined above.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_NAME.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_NAME = TMP_TELEMETRY_SDK_NAME;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_LANGUAGE.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = TMP_TELEMETRY_SDK_LANGUAGE;\n/**\n * The version string of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_VERSION.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_VERSION = TMP_TELEMETRY_SDK_VERSION;\n/**\n * The version string of the auto instrumentation agent, if used.\n *\n * @deprecated Use ATTR_TELEMETRY_DISTRO_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_TELEMETRY_AUTO_VERSION = TMP_TELEMETRY_AUTO_VERSION;\n/**\n * The name of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_NAME = TMP_WEBENGINE_NAME;\n/**\n * The version of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_VERSION = TMP_WEBENGINE_VERSION;\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @deprecated Use ATTR_WEBENGINE_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_DESCRIPTION = TMP_WEBENGINE_DESCRIPTION;\n/**\n * Create exported Value Map for SemanticResourceAttributes values\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification\n */\nexport var SemanticResourceAttributes = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUD_PROVIDER,\n    TMP_CLOUD_ACCOUNT_ID,\n    TMP_CLOUD_REGION,\n    TMP_CLOUD_AVAILABILITY_ZONE,\n    TMP_CLOUD_PLATFORM,\n    TMP_AWS_ECS_CONTAINER_ARN,\n    TMP_AWS_ECS_CLUSTER_ARN,\n    TMP_AWS_ECS_LAUNCHTYPE,\n    TMP_AWS_ECS_TASK_ARN,\n    TMP_AWS_ECS_TASK_FAMILY,\n    TMP_AWS_ECS_TASK_REVISION,\n    TMP_AWS_EKS_CLUSTER_ARN,\n    TMP_AWS_LOG_GROUP_NAMES,\n    TMP_AWS_LOG_GROUP_ARNS,\n    TMP_AWS_LOG_STREAM_NAMES,\n    TMP_AWS_LOG_STREAM_ARNS,\n    TMP_CONTAINER_NAME,\n    TMP_CONTAINER_ID,\n    TMP_CONTAINER_RUNTIME,\n    TMP_CONTAINER_IMAGE_NAME,\n    TMP_CONTAINER_IMAGE_TAG,\n    TMP_DEPLOYMENT_ENVIRONMENT,\n    TMP_DEVICE_ID,\n    TMP_DEVICE_MODEL_IDENTIFIER,\n    TMP_DEVICE_MODEL_NAME,\n    TMP_FAAS_NAME,\n    TMP_FAAS_ID,\n    TMP_FAAS_VERSION,\n    TMP_FAAS_INSTANCE,\n    TMP_FAAS_MAX_MEMORY,\n    TMP_HOST_ID,\n    TMP_HOST_NAME,\n    TMP_HOST_TYPE,\n    TMP_HOST_ARCH,\n    TMP_HOST_IMAGE_NAME,\n    TMP_HOST_IMAGE_ID,\n    TMP_HOST_IMAGE_VERSION,\n    TMP_K8S_CLUSTER_NAME,\n    TMP_K8S_NODE_NAME,\n    TMP_K8S_NODE_UID,\n    TMP_K8S_NAMESPACE_NAME,\n    TMP_K8S_POD_UID,\n    TMP_K8S_POD_NAME,\n    TMP_K8S_CONTAINER_NAME,\n    TMP_K8S_REPLICASET_UID,\n    TMP_K8S_REPLICASET_NAME,\n    TMP_K8S_DEPLOYMENT_UID,\n    TMP_K8S_DEPLOYMENT_NAME,\n    TMP_K8S_STATEFULSET_UID,\n    TMP_K8S_STATEFULSET_NAME,\n    TMP_K8S_DAEMONSET_UID,\n    TMP_K8S_DAEMONSET_NAME,\n    TMP_K8S_JOB_UID,\n    TMP_K8S_JOB_NAME,\n    TMP_K8S_CRONJOB_UID,\n    TMP_K8S_CRONJOB_NAME,\n    TMP_OS_TYPE,\n    TMP_OS_DESCRIPTION,\n    TMP_OS_NAME,\n    TMP_OS_VERSION,\n    TMP_PROCESS_PID,\n    TMP_PROCESS_EXECUTABLE_NAME,\n    TMP_PROCESS_EXECUTABLE_PATH,\n    TMP_PROCESS_COMMAND,\n    TMP_PROCESS_COMMAND_LINE,\n    TMP_PROCESS_COMMAND_ARGS,\n    TMP_PROCESS_OWNER,\n    TMP_PROCESS_RUNTIME_NAME,\n    TMP_PROCESS_RUNTIME_VERSION,\n    TMP_PROCESS_RUNTIME_DESCRIPTION,\n    TMP_SERVICE_NAME,\n    TMP_SERVICE_NAMESPACE,\n    TMP_SERVICE_INSTANCE_ID,\n    TMP_SERVICE_VERSION,\n    TMP_TELEMETRY_SDK_NAME,\n    TMP_TELEMETRY_SDK_LANGUAGE,\n    TMP_TELEMETRY_SDK_VERSION,\n    TMP_TELEMETRY_AUTO_VERSION,\n    TMP_WEBENGINE_NAME,\n    TMP_WEBENGINE_VERSION,\n    TMP_WEBENGINE_DESCRIPTION,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nvar TMP_CLOUDPROVIDERVALUES_AWS = 'aws';\nvar TMP_CLOUDPROVIDERVALUES_AZURE = 'azure';\nvar TMP_CLOUDPROVIDERVALUES_GCP = 'gcp';\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_ALIBABA_CLOUD = TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_AWS = TMP_CLOUDPROVIDERVALUES_AWS;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_AZURE = TMP_CLOUDPROVIDERVALUES_AZURE;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_GCP = TMP_CLOUDPROVIDERVALUES_GCP;\n/**\n * The constant map of values for CloudProviderValues.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport var CloudProviderValues = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_CLOUDPROVIDERVALUES_AWS,\n    TMP_CLOUDPROVIDERVALUES_AZURE,\n    TMP_CLOUDPROVIDERVALUES_GCP,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = 'alibaba_cloud_ecs';\nvar TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = 'alibaba_cloud_fc';\nvar TMP_CLOUDPLATFORMVALUES_AWS_EC2 = 'aws_ec2';\nvar TMP_CLOUDPLATFORMVALUES_AWS_ECS = 'aws_ecs';\nvar TMP_CLOUDPLATFORMVALUES_AWS_EKS = 'aws_eks';\nvar TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA = 'aws_lambda';\nvar TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = 'aws_elastic_beanstalk';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_VM = 'azure_vm';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = 'azure_container_instances';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_AKS = 'azure_aks';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = 'azure_functions';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = 'azure_app_service';\nvar TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = 'gcp_compute_engine';\nvar TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = 'gcp_cloud_run';\nvar TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = 'gcp_kubernetes_engine';\nvar TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = 'gcp_cloud_functions';\nvar TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE = 'gcp_app_engine';\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_EC2 = TMP_CLOUDPLATFORMVALUES_AWS_EC2;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_ECS = TMP_CLOUDPLATFORMVALUES_AWS_ECS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_EKS = TMP_CLOUDPLATFORMVALUES_AWS_EKS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_LAMBDA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_LAMBDA = TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_VM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_VM = TMP_CLOUDPLATFORMVALUES_AZURE_VM;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_AKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_AKS = TMP_CLOUDPLATFORMVALUES_AZURE_AKS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_APP_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE;\n/**\n * The constant map of values for CloudPlatformValues.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport var CloudPlatformValues = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC,\n    TMP_CLOUDPLATFORMVALUES_AWS_EC2,\n    TMP_CLOUDPLATFORMVALUES_AWS_ECS,\n    TMP_CLOUDPLATFORMVALUES_AWS_EKS,\n    TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA,\n    TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK,\n    TMP_CLOUDPLATFORMVALUES_AZURE_VM,\n    TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES,\n    TMP_CLOUDPLATFORMVALUES_AZURE_AKS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,\n    TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN,\n    TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_AWSECSLAUNCHTYPEVALUES_EC2 = 'ec2';\nvar TMP_AWSECSLAUNCHTYPEVALUES_FARGATE = 'fargate';\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var AWSECSLAUNCHTYPEVALUES_EC2 = TMP_AWSECSLAUNCHTYPEVALUES_EC2;\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_FARGATE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var AWSECSLAUNCHTYPEVALUES_FARGATE = TMP_AWSECSLAUNCHTYPEVALUES_FARGATE;\n/**\n * The constant map of values for AwsEcsLaunchtypeValues.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport var AwsEcsLaunchtypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_AWSECSLAUNCHTYPEVALUES_EC2,\n    TMP_AWSECSLAUNCHTYPEVALUES_FARGATE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_HOSTARCHVALUES_AMD64 = 'amd64';\nvar TMP_HOSTARCHVALUES_ARM32 = 'arm32';\nvar TMP_HOSTARCHVALUES_ARM64 = 'arm64';\nvar TMP_HOSTARCHVALUES_IA64 = 'ia64';\nvar TMP_HOSTARCHVALUES_PPC32 = 'ppc32';\nvar TMP_HOSTARCHVALUES_PPC64 = 'ppc64';\nvar TMP_HOSTARCHVALUES_X86 = 'x86';\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_AMD64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_AMD64 = TMP_HOSTARCHVALUES_AMD64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_ARM32 = TMP_HOSTARCHVALUES_ARM32;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_ARM64 = TMP_HOSTARCHVALUES_ARM64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_IA64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_IA64 = TMP_HOSTARCHVALUES_IA64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_PPC32 = TMP_HOSTARCHVALUES_PPC32;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_PPC64 = TMP_HOSTARCHVALUES_PPC64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_X86 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_X86 = TMP_HOSTARCHVALUES_X86;\n/**\n * The constant map of values for HostArchValues.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport var HostArchValues = \n/*#__PURE__*/ createConstMap([\n    TMP_HOSTARCHVALUES_AMD64,\n    TMP_HOSTARCHVALUES_ARM32,\n    TMP_HOSTARCHVALUES_ARM64,\n    TMP_HOSTARCHVALUES_IA64,\n    TMP_HOSTARCHVALUES_PPC32,\n    TMP_HOSTARCHVALUES_PPC64,\n    TMP_HOSTARCHVALUES_X86,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for OsTypeValues enum definition\n *\n * The operating system type.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_OSTYPEVALUES_WINDOWS = 'windows';\nvar TMP_OSTYPEVALUES_LINUX = 'linux';\nvar TMP_OSTYPEVALUES_DARWIN = 'darwin';\nvar TMP_OSTYPEVALUES_FREEBSD = 'freebsd';\nvar TMP_OSTYPEVALUES_NETBSD = 'netbsd';\nvar TMP_OSTYPEVALUES_OPENBSD = 'openbsd';\nvar TMP_OSTYPEVALUES_DRAGONFLYBSD = 'dragonflybsd';\nvar TMP_OSTYPEVALUES_HPUX = 'hpux';\nvar TMP_OSTYPEVALUES_AIX = 'aix';\nvar TMP_OSTYPEVALUES_SOLARIS = 'solaris';\nvar TMP_OSTYPEVALUES_Z_OS = 'z_os';\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_WINDOWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_WINDOWS = TMP_OSTYPEVALUES_WINDOWS;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_LINUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_LINUX = TMP_OSTYPEVALUES_LINUX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DARWIN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_DARWIN = TMP_OSTYPEVALUES_DARWIN;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_FREEBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_FREEBSD = TMP_OSTYPEVALUES_FREEBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_NETBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_NETBSD = TMP_OSTYPEVALUES_NETBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_OPENBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_OPENBSD = TMP_OSTYPEVALUES_OPENBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DRAGONFLYBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_DRAGONFLYBSD = TMP_OSTYPEVALUES_DRAGONFLYBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_HPUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_HPUX = TMP_OSTYPEVALUES_HPUX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_AIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_AIX = TMP_OSTYPEVALUES_AIX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_SOLARIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_SOLARIS = TMP_OSTYPEVALUES_SOLARIS;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_Z_OS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_Z_OS = TMP_OSTYPEVALUES_Z_OS;\n/**\n * The constant map of values for OsTypeValues.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport var OsTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_OSTYPEVALUES_WINDOWS,\n    TMP_OSTYPEVALUES_LINUX,\n    TMP_OSTYPEVALUES_DARWIN,\n    TMP_OSTYPEVALUES_FREEBSD,\n    TMP_OSTYPEVALUES_NETBSD,\n    TMP_OSTYPEVALUES_OPENBSD,\n    TMP_OSTYPEVALUES_DRAGONFLYBSD,\n    TMP_OSTYPEVALUES_HPUX,\n    TMP_OSTYPEVALUES_AIX,\n    TMP_OSTYPEVALUES_SOLARIS,\n    TMP_OSTYPEVALUES_Z_OS,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_CPP = 'cpp';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET = 'dotnet';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG = 'erlang';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_GO = 'go';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA = 'java';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS = 'nodejs';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_PHP = 'php';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON = 'python';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY = 'ruby';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS = 'webjs';\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_CPP.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_CPP = TMP_TELEMETRYSDKLANGUAGEVALUES_CPP;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_DOTNET = TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_ERLANG = TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_GO.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_GO = TMP_TELEMETRYSDKLANGUAGEVALUES_GO;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_JAVA.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_JAVA = TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_NODEJS = TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PHP.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_PHP = TMP_TELEMETRYSDKLANGUAGEVALUES_PHP;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_PYTHON = TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_RUBY.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_RUBY = TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_WEBJS = TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS;\n/**\n * The constant map of values for TelemetrySdkLanguageValues.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport var TelemetrySdkLanguageValues = \n/*#__PURE__*/ createConstMap([\n    TMP_TELEMETRYSDKLANGUAGEVALUES_CPP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_GO,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PHP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n]);\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates/registry/stable/attributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n/**\n * ASP.NET Core exception middleware handling result\n *\n * @example handled\n * @example unhandled\n */\nexport var ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT = 'aspnetcore.diagnostics.exception.result';\n/**\n  * Enum value \"aborted\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport var ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED = \"aborted\";\n/**\n  * Enum value \"handled\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport var ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED = \"handled\";\n/**\n  * Enum value \"skipped\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport var ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED = \"skipped\";\n/**\n  * Enum value \"unhandled\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport var ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED = \"unhandled\";\n/**\n * Full type name of the [`IExceptionHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.diagnostics.iexceptionhandler) implementation that handled the exception.\n *\n * @example Contoso.MyHandler\n */\nexport var ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE = 'aspnetcore.diagnostics.handler.type';\n/**\n * Rate limiting policy name.\n *\n * @example fixed\n * @example sliding\n * @example token\n */\nexport var ATTR_ASPNETCORE_RATE_LIMITING_POLICY = 'aspnetcore.rate_limiting.policy';\n/**\n * Rate-limiting result, shows whether the lease was acquired or contains a rejection reason\n *\n * @example acquired\n * @example request_canceled\n */\nexport var ATTR_ASPNETCORE_RATE_LIMITING_RESULT = 'aspnetcore.rate_limiting.result';\n/**\n  * Enum value \"acquired\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport var ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED = \"acquired\";\n/**\n  * Enum value \"endpoint_limiter\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport var ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER = \"endpoint_limiter\";\n/**\n  * Enum value \"global_limiter\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport var ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER = \"global_limiter\";\n/**\n  * Enum value \"request_canceled\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport var ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED = \"request_canceled\";\n/**\n * Flag indicating if request was handled by the application pipeline.\n *\n * @example true\n */\nexport var ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED = 'aspnetcore.request.is_unhandled';\n/**\n * A value that indicates whether the matched route is a fallback route.\n *\n * @example true\n */\nexport var ATTR_ASPNETCORE_ROUTING_IS_FALLBACK = 'aspnetcore.routing.is_fallback';\n/**\n * Match result - success or failure\n *\n * @example success\n * @example failure\n */\nexport var ATTR_ASPNETCORE_ROUTING_MATCH_STATUS = 'aspnetcore.routing.match_status';\n/**\n  * Enum value \"failure\" for attribute {@link ATTR_ASPNETCORE_ROUTING_MATCH_STATUS}.\n  */\nexport var ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE = \"failure\";\n/**\n  * Enum value \"success\" for attribute {@link ATTR_ASPNETCORE_ROUTING_MATCH_STATUS}.\n  */\nexport var ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS = \"success\";\n/**\n * Client address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n *\n * @example client.example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n *\n * @note When observed from the server side, and when communicating through an intermediary, `client.address` **SHOULD** represent the client address behind any intermediaries,  for example proxies, if it's available.\n */\nexport var ATTR_CLIENT_ADDRESS = 'client.address';\n/**\n * Client port number.\n *\n * @example 65123\n *\n * @note When observed from the server side, and when communicating through an intermediary, `client.port` **SHOULD** represent the client port behind any intermediaries,  for example proxies, if it's available.\n */\nexport var ATTR_CLIENT_PORT = 'client.port';\n/**\n * Name of the garbage collector managed heap generation.\n *\n * @example gen0\n * @example gen1\n * @example gen2\n */\nexport var ATTR_DOTNET_GC_HEAP_GENERATION = 'dotnet.gc.heap.generation';\n/**\n  * Enum value \"gen0\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport var DOTNET_GC_HEAP_GENERATION_VALUE_GEN0 = \"gen0\";\n/**\n  * Enum value \"gen1\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport var DOTNET_GC_HEAP_GENERATION_VALUE_GEN1 = \"gen1\";\n/**\n  * Enum value \"gen2\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport var DOTNET_GC_HEAP_GENERATION_VALUE_GEN2 = \"gen2\";\n/**\n  * Enum value \"loh\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport var DOTNET_GC_HEAP_GENERATION_VALUE_LOH = \"loh\";\n/**\n  * Enum value \"poh\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport var DOTNET_GC_HEAP_GENERATION_VALUE_POH = \"poh\";\n/**\n * Describes a class of error the operation ended with.\n *\n * @example timeout\n * @example java.net.UnknownHostException\n * @example server_certificate_invalid\n * @example 500\n *\n * @note The `error.type` **SHOULD** be predictable, and **SHOULD** have low cardinality.\n *\n * When `error.type` is set to a type (e.g., an exception type), its\n * canonical class name identifying the type within the artifact **SHOULD** be used.\n *\n * Instrumentations **SHOULD** document the list of errors they report.\n *\n * The cardinality of `error.type` within one instrumentation library **SHOULD** be low.\n * Telemetry consumers that aggregate data from multiple instrumentation libraries and applications\n * should be prepared for `error.type` to have high cardinality at query time when no\n * additional filters are applied.\n *\n * If the operation has completed successfully, instrumentations **SHOULD NOT** set `error.type`.\n *\n * If a specific domain defines its own set of error identifiers (such as HTTP or gRPC status codes),\n * it's **RECOMMENDED** to:\n *\n *   - Use a domain-specific attribute\n *   - Set `error.type` to capture all errors, regardless of whether they are defined within the domain-specific set or not.\n */\nexport var ATTR_ERROR_TYPE = 'error.type';\n/**\n  * Enum value \"_OTHER\" for attribute {@link ATTR_ERROR_TYPE}.\n  */\nexport var ERROR_TYPE_VALUE_OTHER = \"_OTHER\";\n/**\n * Indicates that the exception is escaping the scope of the span.\n *\n * @deprecated It's no longer recommended to record exceptions that are handled and do not escape the scope of a span.\n */\nexport var ATTR_EXCEPTION_ESCAPED = 'exception.escaped';\n/**\n * The exception message.\n *\n * @example Division by zero\n * @example Can't convert 'int' object to str implicitly\n */\nexport var ATTR_EXCEPTION_MESSAGE = 'exception.message';\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @example \"Exception in thread \"main\" java.lang.RuntimeException: Test exception\\\\n at com.example.GenerateTrace.methodB(GenerateTrace.java:13)\\\\n at com.example.GenerateTrace.methodA(GenerateTrace.java:9)\\\\n at com.example.GenerateTrace.main(GenerateTrace.java:5)\\\\n\"\n */\nexport var ATTR_EXCEPTION_STACKTRACE = 'exception.stacktrace';\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n *\n * @example java.net.ConnectException\n * @example OSError\n */\nexport var ATTR_EXCEPTION_TYPE = 'exception.type';\n/**\n * HTTP request headers, `<key>` being the normalized HTTP Header name (lowercase), the value being the header values.\n *\n * @example http.request.header.content-type=[\"application/json\"]\n * @example http.request.header.x-forwarded-for=[\"1.2.3.4\", \"1.2.3.5\"]\n *\n * @note Instrumentations **SHOULD** require an explicit configuration of which headers are to be captured. Including all request headers can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * The `User-Agent` header is already captured in the `user_agent.original` attribute. Users **MAY** explicitly configure instrumentations to capture them even though it is not recommended.\n * The attribute value **MUST** consist of either multiple header values as an array of strings or a single-item array containing a possibly comma-concatenated string, depending on the way the HTTP library provides access to headers.\n */\nexport var ATTR_HTTP_REQUEST_HEADER = function (key) { return \"http.request.header.\".concat(key); };\n/**\n * HTTP request method.\n *\n * @example GET\n * @example POST\n * @example HEAD\n *\n * @note HTTP request method value **SHOULD** be \"known\" to the instrumentation.\n * By default, this convention defines \"known\" methods as the ones listed in [RFC9110](https://www.rfc-editor.org/rfc/rfc9110.html#name-methods)\n * and the PATCH method defined in [RFC5789](https://www.rfc-editor.org/rfc/rfc5789.html).\n *\n * If the HTTP request method is not known to instrumentation, it **MUST** set the `http.request.method` attribute to `_OTHER`.\n *\n * If the HTTP instrumentation could end up converting valid HTTP request methods to `_OTHER`, then it **MUST** provide a way to override\n * the list of known HTTP methods. If this override is done via environment variable, then the environment variable **MUST** be named\n * OTEL_INSTRUMENTATION_HTTP_KNOWN_METHODS and support a comma-separated list of case-sensitive known HTTP methods\n * (this list **MUST** be a full override of the default known method, it is not a list of known methods in addition to the defaults).\n *\n * HTTP method names are case-sensitive and `http.request.method` attribute value **MUST** match a known HTTP method name exactly.\n * Instrumentations for specific web frameworks that consider HTTP methods to be case insensitive, **SHOULD** populate a canonical equivalent.\n * Tracing instrumentations that do so, **MUST** also set `http.request.method_original` to the original value.\n */\nexport var ATTR_HTTP_REQUEST_METHOD = 'http.request.method';\n/**\n  * Enum value \"_OTHER\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_OTHER = \"_OTHER\";\n/**\n  * Enum value \"CONNECT\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_CONNECT = \"CONNECT\";\n/**\n  * Enum value \"DELETE\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_DELETE = \"DELETE\";\n/**\n  * Enum value \"GET\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_GET = \"GET\";\n/**\n  * Enum value \"HEAD\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_HEAD = \"HEAD\";\n/**\n  * Enum value \"OPTIONS\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_OPTIONS = \"OPTIONS\";\n/**\n  * Enum value \"PATCH\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_PATCH = \"PATCH\";\n/**\n  * Enum value \"POST\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_POST = \"POST\";\n/**\n  * Enum value \"PUT\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_PUT = \"PUT\";\n/**\n  * Enum value \"TRACE\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_TRACE = \"TRACE\";\n/**\n * Original HTTP method sent by the client in the request line.\n *\n * @example GeT\n * @example ACL\n * @example foo\n */\nexport var ATTR_HTTP_REQUEST_METHOD_ORIGINAL = 'http.request.method_original';\n/**\n * The ordinal number of request resending attempt (for any reason, including redirects).\n *\n * @example 3\n *\n * @note The resend count **SHOULD** be updated each time an HTTP request gets resent by the client, regardless of what was the cause of the resending (e.g. redirection, authorization failure, 503 Server Unavailable, network issues, or any other).\n */\nexport var ATTR_HTTP_REQUEST_RESEND_COUNT = 'http.request.resend_count';\n/**\n * HTTP response headers, `<key>` being the normalized HTTP Header name (lowercase), the value being the header values.\n *\n * @example http.response.header.content-type=[\"application/json\"]\n * @example http.response.header.my-custom-header=[\"abc\", \"def\"]\n *\n * @note Instrumentations **SHOULD** require an explicit configuration of which headers are to be captured. Including all response headers can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * Users **MAY** explicitly configure instrumentations to capture them even though it is not recommended.\n * The attribute value **MUST** consist of either multiple header values as an array of strings or a single-item array containing a possibly comma-concatenated string, depending on the way the HTTP library provides access to headers.\n */\nexport var ATTR_HTTP_RESPONSE_HEADER = function (key) { return \"http.response.header.\".concat(key); };\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n *\n * @example 200\n */\nexport var ATTR_HTTP_RESPONSE_STATUS_CODE = 'http.response.status_code';\n/**\n * The matched route, that is, the path template in the format used by the respective server framework.\n *\n * @example /users/:userID?\n * @example {controller}/{action}/{id?}\n *\n * @note **MUST NOT** be populated when this is not supported by the HTTP server framework as the route attribute should have low-cardinality and the URI path can NOT substitute it.\n * **SHOULD** include the [application root](/docs/http/http-spans.md#http-server-definitions) if there is one.\n */\nexport var ATTR_HTTP_ROUTE = 'http.route';\n/**\n * Name of the garbage collector action.\n *\n * @example end of minor GC\n * @example end of major GC\n *\n * @note Garbage collector action is generally obtained via [GarbageCollectionNotificationInfo#getGcAction()](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.management/com/sun/management/GarbageCollectionNotificationInfo.html#getGcAction()).\n */\nexport var ATTR_JVM_GC_ACTION = 'jvm.gc.action';\n/**\n * Name of the garbage collector.\n *\n * @example G1 Young Generation\n * @example G1 Old Generation\n *\n * @note Garbage collector name is generally obtained via [GarbageCollectionNotificationInfo#getGcName()](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.management/com/sun/management/GarbageCollectionNotificationInfo.html#getGcName()).\n */\nexport var ATTR_JVM_GC_NAME = 'jvm.gc.name';\n/**\n * Name of the memory pool.\n *\n * @example G1 Old Gen\n * @example G1 Eden space\n * @example G1 Survivor Space\n *\n * @note Pool names are generally obtained via [MemoryPoolMXBean#getName()](https://docs.oracle.com/en/java/javase/11/docs/api/java.management/java/lang/management/MemoryPoolMXBean.html#getName()).\n */\nexport var ATTR_JVM_MEMORY_POOL_NAME = 'jvm.memory.pool.name';\n/**\n * The type of memory.\n *\n * @example heap\n * @example non_heap\n */\nexport var ATTR_JVM_MEMORY_TYPE = 'jvm.memory.type';\n/**\n  * Enum value \"heap\" for attribute {@link ATTR_JVM_MEMORY_TYPE}.\n  */\nexport var JVM_MEMORY_TYPE_VALUE_HEAP = \"heap\";\n/**\n  * Enum value \"non_heap\" for attribute {@link ATTR_JVM_MEMORY_TYPE}.\n  */\nexport var JVM_MEMORY_TYPE_VALUE_NON_HEAP = \"non_heap\";\n/**\n * Whether the thread is daemon or not.\n */\nexport var ATTR_JVM_THREAD_DAEMON = 'jvm.thread.daemon';\n/**\n * State of the thread.\n *\n * @example runnable\n * @example blocked\n */\nexport var ATTR_JVM_THREAD_STATE = 'jvm.thread.state';\n/**\n  * Enum value \"blocked\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_BLOCKED = \"blocked\";\n/**\n  * Enum value \"new\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_NEW = \"new\";\n/**\n  * Enum value \"runnable\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_RUNNABLE = \"runnable\";\n/**\n  * Enum value \"terminated\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_TERMINATED = \"terminated\";\n/**\n  * Enum value \"timed_waiting\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_TIMED_WAITING = \"timed_waiting\";\n/**\n  * Enum value \"waiting\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_WAITING = \"waiting\";\n/**\n * Local address of the network connection - IP address or Unix domain socket name.\n *\n * @example 10.1.2.80\n * @example /tmp/my.sock\n */\nexport var ATTR_NETWORK_LOCAL_ADDRESS = 'network.local.address';\n/**\n * Local port number of the network connection.\n *\n * @example 65123\n */\nexport var ATTR_NETWORK_LOCAL_PORT = 'network.local.port';\n/**\n * Peer address of the network connection - IP address or Unix domain socket name.\n *\n * @example 10.1.2.80\n * @example /tmp/my.sock\n */\nexport var ATTR_NETWORK_PEER_ADDRESS = 'network.peer.address';\n/**\n * Peer port number of the network connection.\n *\n * @example 65123\n */\nexport var ATTR_NETWORK_PEER_PORT = 'network.peer.port';\n/**\n * [OSI application layer](https://wikipedia.org/wiki/Application_layer) or non-OSI equivalent.\n *\n * @example amqp\n * @example http\n * @example mqtt\n *\n * @note The value **SHOULD** be normalized to lowercase.\n */\nexport var ATTR_NETWORK_PROTOCOL_NAME = 'network.protocol.name';\n/**\n * The actual version of the protocol used for network communication.\n *\n * @example 1.1\n * @example 2\n *\n * @note If protocol version is subject to negotiation (for example using [ALPN](https://www.rfc-editor.org/rfc/rfc7301.html)), this attribute **SHOULD** be set to the negotiated version. If the actual protocol version is not known, this attribute **SHOULD NOT** be set.\n */\nexport var ATTR_NETWORK_PROTOCOL_VERSION = 'network.protocol.version';\n/**\n * [OSI transport layer](https://wikipedia.org/wiki/Transport_layer) or [inter-process communication method](https://wikipedia.org/wiki/Inter-process_communication).\n *\n * @example tcp\n * @example udp\n *\n * @note The value **SHOULD** be normalized to lowercase.\n *\n * Consider always setting the transport when setting a port number, since\n * a port number is ambiguous without knowing the transport. For example\n * different processes could be listening on TCP port 12345 and UDP port 12345.\n */\nexport var ATTR_NETWORK_TRANSPORT = 'network.transport';\n/**\n  * Enum value \"pipe\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport var NETWORK_TRANSPORT_VALUE_PIPE = \"pipe\";\n/**\n  * Enum value \"quic\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport var NETWORK_TRANSPORT_VALUE_QUIC = \"quic\";\n/**\n  * Enum value \"tcp\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport var NETWORK_TRANSPORT_VALUE_TCP = \"tcp\";\n/**\n  * Enum value \"udp\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport var NETWORK_TRANSPORT_VALUE_UDP = \"udp\";\n/**\n  * Enum value \"unix\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport var NETWORK_TRANSPORT_VALUE_UNIX = \"unix\";\n/**\n * [OSI network layer](https://wikipedia.org/wiki/Network_layer) or non-OSI equivalent.\n *\n * @example ipv4\n * @example ipv6\n *\n * @note The value **SHOULD** be normalized to lowercase.\n */\nexport var ATTR_NETWORK_TYPE = 'network.type';\n/**\n  * Enum value \"ipv4\" for attribute {@link ATTR_NETWORK_TYPE}.\n  */\nexport var NETWORK_TYPE_VALUE_IPV4 = \"ipv4\";\n/**\n  * Enum value \"ipv6\" for attribute {@link ATTR_NETWORK_TYPE}.\n  */\nexport var NETWORK_TYPE_VALUE_IPV6 = \"ipv6\";\n/**\n * The name of the instrumentation scope - (`InstrumentationScope.Name` in OTLP).\n *\n * @example io.opentelemetry.contrib.mongodb\n */\nexport var ATTR_OTEL_SCOPE_NAME = 'otel.scope.name';\n/**\n * The version of the instrumentation scope - (`InstrumentationScope.Version` in OTLP).\n *\n * @example 1.0.0\n */\nexport var ATTR_OTEL_SCOPE_VERSION = 'otel.scope.version';\n/**\n * Name of the code, either \"OK\" or \"ERROR\". **MUST NOT** be set if the status code is UNSET.\n */\nexport var ATTR_OTEL_STATUS_CODE = 'otel.status_code';\n/**\n  * Enum value \"ERROR\" for attribute {@link ATTR_OTEL_STATUS_CODE}.\n  */\nexport var OTEL_STATUS_CODE_VALUE_ERROR = \"ERROR\";\n/**\n  * Enum value \"OK\" for attribute {@link ATTR_OTEL_STATUS_CODE}.\n  */\nexport var OTEL_STATUS_CODE_VALUE_OK = \"OK\";\n/**\n * Description of the Status if it has a value, otherwise not set.\n *\n * @example resource not found\n */\nexport var ATTR_OTEL_STATUS_DESCRIPTION = 'otel.status_description';\n/**\n * Server domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n *\n * @example example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n *\n * @note When observed from the client side, and when communicating through an intermediary, `server.address` **SHOULD** represent the server address behind any intermediaries, for example proxies, if it's available.\n */\nexport var ATTR_SERVER_ADDRESS = 'server.address';\n/**\n * Server port number.\n *\n * @example 80\n * @example 8080\n * @example 443\n *\n * @note When observed from the client side, and when communicating through an intermediary, `server.port` **SHOULD** represent the server port behind any intermediaries, for example proxies, if it's available.\n */\nexport var ATTR_SERVER_PORT = 'server.port';\n/**\n * Logical name of the service.\n *\n * @example shoppingcart\n *\n * @note **MUST** be the same for all instances of horizontally scaled services. If the value was not specified, SDKs **MUST** fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value **MUST** be set to `unknown_service`.\n */\nexport var ATTR_SERVICE_NAME = 'service.name';\n/**\n * The version string of the service API or implementation. The format is not defined by these conventions.\n *\n * @example 2.0.0\n * @example a01dbef8a\n */\nexport var ATTR_SERVICE_VERSION = 'service.version';\n/**\n * SignalR HTTP connection closure status.\n *\n * @example app_shutdown\n * @example timeout\n */\nexport var ATTR_SIGNALR_CONNECTION_STATUS = 'signalr.connection.status';\n/**\n  * Enum value \"app_shutdown\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport var SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN = \"app_shutdown\";\n/**\n  * Enum value \"normal_closure\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport var SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE = \"normal_closure\";\n/**\n  * Enum value \"timeout\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport var SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT = \"timeout\";\n/**\n * [SignalR transport type](https://github.com/dotnet/aspnetcore/blob/main/src/SignalR/docs/specs/TransportProtocols.md)\n *\n * @example web_sockets\n * @example long_polling\n */\nexport var ATTR_SIGNALR_TRANSPORT = 'signalr.transport';\n/**\n  * Enum value \"long_polling\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport var SIGNALR_TRANSPORT_VALUE_LONG_POLLING = \"long_polling\";\n/**\n  * Enum value \"server_sent_events\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport var SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS = \"server_sent_events\";\n/**\n  * Enum value \"web_sockets\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport var SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS = \"web_sockets\";\n/**\n * The language of the telemetry SDK.\n */\nexport var ATTR_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';\n/**\n  * Enum value \"cpp\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_CPP = \"cpp\";\n/**\n  * Enum value \"dotnet\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET = \"dotnet\";\n/**\n  * Enum value \"erlang\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG = \"erlang\";\n/**\n  * Enum value \"go\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_GO = \"go\";\n/**\n  * Enum value \"java\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_JAVA = \"java\";\n/**\n  * Enum value \"nodejs\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS = \"nodejs\";\n/**\n  * Enum value \"php\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_PHP = \"php\";\n/**\n  * Enum value \"python\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON = \"python\";\n/**\n  * Enum value \"ruby\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_RUBY = \"ruby\";\n/**\n  * Enum value \"rust\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_RUST = \"rust\";\n/**\n  * Enum value \"swift\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT = \"swift\";\n/**\n  * Enum value \"webjs\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS = \"webjs\";\n/**\n * The name of the telemetry SDK as defined above.\n *\n * @example opentelemetry\n *\n * @note The OpenTelemetry SDK **MUST** set the `telemetry.sdk.name` attribute to `opentelemetry`.\n * If another SDK, like a fork or a vendor-provided implementation, is used, this SDK **MUST** set the\n * `telemetry.sdk.name` attribute to the fully-qualified class or module name of this SDK's main entry point\n * or another suitable identifier depending on the language.\n * The identifier `opentelemetry` is reserved and **MUST NOT** be used in this case.\n * All custom identifiers **SHOULD** be stable across different versions of an implementation.\n */\nexport var ATTR_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';\n/**\n * The version string of the telemetry SDK.\n *\n * @example 1.2.3\n */\nexport var ATTR_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';\n/**\n * The [URI fragment](https://www.rfc-editor.org/rfc/rfc3986#section-3.5) component\n *\n * @example SemConv\n */\nexport var ATTR_URL_FRAGMENT = 'url.fragment';\n/**\n * Absolute URL describing a network resource according to [RFC3986](https://www.rfc-editor.org/rfc/rfc3986)\n *\n * @example https://www.foo.bar/search?q=OpenTelemetry#SemConv\n * @example //localhost\n *\n * @note For network calls, URL usually has `scheme://host[:port][path][?query][#fragment]` format, where the fragment\n * is not transmitted over HTTP, but if it is known, it **SHOULD** be included nevertheless.\n *\n * `url.full` **MUST NOT** contain credentials passed via URL in form of `https://username:password@www.example.com/`.\n * In such case username and password **SHOULD** be redacted and attribute's value **SHOULD** be `https://REDACTED:REDACTED@www.example.com/`.\n *\n * `url.full` **SHOULD** capture the absolute URL when it is available (or can be reconstructed).\n *\n * Sensitive content provided in `url.full` **SHOULD** be scrubbed when instrumentations can identify it.\n *\n *\n * Query string values for the following keys **SHOULD** be redacted by default and replaced by the\n * value `REDACTED`:\n *\n *   - [`AWSAccessKeyId`](https://docs.aws.amazon.com/AmazonS3/latest/userguide/RESTAuthentication.html#RESTAuthenticationQueryStringAuth)\n *   - [`Signature`](https://docs.aws.amazon.com/AmazonS3/latest/userguide/RESTAuthentication.html#RESTAuthenticationQueryStringAuth)\n *   - [`sig`](https://learn.microsoft.com/azure/storage/common/storage-sas-overview#sas-token)\n *   - [`X-Goog-Signature`](https://cloud.google.com/storage/docs/access-control/signed-urls)\n *\n * This list is subject to change over time.\n *\n * When a query string value is redacted, the query string key **SHOULD** still be preserved, e.g.\n * `https://www.example.com/path?color=blue&sig=REDACTED`.\n */\nexport var ATTR_URL_FULL = 'url.full';\n/**\n * The [URI path](https://www.rfc-editor.org/rfc/rfc3986#section-3.3) component\n *\n * @example /search\n *\n * @note Sensitive content provided in `url.path` **SHOULD** be scrubbed when instrumentations can identify it.\n */\nexport var ATTR_URL_PATH = 'url.path';\n/**\n * The [URI query](https://www.rfc-editor.org/rfc/rfc3986#section-3.4) component\n *\n * @example q=OpenTelemetry\n *\n * @note Sensitive content provided in `url.query` **SHOULD** be scrubbed when instrumentations can identify it.\n *\n *\n * Query string values for the following keys **SHOULD** be redacted by default and replaced by the value `REDACTED`:\n *\n *   - [`AWSAccessKeyId`](https://docs.aws.amazon.com/AmazonS3/latest/userguide/RESTAuthentication.html#RESTAuthenticationQueryStringAuth)\n *   - [`Signature`](https://docs.aws.amazon.com/AmazonS3/latest/userguide/RESTAuthentication.html#RESTAuthenticationQueryStringAuth)\n *   - [`sig`](https://learn.microsoft.com/azure/storage/common/storage-sas-overview#sas-token)\n *   - [`X-Goog-Signature`](https://cloud.google.com/storage/docs/access-control/signed-urls)\n *\n * This list is subject to change over time.\n *\n * When a query string value is redacted, the query string key **SHOULD** still be preserved, e.g.\n * `q=OpenTelemetry&sig=REDACTED`.\n */\nexport var ATTR_URL_QUERY = 'url.query';\n/**\n * The [URI scheme](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) component identifying the used protocol.\n *\n * @example https\n * @example ftp\n * @example telnet\n */\nexport var ATTR_URL_SCHEME = 'url.scheme';\n/**\n * Value of the [HTTP User-Agent](https://www.rfc-editor.org/rfc/rfc9110.html#field.user-agent) header sent by the client.\n *\n * @example CERN-LineMode/2.15 libwww/2.17b3\n * @example Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.2 Mobile/15E148 Safari/604.1\n * @example YourApp/1.0.0 grpc-java-okhttp/1.27.2\n */\nexport var ATTR_USER_AGENT_ORIGINAL = 'user_agent.original';\n//# sourceMappingURL=stable_attributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport var BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport var BAGGAGE_ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexport var BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport var BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n//# sourceMappingURL=constants.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { baggageEntryMetadataFromString, } from '@opentelemetry/api';\nimport { BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_PROPERTIES_SEPARATOR, BAGGAGE_KEY_PAIR_SEPARATOR, BAGGAGE_MAX_TOTAL_LENGTH, } from './constants';\nexport function serializeKeyPairs(keyPairs) {\n    return keyPairs.reduce(function (hValue, current) {\n        var value = \"\" + hValue + (hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : '') + current;\n        return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n    }, '');\n}\nexport function getKeyPairs(baggage) {\n    return baggage.getAllEntries().map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        var entry = encodeURIComponent(key) + \"=\" + encodeURIComponent(value.value);\n        // include opaque metadata if provided\n        // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n        if (value.metadata !== undefined) {\n            entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n        }\n        return entry;\n    });\n}\nexport function parsePairKeyValue(entry) {\n    var valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n    if (valueProps.length <= 0)\n        return;\n    var keyPairPart = valueProps.shift();\n    if (!keyPairPart)\n        return;\n    var separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n    if (separatorIndex <= 0)\n        return;\n    var key = decodeURIComponent(keyPairPart.substring(0, separatorIndex).trim());\n    var value = decodeURIComponent(keyPairPart.substring(separatorIndex + 1).trim());\n    var metadata;\n    if (valueProps.length > 0) {\n        metadata = baggageEntryMetadataFromString(valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR));\n    }\n    return { key: key, value: value, metadata: metadata };\n}\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value) {\n    if (typeof value !== 'string' || value.length === 0)\n        return {};\n    return value\n        .split(BAGGAGE_ITEMS_SEPARATOR)\n        .map(function (entry) {\n        return parsePairKeyValue(entry);\n    })\n        .filter(function (keyPair) { return keyPair !== undefined && keyPair.value.length > 0; })\n        .reduce(function (headers, keyPair) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        headers[keyPair.key] = keyPair.value;\n        return headers;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { propagation, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport { BAGGAGE_HEADER, BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_MAX_NAME_VALUE_PAIRS, BAGGAGE_MAX_PER_NAME_VALUE_PAIRS, } from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nvar W3CBaggagePropagator = /** @class */ (function () {\n    function W3CBaggagePropagator() {\n    }\n    W3CBaggagePropagator.prototype.inject = function (context, carrier, setter) {\n        var baggage = propagation.getBaggage(context);\n        if (!baggage || isTracingSuppressed(context))\n            return;\n        var keyPairs = getKeyPairs(baggage)\n            .filter(function (pair) {\n            return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n        var headerValue = serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, BAGGAGE_HEADER, headerValue);\n        }\n    };\n    W3CBaggagePropagator.prototype.extract = function (context, carrier, getter) {\n        var headerValue = getter.get(carrier, BAGGAGE_HEADER);\n        var baggageString = Array.isArray(headerValue)\n            ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n            : headerValue;\n        if (!baggageString)\n            return context;\n        var baggage = {};\n        if (baggageString.length === 0) {\n            return context;\n        }\n        var pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n        pairs.forEach(function (entry) {\n            var keyPair = parsePairKeyValue(entry);\n            if (keyPair) {\n                var baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return propagation.setBaggage(context, propagation.createBaggage(baggage));\n    };\n    W3CBaggagePropagator.prototype.fields = function () {\n        return [BAGGAGE_HEADER];\n    };\n    return W3CBaggagePropagator;\n}());\nexport { W3CBaggagePropagator };\n//# sourceMappingURL=W3CBaggagePropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nvar AnchoredClock = /** @class */ (function () {\n    /**\n     * Create a new AnchoredClock anchored to the current time returned by systemClock.\n     *\n     * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n     * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n     */\n    function AnchoredClock(systemClock, monotonicClock) {\n        this._monotonicClock = monotonicClock;\n        this._epochMillis = systemClock.now();\n        this._performanceMillis = monotonicClock.now();\n    }\n    /**\n     * Returns the current time by adding the number of milliseconds since the\n     * AnchoredClock was created to the creation epoch time\n     */\n    AnchoredClock.prototype.now = function () {\n        var delta = this._monotonicClock.now() - this._performanceMillis;\n        return this._epochMillis + delta;\n    };\n    return AnchoredClock;\n}());\nexport { AnchoredClock };\n//# sourceMappingURL=anchored-clock.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { diag } from '@opentelemetry/api';\nexport function sanitizeAttributes(attributes) {\n    var e_1, _a;\n    var out = {};\n    if (typeof attributes !== 'object' || attributes == null) {\n        return out;\n    }\n    try {\n        for (var _b = __values(Object.entries(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = __read(_c.value, 2), key = _d[0], val = _d[1];\n            if (!isAttributeKey(key)) {\n                diag.warn(\"Invalid attribute key: \" + key);\n                continue;\n            }\n            if (!isAttributeValue(val)) {\n                diag.warn(\"Invalid attribute value set for key: \" + key);\n                continue;\n            }\n            if (Array.isArray(val)) {\n                out[key] = val.slice();\n            }\n            else {\n                out[key] = val;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return out;\n}\nexport function isAttributeKey(key) {\n    return typeof key === 'string' && key.length > 0;\n}\nexport function isAttributeValue(val) {\n    if (val == null) {\n        return true;\n    }\n    if (Array.isArray(val)) {\n        return isHomogeneousAttributeValueArray(val);\n    }\n    return isValidPrimitiveAttributeValue(val);\n}\nfunction isHomogeneousAttributeValueArray(arr) {\n    var e_2, _a;\n    var type;\n    try {\n        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n            var element = arr_1_1.value;\n            // null/undefined elements are allowed\n            if (element == null)\n                continue;\n            if (!type) {\n                if (isValidPrimitiveAttributeValue(element)) {\n                    type = typeof element;\n                    continue;\n                }\n                // encountered an invalid primitive\n                return false;\n            }\n            if (typeof element === type) {\n                continue;\n            }\n            return false;\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n    switch (typeof val) {\n        case 'number':\n        case 'boolean':\n        case 'string':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=attributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler() {\n    return function (ex) {\n        diag.error(stringifyException(ex));\n    };\n}\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    var result = {};\n    var current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(function (propertyName) {\n            if (result[propertyName])\n                return;\n            var value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggingErrorHandler } from './logging-error-handler';\n/** The global error handler delegate */\nvar delegateHandler = loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex) {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n}\n//# sourceMappingURL=global-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues || (TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nvar DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nvar ENVIRONMENT_BOOLEAN_KEYS = ['OTEL_SDK_DISABLED'];\nfunction isEnvVarABoolean(key) {\n    return (ENVIRONMENT_BOOLEAN_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_BLRP_EXPORT_TIMEOUT',\n    'OTEL_BLRP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BLRP_MAX_QUEUE_SIZE',\n    'OTEL_BLRP_SCHEDULE_DELAY',\n    'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT',\n    'OTEL_EXPORTER_OTLP_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_LOGS_TIMEOUT',\n    'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n    'OTEL_SEMCONV_STABILITY_OPT_IN',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\nexport var DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\nexport var DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\nexport var DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT = 128;\nexport var DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT = 128;\n/**\n * Default environment variables\n */\nexport var DEFAULT_ENVIRONMENT = {\n    OTEL_SDK_DISABLED: false,\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_BLRP_EXPORT_TIMEOUT: 30000,\n    OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BLRP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BLRP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_OTLP_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n    OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n    OTEL_EXPORTER_OTLP_LOGS_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 10000,\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SERVICE_NAME: '',\n    OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT: DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT: DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n    OTEL_TRACES_EXPORTER: '',\n    OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n    OTEL_LOGS_EXPORTER: '',\n    OTEL_EXPORTER_OTLP_INSECURE: '',\n    OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n    OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n    OTEL_EXPORTER_OTLP_LOGS_INSECURE: '',\n    OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative',\n    OTEL_SEMCONV_STABILITY_OPT_IN: [],\n};\n/**\n * @param key\n * @param environment\n * @param values\n */\nfunction parseBoolean(key, environment, values) {\n    if (typeof values[key] === 'undefined') {\n        return;\n    }\n    var value = String(values[key]);\n    // support case-insensitive \"true\"\n    environment[key] = value.toLowerCase() === 'true';\n}\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min, max) {\n    if (min === void 0) { min = -Infinity; }\n    if (max === void 0) { max = Infinity; }\n    if (typeof values[name] !== 'undefined') {\n        var value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator) {\n    if (separator === void 0) { separator = DEFAULT_LIST_SEPARATOR; }\n    var givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(function (v) { return v.trim(); });\n    }\n}\n// The support string -> DiagLogLevel mappings\nvar logLevelMap = {\n    ALL: DiagLogLevel.ALL,\n    VERBOSE: DiagLogLevel.VERBOSE,\n    DEBUG: DiagLogLevel.DEBUG,\n    INFO: DiagLogLevel.INFO,\n    WARN: DiagLogLevel.WARN,\n    ERROR: DiagLogLevel.ERROR,\n    NONE: DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    var value = values[key];\n    if (typeof value === 'string') {\n        var theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values) {\n    var environment = {};\n    for (var env in DEFAULT_ENVIRONMENT) {\n        var key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarABoolean(key)) {\n                    parseBoolean(key, environment, values);\n                }\n                else if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    var value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_ENVIRONMENT, parseEnvironment, } from '../../utils/environment';\n/**\n * Gets the environment variables\n */\nexport function getEnv() {\n    var processEnv = parseEnvironment(process.env);\n    return Object.assign({}, DEFAULT_ENVIRONMENT, processEnv);\n}\nexport function getEnvWithoutDefaults() {\n    return parseEnvironment(process.env);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins\nexport var _globalThis = typeof globalThis === 'object' ? globalThis : global;\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction intValue(charCode) {\n    // 0-9\n    if (charCode >= 48 && charCode <= 57) {\n        return charCode - 48;\n    }\n    // a-f\n    if (charCode >= 97 && charCode <= 102) {\n        return charCode - 87;\n    }\n    // A-F\n    return charCode - 55;\n}\nexport function hexToBinary(hexStr) {\n    var buf = new Uint8Array(hexStr.length / 2);\n    var offset = 0;\n    for (var i = 0; i < hexStr.length; i += 2) {\n        var hi = intValue(hexStr.charCodeAt(i));\n        var lo = intValue(hexStr.charCodeAt(i + 1));\n        buf[offset++] = (hi << 4) | lo;\n    }\n    return buf;\n}\n//# sourceMappingURL=hex-to-binary.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { hexToBinary } from '../../common/hex-to-binary';\nexport function hexToBase64(hexStr) {\n    return Buffer.from(hexToBinary(hexStr)).toString('base64');\n}\n//# sourceMappingURL=hex-to-base64.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SPAN_ID_BYTES = 8;\nvar TRACE_ID_BYTES = 16;\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nvar RandomIdGenerator = /** @class */ (function () {\n    function RandomIdGenerator() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n    return RandomIdGenerator;\n}());\nexport { RandomIdGenerator };\nvar SHARED_BUFFER = Buffer.allocUnsafe(TRACE_ID_BYTES);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (var i = 0; i < bytes / 4; i++) {\n            // unsigned right shift drops decimal part of the number\n            // it is required because if a number between 2**32 and 2**32 - 1 is generated, an out of range error is thrown by writeUInt32BE\n            SHARED_BUFFER.writeUInt32BE((Math.random() * Math.pow(2, 32)) >>> 0, i * 4);\n        }\n        // If buffer is all 0, set the last byte to 1 to guarantee a valid w3c id is generated\n        for (var i = 0; i < bytes; i++) {\n            if (SHARED_BUFFER[i] > 0) {\n                break;\n            }\n            else if (i === bytes - 1) {\n                SHARED_BUFFER[bytes - 1] = 1;\n            }\n        }\n        return SHARED_BUFFER.toString('hex', 0, bytes);\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { performance } from 'perf_hooks';\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.30.1';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createConstMap } from '../internal/utils';\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticResourceAttributes\n//----------------------------------------------------------------------------------------------------------\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUD_PROVIDER = 'cloud.provider';\nvar TMP_CLOUD_ACCOUNT_ID = 'cloud.account.id';\nvar TMP_CLOUD_REGION = 'cloud.region';\nvar TMP_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\nvar TMP_CLOUD_PLATFORM = 'cloud.platform';\nvar TMP_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';\nvar TMP_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';\nvar TMP_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';\nvar TMP_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';\nvar TMP_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';\nvar TMP_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';\nvar TMP_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';\nvar TMP_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';\nvar TMP_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';\nvar TMP_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';\nvar TMP_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';\nvar TMP_CONTAINER_NAME = 'container.name';\nvar TMP_CONTAINER_ID = 'container.id';\nvar TMP_CONTAINER_RUNTIME = 'container.runtime';\nvar TMP_CONTAINER_IMAGE_NAME = 'container.image.name';\nvar TMP_CONTAINER_IMAGE_TAG = 'container.image.tag';\nvar TMP_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';\nvar TMP_DEVICE_ID = 'device.id';\nvar TMP_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';\nvar TMP_DEVICE_MODEL_NAME = 'device.model.name';\nvar TMP_FAAS_NAME = 'faas.name';\nvar TMP_FAAS_ID = 'faas.id';\nvar TMP_FAAS_VERSION = 'faas.version';\nvar TMP_FAAS_INSTANCE = 'faas.instance';\nvar TMP_FAAS_MAX_MEMORY = 'faas.max_memory';\nvar TMP_HOST_ID = 'host.id';\nvar TMP_HOST_NAME = 'host.name';\nvar TMP_HOST_TYPE = 'host.type';\nvar TMP_HOST_ARCH = 'host.arch';\nvar TMP_HOST_IMAGE_NAME = 'host.image.name';\nvar TMP_HOST_IMAGE_ID = 'host.image.id';\nvar TMP_HOST_IMAGE_VERSION = 'host.image.version';\nvar TMP_K8S_CLUSTER_NAME = 'k8s.cluster.name';\nvar TMP_K8S_NODE_NAME = 'k8s.node.name';\nvar TMP_K8S_NODE_UID = 'k8s.node.uid';\nvar TMP_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\nvar TMP_K8S_POD_UID = 'k8s.pod.uid';\nvar TMP_K8S_POD_NAME = 'k8s.pod.name';\nvar TMP_K8S_CONTAINER_NAME = 'k8s.container.name';\nvar TMP_K8S_REPLICASET_UID = 'k8s.replicaset.uid';\nvar TMP_K8S_REPLICASET_NAME = 'k8s.replicaset.name';\nvar TMP_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';\nvar TMP_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\nvar TMP_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';\nvar TMP_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';\nvar TMP_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';\nvar TMP_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';\nvar TMP_K8S_JOB_UID = 'k8s.job.uid';\nvar TMP_K8S_JOB_NAME = 'k8s.job.name';\nvar TMP_K8S_CRONJOB_UID = 'k8s.cronjob.uid';\nvar TMP_K8S_CRONJOB_NAME = 'k8s.cronjob.name';\nvar TMP_OS_TYPE = 'os.type';\nvar TMP_OS_DESCRIPTION = 'os.description';\nvar TMP_OS_NAME = 'os.name';\nvar TMP_OS_VERSION = 'os.version';\nvar TMP_PROCESS_PID = 'process.pid';\nvar TMP_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\nvar TMP_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\nvar TMP_PROCESS_COMMAND = 'process.command';\nvar TMP_PROCESS_COMMAND_LINE = 'process.command_line';\nvar TMP_PROCESS_COMMAND_ARGS = 'process.command_args';\nvar TMP_PROCESS_OWNER = 'process.owner';\nvar TMP_PROCESS_RUNTIME_NAME = 'process.runtime.name';\nvar TMP_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\nvar TMP_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\nvar TMP_SERVICE_NAME = 'service.name';\nvar TMP_SERVICE_NAMESPACE = 'service.namespace';\nvar TMP_SERVICE_INSTANCE_ID = 'service.instance.id';\nvar TMP_SERVICE_VERSION = 'service.version';\nvar TMP_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';\nvar TMP_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';\nvar TMP_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';\nvar TMP_TELEMETRY_AUTO_VERSION = 'telemetry.auto.version';\nvar TMP_WEBENGINE_NAME = 'webengine.name';\nvar TMP_WEBENGINE_VERSION = 'webengine.version';\nvar TMP_WEBENGINE_DESCRIPTION = 'webengine.description';\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use ATTR_CLOUD_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_PROVIDER = TMP_CLOUD_PROVIDER;\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @deprecated Use ATTR_CLOUD_ACCOUNT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_ACCOUNT_ID = TMP_CLOUD_ACCOUNT_ID;\n/**\n * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n *\n * @deprecated Use ATTR_CLOUD_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_REGION = TMP_CLOUD_REGION;\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n *\n * @deprecated Use ATTR_CLOUD_AVAILABILITY_ZONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = TMP_CLOUD_AVAILABILITY_ZONE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use ATTR_CLOUD_PLATFORM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_PLATFORM = TMP_CLOUD_PLATFORM;\n/**\n * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CONTAINER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_CONTAINER_ARN = TMP_AWS_ECS_CONTAINER_ARN;\n/**\n * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_CLUSTER_ARN = TMP_AWS_ECS_CLUSTER_ARN;\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use ATTR_AWS_ECS_LAUNCHTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_LAUNCHTYPE = TMP_AWS_ECS_LAUNCHTYPE;\n/**\n * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_ARN = TMP_AWS_ECS_TASK_ARN;\n/**\n * The task definition family this task definition is a member of.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_FAMILY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_FAMILY = TMP_AWS_ECS_TASK_FAMILY;\n/**\n * The revision for this task definition.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_REVISION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_REVISION = TMP_AWS_ECS_TASK_REVISION;\n/**\n * The ARN of an EKS cluster.\n *\n * @deprecated Use ATTR_AWS_EKS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_EKS_CLUSTER_ARN = TMP_AWS_EKS_CLUSTER_ARN;\n/**\n * The name(s) of the AWS log group(s) an application is writing to.\n *\n * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_GROUP_NAMES = TMP_AWS_LOG_GROUP_NAMES;\n/**\n * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n *\n * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_GROUP_ARNS = TMP_AWS_LOG_GROUP_ARNS;\n/**\n * The name(s) of the AWS log stream(s) an application is writing to.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_STREAM_NAMES = TMP_AWS_LOG_STREAM_NAMES;\n/**\n * The ARN(s) of the AWS log stream(s).\n *\n * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_STREAM_ARNS = TMP_AWS_LOG_STREAM_ARNS;\n/**\n * Container name.\n *\n * @deprecated Use ATTR_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_NAME = TMP_CONTAINER_NAME;\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n *\n * @deprecated Use ATTR_CONTAINER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_ID = TMP_CONTAINER_ID;\n/**\n * The container runtime managing this container.\n *\n * @deprecated Use ATTR_CONTAINER_RUNTIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_RUNTIME = TMP_CONTAINER_RUNTIME;\n/**\n * Name of the image the container was built on.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_IMAGE_NAME = TMP_CONTAINER_IMAGE_NAME;\n/**\n * Container image tag.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_TAGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_IMAGE_TAG = TMP_CONTAINER_IMAGE_TAG;\n/**\n * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n *\n * @deprecated Use ATTR_DEPLOYMENT_ENVIRONMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = TMP_DEPLOYMENT_ENVIRONMENT;\n/**\n * A unique identifier representing the device.\n *\n * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n *\n * @deprecated Use ATTR_DEVICE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_ID = TMP_DEVICE_ID;\n/**\n * The model identifier for the device.\n *\n * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_IDENTIFIER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = TMP_DEVICE_MODEL_IDENTIFIER;\n/**\n * The marketing name for the device model.\n *\n * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_MODEL_NAME = TMP_DEVICE_MODEL_NAME;\n/**\n * The name of the single function that this runtime instance executes.\n *\n * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n *\n * @deprecated Use ATTR_FAAS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_NAME = TMP_FAAS_NAME;\n/**\n* The unique ID of the single function that this runtime instance executes.\n*\n* Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n*\n* @deprecated Use ATTR_CLOUD_RESOURCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMRESATTRS_FAAS_ID = TMP_FAAS_ID;\n/**\n* The immutable version of the function being executed.\n*\n* Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n*\n* @deprecated Use ATTR_FAAS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMRESATTRS_FAAS_VERSION = TMP_FAAS_VERSION;\n/**\n * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n *\n * Note: * **AWS Lambda:** Use the (full) log stream name.\n *\n * @deprecated Use ATTR_FAAS_INSTANCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_INSTANCE = TMP_FAAS_INSTANCE;\n/**\n * The amount of memory available to the serverless function in MiB.\n *\n * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n *\n * @deprecated Use ATTR_FAAS_MAX_MEMORY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_MAX_MEMORY = TMP_FAAS_MAX_MEMORY;\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n *\n * @deprecated Use ATTR_HOST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_ID = TMP_HOST_ID;\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @deprecated Use ATTR_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_NAME = TMP_HOST_NAME;\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @deprecated Use ATTR_HOST_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_TYPE = TMP_HOST_TYPE;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use ATTR_HOST_ARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_ARCH = TMP_HOST_ARCH;\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @deprecated Use ATTR_HOST_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_NAME = TMP_HOST_IMAGE_NAME;\n/**\n * VM image ID. For Cloud, this value is from the provider.\n *\n * @deprecated Use ATTR_HOST_IMAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_ID = TMP_HOST_IMAGE_ID;\n/**\n * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n *\n * @deprecated Use ATTR_HOST_IMAGE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_VERSION = TMP_HOST_IMAGE_VERSION;\n/**\n * The name of the cluster.\n *\n * @deprecated Use ATTR_K8S_CLUSTER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CLUSTER_NAME = TMP_K8S_CLUSTER_NAME;\n/**\n * The name of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NODE_NAME = TMP_K8S_NODE_NAME;\n/**\n * The UID of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NODE_UID = TMP_K8S_NODE_UID;\n/**\n * The name of the namespace that the pod is running in.\n *\n * @deprecated Use ATTR_K8S_NAMESPACE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NAMESPACE_NAME = TMP_K8S_NAMESPACE_NAME;\n/**\n * The UID of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_POD_UID = TMP_K8S_POD_UID;\n/**\n * The name of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_POD_NAME = TMP_K8S_POD_NAME;\n/**\n * The name of the Container in a Pod template.\n *\n * @deprecated Use ATTR_K8S_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CONTAINER_NAME = TMP_K8S_CONTAINER_NAME;\n/**\n * The UID of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_REPLICASET_UID = TMP_K8S_REPLICASET_UID;\n/**\n * The name of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_REPLICASET_NAME = TMP_K8S_REPLICASET_NAME;\n/**\n * The UID of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DEPLOYMENT_UID = TMP_K8S_DEPLOYMENT_UID;\n/**\n * The name of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DEPLOYMENT_NAME = TMP_K8S_DEPLOYMENT_NAME;\n/**\n * The UID of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_STATEFULSET_UID = TMP_K8S_STATEFULSET_UID;\n/**\n * The name of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_STATEFULSET_NAME = TMP_K8S_STATEFULSET_NAME;\n/**\n * The UID of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DAEMONSET_UID = TMP_K8S_DAEMONSET_UID;\n/**\n * The name of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DAEMONSET_NAME = TMP_K8S_DAEMONSET_NAME;\n/**\n * The UID of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_JOB_UID = TMP_K8S_JOB_UID;\n/**\n * The name of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_JOB_NAME = TMP_K8S_JOB_NAME;\n/**\n * The UID of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CRONJOB_UID = TMP_K8S_CRONJOB_UID;\n/**\n * The name of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CRONJOB_NAME = TMP_K8S_CRONJOB_NAME;\n/**\n * The operating system type.\n *\n * @deprecated Use ATTR_OS_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_TYPE = TMP_OS_TYPE;\n/**\n * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n *\n * @deprecated Use ATTR_OS_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_DESCRIPTION = TMP_OS_DESCRIPTION;\n/**\n * Human readable operating system name.\n *\n * @deprecated Use ATTR_OS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_NAME = TMP_OS_NAME;\n/**\n * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n *\n * @deprecated Use ATTR_OS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_VERSION = TMP_OS_VERSION;\n/**\n * Process identifier (PID).\n *\n * @deprecated Use ATTR_PROCESS_PID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_PID = TMP_PROCESS_PID;\n/**\n * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_EXECUTABLE_NAME = TMP_PROCESS_EXECUTABLE_NAME;\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_PATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_EXECUTABLE_PATH = TMP_PROCESS_EXECUTABLE_PATH;\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND = TMP_PROCESS_COMMAND;\n/**\n * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_LINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND_LINE = TMP_PROCESS_COMMAND_LINE;\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_ARGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND_ARGS = TMP_PROCESS_COMMAND_ARGS;\n/**\n * The username of the user that owns the process.\n *\n * @deprecated Use ATTR_PROCESS_OWNER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_OWNER = TMP_PROCESS_OWNER;\n/**\n * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_NAME = TMP_PROCESS_RUNTIME_NAME;\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_VERSION = TMP_PROCESS_RUNTIME_VERSION;\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION = TMP_PROCESS_RUNTIME_DESCRIPTION;\n/**\n * Logical name of the service.\n *\n * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n *\n * @deprecated Use ATTR_SERVICE_NAME.\n */\nexport var SEMRESATTRS_SERVICE_NAME = TMP_SERVICE_NAME;\n/**\n * A namespace for `service.name`.\n *\n * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @deprecated Use ATTR_SERVICE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_SERVICE_NAMESPACE = TMP_SERVICE_NAMESPACE;\n/**\n * The string ID of the service instance.\n *\n * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n *\n * @deprecated Use ATTR_SERVICE_INSTANCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_SERVICE_INSTANCE_ID = TMP_SERVICE_INSTANCE_ID;\n/**\n * The version string of the service API or implementation.\n *\n * @deprecated Use ATTR_SERVICE_VERSION.\n */\nexport var SEMRESATTRS_SERVICE_VERSION = TMP_SERVICE_VERSION;\n/**\n * The name of the telemetry SDK as defined above.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_NAME.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_NAME = TMP_TELEMETRY_SDK_NAME;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_LANGUAGE.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = TMP_TELEMETRY_SDK_LANGUAGE;\n/**\n * The version string of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_VERSION.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_VERSION = TMP_TELEMETRY_SDK_VERSION;\n/**\n * The version string of the auto instrumentation agent, if used.\n *\n * @deprecated Use ATTR_TELEMETRY_DISTRO_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_TELEMETRY_AUTO_VERSION = TMP_TELEMETRY_AUTO_VERSION;\n/**\n * The name of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_NAME = TMP_WEBENGINE_NAME;\n/**\n * The version of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_VERSION = TMP_WEBENGINE_VERSION;\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @deprecated Use ATTR_WEBENGINE_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_DESCRIPTION = TMP_WEBENGINE_DESCRIPTION;\n/**\n * Create exported Value Map for SemanticResourceAttributes values\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification\n */\nexport var SemanticResourceAttributes = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUD_PROVIDER,\n    TMP_CLOUD_ACCOUNT_ID,\n    TMP_CLOUD_REGION,\n    TMP_CLOUD_AVAILABILITY_ZONE,\n    TMP_CLOUD_PLATFORM,\n    TMP_AWS_ECS_CONTAINER_ARN,\n    TMP_AWS_ECS_CLUSTER_ARN,\n    TMP_AWS_ECS_LAUNCHTYPE,\n    TMP_AWS_ECS_TASK_ARN,\n    TMP_AWS_ECS_TASK_FAMILY,\n    TMP_AWS_ECS_TASK_REVISION,\n    TMP_AWS_EKS_CLUSTER_ARN,\n    TMP_AWS_LOG_GROUP_NAMES,\n    TMP_AWS_LOG_GROUP_ARNS,\n    TMP_AWS_LOG_STREAM_NAMES,\n    TMP_AWS_LOG_STREAM_ARNS,\n    TMP_CONTAINER_NAME,\n    TMP_CONTAINER_ID,\n    TMP_CONTAINER_RUNTIME,\n    TMP_CONTAINER_IMAGE_NAME,\n    TMP_CONTAINER_IMAGE_TAG,\n    TMP_DEPLOYMENT_ENVIRONMENT,\n    TMP_DEVICE_ID,\n    TMP_DEVICE_MODEL_IDENTIFIER,\n    TMP_DEVICE_MODEL_NAME,\n    TMP_FAAS_NAME,\n    TMP_FAAS_ID,\n    TMP_FAAS_VERSION,\n    TMP_FAAS_INSTANCE,\n    TMP_FAAS_MAX_MEMORY,\n    TMP_HOST_ID,\n    TMP_HOST_NAME,\n    TMP_HOST_TYPE,\n    TMP_HOST_ARCH,\n    TMP_HOST_IMAGE_NAME,\n    TMP_HOST_IMAGE_ID,\n    TMP_HOST_IMAGE_VERSION,\n    TMP_K8S_CLUSTER_NAME,\n    TMP_K8S_NODE_NAME,\n    TMP_K8S_NODE_UID,\n    TMP_K8S_NAMESPACE_NAME,\n    TMP_K8S_POD_UID,\n    TMP_K8S_POD_NAME,\n    TMP_K8S_CONTAINER_NAME,\n    TMP_K8S_REPLICASET_UID,\n    TMP_K8S_REPLICASET_NAME,\n    TMP_K8S_DEPLOYMENT_UID,\n    TMP_K8S_DEPLOYMENT_NAME,\n    TMP_K8S_STATEFULSET_UID,\n    TMP_K8S_STATEFULSET_NAME,\n    TMP_K8S_DAEMONSET_UID,\n    TMP_K8S_DAEMONSET_NAME,\n    TMP_K8S_JOB_UID,\n    TMP_K8S_JOB_NAME,\n    TMP_K8S_CRONJOB_UID,\n    TMP_K8S_CRONJOB_NAME,\n    TMP_OS_TYPE,\n    TMP_OS_DESCRIPTION,\n    TMP_OS_NAME,\n    TMP_OS_VERSION,\n    TMP_PROCESS_PID,\n    TMP_PROCESS_EXECUTABLE_NAME,\n    TMP_PROCESS_EXECUTABLE_PATH,\n    TMP_PROCESS_COMMAND,\n    TMP_PROCESS_COMMAND_LINE,\n    TMP_PROCESS_COMMAND_ARGS,\n    TMP_PROCESS_OWNER,\n    TMP_PROCESS_RUNTIME_NAME,\n    TMP_PROCESS_RUNTIME_VERSION,\n    TMP_PROCESS_RUNTIME_DESCRIPTION,\n    TMP_SERVICE_NAME,\n    TMP_SERVICE_NAMESPACE,\n    TMP_SERVICE_INSTANCE_ID,\n    TMP_SERVICE_VERSION,\n    TMP_TELEMETRY_SDK_NAME,\n    TMP_TELEMETRY_SDK_LANGUAGE,\n    TMP_TELEMETRY_SDK_VERSION,\n    TMP_TELEMETRY_AUTO_VERSION,\n    TMP_WEBENGINE_NAME,\n    TMP_WEBENGINE_VERSION,\n    TMP_WEBENGINE_DESCRIPTION,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nvar TMP_CLOUDPROVIDERVALUES_AWS = 'aws';\nvar TMP_CLOUDPROVIDERVALUES_AZURE = 'azure';\nvar TMP_CLOUDPROVIDERVALUES_GCP = 'gcp';\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_ALIBABA_CLOUD = TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_AWS = TMP_CLOUDPROVIDERVALUES_AWS;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_AZURE = TMP_CLOUDPROVIDERVALUES_AZURE;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_GCP = TMP_CLOUDPROVIDERVALUES_GCP;\n/**\n * The constant map of values for CloudProviderValues.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport var CloudProviderValues = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_CLOUDPROVIDERVALUES_AWS,\n    TMP_CLOUDPROVIDERVALUES_AZURE,\n    TMP_CLOUDPROVIDERVALUES_GCP,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = 'alibaba_cloud_ecs';\nvar TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = 'alibaba_cloud_fc';\nvar TMP_CLOUDPLATFORMVALUES_AWS_EC2 = 'aws_ec2';\nvar TMP_CLOUDPLATFORMVALUES_AWS_ECS = 'aws_ecs';\nvar TMP_CLOUDPLATFORMVALUES_AWS_EKS = 'aws_eks';\nvar TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA = 'aws_lambda';\nvar TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = 'aws_elastic_beanstalk';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_VM = 'azure_vm';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = 'azure_container_instances';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_AKS = 'azure_aks';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = 'azure_functions';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = 'azure_app_service';\nvar TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = 'gcp_compute_engine';\nvar TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = 'gcp_cloud_run';\nvar TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = 'gcp_kubernetes_engine';\nvar TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = 'gcp_cloud_functions';\nvar TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE = 'gcp_app_engine';\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_EC2 = TMP_CLOUDPLATFORMVALUES_AWS_EC2;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_ECS = TMP_CLOUDPLATFORMVALUES_AWS_ECS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_EKS = TMP_CLOUDPLATFORMVALUES_AWS_EKS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_LAMBDA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_LAMBDA = TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_VM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_VM = TMP_CLOUDPLATFORMVALUES_AZURE_VM;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_AKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_AKS = TMP_CLOUDPLATFORMVALUES_AZURE_AKS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_APP_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE;\n/**\n * The constant map of values for CloudPlatformValues.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport var CloudPlatformValues = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC,\n    TMP_CLOUDPLATFORMVALUES_AWS_EC2,\n    TMP_CLOUDPLATFORMVALUES_AWS_ECS,\n    TMP_CLOUDPLATFORMVALUES_AWS_EKS,\n    TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA,\n    TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK,\n    TMP_CLOUDPLATFORMVALUES_AZURE_VM,\n    TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES,\n    TMP_CLOUDPLATFORMVALUES_AZURE_AKS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,\n    TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN,\n    TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_AWSECSLAUNCHTYPEVALUES_EC2 = 'ec2';\nvar TMP_AWSECSLAUNCHTYPEVALUES_FARGATE = 'fargate';\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var AWSECSLAUNCHTYPEVALUES_EC2 = TMP_AWSECSLAUNCHTYPEVALUES_EC2;\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_FARGATE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var AWSECSLAUNCHTYPEVALUES_FARGATE = TMP_AWSECSLAUNCHTYPEVALUES_FARGATE;\n/**\n * The constant map of values for AwsEcsLaunchtypeValues.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport var AwsEcsLaunchtypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_AWSECSLAUNCHTYPEVALUES_EC2,\n    TMP_AWSECSLAUNCHTYPEVALUES_FARGATE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_HOSTARCHVALUES_AMD64 = 'amd64';\nvar TMP_HOSTARCHVALUES_ARM32 = 'arm32';\nvar TMP_HOSTARCHVALUES_ARM64 = 'arm64';\nvar TMP_HOSTARCHVALUES_IA64 = 'ia64';\nvar TMP_HOSTARCHVALUES_PPC32 = 'ppc32';\nvar TMP_HOSTARCHVALUES_PPC64 = 'ppc64';\nvar TMP_HOSTARCHVALUES_X86 = 'x86';\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_AMD64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_AMD64 = TMP_HOSTARCHVALUES_AMD64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_ARM32 = TMP_HOSTARCHVALUES_ARM32;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_ARM64 = TMP_HOSTARCHVALUES_ARM64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_IA64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_IA64 = TMP_HOSTARCHVALUES_IA64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_PPC32 = TMP_HOSTARCHVALUES_PPC32;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_PPC64 = TMP_HOSTARCHVALUES_PPC64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_X86 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_X86 = TMP_HOSTARCHVALUES_X86;\n/**\n * The constant map of values for HostArchValues.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport var HostArchValues = \n/*#__PURE__*/ createConstMap([\n    TMP_HOSTARCHVALUES_AMD64,\n    TMP_HOSTARCHVALUES_ARM32,\n    TMP_HOSTARCHVALUES_ARM64,\n    TMP_HOSTARCHVALUES_IA64,\n    TMP_HOSTARCHVALUES_PPC32,\n    TMP_HOSTARCHVALUES_PPC64,\n    TMP_HOSTARCHVALUES_X86,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for OsTypeValues enum definition\n *\n * The operating system type.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_OSTYPEVALUES_WINDOWS = 'windows';\nvar TMP_OSTYPEVALUES_LINUX = 'linux';\nvar TMP_OSTYPEVALUES_DARWIN = 'darwin';\nvar TMP_OSTYPEVALUES_FREEBSD = 'freebsd';\nvar TMP_OSTYPEVALUES_NETBSD = 'netbsd';\nvar TMP_OSTYPEVALUES_OPENBSD = 'openbsd';\nvar TMP_OSTYPEVALUES_DRAGONFLYBSD = 'dragonflybsd';\nvar TMP_OSTYPEVALUES_HPUX = 'hpux';\nvar TMP_OSTYPEVALUES_AIX = 'aix';\nvar TMP_OSTYPEVALUES_SOLARIS = 'solaris';\nvar TMP_OSTYPEVALUES_Z_OS = 'z_os';\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_WINDOWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_WINDOWS = TMP_OSTYPEVALUES_WINDOWS;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_LINUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_LINUX = TMP_OSTYPEVALUES_LINUX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DARWIN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_DARWIN = TMP_OSTYPEVALUES_DARWIN;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_FREEBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_FREEBSD = TMP_OSTYPEVALUES_FREEBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_NETBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_NETBSD = TMP_OSTYPEVALUES_NETBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_OPENBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_OPENBSD = TMP_OSTYPEVALUES_OPENBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DRAGONFLYBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_DRAGONFLYBSD = TMP_OSTYPEVALUES_DRAGONFLYBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_HPUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_HPUX = TMP_OSTYPEVALUES_HPUX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_AIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_AIX = TMP_OSTYPEVALUES_AIX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_SOLARIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_SOLARIS = TMP_OSTYPEVALUES_SOLARIS;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_Z_OS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_Z_OS = TMP_OSTYPEVALUES_Z_OS;\n/**\n * The constant map of values for OsTypeValues.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport var OsTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_OSTYPEVALUES_WINDOWS,\n    TMP_OSTYPEVALUES_LINUX,\n    TMP_OSTYPEVALUES_DARWIN,\n    TMP_OSTYPEVALUES_FREEBSD,\n    TMP_OSTYPEVALUES_NETBSD,\n    TMP_OSTYPEVALUES_OPENBSD,\n    TMP_OSTYPEVALUES_DRAGONFLYBSD,\n    TMP_OSTYPEVALUES_HPUX,\n    TMP_OSTYPEVALUES_AIX,\n    TMP_OSTYPEVALUES_SOLARIS,\n    TMP_OSTYPEVALUES_Z_OS,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_CPP = 'cpp';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET = 'dotnet';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG = 'erlang';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_GO = 'go';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA = 'java';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS = 'nodejs';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_PHP = 'php';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON = 'python';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY = 'ruby';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS = 'webjs';\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_CPP.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_CPP = TMP_TELEMETRYSDKLANGUAGEVALUES_CPP;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_DOTNET = TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_ERLANG = TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_GO.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_GO = TMP_TELEMETRYSDKLANGUAGEVALUES_GO;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_JAVA.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_JAVA = TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_NODEJS = TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PHP.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_PHP = TMP_TELEMETRYSDKLANGUAGEVALUES_PHP;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_PYTHON = TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_RUBY.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_RUBY = TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_WEBJS = TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS;\n/**\n * The constant map of values for TelemetrySdkLanguageValues.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport var TelemetrySdkLanguageValues = \n/*#__PURE__*/ createConstMap([\n    TMP_TELEMETRYSDKLANGUAGEVALUES_CPP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_GO,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PHP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n]);\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { VERSION } from '../../version';\nimport { SEMRESATTRS_TELEMETRY_SDK_NAME, SEMRESATTRS_PROCESS_RUNTIME_NAME, SEMRESATTRS_TELEMETRY_SDK_LANGUAGE, TELEMETRYSDKLANGUAGEVALUES_NODEJS, SEMRESATTRS_TELEMETRY_SDK_VERSION, } from '@opentelemetry/semantic-conventions';\n/** Constants describing the SDK in use */\nexport var SDK_INFO = (_a = {},\n    _a[SEMRESATTRS_TELEMETRY_SDK_NAME] = 'opentelemetry',\n    _a[SEMRESATTRS_PROCESS_RUNTIME_NAME] = 'node',\n    _a[SEMRESATTRS_TELEMETRY_SDK_LANGUAGE] = TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n    _a[SEMRESATTRS_TELEMETRY_SDK_VERSION] = VERSION,\n    _a);\n//# sourceMappingURL=sdk-info.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(timer) {\n    timer.unref();\n}\n//# sourceMappingURL=timer-util.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar NANOSECOND_DIGITS_IN_MILLIS = 6;\nvar MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n    return [seconds, nanos];\n}\nexport function getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = millisToHrTime(getTimeOrigin());\n    var now = millisToHrTime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    return addHrTimes(timeOrigin, now);\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return millisToHrTime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return millisToHrTime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substring(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return time[0] * 1e3 + time[1] / 1e6;\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return time[0] * 1e6 + time[1] / 1e3;\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1, time2) {\n    var out = [time1[0] + time2[0], time1[1] + time2[1]];\n    // Nanoseconds\n    if (out[1] >= SECOND_TO_NANOSECONDS) {\n        out[1] -= SECOND_TO_NANOSECONDS;\n        out[0] += 1;\n    }\n    return out;\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode || (ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { diag, } from '@opentelemetry/api';\n/** Combines multiple propagators into a single propagator. */\nvar CompositePropagator = /** @class */ (function () {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    function CompositePropagator(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(function (p) { return (typeof p.fields === 'function' ? p.fields() : []); })\n            .reduce(function (x, y) { return x.concat(y); }, [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    CompositePropagator.prototype.inject = function (context, carrier, setter) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._propagators), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propagator = _c.value;\n                try {\n                    propagator.inject(context, carrier, setter);\n                }\n                catch (err) {\n                    diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    CompositePropagator.prototype.extract = function (context, carrier, getter) {\n        return this._propagators.reduce(function (ctx, propagator) {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                diag.warn(\"Failed to extract with \" + propagator.constructor.name + \". Err: \" + err.message);\n            }\n            return ctx;\n        }, context);\n    };\n    CompositePropagator.prototype.fields = function () {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    };\n    return CompositePropagator;\n}());\nexport { CompositePropagator };\n//# sourceMappingURL=composite.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceState = /** @class */ (function () {\n    function TraceState(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceState.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceState.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceState.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceState.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceState.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceState.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceState.prototype._clone = function () {\n        var traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceState;\n}());\nexport { TraceState };\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar RPC_METADATA_KEY = createContextKey('OpenTelemetry SDK Context Key RPC_METADATA');\nexport var RPCType;\n(function (RPCType) {\n    RPCType[\"HTTP\"] = \"http\";\n})(RPCType || (RPCType = {}));\nexport function setRPCMetadata(context, meta) {\n    return context.setValue(RPC_METADATA_KEY, meta);\n}\nexport function deleteRPCMetadata(context) {\n    return context.deleteValue(RPC_METADATA_KEY);\n}\nexport function getRPCMetadata(context) {\n    return context.getValue(RPC_METADATA_KEY);\n}\n//# sourceMappingURL=rpc-metadata.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nvar AlwaysOnSampler = /** @class */ (function () {\n    function AlwaysOnSampler() {\n    }\n    AlwaysOnSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    };\n    AlwaysOnSampler.prototype.toString = function () {\n        return 'AlwaysOnSampler';\n    };\n    return AlwaysOnSampler;\n}());\nexport { AlwaysOnSampler };\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nvar ParentBasedSampler = /** @class */ (function () {\n    function ParentBasedSampler(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler();\n    }\n    ParentBasedSampler.prototype.shouldSample = function (context, traceId, spanName, spanKind, attributes, links) {\n        var parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    };\n    ParentBasedSampler.prototype.toString = function () {\n        return \"ParentBased{root=\" + this._root.toString() + \", remoteParentSampled=\" + this._remoteParentSampled.toString() + \", remoteParentNotSampled=\" + this._remoteParentNotSampled.toString() + \", localParentSampled=\" + this._localParentSampled.toString() + \", localParentNotSampled=\" + this._localParentNotSampled.toString() + \"}\";\n    };\n    return ParentBasedSampler;\n}());\nexport { ParentBasedSampler };\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision, isValidTraceId, } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nvar TraceIdRatioBasedSampler = /** @class */ (function () {\n    function TraceIdRatioBasedSampler(_ratio) {\n        if (_ratio === void 0) { _ratio = 0; }\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    TraceIdRatioBasedSampler.prototype.shouldSample = function (context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    };\n    TraceIdRatioBasedSampler.prototype.toString = function () {\n        return \"TraceIdRatioBased{\" + this._ratio + \"}\";\n    };\n    TraceIdRatioBasedSampler.prototype._normalize = function (ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    };\n    TraceIdRatioBasedSampler.prototype._accumulate = function (traceId) {\n        var accumulation = 0;\n        for (var i = 0; i < traceId.length / 8; i++) {\n            var pos = i * 8;\n            var part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    };\n    return TraceIdRatioBasedSampler;\n}());\nexport { TraceIdRatioBasedSampler };\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\nvar objectTag = '[object Object]';\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\nvar funcProto = Function.prototype;\nvar funcToString = funcProto.toString;\nvar objectCtorString = funcToString.call(Object);\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nvar nativeObjectToString = objectProto.toString;\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function (arg) {\n        return func(transform(arg));\n    };\n}\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n        return false;\n    }\n    var proto = getPrototype(value);\n    if (proto === null) {\n        return true;\n    }\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor &&\n        funcToString.call(Ctor) === objectCtorString);\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return value != null && typeof value == 'object';\n}\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return symToStringTag && symToStringTag in Object(value)\n        ? getRawTag(value)\n        : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    var unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n        // silence\n    }\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n    return nativeObjectToString.call(value);\n}\n//# sourceMappingURL=lodash.merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isPlainObject } from './lodash.merge';\nvar MAX_LEVEL = 20;\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var result = args.shift();\n    var objects = new WeakMap();\n    while (args.length > 0) {\n        result = mergeTwoObjects(result, args.shift(), 0, objects);\n    }\n    return result;\n}\nfunction takeValue(value) {\n    if (isArray(value)) {\n        return value.slice();\n    }\n    return value;\n}\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(one, two, level, objects) {\n    if (level === void 0) { level = 0; }\n    var result;\n    if (level > MAX_LEVEL) {\n        return undefined;\n    }\n    level++;\n    if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n        result = takeValue(two);\n    }\n    else if (isArray(one)) {\n        result = one.slice();\n        if (isArray(two)) {\n            for (var i = 0, j = two.length; i < j; i++) {\n                result.push(takeValue(two[i]));\n            }\n        }\n        else if (isObject(two)) {\n            var keys = Object.keys(two);\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var key = keys[i];\n                result[key] = takeValue(two[key]);\n            }\n        }\n    }\n    else if (isObject(one)) {\n        if (isObject(two)) {\n            if (!shouldMerge(one, two)) {\n                return two;\n            }\n            result = Object.assign({}, one);\n            var keys = Object.keys(two);\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var key = keys[i];\n                var twoValue = two[key];\n                if (isPrimitive(twoValue)) {\n                    if (typeof twoValue === 'undefined') {\n                        delete result[key];\n                    }\n                    else {\n                        // result[key] = takeValue(twoValue);\n                        result[key] = twoValue;\n                    }\n                }\n                else {\n                    var obj1 = result[key];\n                    var obj2 = twoValue;\n                    if (wasObjectReferenced(one, key, objects) ||\n                        wasObjectReferenced(two, key, objects)) {\n                        delete result[key];\n                    }\n                    else {\n                        if (isObject(obj1) && isObject(obj2)) {\n                            var arr1 = objects.get(obj1) || [];\n                            var arr2 = objects.get(obj2) || [];\n                            arr1.push({ obj: one, key: key });\n                            arr2.push({ obj: two, key: key });\n                            objects.set(obj1, arr1);\n                            objects.set(obj2, arr2);\n                        }\n                        result[key] = mergeTwoObjects(result[key], twoValue, level, objects);\n                    }\n                }\n            }\n        }\n        else {\n            result = two;\n        }\n    }\n    return result;\n}\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(obj, key, objects) {\n    var arr = objects.get(obj[key]) || [];\n    for (var i = 0, j = arr.length; i < j; i++) {\n        var info = arr[i];\n        if (info.key === key && info.obj === obj) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isArray(value) {\n    return Array.isArray(value);\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isObject(value) {\n    return (!isPrimitive(value) &&\n        !isArray(value) &&\n        !isFunction(value) &&\n        typeof value === 'object');\n}\nfunction isPrimitive(value) {\n    return (typeof value === 'string' ||\n        typeof value === 'number' ||\n        typeof value === 'boolean' ||\n        typeof value === 'undefined' ||\n        value instanceof Date ||\n        value instanceof RegExp ||\n        value === null);\n}\nfunction shouldMerge(one, two) {\n    if (!isPlainObject(one) || !isPlainObject(two)) {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Error that is thrown on timeouts.\n */\nvar TimeoutError = /** @class */ (function (_super) {\n    __extends(TimeoutError, _super);\n    function TimeoutError(message) {\n        var _this = _super.call(this, message) || this;\n        // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n        // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(_this, TimeoutError.prototype);\n        return _this;\n    }\n    return TimeoutError;\n}(Error));\nexport { TimeoutError };\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout(promise, timeout) {\n    var timeoutHandle;\n    var timeoutPromise = new Promise(function timeoutFunction(_resolve, reject) {\n        timeoutHandle = setTimeout(function timeoutHandler() {\n            reject(new TimeoutError('Operation timed out.'));\n        }, timeout);\n    });\n    return Promise.race([promise, timeoutPromise]).then(function (result) {\n        clearTimeout(timeoutHandle);\n        return result;\n    }, function (reason) {\n        clearTimeout(timeoutHandle);\n        throw reason;\n    });\n}\n//# sourceMappingURL=timeout.js.map","var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url, urlToMatch) {\n    if (typeof urlToMatch === 'string') {\n        return url === urlToMatch;\n    }\n    else {\n        return !!url.match(urlToMatch);\n    }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(url, ignoredUrls) {\n    var e_1, _a;\n    if (!ignoredUrls) {\n        return false;\n    }\n    try {\n        for (var ignoredUrls_1 = __values(ignoredUrls), ignoredUrls_1_1 = ignoredUrls_1.next(); !ignoredUrls_1_1.done; ignoredUrls_1_1 = ignoredUrls_1.next()) {\n            var ignoreUrl = ignoredUrls_1_1.value;\n            if (urlMatches(url, ignoreUrl)) {\n                return true;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (ignoredUrls_1_1 && !ignoredUrls_1_1.done && (_a = ignoredUrls_1.return)) _a.call(ignoredUrls_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return false;\n}\n//# sourceMappingURL=url.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\n//# sourceMappingURL=wrap.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this._promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Deferred.prototype, \"promise\", {\n        get: function () {\n            return this._promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Deferred.prototype.resolve = function (val) {\n        this._resolve(val);\n    };\n    Deferred.prototype.reject = function (err) {\n        this._reject(err);\n    };\n    return Deferred;\n}());\nexport { Deferred };\n//# sourceMappingURL=promise.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Deferred } from './promise';\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nvar BindOnceFuture = /** @class */ (function () {\n    function BindOnceFuture(_callback, _that) {\n        this._callback = _callback;\n        this._that = _that;\n        this._isCalled = false;\n        this._deferred = new Deferred();\n    }\n    Object.defineProperty(BindOnceFuture.prototype, \"isCalled\", {\n        get: function () {\n            return this._isCalled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BindOnceFuture.prototype, \"promise\", {\n        get: function () {\n            return this._deferred.promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BindOnceFuture.prototype.call = function () {\n        var _a;\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._isCalled) {\n            this._isCalled = true;\n            try {\n                Promise.resolve((_a = this._callback).call.apply(_a, __spreadArray([this._that], __read(args), false))).then(function (val) { return _this._deferred.resolve(val); }, function (err) { return _this._deferred.reject(err); });\n            }\n            catch (err) {\n                this._deferred.reject(err);\n            }\n        }\n        return this._deferred.promise;\n    };\n    return BindOnceFuture;\n}());\nexport { BindOnceFuture };\n//# sourceMappingURL=callback.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context } from '@opentelemetry/api';\nimport { suppressTracing } from '../trace/suppress-tracing';\n/**\n * @internal\n * Shared functionality used by Exporters while exporting data, including suppression of Traces.\n */\nexport function _export(exporter, arg) {\n    return new Promise(function (resolve) {\n        // prevent downstream exporter calls from generating spans\n        context.with(suppressTracing(context.active()), function () {\n            exporter.export(arg, function (result) {\n                resolve(result);\n            });\n        });\n    });\n}\n//# sourceMappingURL=exporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { W3CBaggagePropagator } from './baggage/propagation/W3CBaggagePropagator';\nexport { AnchoredClock } from './common/anchored-clock';\nexport { isAttributeKey, isAttributeValue, sanitizeAttributes, } from './common/attributes';\nexport { globalErrorHandler, setGlobalErrorHandler, } from './common/global-error-handler';\nexport { loggingErrorHandler } from './common/logging-error-handler';\nexport { addHrTimes, getTimeOrigin, hrTime, hrTimeDuration, hrTimeToMicroseconds, hrTimeToMilliseconds, hrTimeToNanoseconds, hrTimeToTimeStamp, isTimeInput, isTimeInputHrTime, millisToHrTime, timeInputToHrTime, } from './common/time';\nexport { hexToBinary } from './common/hex-to-binary';\nexport { ExportResultCode } from './ExportResult';\nimport { getKeyPairs, serializeKeyPairs, parseKeyPairsIntoRecord, parsePairKeyValue, } from './baggage/utils';\nexport var baggageUtils = {\n    getKeyPairs: getKeyPairs,\n    serializeKeyPairs: serializeKeyPairs,\n    parseKeyPairsIntoRecord: parseKeyPairsIntoRecord,\n    parsePairKeyValue: parsePairKeyValue,\n};\nexport { RandomIdGenerator, SDK_INFO, _globalThis, getEnv, getEnvWithoutDefaults, hexToBase64, otperformance, unrefTimer, } from './platform';\nexport { CompositePropagator, } from './propagation/composite';\nexport { TRACE_PARENT_HEADER, TRACE_STATE_HEADER, W3CTraceContextPropagator, parseTraceParent, } from './trace/W3CTraceContextPropagator';\nexport { RPCType, deleteRPCMetadata, getRPCMetadata, setRPCMetadata, } from './trace/rpc-metadata';\nexport { AlwaysOffSampler } from './trace/sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './trace/sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './trace/sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './trace/sampler/TraceIdRatioBasedSampler';\nexport { isTracingSuppressed, suppressTracing, unsuppressTracing, } from './trace/suppress-tracing';\nexport { TraceState } from './trace/TraceState';\nexport { DEFAULT_ATTRIBUTE_COUNT_LIMIT, DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT, DEFAULT_ENVIRONMENT, DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT, DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT, parseEnvironment, } from './utils/environment';\nexport { merge } from './utils/merge';\nexport { TracesSamplerValues } from './utils/sampling';\nexport { TimeoutError, callWithTimeout } from './utils/timeout';\nexport { isUrlIgnored, urlMatches } from './utils/url';\nexport { isWrapped } from './utils/wrap';\nexport { BindOnceFuture } from './utils/callback';\nexport { VERSION } from './version';\nimport { _export } from './internal/exporter';\nexport var internal = {\n    _export: _export,\n};\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createConstMap } from '../internal/utils';\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticAttributes\n//----------------------------------------------------------------------------------------------------------\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';\nvar TMP_DB_SYSTEM = 'db.system';\nvar TMP_DB_CONNECTION_STRING = 'db.connection_string';\nvar TMP_DB_USER = 'db.user';\nvar TMP_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';\nvar TMP_DB_NAME = 'db.name';\nvar TMP_DB_STATEMENT = 'db.statement';\nvar TMP_DB_OPERATION = 'db.operation';\nvar TMP_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';\nvar TMP_DB_CASSANDRA_KEYSPACE = 'db.cassandra.keyspace';\nvar TMP_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';\nvar TMP_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';\nvar TMP_DB_CASSANDRA_TABLE = 'db.cassandra.table';\nvar TMP_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';\nvar TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = 'db.cassandra.speculative_execution_count';\nvar TMP_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';\nvar TMP_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';\nvar TMP_DB_HBASE_NAMESPACE = 'db.hbase.namespace';\nvar TMP_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';\nvar TMP_DB_MONGODB_COLLECTION = 'db.mongodb.collection';\nvar TMP_DB_SQL_TABLE = 'db.sql.table';\nvar TMP_EXCEPTION_TYPE = 'exception.type';\nvar TMP_EXCEPTION_MESSAGE = 'exception.message';\nvar TMP_EXCEPTION_STACKTRACE = 'exception.stacktrace';\nvar TMP_EXCEPTION_ESCAPED = 'exception.escaped';\nvar TMP_FAAS_TRIGGER = 'faas.trigger';\nvar TMP_FAAS_EXECUTION = 'faas.execution';\nvar TMP_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';\nvar TMP_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';\nvar TMP_FAAS_DOCUMENT_TIME = 'faas.document.time';\nvar TMP_FAAS_DOCUMENT_NAME = 'faas.document.name';\nvar TMP_FAAS_TIME = 'faas.time';\nvar TMP_FAAS_CRON = 'faas.cron';\nvar TMP_FAAS_COLDSTART = 'faas.coldstart';\nvar TMP_FAAS_INVOKED_NAME = 'faas.invoked_name';\nvar TMP_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';\nvar TMP_FAAS_INVOKED_REGION = 'faas.invoked_region';\nvar TMP_NET_TRANSPORT = 'net.transport';\nvar TMP_NET_PEER_IP = 'net.peer.ip';\nvar TMP_NET_PEER_PORT = 'net.peer.port';\nvar TMP_NET_PEER_NAME = 'net.peer.name';\nvar TMP_NET_HOST_IP = 'net.host.ip';\nvar TMP_NET_HOST_PORT = 'net.host.port';\nvar TMP_NET_HOST_NAME = 'net.host.name';\nvar TMP_NET_HOST_CONNECTION_TYPE = 'net.host.connection.type';\nvar TMP_NET_HOST_CONNECTION_SUBTYPE = 'net.host.connection.subtype';\nvar TMP_NET_HOST_CARRIER_NAME = 'net.host.carrier.name';\nvar TMP_NET_HOST_CARRIER_MCC = 'net.host.carrier.mcc';\nvar TMP_NET_HOST_CARRIER_MNC = 'net.host.carrier.mnc';\nvar TMP_NET_HOST_CARRIER_ICC = 'net.host.carrier.icc';\nvar TMP_PEER_SERVICE = 'peer.service';\nvar TMP_ENDUSER_ID = 'enduser.id';\nvar TMP_ENDUSER_ROLE = 'enduser.role';\nvar TMP_ENDUSER_SCOPE = 'enduser.scope';\nvar TMP_THREAD_ID = 'thread.id';\nvar TMP_THREAD_NAME = 'thread.name';\nvar TMP_CODE_FUNCTION = 'code.function';\nvar TMP_CODE_NAMESPACE = 'code.namespace';\nvar TMP_CODE_FILEPATH = 'code.filepath';\nvar TMP_CODE_LINENO = 'code.lineno';\nvar TMP_HTTP_METHOD = 'http.method';\nvar TMP_HTTP_URL = 'http.url';\nvar TMP_HTTP_TARGET = 'http.target';\nvar TMP_HTTP_HOST = 'http.host';\nvar TMP_HTTP_SCHEME = 'http.scheme';\nvar TMP_HTTP_STATUS_CODE = 'http.status_code';\nvar TMP_HTTP_FLAVOR = 'http.flavor';\nvar TMP_HTTP_USER_AGENT = 'http.user_agent';\nvar TMP_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';\nvar TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = 'http.request_content_length_uncompressed';\nvar TMP_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';\nvar TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = 'http.response_content_length_uncompressed';\nvar TMP_HTTP_SERVER_NAME = 'http.server_name';\nvar TMP_HTTP_ROUTE = 'http.route';\nvar TMP_HTTP_CLIENT_IP = 'http.client_ip';\nvar TMP_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';\nvar TMP_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';\nvar TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = 'aws.dynamodb.item_collection_metrics';\nvar TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = 'aws.dynamodb.provisioned_read_capacity';\nvar TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = 'aws.dynamodb.provisioned_write_capacity';\nvar TMP_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';\nvar TMP_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';\nvar TMP_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';\nvar TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';\nvar TMP_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';\nvar TMP_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';\nvar TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = 'aws.dynamodb.global_secondary_indexes';\nvar TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = 'aws.dynamodb.local_secondary_indexes';\nvar TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = 'aws.dynamodb.exclusive_start_table';\nvar TMP_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';\nvar TMP_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';\nvar TMP_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';\nvar TMP_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';\nvar TMP_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';\nvar TMP_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';\nvar TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = 'aws.dynamodb.attribute_definitions';\nvar TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = 'aws.dynamodb.global_secondary_index_updates';\nvar TMP_MESSAGING_SYSTEM = 'messaging.system';\nvar TMP_MESSAGING_DESTINATION = 'messaging.destination';\nvar TMP_MESSAGING_DESTINATION_KIND = 'messaging.destination_kind';\nvar TMP_MESSAGING_TEMP_DESTINATION = 'messaging.temp_destination';\nvar TMP_MESSAGING_PROTOCOL = 'messaging.protocol';\nvar TMP_MESSAGING_PROTOCOL_VERSION = 'messaging.protocol_version';\nvar TMP_MESSAGING_URL = 'messaging.url';\nvar TMP_MESSAGING_MESSAGE_ID = 'messaging.message_id';\nvar TMP_MESSAGING_CONVERSATION_ID = 'messaging.conversation_id';\nvar TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = 'messaging.message_payload_size_bytes';\nvar TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = 'messaging.message_payload_compressed_size_bytes';\nvar TMP_MESSAGING_OPERATION = 'messaging.operation';\nvar TMP_MESSAGING_CONSUMER_ID = 'messaging.consumer_id';\nvar TMP_MESSAGING_RABBITMQ_ROUTING_KEY = 'messaging.rabbitmq.routing_key';\nvar TMP_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message_key';\nvar TMP_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer_group';\nvar TMP_MESSAGING_KAFKA_CLIENT_ID = 'messaging.kafka.client_id';\nvar TMP_MESSAGING_KAFKA_PARTITION = 'messaging.kafka.partition';\nvar TMP_MESSAGING_KAFKA_TOMBSTONE = 'messaging.kafka.tombstone';\nvar TMP_RPC_SYSTEM = 'rpc.system';\nvar TMP_RPC_SERVICE = 'rpc.service';\nvar TMP_RPC_METHOD = 'rpc.method';\nvar TMP_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';\nvar TMP_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';\nvar TMP_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';\nvar TMP_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';\nvar TMP_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';\nvar TMP_MESSAGE_TYPE = 'message.type';\nvar TMP_MESSAGE_ID = 'message.id';\nvar TMP_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';\nvar TMP_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';\n/**\n * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n *\n * Note: This may be different from `faas.id` if an alias is involved.\n *\n * @deprecated Use ATTR_AWS_LAMBDA_INVOKED_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_LAMBDA_INVOKED_ARN = TMP_AWS_LAMBDA_INVOKED_ARN;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use ATTR_DB_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_SYSTEM = TMP_DB_SYSTEM;\n/**\n * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n *\n * @deprecated Use ATTR_DB_CONNECTION_STRING in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CONNECTION_STRING = TMP_DB_CONNECTION_STRING;\n/**\n * Username for accessing the database.\n *\n * @deprecated Use ATTR_DB_USER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_USER = TMP_DB_USER;\n/**\n * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n *\n * @deprecated Use ATTR_DB_JDBC_DRIVER_CLASSNAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = TMP_DB_JDBC_DRIVER_CLASSNAME;\n/**\n * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n *\n * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_NAME = TMP_DB_NAME;\n/**\n * The database statement being executed.\n *\n * Note: The value may be sanitized to exclude sensitive information.\n *\n * @deprecated Use ATTR_DB_STATEMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_STATEMENT = TMP_DB_STATEMENT;\n/**\n * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n *\n * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n *\n * @deprecated Use ATTR_DB_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_OPERATION = TMP_DB_OPERATION;\n/**\n * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n *\n * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n *\n * @deprecated Use ATTR_DB_MSSQL_INSTANCE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_MSSQL_INSTANCE_NAME = TMP_DB_MSSQL_INSTANCE_NAME;\n/**\n * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_KEYSPACE = TMP_DB_CASSANDRA_KEYSPACE;\n/**\n * The fetch size used for paging, i.e. how many rows will be returned at once.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_PAGE_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_PAGE_SIZE = TMP_DB_CASSANDRA_PAGE_SIZE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL = TMP_DB_CASSANDRA_CONSISTENCY_LEVEL;\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_TABLE = TMP_DB_CASSANDRA_TABLE;\n/**\n * Whether or not the query is idempotent.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_IDEMPOTENCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = TMP_DB_CASSANDRA_IDEMPOTENCE;\n/**\n * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT;\n/**\n * The ID of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_COORDINATOR_ID = TMP_DB_CASSANDRA_COORDINATOR_ID;\n/**\n * The data center of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_DC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_COORDINATOR_DC = TMP_DB_CASSANDRA_COORDINATOR_DC;\n/**\n * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_HBASE_NAMESPACE = TMP_DB_HBASE_NAMESPACE;\n/**\n * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_REDIS_DATABASE_INDEX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_REDIS_DATABASE_INDEX = TMP_DB_REDIS_DATABASE_INDEX;\n/**\n * The collection being accessed within the database stated in `db.name`.\n *\n * @deprecated Use ATTR_DB_MONGODB_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_MONGODB_COLLECTION = TMP_DB_MONGODB_COLLECTION;\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_SQL_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_SQL_TABLE = TMP_DB_SQL_TABLE;\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n *\n * @deprecated Use ATTR_EXCEPTION_TYPE.\n */\nexport var SEMATTRS_EXCEPTION_TYPE = TMP_EXCEPTION_TYPE;\n/**\n * The exception message.\n *\n * @deprecated Use ATTR_EXCEPTION_MESSAGE.\n */\nexport var SEMATTRS_EXCEPTION_MESSAGE = TMP_EXCEPTION_MESSAGE;\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @deprecated Use ATTR_EXCEPTION_STACKTRACE.\n */\nexport var SEMATTRS_EXCEPTION_STACKTRACE = TMP_EXCEPTION_STACKTRACE;\n/**\n* SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n*\n* Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n*\n* @deprecated Use ATTR_EXCEPTION_ESCAPED.\n*/\nexport var SEMATTRS_EXCEPTION_ESCAPED = TMP_EXCEPTION_ESCAPED;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use ATTR_FAAS_TRIGGER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_TRIGGER = TMP_FAAS_TRIGGER;\n/**\n * The execution ID of the current function execution.\n *\n * @deprecated Use ATTR_FAAS_INVOCATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_EXECUTION = TMP_FAAS_EXECUTION;\n/**\n * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_COLLECTION = TMP_FAAS_DOCUMENT_COLLECTION;\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_OPERATION = TMP_FAAS_DOCUMENT_OPERATION;\n/**\n * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_TIME = TMP_FAAS_DOCUMENT_TIME;\n/**\n * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_NAME = TMP_FAAS_DOCUMENT_NAME;\n/**\n * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_TIME = TMP_FAAS_TIME;\n/**\n * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n *\n * @deprecated Use ATTR_FAAS_CRON in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_CRON = TMP_FAAS_CRON;\n/**\n * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n *\n * @deprecated Use ATTR_FAAS_COLDSTART in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_COLDSTART = TMP_FAAS_COLDSTART;\n/**\n * The name of the invoked function.\n *\n * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_INVOKED_NAME = TMP_FAAS_INVOKED_NAME;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_INVOKED_PROVIDER = TMP_FAAS_INVOKED_PROVIDER;\n/**\n * The cloud region of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_INVOKED_REGION = TMP_FAAS_INVOKED_REGION;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use ATTR_NET_TRANSPORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_TRANSPORT = TMP_NET_TRANSPORT;\n/**\n * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n *\n * @deprecated Use ATTR_NET_PEER_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_PEER_IP = TMP_NET_PEER_IP;\n/**\n * Remote port number.\n *\n * @deprecated Use ATTR_NET_PEER_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_PEER_PORT = TMP_NET_PEER_PORT;\n/**\n * Remote hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_PEER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_PEER_NAME = TMP_NET_PEER_NAME;\n/**\n * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n *\n * @deprecated Use ATTR_NET_HOST_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_IP = TMP_NET_HOST_IP;\n/**\n * Like `net.peer.port` but for the host port.\n *\n * @deprecated Use ATTR_NET_HOST_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_PORT = TMP_NET_HOST_PORT;\n/**\n * Local hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_NAME = TMP_NET_HOST_NAME;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CONNECTION_TYPE = TMP_NET_HOST_CONNECTION_TYPE;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_SUBTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CONNECTION_SUBTYPE = TMP_NET_HOST_CONNECTION_SUBTYPE;\n/**\n * The name of the mobile carrier.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_NAME = TMP_NET_HOST_CARRIER_NAME;\n/**\n * The mobile carrier country code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MCC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_MCC = TMP_NET_HOST_CARRIER_MCC;\n/**\n * The mobile carrier network code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MNC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_MNC = TMP_NET_HOST_CARRIER_MNC;\n/**\n * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_ICC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_ICC = TMP_NET_HOST_CARRIER_ICC;\n/**\n * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n *\n * @deprecated Use ATTR_PEER_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_PEER_SERVICE = TMP_PEER_SERVICE;\n/**\n * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n *\n * @deprecated Use ATTR_ENDUSER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_ENDUSER_ID = TMP_ENDUSER_ID;\n/**\n * Actual/assumed role the client is making the request under extracted from token or application security context.\n *\n * @deprecated Use ATTR_ENDUSER_ROLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_ENDUSER_ROLE = TMP_ENDUSER_ROLE;\n/**\n * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n *\n * @deprecated Use ATTR_ENDUSER_SCOPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_ENDUSER_SCOPE = TMP_ENDUSER_SCOPE;\n/**\n * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n *\n * @deprecated Use ATTR_THREAD_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_THREAD_ID = TMP_THREAD_ID;\n/**\n * Current thread name.\n *\n * @deprecated Use ATTR_THREAD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_THREAD_NAME = TMP_THREAD_NAME;\n/**\n * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n *\n * @deprecated Use ATTR_CODE_FUNCTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_FUNCTION = TMP_CODE_FUNCTION;\n/**\n * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n *\n * @deprecated Use ATTR_CODE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_NAMESPACE = TMP_CODE_NAMESPACE;\n/**\n * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n *\n * @deprecated Use ATTR_CODE_FILEPATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_FILEPATH = TMP_CODE_FILEPATH;\n/**\n * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n *\n * @deprecated Use ATTR_CODE_LINENO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_LINENO = TMP_CODE_LINENO;\n/**\n * HTTP request method.\n *\n * @deprecated Use ATTR_HTTP_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_METHOD = TMP_HTTP_METHOD;\n/**\n * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n *\n * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n *\n * @deprecated Use ATTR_HTTP_URL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_URL = TMP_HTTP_URL;\n/**\n * The full request target as passed in a HTTP request line or equivalent.\n *\n * @deprecated Use ATTR_HTTP_TARGET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_TARGET = TMP_HTTP_TARGET;\n/**\n * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n *\n * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n *\n * @deprecated Use ATTR_HTTP_HOST in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_HOST = TMP_HTTP_HOST;\n/**\n * The URI scheme identifying the used protocol.\n *\n * @deprecated Use ATTR_HTTP_SCHEME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_SCHEME = TMP_HTTP_SCHEME;\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n *\n * @deprecated Use ATTR_HTTP_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_STATUS_CODE = TMP_HTTP_STATUS_CODE;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use ATTR_HTTP_FLAVOR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_FLAVOR = TMP_HTTP_FLAVOR;\n/**\n * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n *\n * @deprecated Use ATTR_HTTP_USER_AGENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_USER_AGENT = TMP_HTTP_USER_AGENT;\n/**\n * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH = TMP_HTTP_REQUEST_CONTENT_LENGTH;\n/**\n * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED;\n/**\n * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH = TMP_HTTP_RESPONSE_CONTENT_LENGTH;\n/**\n * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED;\n/**\n * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n *\n * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n *\n * @deprecated Use ATTR_HTTP_SERVER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_SERVER_NAME = TMP_HTTP_SERVER_NAME;\n/**\n * The matched route (path template).\n *\n * @deprecated Use ATTR_HTTP_ROUTE.\n */\nexport var SEMATTRS_HTTP_ROUTE = TMP_HTTP_ROUTE;\n/**\n* The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n*\n* Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n*\n* @deprecated Use ATTR_HTTP_CLIENT_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMATTRS_HTTP_CLIENT_IP = TMP_HTTP_CLIENT_IP;\n/**\n * The keys in the `RequestItems` object field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = TMP_AWS_DYNAMODB_TABLE_NAMES;\n/**\n * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY = TMP_AWS_DYNAMODB_CONSUMED_CAPACITY;\n/**\n * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS;\n/**\n * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY;\n/**\n * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY;\n/**\n * The value of the `ConsistentRead` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSISTENT_READ in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ = TMP_AWS_DYNAMODB_CONSISTENT_READ;\n/**\n * The value of the `ProjectionExpression` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROJECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_PROJECTION = TMP_AWS_DYNAMODB_PROJECTION;\n/**\n * The value of the `Limit` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LIMIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_LIMIT = TMP_AWS_DYNAMODB_LIMIT;\n/**\n * The value of the `AttributesToGet` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET = TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET;\n/**\n * The value of the `IndexName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_INDEX_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_INDEX_NAME = TMP_AWS_DYNAMODB_INDEX_NAME;\n/**\n * The value of the `Select` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SELECT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SELECT = TMP_AWS_DYNAMODB_SELECT;\n/**\n * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES;\n/**\n * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES;\n/**\n * The value of the `ExclusiveStartTableName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE;\n/**\n * The the number of items in the `TableNames` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = TMP_AWS_DYNAMODB_TABLE_COUNT;\n/**\n * The value of the `ScanIndexForward` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCAN_FORWARD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = TMP_AWS_DYNAMODB_SCAN_FORWARD;\n/**\n * The value of the `Segment` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SEGMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SEGMENT = TMP_AWS_DYNAMODB_SEGMENT;\n/**\n * The value of the `TotalSegments` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS = TMP_AWS_DYNAMODB_TOTAL_SEGMENTS;\n/**\n * The value of the `Count` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_COUNT = TMP_AWS_DYNAMODB_COUNT;\n/**\n * The value of the `ScannedCount` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCANNED_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT = TMP_AWS_DYNAMODB_SCANNED_COUNT;\n/**\n * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS;\n/**\n * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES;\n/**\n * A string identifying the messaging system.\n *\n * @deprecated Use ATTR_MESSAGING_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_SYSTEM = TMP_MESSAGING_SYSTEM;\n/**\n * The message destination name. This might be equal to the span name but is required nevertheless.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_DESTINATION = TMP_MESSAGING_DESTINATION;\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport var SEMATTRS_MESSAGING_DESTINATION_KIND = TMP_MESSAGING_DESTINATION_KIND;\n/**\n * A boolean that is true if the message destination is temporary.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_TEMPORARY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_TEMP_DESTINATION = TMP_MESSAGING_TEMP_DESTINATION;\n/**\n * The name of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_NAME.\n */\nexport var SEMATTRS_MESSAGING_PROTOCOL = TMP_MESSAGING_PROTOCOL;\n/**\n * The version of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_VERSION.\n */\nexport var SEMATTRS_MESSAGING_PROTOCOL_VERSION = TMP_MESSAGING_PROTOCOL_VERSION;\n/**\n * Connection string.\n *\n * @deprecated Removed in semconv v1.17.0.\n */\nexport var SEMATTRS_MESSAGING_URL = TMP_MESSAGING_URL;\n/**\n * A value used by the messaging system as an identifier for the message, represented as a string.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_MESSAGE_ID = TMP_MESSAGING_MESSAGE_ID;\n/**\n * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_CONVERSATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_CONVERSATION_ID = TMP_MESSAGING_CONVERSATION_ID;\n/**\n * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_BODY_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES;\n/**\n * The compressed size of the message payload in bytes.\n *\n * @deprecated Removed in semconv v1.22.0.\n */\nexport var SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES;\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use ATTR_MESSAGING_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_OPERATION = TMP_MESSAGING_OPERATION;\n/**\n * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n *\n * @deprecated Removed in semconv v1.21.0.\n */\nexport var SEMATTRS_MESSAGING_CONSUMER_ID = TMP_MESSAGING_CONSUMER_ID;\n/**\n * RabbitMQ message routing key.\n *\n * @deprecated Use ATTR_MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY = TMP_MESSAGING_RABBITMQ_ROUTING_KEY;\n/**\n * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n *\n * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY = TMP_MESSAGING_KAFKA_MESSAGE_KEY;\n/**\n * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_CONSUMER_GROUP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP = TMP_MESSAGING_KAFKA_CONSUMER_GROUP;\n/**\n * Client Id for the Consumer or Producer that is handling the message.\n *\n * @deprecated Use ATTR_MESSAGING_CLIENT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = TMP_MESSAGING_KAFKA_CLIENT_ID;\n/**\n * Partition the message is sent to.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_DESTINATION_PARTITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_PARTITION = TMP_MESSAGING_KAFKA_PARTITION;\n/**\n * A boolean that is true if the message is a tombstone.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_TOMBSTONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = TMP_MESSAGING_KAFKA_TOMBSTONE;\n/**\n * A string identifying the remoting system.\n *\n * @deprecated Use ATTR_RPC_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_SYSTEM = TMP_RPC_SYSTEM;\n/**\n * The full (logical) name of the service being called, including its package name, if applicable.\n *\n * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n *\n * @deprecated Use ATTR_RPC_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_SERVICE = TMP_RPC_SERVICE;\n/**\n * The name of the (logical) method being called, must be equal to the $method part in the span name.\n *\n * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n *\n * @deprecated Use ATTR_RPC_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_METHOD = TMP_RPC_METHOD;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use ATTR_RPC_GRPC_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_GRPC_STATUS_CODE = TMP_RPC_GRPC_STATUS_CODE;\n/**\n * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_VERSION = TMP_RPC_JSONRPC_VERSION;\n/**\n * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_REQUEST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_REQUEST_ID = TMP_RPC_JSONRPC_REQUEST_ID;\n/**\n * `error.code` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_ERROR_CODE = TMP_RPC_JSONRPC_ERROR_CODE;\n/**\n * `error.message` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_MESSAGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = TMP_RPC_JSONRPC_ERROR_MESSAGE;\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use ATTR_MESSAGE_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_TYPE = TMP_MESSAGE_TYPE;\n/**\n * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n *\n * Note: This way we guarantee that the values will be consistent between different implementations.\n *\n * @deprecated Use ATTR_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_ID = TMP_MESSAGE_ID;\n/**\n * Compressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_COMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_COMPRESSED_SIZE = TMP_MESSAGE_COMPRESSED_SIZE;\n/**\n * Uncompressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_UNCOMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = TMP_MESSAGE_UNCOMPRESSED_SIZE;\n/**\n * Create exported Value Map for SemanticAttributes values\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification\n */\nexport var SemanticAttributes = \n/*#__PURE__*/ createConstMap([\n    TMP_AWS_LAMBDA_INVOKED_ARN,\n    TMP_DB_SYSTEM,\n    TMP_DB_CONNECTION_STRING,\n    TMP_DB_USER,\n    TMP_DB_JDBC_DRIVER_CLASSNAME,\n    TMP_DB_NAME,\n    TMP_DB_STATEMENT,\n    TMP_DB_OPERATION,\n    TMP_DB_MSSQL_INSTANCE_NAME,\n    TMP_DB_CASSANDRA_KEYSPACE,\n    TMP_DB_CASSANDRA_PAGE_SIZE,\n    TMP_DB_CASSANDRA_CONSISTENCY_LEVEL,\n    TMP_DB_CASSANDRA_TABLE,\n    TMP_DB_CASSANDRA_IDEMPOTENCE,\n    TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT,\n    TMP_DB_CASSANDRA_COORDINATOR_ID,\n    TMP_DB_CASSANDRA_COORDINATOR_DC,\n    TMP_DB_HBASE_NAMESPACE,\n    TMP_DB_REDIS_DATABASE_INDEX,\n    TMP_DB_MONGODB_COLLECTION,\n    TMP_DB_SQL_TABLE,\n    TMP_EXCEPTION_TYPE,\n    TMP_EXCEPTION_MESSAGE,\n    TMP_EXCEPTION_STACKTRACE,\n    TMP_EXCEPTION_ESCAPED,\n    TMP_FAAS_TRIGGER,\n    TMP_FAAS_EXECUTION,\n    TMP_FAAS_DOCUMENT_COLLECTION,\n    TMP_FAAS_DOCUMENT_OPERATION,\n    TMP_FAAS_DOCUMENT_TIME,\n    TMP_FAAS_DOCUMENT_NAME,\n    TMP_FAAS_TIME,\n    TMP_FAAS_CRON,\n    TMP_FAAS_COLDSTART,\n    TMP_FAAS_INVOKED_NAME,\n    TMP_FAAS_INVOKED_PROVIDER,\n    TMP_FAAS_INVOKED_REGION,\n    TMP_NET_TRANSPORT,\n    TMP_NET_PEER_IP,\n    TMP_NET_PEER_PORT,\n    TMP_NET_PEER_NAME,\n    TMP_NET_HOST_IP,\n    TMP_NET_HOST_PORT,\n    TMP_NET_HOST_NAME,\n    TMP_NET_HOST_CONNECTION_TYPE,\n    TMP_NET_HOST_CONNECTION_SUBTYPE,\n    TMP_NET_HOST_CARRIER_NAME,\n    TMP_NET_HOST_CARRIER_MCC,\n    TMP_NET_HOST_CARRIER_MNC,\n    TMP_NET_HOST_CARRIER_ICC,\n    TMP_PEER_SERVICE,\n    TMP_ENDUSER_ID,\n    TMP_ENDUSER_ROLE,\n    TMP_ENDUSER_SCOPE,\n    TMP_THREAD_ID,\n    TMP_THREAD_NAME,\n    TMP_CODE_FUNCTION,\n    TMP_CODE_NAMESPACE,\n    TMP_CODE_FILEPATH,\n    TMP_CODE_LINENO,\n    TMP_HTTP_METHOD,\n    TMP_HTTP_URL,\n    TMP_HTTP_TARGET,\n    TMP_HTTP_HOST,\n    TMP_HTTP_SCHEME,\n    TMP_HTTP_STATUS_CODE,\n    TMP_HTTP_FLAVOR,\n    TMP_HTTP_USER_AGENT,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_SERVER_NAME,\n    TMP_HTTP_ROUTE,\n    TMP_HTTP_CLIENT_IP,\n    TMP_AWS_DYNAMODB_TABLE_NAMES,\n    TMP_AWS_DYNAMODB_CONSUMED_CAPACITY,\n    TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,\n    TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY,\n    TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY,\n    TMP_AWS_DYNAMODB_CONSISTENT_READ,\n    TMP_AWS_DYNAMODB_PROJECTION,\n    TMP_AWS_DYNAMODB_LIMIT,\n    TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET,\n    TMP_AWS_DYNAMODB_INDEX_NAME,\n    TMP_AWS_DYNAMODB_SELECT,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE,\n    TMP_AWS_DYNAMODB_TABLE_COUNT,\n    TMP_AWS_DYNAMODB_SCAN_FORWARD,\n    TMP_AWS_DYNAMODB_SEGMENT,\n    TMP_AWS_DYNAMODB_TOTAL_SEGMENTS,\n    TMP_AWS_DYNAMODB_COUNT,\n    TMP_AWS_DYNAMODB_SCANNED_COUNT,\n    TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES,\n    TMP_MESSAGING_SYSTEM,\n    TMP_MESSAGING_DESTINATION,\n    TMP_MESSAGING_DESTINATION_KIND,\n    TMP_MESSAGING_TEMP_DESTINATION,\n    TMP_MESSAGING_PROTOCOL,\n    TMP_MESSAGING_PROTOCOL_VERSION,\n    TMP_MESSAGING_URL,\n    TMP_MESSAGING_MESSAGE_ID,\n    TMP_MESSAGING_CONVERSATION_ID,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES,\n    TMP_MESSAGING_OPERATION,\n    TMP_MESSAGING_CONSUMER_ID,\n    TMP_MESSAGING_RABBITMQ_ROUTING_KEY,\n    TMP_MESSAGING_KAFKA_MESSAGE_KEY,\n    TMP_MESSAGING_KAFKA_CONSUMER_GROUP,\n    TMP_MESSAGING_KAFKA_CLIENT_ID,\n    TMP_MESSAGING_KAFKA_PARTITION,\n    TMP_MESSAGING_KAFKA_TOMBSTONE,\n    TMP_RPC_SYSTEM,\n    TMP_RPC_SERVICE,\n    TMP_RPC_METHOD,\n    TMP_RPC_GRPC_STATUS_CODE,\n    TMP_RPC_JSONRPC_VERSION,\n    TMP_RPC_JSONRPC_REQUEST_ID,\n    TMP_RPC_JSONRPC_ERROR_CODE,\n    TMP_RPC_JSONRPC_ERROR_MESSAGE,\n    TMP_MESSAGE_TYPE,\n    TMP_MESSAGE_ID,\n    TMP_MESSAGE_COMPRESSED_SIZE,\n    TMP_MESSAGE_UNCOMPRESSED_SIZE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_DBSYSTEMVALUES_OTHER_SQL = 'other_sql';\nvar TMP_DBSYSTEMVALUES_MSSQL = 'mssql';\nvar TMP_DBSYSTEMVALUES_MYSQL = 'mysql';\nvar TMP_DBSYSTEMVALUES_ORACLE = 'oracle';\nvar TMP_DBSYSTEMVALUES_DB2 = 'db2';\nvar TMP_DBSYSTEMVALUES_POSTGRESQL = 'postgresql';\nvar TMP_DBSYSTEMVALUES_REDSHIFT = 'redshift';\nvar TMP_DBSYSTEMVALUES_HIVE = 'hive';\nvar TMP_DBSYSTEMVALUES_CLOUDSCAPE = 'cloudscape';\nvar TMP_DBSYSTEMVALUES_HSQLDB = 'hsqldb';\nvar TMP_DBSYSTEMVALUES_PROGRESS = 'progress';\nvar TMP_DBSYSTEMVALUES_MAXDB = 'maxdb';\nvar TMP_DBSYSTEMVALUES_HANADB = 'hanadb';\nvar TMP_DBSYSTEMVALUES_INGRES = 'ingres';\nvar TMP_DBSYSTEMVALUES_FIRSTSQL = 'firstsql';\nvar TMP_DBSYSTEMVALUES_EDB = 'edb';\nvar TMP_DBSYSTEMVALUES_CACHE = 'cache';\nvar TMP_DBSYSTEMVALUES_ADABAS = 'adabas';\nvar TMP_DBSYSTEMVALUES_FIREBIRD = 'firebird';\nvar TMP_DBSYSTEMVALUES_DERBY = 'derby';\nvar TMP_DBSYSTEMVALUES_FILEMAKER = 'filemaker';\nvar TMP_DBSYSTEMVALUES_INFORMIX = 'informix';\nvar TMP_DBSYSTEMVALUES_INSTANTDB = 'instantdb';\nvar TMP_DBSYSTEMVALUES_INTERBASE = 'interbase';\nvar TMP_DBSYSTEMVALUES_MARIADB = 'mariadb';\nvar TMP_DBSYSTEMVALUES_NETEZZA = 'netezza';\nvar TMP_DBSYSTEMVALUES_PERVASIVE = 'pervasive';\nvar TMP_DBSYSTEMVALUES_POINTBASE = 'pointbase';\nvar TMP_DBSYSTEMVALUES_SQLITE = 'sqlite';\nvar TMP_DBSYSTEMVALUES_SYBASE = 'sybase';\nvar TMP_DBSYSTEMVALUES_TERADATA = 'teradata';\nvar TMP_DBSYSTEMVALUES_VERTICA = 'vertica';\nvar TMP_DBSYSTEMVALUES_H2 = 'h2';\nvar TMP_DBSYSTEMVALUES_COLDFUSION = 'coldfusion';\nvar TMP_DBSYSTEMVALUES_CASSANDRA = 'cassandra';\nvar TMP_DBSYSTEMVALUES_HBASE = 'hbase';\nvar TMP_DBSYSTEMVALUES_MONGODB = 'mongodb';\nvar TMP_DBSYSTEMVALUES_REDIS = 'redis';\nvar TMP_DBSYSTEMVALUES_COUCHBASE = 'couchbase';\nvar TMP_DBSYSTEMVALUES_COUCHDB = 'couchdb';\nvar TMP_DBSYSTEMVALUES_COSMOSDB = 'cosmosdb';\nvar TMP_DBSYSTEMVALUES_DYNAMODB = 'dynamodb';\nvar TMP_DBSYSTEMVALUES_NEO4J = 'neo4j';\nvar TMP_DBSYSTEMVALUES_GEODE = 'geode';\nvar TMP_DBSYSTEMVALUES_ELASTICSEARCH = 'elasticsearch';\nvar TMP_DBSYSTEMVALUES_MEMCACHED = 'memcached';\nvar TMP_DBSYSTEMVALUES_COCKROACHDB = 'cockroachdb';\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_OTHER_SQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_OTHER_SQL = TMP_DBSYSTEMVALUES_OTHER_SQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MSSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MSSQL = TMP_DBSYSTEMVALUES_MSSQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MYSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MYSQL = TMP_DBSYSTEMVALUES_MYSQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ORACLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_ORACLE = TMP_DBSYSTEMVALUES_ORACLE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DB2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_DB2 = TMP_DBSYSTEMVALUES_DB2;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POSTGRESQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_POSTGRESQL = TMP_DBSYSTEMVALUES_POSTGRESQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDSHIFT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_REDSHIFT = TMP_DBSYSTEMVALUES_REDSHIFT;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HIVE = TMP_DBSYSTEMVALUES_HIVE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CLOUDSCAPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_CLOUDSCAPE = TMP_DBSYSTEMVALUES_CLOUDSCAPE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HSQLDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HSQLDB = TMP_DBSYSTEMVALUES_HSQLDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PROGRESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_PROGRESS = TMP_DBSYSTEMVALUES_PROGRESS;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MAXDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MAXDB = TMP_DBSYSTEMVALUES_MAXDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HANADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HANADB = TMP_DBSYSTEMVALUES_HANADB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INGRES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INGRES = TMP_DBSYSTEMVALUES_INGRES;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIRSTSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_FIRSTSQL = TMP_DBSYSTEMVALUES_FIRSTSQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_EDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_EDB = TMP_DBSYSTEMVALUES_EDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CACHE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_CACHE = TMP_DBSYSTEMVALUES_CACHE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ADABAS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_ADABAS = TMP_DBSYSTEMVALUES_ADABAS;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIREBIRD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_FIREBIRD = TMP_DBSYSTEMVALUES_FIREBIRD;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DERBY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_DERBY = TMP_DBSYSTEMVALUES_DERBY;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FILEMAKER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_FILEMAKER = TMP_DBSYSTEMVALUES_FILEMAKER;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INFORMIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INFORMIX = TMP_DBSYSTEMVALUES_INFORMIX;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INSTANTDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INSTANTDB = TMP_DBSYSTEMVALUES_INSTANTDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INTERBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INTERBASE = TMP_DBSYSTEMVALUES_INTERBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MARIADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MARIADB = TMP_DBSYSTEMVALUES_MARIADB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NETEZZA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_NETEZZA = TMP_DBSYSTEMVALUES_NETEZZA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PERVASIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_PERVASIVE = TMP_DBSYSTEMVALUES_PERVASIVE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POINTBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_POINTBASE = TMP_DBSYSTEMVALUES_POINTBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SQLITE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_SQLITE = TMP_DBSYSTEMVALUES_SQLITE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SYBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_SYBASE = TMP_DBSYSTEMVALUES_SYBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_TERADATA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_TERADATA = TMP_DBSYSTEMVALUES_TERADATA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_VERTICA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_VERTICA = TMP_DBSYSTEMVALUES_VERTICA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_H2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_H2 = TMP_DBSYSTEMVALUES_H2;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COLDFUSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COLDFUSION = TMP_DBSYSTEMVALUES_COLDFUSION;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CASSANDRA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_CASSANDRA = TMP_DBSYSTEMVALUES_CASSANDRA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HBASE = TMP_DBSYSTEMVALUES_HBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MONGODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MONGODB = TMP_DBSYSTEMVALUES_MONGODB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_REDIS = TMP_DBSYSTEMVALUES_REDIS;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COUCHBASE = TMP_DBSYSTEMVALUES_COUCHBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COUCHDB = TMP_DBSYSTEMVALUES_COUCHDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COSMOSDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COSMOSDB = TMP_DBSYSTEMVALUES_COSMOSDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DYNAMODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_DYNAMODB = TMP_DBSYSTEMVALUES_DYNAMODB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NEO4J in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_NEO4J = TMP_DBSYSTEMVALUES_NEO4J;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_GEODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_GEODE = TMP_DBSYSTEMVALUES_GEODE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ELASTICSEARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_ELASTICSEARCH = TMP_DBSYSTEMVALUES_ELASTICSEARCH;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MEMCACHED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MEMCACHED = TMP_DBSYSTEMVALUES_MEMCACHED;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COCKROACHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COCKROACHDB = TMP_DBSYSTEMVALUES_COCKROACHDB;\n/**\n * The constant map of values for DbSystemValues.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport var DbSystemValues = \n/*#__PURE__*/ createConstMap([\n    TMP_DBSYSTEMVALUES_OTHER_SQL,\n    TMP_DBSYSTEMVALUES_MSSQL,\n    TMP_DBSYSTEMVALUES_MYSQL,\n    TMP_DBSYSTEMVALUES_ORACLE,\n    TMP_DBSYSTEMVALUES_DB2,\n    TMP_DBSYSTEMVALUES_POSTGRESQL,\n    TMP_DBSYSTEMVALUES_REDSHIFT,\n    TMP_DBSYSTEMVALUES_HIVE,\n    TMP_DBSYSTEMVALUES_CLOUDSCAPE,\n    TMP_DBSYSTEMVALUES_HSQLDB,\n    TMP_DBSYSTEMVALUES_PROGRESS,\n    TMP_DBSYSTEMVALUES_MAXDB,\n    TMP_DBSYSTEMVALUES_HANADB,\n    TMP_DBSYSTEMVALUES_INGRES,\n    TMP_DBSYSTEMVALUES_FIRSTSQL,\n    TMP_DBSYSTEMVALUES_EDB,\n    TMP_DBSYSTEMVALUES_CACHE,\n    TMP_DBSYSTEMVALUES_ADABAS,\n    TMP_DBSYSTEMVALUES_FIREBIRD,\n    TMP_DBSYSTEMVALUES_DERBY,\n    TMP_DBSYSTEMVALUES_FILEMAKER,\n    TMP_DBSYSTEMVALUES_INFORMIX,\n    TMP_DBSYSTEMVALUES_INSTANTDB,\n    TMP_DBSYSTEMVALUES_INTERBASE,\n    TMP_DBSYSTEMVALUES_MARIADB,\n    TMP_DBSYSTEMVALUES_NETEZZA,\n    TMP_DBSYSTEMVALUES_PERVASIVE,\n    TMP_DBSYSTEMVALUES_POINTBASE,\n    TMP_DBSYSTEMVALUES_SQLITE,\n    TMP_DBSYSTEMVALUES_SYBASE,\n    TMP_DBSYSTEMVALUES_TERADATA,\n    TMP_DBSYSTEMVALUES_VERTICA,\n    TMP_DBSYSTEMVALUES_H2,\n    TMP_DBSYSTEMVALUES_COLDFUSION,\n    TMP_DBSYSTEMVALUES_CASSANDRA,\n    TMP_DBSYSTEMVALUES_HBASE,\n    TMP_DBSYSTEMVALUES_MONGODB,\n    TMP_DBSYSTEMVALUES_REDIS,\n    TMP_DBSYSTEMVALUES_COUCHBASE,\n    TMP_DBSYSTEMVALUES_COUCHDB,\n    TMP_DBSYSTEMVALUES_COSMOSDB,\n    TMP_DBSYSTEMVALUES_DYNAMODB,\n    TMP_DBSYSTEMVALUES_NEO4J,\n    TMP_DBSYSTEMVALUES_GEODE,\n    TMP_DBSYSTEMVALUES_ELASTICSEARCH,\n    TMP_DBSYSTEMVALUES_MEMCACHED,\n    TMP_DBSYSTEMVALUES_COCKROACHDB,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL = 'all';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = 'each_quorum';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = 'quorum';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = 'local_quorum';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE = 'one';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO = 'two';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE = 'three';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = 'local_one';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY = 'any';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = 'serial';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = 'local_serial';\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_ALL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_ONE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_TWO = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_THREE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_ANY = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL;\n/**\n * The constant map of values for DbCassandraConsistencyLevelValues.\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport var DbCassandraConsistencyLevelValues = \n/*#__PURE__*/ createConstMap([\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_FAASTRIGGERVALUES_DATASOURCE = 'datasource';\nvar TMP_FAASTRIGGERVALUES_HTTP = 'http';\nvar TMP_FAASTRIGGERVALUES_PUBSUB = 'pubsub';\nvar TMP_FAASTRIGGERVALUES_TIMER = 'timer';\nvar TMP_FAASTRIGGERVALUES_OTHER = 'other';\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_DATASOURCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_DATASOURCE = TMP_FAASTRIGGERVALUES_DATASOURCE;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_HTTP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_HTTP = TMP_FAASTRIGGERVALUES_HTTP;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_PUBSUB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_PUBSUB = TMP_FAASTRIGGERVALUES_PUBSUB;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_TIMER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_TIMER = TMP_FAASTRIGGERVALUES_TIMER;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_OTHER = TMP_FAASTRIGGERVALUES_OTHER;\n/**\n * The constant map of values for FaasTriggerValues.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport var FaasTriggerValues = \n/*#__PURE__*/ createConstMap([\n    TMP_FAASTRIGGERVALUES_DATASOURCE,\n    TMP_FAASTRIGGERVALUES_HTTP,\n    TMP_FAASTRIGGERVALUES_PUBSUB,\n    TMP_FAASTRIGGERVALUES_TIMER,\n    TMP_FAASTRIGGERVALUES_OTHER,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_FAASDOCUMENTOPERATIONVALUES_INSERT = 'insert';\nvar TMP_FAASDOCUMENTOPERATIONVALUES_EDIT = 'edit';\nvar TMP_FAASDOCUMENTOPERATIONVALUES_DELETE = 'delete';\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_INSERT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASDOCUMENTOPERATIONVALUES_INSERT = TMP_FAASDOCUMENTOPERATIONVALUES_INSERT;\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_EDIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASDOCUMENTOPERATIONVALUES_EDIT = TMP_FAASDOCUMENTOPERATIONVALUES_EDIT;\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_DELETE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASDOCUMENTOPERATIONVALUES_DELETE = TMP_FAASDOCUMENTOPERATIONVALUES_DELETE;\n/**\n * The constant map of values for FaasDocumentOperationValues.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport var FaasDocumentOperationValues = \n/*#__PURE__*/ createConstMap([\n    TMP_FAASDOCUMENTOPERATIONVALUES_INSERT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_EDIT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_DELETE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nvar TMP_FAASINVOKEDPROVIDERVALUES_AWS = 'aws';\nvar TMP_FAASINVOKEDPROVIDERVALUES_AZURE = 'azure';\nvar TMP_FAASINVOKEDPROVIDERVALUES_GCP = 'gcp';\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_AWS = TMP_FAASINVOKEDPROVIDERVALUES_AWS;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_AZURE = TMP_FAASINVOKEDPROVIDERVALUES_AZURE;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_GCP = TMP_FAASINVOKEDPROVIDERVALUES_GCP;\n/**\n * The constant map of values for FaasInvokedProviderValues.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport var FaasInvokedProviderValues = \n/*#__PURE__*/ createConstMap([\n    TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_FAASINVOKEDPROVIDERVALUES_AWS,\n    TMP_FAASINVOKEDPROVIDERVALUES_AZURE,\n    TMP_FAASINVOKEDPROVIDERVALUES_GCP,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_NETTRANSPORTVALUES_IP_TCP = 'ip_tcp';\nvar TMP_NETTRANSPORTVALUES_IP_UDP = 'ip_udp';\nvar TMP_NETTRANSPORTVALUES_IP = 'ip';\nvar TMP_NETTRANSPORTVALUES_UNIX = 'unix';\nvar TMP_NETTRANSPORTVALUES_PIPE = 'pipe';\nvar TMP_NETTRANSPORTVALUES_INPROC = 'inproc';\nvar TMP_NETTRANSPORTVALUES_OTHER = 'other';\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_TCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_IP_TCP = TMP_NETTRANSPORTVALUES_IP_TCP;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_UDP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_IP_UDP = TMP_NETTRANSPORTVALUES_IP_UDP;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport var NETTRANSPORTVALUES_IP = TMP_NETTRANSPORTVALUES_IP;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport var NETTRANSPORTVALUES_UNIX = TMP_NETTRANSPORTVALUES_UNIX;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_PIPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_PIPE = TMP_NETTRANSPORTVALUES_PIPE;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_INPROC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_INPROC = TMP_NETTRANSPORTVALUES_INPROC;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_OTHER = TMP_NETTRANSPORTVALUES_OTHER;\n/**\n * The constant map of values for NetTransportValues.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport var NetTransportValues = \n/*#__PURE__*/ createConstMap([\n    TMP_NETTRANSPORTVALUES_IP_TCP,\n    TMP_NETTRANSPORTVALUES_IP_UDP,\n    TMP_NETTRANSPORTVALUES_IP,\n    TMP_NETTRANSPORTVALUES_UNIX,\n    TMP_NETTRANSPORTVALUES_PIPE,\n    TMP_NETTRANSPORTVALUES_INPROC,\n    TMP_NETTRANSPORTVALUES_OTHER,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI = 'wifi';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED = 'wired';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_CELL = 'cell';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = 'unavailable';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = 'unknown';\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIFI in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_WIFI = TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIRED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_WIRED = TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_CELL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_CELL = TMP_NETHOSTCONNECTIONTYPEVALUES_CELL;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN;\n/**\n * The constant map of values for NetHostConnectionTypeValues.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport var NetHostConnectionTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_CELL,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = 'gprs';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = 'edge';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = 'umts';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = 'cdma';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = 'evdo_0';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = 'evdo_a';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = 'cdma2000_1xrtt';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = 'hsdpa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = 'hsupa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = 'hspa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = 'iden';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = 'evdo_b';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE = 'lte';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = 'ehrpd';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = 'hspap';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM = 'gsm';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = 'td_scdma';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = 'iwlan';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR = 'nr';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = 'nrnsa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = 'lte_ca';\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GPRS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EDGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_UMTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_A in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSDPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSUPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IDEN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_B in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_LTE = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EHRPD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPAP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GSM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_GSM = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_TD_SCDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IWLAN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_NR = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NRNSA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE_CA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA;\n/**\n * The constant map of values for NetHostConnectionSubtypeValues.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport var NetHostConnectionSubtypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_HTTPFLAVORVALUES_HTTP_1_0 = '1.0';\nvar TMP_HTTPFLAVORVALUES_HTTP_1_1 = '1.1';\nvar TMP_HTTPFLAVORVALUES_HTTP_2_0 = '2.0';\nvar TMP_HTTPFLAVORVALUES_SPDY = 'SPDY';\nvar TMP_HTTPFLAVORVALUES_QUIC = 'QUIC';\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_HTTP_1_0 = TMP_HTTPFLAVORVALUES_HTTP_1_0;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_1 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_HTTP_1_1 = TMP_HTTPFLAVORVALUES_HTTP_1_1;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_2_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_HTTP_2_0 = TMP_HTTPFLAVORVALUES_HTTP_2_0;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_SPDY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_SPDY = TMP_HTTPFLAVORVALUES_SPDY;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_QUIC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_QUIC = TMP_HTTPFLAVORVALUES_QUIC;\n/**\n * The constant map of values for HttpFlavorValues.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport var HttpFlavorValues = {\n    HTTP_1_0: TMP_HTTPFLAVORVALUES_HTTP_1_0,\n    HTTP_1_1: TMP_HTTPFLAVORVALUES_HTTP_1_1,\n    HTTP_2_0: TMP_HTTPFLAVORVALUES_HTTP_2_0,\n    SPDY: TMP_HTTPFLAVORVALUES_SPDY,\n    QUIC: TMP_HTTPFLAVORVALUES_QUIC,\n};\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE = 'queue';\nvar TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC = 'topic';\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport var MESSAGINGDESTINATIONKINDVALUES_QUEUE = TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE;\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport var MESSAGINGDESTINATIONKINDVALUES_TOPIC = TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC;\n/**\n * The constant map of values for MessagingDestinationKindValues.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport var MessagingDestinationKindValues = \n/*#__PURE__*/ createConstMap([\n    TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n    TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_MESSAGINGOPERATIONVALUES_RECEIVE = 'receive';\nvar TMP_MESSAGINGOPERATIONVALUES_PROCESS = 'process';\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_RECEIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGINGOPERATIONVALUES_RECEIVE = TMP_MESSAGINGOPERATIONVALUES_RECEIVE;\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_PROCESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGINGOPERATIONVALUES_PROCESS = TMP_MESSAGINGOPERATIONVALUES_PROCESS;\n/**\n * The constant map of values for MessagingOperationValues.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport var MessagingOperationValues = \n/*#__PURE__*/ createConstMap([\n    TMP_MESSAGINGOPERATIONVALUES_RECEIVE,\n    TMP_MESSAGINGOPERATIONVALUES_PROCESS,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_RPCGRPCSTATUSCODEVALUES_OK = 0;\nvar TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED = 1;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN = 2;\nvar TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = 3;\nvar TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = 4;\nvar TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND = 5;\nvar TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = 6;\nvar TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = 7;\nvar TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = 8;\nvar TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = 9;\nvar TMP_RPCGRPCSTATUSCODEVALUES_ABORTED = 10;\nvar TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = 11;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = 12;\nvar TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL = 13;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = 14;\nvar TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS = 15;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = 16;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_OK = TMP_RPCGRPCSTATUSCODEVALUES_OK;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_CANCELLED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_CANCELLED = TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNKNOWN = TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_NOT_FOUND = TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ABORTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_ABORTED = TMP_RPCGRPCSTATUSCODEVALUES_ABORTED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INTERNAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_INTERNAL = TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_DATA_LOSS = TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED;\n/**\n * The constant map of values for RpcGrpcStatusCodeValues.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport var RpcGrpcStatusCodeValues = {\n    OK: TMP_RPCGRPCSTATUSCODEVALUES_OK,\n    CANCELLED: TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED,\n    UNKNOWN: TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN,\n    INVALID_ARGUMENT: TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT,\n    DEADLINE_EXCEEDED: TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED,\n    NOT_FOUND: TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND,\n    ALREADY_EXISTS: TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS,\n    PERMISSION_DENIED: TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED,\n    RESOURCE_EXHAUSTED: TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED,\n    FAILED_PRECONDITION: TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION,\n    ABORTED: TMP_RPCGRPCSTATUSCODEVALUES_ABORTED,\n    OUT_OF_RANGE: TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE,\n    UNIMPLEMENTED: TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED,\n    INTERNAL: TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL,\n    UNAVAILABLE: TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE,\n    DATA_LOSS: TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS,\n    UNAUTHENTICATED: TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED,\n};\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_MESSAGETYPEVALUES_SENT = 'SENT';\nvar TMP_MESSAGETYPEVALUES_RECEIVED = 'RECEIVED';\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_SENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGETYPEVALUES_SENT = TMP_MESSAGETYPEVALUES_SENT;\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_RECEIVED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGETYPEVALUES_RECEIVED = TMP_MESSAGETYPEVALUES_RECEIVED;\n/**\n * The constant map of values for MessageTypeValues.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport var MessageTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_MESSAGETYPEVALUES_SENT,\n    TMP_MESSAGETYPEVALUES_RECEIVED,\n]);\n//# sourceMappingURL=SemanticAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Event name definitions\nexport var ExceptionEventName = 'exception';\n//# sourceMappingURL=enums.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { diag, SpanStatusCode, } from '@opentelemetry/api';\nimport { addHrTimes, millisToHrTime, getTimeOrigin, hrTime, hrTimeDuration, isAttributeValue, isTimeInput, isTimeInputHrTime, otperformance, sanitizeAttributes, } from '@opentelemetry/core';\nimport { SEMATTRS_EXCEPTION_MESSAGE, SEMATTRS_EXCEPTION_STACKTRACE, SEMATTRS_EXCEPTION_TYPE, } from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\n/**\n * This class represents a span.\n */\nvar Span = /** @class */ (function () {\n    /**\n     * Constructs a new Span instance.\n     *\n     * @deprecated calling Span constructor directly is not supported. Please use tracer.startSpan.\n     * */\n    function Span(parentTracer, context, spanName, spanContext, kind, parentSpanId, links, startTime, _deprecatedClock, // keeping this argument even though it is unused to ensure backwards compatibility\n    attributes) {\n        if (links === void 0) { links = []; }\n        this.attributes = {};\n        this.links = [];\n        this.events = [];\n        this._droppedAttributesCount = 0;\n        this._droppedEventsCount = 0;\n        this._droppedLinksCount = 0;\n        this.status = {\n            code: SpanStatusCode.UNSET,\n        };\n        this.endTime = [0, 0];\n        this._ended = false;\n        this._duration = [-1, -1];\n        this.name = spanName;\n        this._spanContext = spanContext;\n        this.parentSpanId = parentSpanId;\n        this.kind = kind;\n        this.links = links;\n        var now = Date.now();\n        this._performanceStartTime = otperformance.now();\n        this._performanceOffset =\n            now - (this._performanceStartTime + getTimeOrigin());\n        this._startTimeProvided = startTime != null;\n        this.startTime = this._getTime(startTime !== null && startTime !== void 0 ? startTime : now);\n        this.resource = parentTracer.resource;\n        this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n        this._spanLimits = parentTracer.getSpanLimits();\n        this._attributeValueLengthLimit =\n            this._spanLimits.attributeValueLengthLimit || 0;\n        if (attributes != null) {\n            this.setAttributes(attributes);\n        }\n        this._spanProcessor = parentTracer.getActiveSpanProcessor();\n        this._spanProcessor.onStart(this, context);\n    }\n    Span.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    Span.prototype.setAttribute = function (key, value) {\n        if (value == null || this._isSpanEnded())\n            return this;\n        if (key.length === 0) {\n            diag.warn(\"Invalid attribute key: \" + key);\n            return this;\n        }\n        if (!isAttributeValue(value)) {\n            diag.warn(\"Invalid attribute value set for key: \" + key);\n            return this;\n        }\n        if (Object.keys(this.attributes).length >=\n            this._spanLimits.attributeCountLimit &&\n            !Object.prototype.hasOwnProperty.call(this.attributes, key)) {\n            this._droppedAttributesCount++;\n            return this;\n        }\n        this.attributes[key] = this._truncateToSize(value);\n        return this;\n    };\n    Span.prototype.setAttributes = function (attributes) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.entries(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), k = _d[0], v = _d[1];\n                this.setAttribute(k, v);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    /**\n     *\n     * @param name Span Name\n     * @param [attributesOrStartTime] Span attributes or start time\n     *     if type is {@type TimeInput} and 3rd param is undefined\n     * @param [timeStamp] Specified time stamp for the event\n     */\n    Span.prototype.addEvent = function (name, attributesOrStartTime, timeStamp) {\n        if (this._isSpanEnded())\n            return this;\n        if (this._spanLimits.eventCountLimit === 0) {\n            diag.warn('No events allowed.');\n            this._droppedEventsCount++;\n            return this;\n        }\n        if (this.events.length >= this._spanLimits.eventCountLimit) {\n            if (this._droppedEventsCount === 0) {\n                diag.debug('Dropping extra events.');\n            }\n            this.events.shift();\n            this._droppedEventsCount++;\n        }\n        if (isTimeInput(attributesOrStartTime)) {\n            if (!isTimeInput(timeStamp)) {\n                timeStamp = attributesOrStartTime;\n            }\n            attributesOrStartTime = undefined;\n        }\n        var attributes = sanitizeAttributes(attributesOrStartTime);\n        this.events.push({\n            name: name,\n            attributes: attributes,\n            time: this._getTime(timeStamp),\n            droppedAttributesCount: 0,\n        });\n        return this;\n    };\n    Span.prototype.addLink = function (link) {\n        this.links.push(link);\n        return this;\n    };\n    Span.prototype.addLinks = function (links) {\n        var _a;\n        (_a = this.links).push.apply(_a, __spreadArray([], __read(links), false));\n        return this;\n    };\n    Span.prototype.setStatus = function (status) {\n        if (this._isSpanEnded())\n            return this;\n        this.status = __assign({}, status);\n        // When using try-catch, the caught \"error\" is of type `any`. When then assigning `any` to `status.message`,\n        // TypeScript will not error. While this can happen during use of any API, it is more common on Span#setStatus()\n        // as it's likely used in a catch-block. Therefore, we validate if `status.message` is actually a string, null, or\n        // undefined to avoid an incorrect type causing issues downstream.\n        if (this.status.message != null && typeof status.message !== 'string') {\n            diag.warn(\"Dropping invalid status.message of type '\" + typeof status.message + \"', expected 'string'\");\n            delete this.status.message;\n        }\n        return this;\n    };\n    Span.prototype.updateName = function (name) {\n        if (this._isSpanEnded())\n            return this;\n        this.name = name;\n        return this;\n    };\n    Span.prototype.end = function (endTime) {\n        if (this._isSpanEnded()) {\n            diag.error(this.name + \" \" + this._spanContext.traceId + \"-\" + this._spanContext.spanId + \" - You can only call end() on a span once.\");\n            return;\n        }\n        this._ended = true;\n        this.endTime = this._getTime(endTime);\n        this._duration = hrTimeDuration(this.startTime, this.endTime);\n        if (this._duration[0] < 0) {\n            diag.warn('Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.', this.startTime, this.endTime);\n            this.endTime = this.startTime.slice();\n            this._duration = [0, 0];\n        }\n        if (this._droppedEventsCount > 0) {\n            diag.warn(\"Dropped \" + this._droppedEventsCount + \" events because eventCountLimit reached\");\n        }\n        this._spanProcessor.onEnd(this);\n    };\n    Span.prototype._getTime = function (inp) {\n        if (typeof inp === 'number' && inp <= otperformance.now()) {\n            // must be a performance timestamp\n            // apply correction and convert to hrtime\n            return hrTime(inp + this._performanceOffset);\n        }\n        if (typeof inp === 'number') {\n            return millisToHrTime(inp);\n        }\n        if (inp instanceof Date) {\n            return millisToHrTime(inp.getTime());\n        }\n        if (isTimeInputHrTime(inp)) {\n            return inp;\n        }\n        if (this._startTimeProvided) {\n            // if user provided a time for the start manually\n            // we can't use duration to calculate event/end times\n            return millisToHrTime(Date.now());\n        }\n        var msDuration = otperformance.now() - this._performanceStartTime;\n        return addHrTimes(this.startTime, millisToHrTime(msDuration));\n    };\n    Span.prototype.isRecording = function () {\n        return this._ended === false;\n    };\n    Span.prototype.recordException = function (exception, time) {\n        var attributes = {};\n        if (typeof exception === 'string') {\n            attributes[SEMATTRS_EXCEPTION_MESSAGE] = exception;\n        }\n        else if (exception) {\n            if (exception.code) {\n                attributes[SEMATTRS_EXCEPTION_TYPE] = exception.code.toString();\n            }\n            else if (exception.name) {\n                attributes[SEMATTRS_EXCEPTION_TYPE] = exception.name;\n            }\n            if (exception.message) {\n                attributes[SEMATTRS_EXCEPTION_MESSAGE] = exception.message;\n            }\n            if (exception.stack) {\n                attributes[SEMATTRS_EXCEPTION_STACKTRACE] = exception.stack;\n            }\n        }\n        // these are minimum requirements from spec\n        if (attributes[SEMATTRS_EXCEPTION_TYPE] ||\n            attributes[SEMATTRS_EXCEPTION_MESSAGE]) {\n            this.addEvent(ExceptionEventName, attributes, time);\n        }\n        else {\n            diag.warn(\"Failed to record an exception \" + exception);\n        }\n    };\n    Object.defineProperty(Span.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"ended\", {\n        get: function () {\n            return this._ended;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"droppedAttributesCount\", {\n        get: function () {\n            return this._droppedAttributesCount;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"droppedEventsCount\", {\n        get: function () {\n            return this._droppedEventsCount;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"droppedLinksCount\", {\n        get: function () {\n            return this._droppedLinksCount;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Span.prototype._isSpanEnded = function () {\n        if (this._ended) {\n            diag.warn(\"Can not execute the operation on ended Span {traceId: \" + this._spanContext.traceId + \", spanId: \" + this._spanContext.spanId + \"}\");\n        }\n        return this._ended;\n    };\n    // Utility function to truncate given value within size\n    // for value type of string, will truncate to given limit\n    // for type of non-string, will return same value\n    Span.prototype._truncateToLimitUtil = function (value, limit) {\n        if (value.length <= limit) {\n            return value;\n        }\n        return value.substring(0, limit);\n    };\n    /**\n     * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n     * return string with truncated to {@code attributeValueLengthLimit} characters\n     *\n     * If the given attribute value is array of strings then\n     * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n     *\n     * Otherwise return same Attribute {@code value}\n     *\n     * @param value Attribute value\n     * @returns truncated attribute value if required, otherwise same value\n     */\n    Span.prototype._truncateToSize = function (value) {\n        var _this = this;\n        var limit = this._attributeValueLengthLimit;\n        // Check limit\n        if (limit <= 0) {\n            // Negative values are invalid, so do not truncate\n            diag.warn(\"Attribute value limit must be positive, got \" + limit);\n            return value;\n        }\n        // String\n        if (typeof value === 'string') {\n            return this._truncateToLimitUtil(value, limit);\n        }\n        // Array of strings\n        if (Array.isArray(value)) {\n            return value.map(function (val) {\n                return typeof val === 'string' ? _this._truncateToLimitUtil(val, limit) : val;\n            });\n        }\n        // Other types, no need to apply value length limit\n        return value;\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=Span.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=Sampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples no traces. */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples all traces. */\nvar AlwaysOnSampler = /** @class */ (function () {\n    function AlwaysOnSampler() {\n    }\n    AlwaysOnSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    };\n    AlwaysOnSampler.prototype.toString = function () {\n        return 'AlwaysOnSampler';\n    };\n    return AlwaysOnSampler;\n}());\nexport { AlwaysOnSampler };\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nvar ParentBasedSampler = /** @class */ (function () {\n    function ParentBasedSampler(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler();\n    }\n    ParentBasedSampler.prototype.shouldSample = function (context, traceId, spanName, spanKind, attributes, links) {\n        var parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    };\n    ParentBasedSampler.prototype.toString = function () {\n        return \"ParentBased{root=\" + this._root.toString() + \", remoteParentSampled=\" + this._remoteParentSampled.toString() + \", remoteParentNotSampled=\" + this._remoteParentNotSampled.toString() + \", localParentSampled=\" + this._localParentSampled.toString() + \", localParentNotSampled=\" + this._localParentNotSampled.toString() + \"}\";\n    };\n    return ParentBasedSampler;\n}());\nexport { ParentBasedSampler };\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isValidTraceId } from '@opentelemetry/api';\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nvar TraceIdRatioBasedSampler = /** @class */ (function () {\n    function TraceIdRatioBasedSampler(_ratio) {\n        if (_ratio === void 0) { _ratio = 0; }\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    TraceIdRatioBasedSampler.prototype.shouldSample = function (context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    };\n    TraceIdRatioBasedSampler.prototype.toString = function () {\n        return \"TraceIdRatioBased{\" + this._ratio + \"}\";\n    };\n    TraceIdRatioBasedSampler.prototype._normalize = function (ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    };\n    TraceIdRatioBasedSampler.prototype._accumulate = function (traceId) {\n        var accumulation = 0;\n        for (var i = 0; i < traceId.length / 8; i++) {\n            var pos = i * 8;\n            var part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    };\n    return TraceIdRatioBasedSampler;\n}());\nexport { TraceIdRatioBasedSampler };\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, TracesSamplerValues } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nimport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nimport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nimport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\nvar FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nvar DEFAULT_RATIO = 1;\n/**\n * Load default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\n// object needs to be wrapped in this function and called when needed otherwise\n// envs are parsed before tests are ran - causes tests using these envs to fail\nexport function loadDefaultConfig() {\n    var env = getEnv();\n    return {\n        sampler: buildSamplerFromEnv(env),\n        forceFlushTimeoutMillis: 30000,\n        generalLimits: {\n            attributeValueLengthLimit: env.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n            attributeCountLimit: env.OTEL_ATTRIBUTE_COUNT_LIMIT,\n        },\n        spanLimits: {\n            attributeValueLengthLimit: env.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n            attributeCountLimit: env.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n            linkCountLimit: env.OTEL_SPAN_LINK_COUNT_LIMIT,\n            eventCountLimit: env.OTEL_SPAN_EVENT_COUNT_LIMIT,\n            attributePerEventCountLimit: env.OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n            attributePerLinkCountLimit: env.OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n        },\n        mergeResourceWithDefaults: true,\n    };\n}\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(environment) {\n    if (environment === void 0) { environment = getEnv(); }\n    switch (environment.OTEL_TRACES_SAMPLER) {\n        case TracesSamplerValues.AlwaysOn:\n            return new AlwaysOnSampler();\n        case TracesSamplerValues.AlwaysOff:\n            return new AlwaysOffSampler();\n        case TracesSamplerValues.ParentBasedAlwaysOn:\n            return new ParentBasedSampler({\n                root: new AlwaysOnSampler(),\n            });\n        case TracesSamplerValues.ParentBasedAlwaysOff:\n            return new ParentBasedSampler({\n                root: new AlwaysOffSampler(),\n            });\n        case TracesSamplerValues.TraceIdRatio:\n            return new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment));\n        case TracesSamplerValues.ParentBasedTraceIdRatio:\n            return new ParentBasedSampler({\n                root: new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment)),\n            });\n        default:\n            diag.error(\"OTEL_TRACES_SAMPLER value \\\"\" + environment.OTEL_TRACES_SAMPLER + \" invalid, defaulting to \" + FALLBACK_OTEL_TRACES_SAMPLER + \"\\\".\");\n            return new AlwaysOnSampler();\n    }\n}\nfunction getSamplerProbabilityFromEnv(environment) {\n    if (environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n        environment.OTEL_TRACES_SAMPLER_ARG === '') {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG is blank, defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    var probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n    if (isNaN(probability)) {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG=\" + environment.OTEL_TRACES_SAMPLER_ARG + \" was given, but it is invalid, defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    if (probability < 0 || probability > 1) {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG=\" + environment.OTEL_TRACES_SAMPLER_ARG + \" was given, but it is out of range ([0..1]), defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    return probability;\n}\n//# sourceMappingURL=config.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { buildSamplerFromEnv, loadDefaultConfig } from './config';\nimport { DEFAULT_ATTRIBUTE_COUNT_LIMIT, DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT, getEnvWithoutDefaults, } from '@opentelemetry/core';\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig) {\n    var perInstanceDefaults = {\n        sampler: buildSamplerFromEnv(),\n    };\n    var DEFAULT_CONFIG = loadDefaultConfig();\n    var target = Object.assign({}, DEFAULT_CONFIG, perInstanceDefaults, userConfig);\n    target.generalLimits = Object.assign({}, DEFAULT_CONFIG.generalLimits, userConfig.generalLimits || {});\n    target.spanLimits = Object.assign({}, DEFAULT_CONFIG.spanLimits, userConfig.spanLimits || {});\n    return target;\n}\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    var spanLimits = Object.assign({}, userConfig.spanLimits);\n    var parsedEnvConfig = getEnvWithoutDefaults();\n    /**\n     * Reassign span attribute count limit to use first non null value defined by user or use default value\n     */\n    spanLimits.attributeCountLimit =\n        (_f = (_e = (_d = (_b = (_a = userConfig.spanLimits) === null || _a === void 0 ? void 0 : _a.attributeCountLimit) !== null && _b !== void 0 ? _b : (_c = userConfig.generalLimits) === null || _c === void 0 ? void 0 : _c.attributeCountLimit) !== null && _d !== void 0 ? _d : parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT) !== null && _e !== void 0 ? _e : parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT) !== null && _f !== void 0 ? _f : DEFAULT_ATTRIBUTE_COUNT_LIMIT;\n    /**\n     * Reassign span attribute value length limit to use first non null value defined by user or use default value\n     */\n    spanLimits.attributeValueLengthLimit =\n        (_m = (_l = (_k = (_h = (_g = userConfig.spanLimits) === null || _g === void 0 ? void 0 : _g.attributeValueLengthLimit) !== null && _h !== void 0 ? _h : (_j = userConfig.generalLimits) === null || _j === void 0 ? void 0 : _j.attributeValueLengthLimit) !== null && _k !== void 0 ? _k : parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT) !== null && _l !== void 0 ? _l : parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT) !== null && _m !== void 0 ? _m : DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;\n    return Object.assign({}, userConfig, { spanLimits: spanLimits });\n}\n//# sourceMappingURL=utility.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, diag, TraceFlags } from '@opentelemetry/api';\nimport { BindOnceFuture, ExportResultCode, getEnv, globalErrorHandler, suppressTracing, unrefTimer, } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nvar BatchSpanProcessorBase = /** @class */ (function () {\n    function BatchSpanProcessorBase(_exporter, config) {\n        this._exporter = _exporter;\n        this._isExporting = false;\n        this._finishedSpans = [];\n        this._droppedSpansCount = 0;\n        var env = getEnv();\n        this._maxExportBatchSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxExportBatchSize) === 'number'\n                ? config.maxExportBatchSize\n                : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n        this._maxQueueSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxQueueSize) === 'number'\n                ? config.maxQueueSize\n                : env.OTEL_BSP_MAX_QUEUE_SIZE;\n        this._scheduledDelayMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.scheduledDelayMillis) === 'number'\n                ? config.scheduledDelayMillis\n                : env.OTEL_BSP_SCHEDULE_DELAY;\n        this._exportTimeoutMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.exportTimeoutMillis) === 'number'\n                ? config.exportTimeoutMillis\n                : env.OTEL_BSP_EXPORT_TIMEOUT;\n        this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n        if (this._maxExportBatchSize > this._maxQueueSize) {\n            diag.warn('BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize');\n            this._maxExportBatchSize = this._maxQueueSize;\n        }\n    }\n    BatchSpanProcessorBase.prototype.forceFlush = function () {\n        if (this._shutdownOnce.isCalled) {\n            return this._shutdownOnce.promise;\n        }\n        return this._flushAll();\n    };\n    // does nothing.\n    BatchSpanProcessorBase.prototype.onStart = function (_span, _parentContext) { };\n    BatchSpanProcessorBase.prototype.onEnd = function (span) {\n        if (this._shutdownOnce.isCalled) {\n            return;\n        }\n        if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n            return;\n        }\n        this._addToBuffer(span);\n    };\n    BatchSpanProcessorBase.prototype.shutdown = function () {\n        return this._shutdownOnce.call();\n    };\n    BatchSpanProcessorBase.prototype._shutdown = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.onShutdown();\n        })\n            .then(function () {\n            return _this._flushAll();\n        })\n            .then(function () {\n            return _this._exporter.shutdown();\n        });\n    };\n    /** Add a span in the buffer. */\n    BatchSpanProcessorBase.prototype._addToBuffer = function (span) {\n        if (this._finishedSpans.length >= this._maxQueueSize) {\n            // limit reached, drop span\n            if (this._droppedSpansCount === 0) {\n                diag.debug('maxQueueSize reached, dropping spans');\n            }\n            this._droppedSpansCount++;\n            return;\n        }\n        if (this._droppedSpansCount > 0) {\n            // some spans were dropped, log once with count of spans dropped\n            diag.warn(\"Dropped \" + this._droppedSpansCount + \" spans because maxQueueSize reached\");\n            this._droppedSpansCount = 0;\n        }\n        this._finishedSpans.push(span);\n        this._maybeStartTimer();\n    };\n    /**\n     * Send all spans to the exporter respecting the batch size limit\n     * This function is used only on forceFlush or shutdown,\n     * for all other cases _flush should be used\n     * */\n    BatchSpanProcessorBase.prototype._flushAll = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var promises = [];\n            // calculate number of batches\n            var count = Math.ceil(_this._finishedSpans.length / _this._maxExportBatchSize);\n            for (var i = 0, j = count; i < j; i++) {\n                promises.push(_this._flushOneBatch());\n            }\n            Promise.all(promises)\n                .then(function () {\n                resolve();\n            })\n                .catch(reject);\n        });\n    };\n    BatchSpanProcessorBase.prototype._flushOneBatch = function () {\n        var _this = this;\n        this._clearTimer();\n        if (this._finishedSpans.length === 0) {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve, reject) {\n            var timer = setTimeout(function () {\n                // don't wait anymore for export, this way the next batch can start\n                reject(new Error('Timeout'));\n            }, _this._exportTimeoutMillis);\n            // prevent downstream exporter calls from generating spans\n            context.with(suppressTracing(context.active()), function () {\n                // Reset the finished spans buffer here because the next invocations of the _flush method\n                // could pass the same finished spans to the exporter if the buffer is cleared\n                // outside the execution of this callback.\n                var spans;\n                if (_this._finishedSpans.length <= _this._maxExportBatchSize) {\n                    spans = _this._finishedSpans;\n                    _this._finishedSpans = [];\n                }\n                else {\n                    spans = _this._finishedSpans.splice(0, _this._maxExportBatchSize);\n                }\n                var doExport = function () {\n                    return _this._exporter.export(spans, function (result) {\n                        var _a;\n                        clearTimeout(timer);\n                        if (result.code === ExportResultCode.SUCCESS) {\n                            resolve();\n                        }\n                        else {\n                            reject((_a = result.error) !== null && _a !== void 0 ? _a : new Error('BatchSpanProcessor: span export failed'));\n                        }\n                    });\n                };\n                var pendingResources = null;\n                for (var i = 0, len = spans.length; i < len; i++) {\n                    var span = spans[i];\n                    if (span.resource.asyncAttributesPending &&\n                        span.resource.waitForAsyncAttributes) {\n                        pendingResources !== null && pendingResources !== void 0 ? pendingResources : (pendingResources = []);\n                        pendingResources.push(span.resource.waitForAsyncAttributes());\n                    }\n                }\n                // Avoid scheduling a promise to make the behavior more predictable and easier to test\n                if (pendingResources === null) {\n                    doExport();\n                }\n                else {\n                    Promise.all(pendingResources).then(doExport, function (err) {\n                        globalErrorHandler(err);\n                        reject(err);\n                    });\n                }\n            });\n        });\n    };\n    BatchSpanProcessorBase.prototype._maybeStartTimer = function () {\n        var _this = this;\n        if (this._isExporting)\n            return;\n        var flush = function () {\n            _this._isExporting = true;\n            _this._flushOneBatch()\n                .finally(function () {\n                _this._isExporting = false;\n                if (_this._finishedSpans.length > 0) {\n                    _this._clearTimer();\n                    _this._maybeStartTimer();\n                }\n            })\n                .catch(function (e) {\n                _this._isExporting = false;\n                globalErrorHandler(e);\n            });\n        };\n        // we only wait if the queue doesn't have enough elements yet\n        if (this._finishedSpans.length >= this._maxExportBatchSize) {\n            return flush();\n        }\n        if (this._timer !== undefined)\n            return;\n        this._timer = setTimeout(function () { return flush(); }, this._scheduledDelayMillis);\n        unrefTimer(this._timer);\n    };\n    BatchSpanProcessorBase.prototype._clearTimer = function () {\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n    };\n    return BatchSpanProcessorBase;\n}());\nexport { BatchSpanProcessorBase };\n//# sourceMappingURL=BatchSpanProcessorBase.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nvar BatchSpanProcessor = /** @class */ (function (_super) {\n    __extends(BatchSpanProcessor, _super);\n    function BatchSpanProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BatchSpanProcessor.prototype.onShutdown = function () { };\n    return BatchSpanProcessor;\n}(BatchSpanProcessorBase));\nexport { BatchSpanProcessor };\n//# sourceMappingURL=BatchSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SPAN_ID_BYTES = 8;\nvar TRACE_ID_BYTES = 16;\nvar RandomIdGenerator = /** @class */ (function () {\n    function RandomIdGenerator() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n    return RandomIdGenerator;\n}());\nexport { RandomIdGenerator };\nvar SHARED_BUFFER = Buffer.allocUnsafe(TRACE_ID_BYTES);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (var i = 0; i < bytes / 4; i++) {\n            // unsigned right shift drops decimal part of the number\n            // it is required because if a number between 2**32 and 2**32 - 1 is generated, an out of range error is thrown by writeUInt32BE\n            SHARED_BUFFER.writeUInt32BE((Math.random() * Math.pow(2, 32)) >>> 0, i * 4);\n        }\n        // If buffer is all 0, set the last byte to 1 to guarantee a valid w3c id is generated\n        for (var i = 0; i < bytes; i++) {\n            if (SHARED_BUFFER[i] > 0) {\n                break;\n            }\n            else if (i === bytes - 1) {\n                SHARED_BUFFER[bytes - 1] = 1;\n            }\n        }\n        return SHARED_BUFFER.toString('hex', 0, bytes);\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { sanitizeAttributes, isTracingSuppressed, } from '@opentelemetry/core';\nimport { Span } from './Span';\nimport { mergeConfig } from './utility';\nimport { RandomIdGenerator } from './platform';\n/**\n * This class represents a basic tracer.\n */\nvar Tracer = /** @class */ (function () {\n    /**\n     * Constructs a new Tracer instance.\n     */\n    function Tracer(instrumentationLibrary, config, _tracerProvider) {\n        this._tracerProvider = _tracerProvider;\n        var localConfig = mergeConfig(config);\n        this._sampler = localConfig.sampler;\n        this._generalLimits = localConfig.generalLimits;\n        this._spanLimits = localConfig.spanLimits;\n        this._idGenerator = config.idGenerator || new RandomIdGenerator();\n        this.resource = _tracerProvider.resource;\n        this.instrumentationLibrary = instrumentationLibrary;\n    }\n    /**\n     * Starts a new Span or returns the default NoopSpan based on the sampling\n     * decision.\n     */\n    Tracer.prototype.startSpan = function (name, options, context) {\n        var _a, _b, _c;\n        if (options === void 0) { options = {}; }\n        if (context === void 0) { context = api.context.active(); }\n        // remove span from context in case a root span is requested via options\n        if (options.root) {\n            context = api.trace.deleteSpan(context);\n        }\n        var parentSpan = api.trace.getSpan(context);\n        if (isTracingSuppressed(context)) {\n            api.diag.debug('Instrumentation suppressed, returning Noop Span');\n            var nonRecordingSpan = api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);\n            return nonRecordingSpan;\n        }\n        var parentSpanContext = parentSpan === null || parentSpan === void 0 ? void 0 : parentSpan.spanContext();\n        var spanId = this._idGenerator.generateSpanId();\n        var traceId;\n        var traceState;\n        var parentSpanId;\n        if (!parentSpanContext ||\n            !api.trace.isSpanContextValid(parentSpanContext)) {\n            // New root span.\n            traceId = this._idGenerator.generateTraceId();\n        }\n        else {\n            // New child span.\n            traceId = parentSpanContext.traceId;\n            traceState = parentSpanContext.traceState;\n            parentSpanId = parentSpanContext.spanId;\n        }\n        var spanKind = (_a = options.kind) !== null && _a !== void 0 ? _a : api.SpanKind.INTERNAL;\n        var links = ((_b = options.links) !== null && _b !== void 0 ? _b : []).map(function (link) {\n            return {\n                context: link.context,\n                attributes: sanitizeAttributes(link.attributes),\n            };\n        });\n        var attributes = sanitizeAttributes(options.attributes);\n        // make sampling decision\n        var samplingResult = this._sampler.shouldSample(context, traceId, name, spanKind, attributes, links);\n        traceState = (_c = samplingResult.traceState) !== null && _c !== void 0 ? _c : traceState;\n        var traceFlags = samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n            ? api.TraceFlags.SAMPLED\n            : api.TraceFlags.NONE;\n        var spanContext = { traceId: traceId, spanId: spanId, traceFlags: traceFlags, traceState: traceState };\n        if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n            api.diag.debug('Recording is off, propagating context in a non-recording span');\n            var nonRecordingSpan = api.trace.wrapSpanContext(spanContext);\n            return nonRecordingSpan;\n        }\n        // Set initial span attributes. The attributes object may have been mutated\n        // by the sampler, so we sanitize the merged attributes before setting them.\n        var initAttributes = sanitizeAttributes(Object.assign(attributes, samplingResult.attributes));\n        var span = new Span(this, context, name, spanContext, spanKind, parentSpanId, links, options.startTime, undefined, initAttributes);\n        return span;\n    };\n    Tracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : api.context.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = api.trace.setSpan(parentContext, span);\n        return api.context.with(contextWithSpanSet, fn, undefined, span);\n    };\n    /** Returns the active {@link GeneralLimits}. */\n    Tracer.prototype.getGeneralLimits = function () {\n        return this._generalLimits;\n    };\n    /** Returns the active {@link SpanLimits}. */\n    Tracer.prototype.getSpanLimits = function () {\n        return this._spanLimits;\n    };\n    Tracer.prototype.getActiveSpanProcessor = function () {\n        return this._tracerProvider.getActiveSpanProcessor();\n    };\n    return Tracer;\n}());\nexport { Tracer };\n//# sourceMappingURL=Tracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createConstMap } from '../internal/utils';\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticResourceAttributes\n//----------------------------------------------------------------------------------------------------------\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUD_PROVIDER = 'cloud.provider';\nvar TMP_CLOUD_ACCOUNT_ID = 'cloud.account.id';\nvar TMP_CLOUD_REGION = 'cloud.region';\nvar TMP_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\nvar TMP_CLOUD_PLATFORM = 'cloud.platform';\nvar TMP_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';\nvar TMP_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';\nvar TMP_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';\nvar TMP_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';\nvar TMP_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';\nvar TMP_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';\nvar TMP_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';\nvar TMP_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';\nvar TMP_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';\nvar TMP_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';\nvar TMP_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';\nvar TMP_CONTAINER_NAME = 'container.name';\nvar TMP_CONTAINER_ID = 'container.id';\nvar TMP_CONTAINER_RUNTIME = 'container.runtime';\nvar TMP_CONTAINER_IMAGE_NAME = 'container.image.name';\nvar TMP_CONTAINER_IMAGE_TAG = 'container.image.tag';\nvar TMP_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';\nvar TMP_DEVICE_ID = 'device.id';\nvar TMP_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';\nvar TMP_DEVICE_MODEL_NAME = 'device.model.name';\nvar TMP_FAAS_NAME = 'faas.name';\nvar TMP_FAAS_ID = 'faas.id';\nvar TMP_FAAS_VERSION = 'faas.version';\nvar TMP_FAAS_INSTANCE = 'faas.instance';\nvar TMP_FAAS_MAX_MEMORY = 'faas.max_memory';\nvar TMP_HOST_ID = 'host.id';\nvar TMP_HOST_NAME = 'host.name';\nvar TMP_HOST_TYPE = 'host.type';\nvar TMP_HOST_ARCH = 'host.arch';\nvar TMP_HOST_IMAGE_NAME = 'host.image.name';\nvar TMP_HOST_IMAGE_ID = 'host.image.id';\nvar TMP_HOST_IMAGE_VERSION = 'host.image.version';\nvar TMP_K8S_CLUSTER_NAME = 'k8s.cluster.name';\nvar TMP_K8S_NODE_NAME = 'k8s.node.name';\nvar TMP_K8S_NODE_UID = 'k8s.node.uid';\nvar TMP_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\nvar TMP_K8S_POD_UID = 'k8s.pod.uid';\nvar TMP_K8S_POD_NAME = 'k8s.pod.name';\nvar TMP_K8S_CONTAINER_NAME = 'k8s.container.name';\nvar TMP_K8S_REPLICASET_UID = 'k8s.replicaset.uid';\nvar TMP_K8S_REPLICASET_NAME = 'k8s.replicaset.name';\nvar TMP_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';\nvar TMP_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\nvar TMP_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';\nvar TMP_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';\nvar TMP_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';\nvar TMP_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';\nvar TMP_K8S_JOB_UID = 'k8s.job.uid';\nvar TMP_K8S_JOB_NAME = 'k8s.job.name';\nvar TMP_K8S_CRONJOB_UID = 'k8s.cronjob.uid';\nvar TMP_K8S_CRONJOB_NAME = 'k8s.cronjob.name';\nvar TMP_OS_TYPE = 'os.type';\nvar TMP_OS_DESCRIPTION = 'os.description';\nvar TMP_OS_NAME = 'os.name';\nvar TMP_OS_VERSION = 'os.version';\nvar TMP_PROCESS_PID = 'process.pid';\nvar TMP_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\nvar TMP_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\nvar TMP_PROCESS_COMMAND = 'process.command';\nvar TMP_PROCESS_COMMAND_LINE = 'process.command_line';\nvar TMP_PROCESS_COMMAND_ARGS = 'process.command_args';\nvar TMP_PROCESS_OWNER = 'process.owner';\nvar TMP_PROCESS_RUNTIME_NAME = 'process.runtime.name';\nvar TMP_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\nvar TMP_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\nvar TMP_SERVICE_NAME = 'service.name';\nvar TMP_SERVICE_NAMESPACE = 'service.namespace';\nvar TMP_SERVICE_INSTANCE_ID = 'service.instance.id';\nvar TMP_SERVICE_VERSION = 'service.version';\nvar TMP_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';\nvar TMP_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';\nvar TMP_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';\nvar TMP_TELEMETRY_AUTO_VERSION = 'telemetry.auto.version';\nvar TMP_WEBENGINE_NAME = 'webengine.name';\nvar TMP_WEBENGINE_VERSION = 'webengine.version';\nvar TMP_WEBENGINE_DESCRIPTION = 'webengine.description';\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use ATTR_CLOUD_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_PROVIDER = TMP_CLOUD_PROVIDER;\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @deprecated Use ATTR_CLOUD_ACCOUNT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_ACCOUNT_ID = TMP_CLOUD_ACCOUNT_ID;\n/**\n * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n *\n * @deprecated Use ATTR_CLOUD_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_REGION = TMP_CLOUD_REGION;\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n *\n * @deprecated Use ATTR_CLOUD_AVAILABILITY_ZONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = TMP_CLOUD_AVAILABILITY_ZONE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use ATTR_CLOUD_PLATFORM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_PLATFORM = TMP_CLOUD_PLATFORM;\n/**\n * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CONTAINER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_CONTAINER_ARN = TMP_AWS_ECS_CONTAINER_ARN;\n/**\n * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_CLUSTER_ARN = TMP_AWS_ECS_CLUSTER_ARN;\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use ATTR_AWS_ECS_LAUNCHTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_LAUNCHTYPE = TMP_AWS_ECS_LAUNCHTYPE;\n/**\n * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_ARN = TMP_AWS_ECS_TASK_ARN;\n/**\n * The task definition family this task definition is a member of.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_FAMILY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_FAMILY = TMP_AWS_ECS_TASK_FAMILY;\n/**\n * The revision for this task definition.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_REVISION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_REVISION = TMP_AWS_ECS_TASK_REVISION;\n/**\n * The ARN of an EKS cluster.\n *\n * @deprecated Use ATTR_AWS_EKS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_EKS_CLUSTER_ARN = TMP_AWS_EKS_CLUSTER_ARN;\n/**\n * The name(s) of the AWS log group(s) an application is writing to.\n *\n * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_GROUP_NAMES = TMP_AWS_LOG_GROUP_NAMES;\n/**\n * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n *\n * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_GROUP_ARNS = TMP_AWS_LOG_GROUP_ARNS;\n/**\n * The name(s) of the AWS log stream(s) an application is writing to.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_STREAM_NAMES = TMP_AWS_LOG_STREAM_NAMES;\n/**\n * The ARN(s) of the AWS log stream(s).\n *\n * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_STREAM_ARNS = TMP_AWS_LOG_STREAM_ARNS;\n/**\n * Container name.\n *\n * @deprecated Use ATTR_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_NAME = TMP_CONTAINER_NAME;\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n *\n * @deprecated Use ATTR_CONTAINER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_ID = TMP_CONTAINER_ID;\n/**\n * The container runtime managing this container.\n *\n * @deprecated Use ATTR_CONTAINER_RUNTIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_RUNTIME = TMP_CONTAINER_RUNTIME;\n/**\n * Name of the image the container was built on.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_IMAGE_NAME = TMP_CONTAINER_IMAGE_NAME;\n/**\n * Container image tag.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_TAGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_IMAGE_TAG = TMP_CONTAINER_IMAGE_TAG;\n/**\n * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n *\n * @deprecated Use ATTR_DEPLOYMENT_ENVIRONMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = TMP_DEPLOYMENT_ENVIRONMENT;\n/**\n * A unique identifier representing the device.\n *\n * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n *\n * @deprecated Use ATTR_DEVICE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_ID = TMP_DEVICE_ID;\n/**\n * The model identifier for the device.\n *\n * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_IDENTIFIER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = TMP_DEVICE_MODEL_IDENTIFIER;\n/**\n * The marketing name for the device model.\n *\n * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_MODEL_NAME = TMP_DEVICE_MODEL_NAME;\n/**\n * The name of the single function that this runtime instance executes.\n *\n * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n *\n * @deprecated Use ATTR_FAAS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_NAME = TMP_FAAS_NAME;\n/**\n* The unique ID of the single function that this runtime instance executes.\n*\n* Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n*\n* @deprecated Use ATTR_CLOUD_RESOURCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMRESATTRS_FAAS_ID = TMP_FAAS_ID;\n/**\n* The immutable version of the function being executed.\n*\n* Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n*\n* @deprecated Use ATTR_FAAS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMRESATTRS_FAAS_VERSION = TMP_FAAS_VERSION;\n/**\n * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n *\n * Note: * **AWS Lambda:** Use the (full) log stream name.\n *\n * @deprecated Use ATTR_FAAS_INSTANCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_INSTANCE = TMP_FAAS_INSTANCE;\n/**\n * The amount of memory available to the serverless function in MiB.\n *\n * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n *\n * @deprecated Use ATTR_FAAS_MAX_MEMORY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_MAX_MEMORY = TMP_FAAS_MAX_MEMORY;\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n *\n * @deprecated Use ATTR_HOST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_ID = TMP_HOST_ID;\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @deprecated Use ATTR_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_NAME = TMP_HOST_NAME;\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @deprecated Use ATTR_HOST_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_TYPE = TMP_HOST_TYPE;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use ATTR_HOST_ARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_ARCH = TMP_HOST_ARCH;\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @deprecated Use ATTR_HOST_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_NAME = TMP_HOST_IMAGE_NAME;\n/**\n * VM image ID. For Cloud, this value is from the provider.\n *\n * @deprecated Use ATTR_HOST_IMAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_ID = TMP_HOST_IMAGE_ID;\n/**\n * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n *\n * @deprecated Use ATTR_HOST_IMAGE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_VERSION = TMP_HOST_IMAGE_VERSION;\n/**\n * The name of the cluster.\n *\n * @deprecated Use ATTR_K8S_CLUSTER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CLUSTER_NAME = TMP_K8S_CLUSTER_NAME;\n/**\n * The name of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NODE_NAME = TMP_K8S_NODE_NAME;\n/**\n * The UID of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NODE_UID = TMP_K8S_NODE_UID;\n/**\n * The name of the namespace that the pod is running in.\n *\n * @deprecated Use ATTR_K8S_NAMESPACE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NAMESPACE_NAME = TMP_K8S_NAMESPACE_NAME;\n/**\n * The UID of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_POD_UID = TMP_K8S_POD_UID;\n/**\n * The name of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_POD_NAME = TMP_K8S_POD_NAME;\n/**\n * The name of the Container in a Pod template.\n *\n * @deprecated Use ATTR_K8S_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CONTAINER_NAME = TMP_K8S_CONTAINER_NAME;\n/**\n * The UID of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_REPLICASET_UID = TMP_K8S_REPLICASET_UID;\n/**\n * The name of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_REPLICASET_NAME = TMP_K8S_REPLICASET_NAME;\n/**\n * The UID of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DEPLOYMENT_UID = TMP_K8S_DEPLOYMENT_UID;\n/**\n * The name of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DEPLOYMENT_NAME = TMP_K8S_DEPLOYMENT_NAME;\n/**\n * The UID of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_STATEFULSET_UID = TMP_K8S_STATEFULSET_UID;\n/**\n * The name of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_STATEFULSET_NAME = TMP_K8S_STATEFULSET_NAME;\n/**\n * The UID of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DAEMONSET_UID = TMP_K8S_DAEMONSET_UID;\n/**\n * The name of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DAEMONSET_NAME = TMP_K8S_DAEMONSET_NAME;\n/**\n * The UID of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_JOB_UID = TMP_K8S_JOB_UID;\n/**\n * The name of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_JOB_NAME = TMP_K8S_JOB_NAME;\n/**\n * The UID of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CRONJOB_UID = TMP_K8S_CRONJOB_UID;\n/**\n * The name of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CRONJOB_NAME = TMP_K8S_CRONJOB_NAME;\n/**\n * The operating system type.\n *\n * @deprecated Use ATTR_OS_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_TYPE = TMP_OS_TYPE;\n/**\n * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n *\n * @deprecated Use ATTR_OS_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_DESCRIPTION = TMP_OS_DESCRIPTION;\n/**\n * Human readable operating system name.\n *\n * @deprecated Use ATTR_OS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_NAME = TMP_OS_NAME;\n/**\n * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n *\n * @deprecated Use ATTR_OS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_VERSION = TMP_OS_VERSION;\n/**\n * Process identifier (PID).\n *\n * @deprecated Use ATTR_PROCESS_PID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_PID = TMP_PROCESS_PID;\n/**\n * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_EXECUTABLE_NAME = TMP_PROCESS_EXECUTABLE_NAME;\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_PATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_EXECUTABLE_PATH = TMP_PROCESS_EXECUTABLE_PATH;\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND = TMP_PROCESS_COMMAND;\n/**\n * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_LINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND_LINE = TMP_PROCESS_COMMAND_LINE;\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_ARGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND_ARGS = TMP_PROCESS_COMMAND_ARGS;\n/**\n * The username of the user that owns the process.\n *\n * @deprecated Use ATTR_PROCESS_OWNER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_OWNER = TMP_PROCESS_OWNER;\n/**\n * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_NAME = TMP_PROCESS_RUNTIME_NAME;\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_VERSION = TMP_PROCESS_RUNTIME_VERSION;\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION = TMP_PROCESS_RUNTIME_DESCRIPTION;\n/**\n * Logical name of the service.\n *\n * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n *\n * @deprecated Use ATTR_SERVICE_NAME.\n */\nexport var SEMRESATTRS_SERVICE_NAME = TMP_SERVICE_NAME;\n/**\n * A namespace for `service.name`.\n *\n * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @deprecated Use ATTR_SERVICE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_SERVICE_NAMESPACE = TMP_SERVICE_NAMESPACE;\n/**\n * The string ID of the service instance.\n *\n * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n *\n * @deprecated Use ATTR_SERVICE_INSTANCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_SERVICE_INSTANCE_ID = TMP_SERVICE_INSTANCE_ID;\n/**\n * The version string of the service API or implementation.\n *\n * @deprecated Use ATTR_SERVICE_VERSION.\n */\nexport var SEMRESATTRS_SERVICE_VERSION = TMP_SERVICE_VERSION;\n/**\n * The name of the telemetry SDK as defined above.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_NAME.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_NAME = TMP_TELEMETRY_SDK_NAME;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_LANGUAGE.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = TMP_TELEMETRY_SDK_LANGUAGE;\n/**\n * The version string of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_VERSION.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_VERSION = TMP_TELEMETRY_SDK_VERSION;\n/**\n * The version string of the auto instrumentation agent, if used.\n *\n * @deprecated Use ATTR_TELEMETRY_DISTRO_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_TELEMETRY_AUTO_VERSION = TMP_TELEMETRY_AUTO_VERSION;\n/**\n * The name of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_NAME = TMP_WEBENGINE_NAME;\n/**\n * The version of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_VERSION = TMP_WEBENGINE_VERSION;\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @deprecated Use ATTR_WEBENGINE_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_DESCRIPTION = TMP_WEBENGINE_DESCRIPTION;\n/**\n * Create exported Value Map for SemanticResourceAttributes values\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification\n */\nexport var SemanticResourceAttributes = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUD_PROVIDER,\n    TMP_CLOUD_ACCOUNT_ID,\n    TMP_CLOUD_REGION,\n    TMP_CLOUD_AVAILABILITY_ZONE,\n    TMP_CLOUD_PLATFORM,\n    TMP_AWS_ECS_CONTAINER_ARN,\n    TMP_AWS_ECS_CLUSTER_ARN,\n    TMP_AWS_ECS_LAUNCHTYPE,\n    TMP_AWS_ECS_TASK_ARN,\n    TMP_AWS_ECS_TASK_FAMILY,\n    TMP_AWS_ECS_TASK_REVISION,\n    TMP_AWS_EKS_CLUSTER_ARN,\n    TMP_AWS_LOG_GROUP_NAMES,\n    TMP_AWS_LOG_GROUP_ARNS,\n    TMP_AWS_LOG_STREAM_NAMES,\n    TMP_AWS_LOG_STREAM_ARNS,\n    TMP_CONTAINER_NAME,\n    TMP_CONTAINER_ID,\n    TMP_CONTAINER_RUNTIME,\n    TMP_CONTAINER_IMAGE_NAME,\n    TMP_CONTAINER_IMAGE_TAG,\n    TMP_DEPLOYMENT_ENVIRONMENT,\n    TMP_DEVICE_ID,\n    TMP_DEVICE_MODEL_IDENTIFIER,\n    TMP_DEVICE_MODEL_NAME,\n    TMP_FAAS_NAME,\n    TMP_FAAS_ID,\n    TMP_FAAS_VERSION,\n    TMP_FAAS_INSTANCE,\n    TMP_FAAS_MAX_MEMORY,\n    TMP_HOST_ID,\n    TMP_HOST_NAME,\n    TMP_HOST_TYPE,\n    TMP_HOST_ARCH,\n    TMP_HOST_IMAGE_NAME,\n    TMP_HOST_IMAGE_ID,\n    TMP_HOST_IMAGE_VERSION,\n    TMP_K8S_CLUSTER_NAME,\n    TMP_K8S_NODE_NAME,\n    TMP_K8S_NODE_UID,\n    TMP_K8S_NAMESPACE_NAME,\n    TMP_K8S_POD_UID,\n    TMP_K8S_POD_NAME,\n    TMP_K8S_CONTAINER_NAME,\n    TMP_K8S_REPLICASET_UID,\n    TMP_K8S_REPLICASET_NAME,\n    TMP_K8S_DEPLOYMENT_UID,\n    TMP_K8S_DEPLOYMENT_NAME,\n    TMP_K8S_STATEFULSET_UID,\n    TMP_K8S_STATEFULSET_NAME,\n    TMP_K8S_DAEMONSET_UID,\n    TMP_K8S_DAEMONSET_NAME,\n    TMP_K8S_JOB_UID,\n    TMP_K8S_JOB_NAME,\n    TMP_K8S_CRONJOB_UID,\n    TMP_K8S_CRONJOB_NAME,\n    TMP_OS_TYPE,\n    TMP_OS_DESCRIPTION,\n    TMP_OS_NAME,\n    TMP_OS_VERSION,\n    TMP_PROCESS_PID,\n    TMP_PROCESS_EXECUTABLE_NAME,\n    TMP_PROCESS_EXECUTABLE_PATH,\n    TMP_PROCESS_COMMAND,\n    TMP_PROCESS_COMMAND_LINE,\n    TMP_PROCESS_COMMAND_ARGS,\n    TMP_PROCESS_OWNER,\n    TMP_PROCESS_RUNTIME_NAME,\n    TMP_PROCESS_RUNTIME_VERSION,\n    TMP_PROCESS_RUNTIME_DESCRIPTION,\n    TMP_SERVICE_NAME,\n    TMP_SERVICE_NAMESPACE,\n    TMP_SERVICE_INSTANCE_ID,\n    TMP_SERVICE_VERSION,\n    TMP_TELEMETRY_SDK_NAME,\n    TMP_TELEMETRY_SDK_LANGUAGE,\n    TMP_TELEMETRY_SDK_VERSION,\n    TMP_TELEMETRY_AUTO_VERSION,\n    TMP_WEBENGINE_NAME,\n    TMP_WEBENGINE_VERSION,\n    TMP_WEBENGINE_DESCRIPTION,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nvar TMP_CLOUDPROVIDERVALUES_AWS = 'aws';\nvar TMP_CLOUDPROVIDERVALUES_AZURE = 'azure';\nvar TMP_CLOUDPROVIDERVALUES_GCP = 'gcp';\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_ALIBABA_CLOUD = TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_AWS = TMP_CLOUDPROVIDERVALUES_AWS;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_AZURE = TMP_CLOUDPROVIDERVALUES_AZURE;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_GCP = TMP_CLOUDPROVIDERVALUES_GCP;\n/**\n * The constant map of values for CloudProviderValues.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport var CloudProviderValues = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_CLOUDPROVIDERVALUES_AWS,\n    TMP_CLOUDPROVIDERVALUES_AZURE,\n    TMP_CLOUDPROVIDERVALUES_GCP,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = 'alibaba_cloud_ecs';\nvar TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = 'alibaba_cloud_fc';\nvar TMP_CLOUDPLATFORMVALUES_AWS_EC2 = 'aws_ec2';\nvar TMP_CLOUDPLATFORMVALUES_AWS_ECS = 'aws_ecs';\nvar TMP_CLOUDPLATFORMVALUES_AWS_EKS = 'aws_eks';\nvar TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA = 'aws_lambda';\nvar TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = 'aws_elastic_beanstalk';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_VM = 'azure_vm';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = 'azure_container_instances';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_AKS = 'azure_aks';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = 'azure_functions';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = 'azure_app_service';\nvar TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = 'gcp_compute_engine';\nvar TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = 'gcp_cloud_run';\nvar TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = 'gcp_kubernetes_engine';\nvar TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = 'gcp_cloud_functions';\nvar TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE = 'gcp_app_engine';\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_EC2 = TMP_CLOUDPLATFORMVALUES_AWS_EC2;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_ECS = TMP_CLOUDPLATFORMVALUES_AWS_ECS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_EKS = TMP_CLOUDPLATFORMVALUES_AWS_EKS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_LAMBDA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_LAMBDA = TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_VM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_VM = TMP_CLOUDPLATFORMVALUES_AZURE_VM;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_AKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_AKS = TMP_CLOUDPLATFORMVALUES_AZURE_AKS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_APP_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE;\n/**\n * The constant map of values for CloudPlatformValues.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport var CloudPlatformValues = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC,\n    TMP_CLOUDPLATFORMVALUES_AWS_EC2,\n    TMP_CLOUDPLATFORMVALUES_AWS_ECS,\n    TMP_CLOUDPLATFORMVALUES_AWS_EKS,\n    TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA,\n    TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK,\n    TMP_CLOUDPLATFORMVALUES_AZURE_VM,\n    TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES,\n    TMP_CLOUDPLATFORMVALUES_AZURE_AKS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,\n    TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN,\n    TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_AWSECSLAUNCHTYPEVALUES_EC2 = 'ec2';\nvar TMP_AWSECSLAUNCHTYPEVALUES_FARGATE = 'fargate';\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var AWSECSLAUNCHTYPEVALUES_EC2 = TMP_AWSECSLAUNCHTYPEVALUES_EC2;\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_FARGATE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var AWSECSLAUNCHTYPEVALUES_FARGATE = TMP_AWSECSLAUNCHTYPEVALUES_FARGATE;\n/**\n * The constant map of values for AwsEcsLaunchtypeValues.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport var AwsEcsLaunchtypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_AWSECSLAUNCHTYPEVALUES_EC2,\n    TMP_AWSECSLAUNCHTYPEVALUES_FARGATE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_HOSTARCHVALUES_AMD64 = 'amd64';\nvar TMP_HOSTARCHVALUES_ARM32 = 'arm32';\nvar TMP_HOSTARCHVALUES_ARM64 = 'arm64';\nvar TMP_HOSTARCHVALUES_IA64 = 'ia64';\nvar TMP_HOSTARCHVALUES_PPC32 = 'ppc32';\nvar TMP_HOSTARCHVALUES_PPC64 = 'ppc64';\nvar TMP_HOSTARCHVALUES_X86 = 'x86';\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_AMD64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_AMD64 = TMP_HOSTARCHVALUES_AMD64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_ARM32 = TMP_HOSTARCHVALUES_ARM32;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_ARM64 = TMP_HOSTARCHVALUES_ARM64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_IA64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_IA64 = TMP_HOSTARCHVALUES_IA64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_PPC32 = TMP_HOSTARCHVALUES_PPC32;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_PPC64 = TMP_HOSTARCHVALUES_PPC64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_X86 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_X86 = TMP_HOSTARCHVALUES_X86;\n/**\n * The constant map of values for HostArchValues.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport var HostArchValues = \n/*#__PURE__*/ createConstMap([\n    TMP_HOSTARCHVALUES_AMD64,\n    TMP_HOSTARCHVALUES_ARM32,\n    TMP_HOSTARCHVALUES_ARM64,\n    TMP_HOSTARCHVALUES_IA64,\n    TMP_HOSTARCHVALUES_PPC32,\n    TMP_HOSTARCHVALUES_PPC64,\n    TMP_HOSTARCHVALUES_X86,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for OsTypeValues enum definition\n *\n * The operating system type.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_OSTYPEVALUES_WINDOWS = 'windows';\nvar TMP_OSTYPEVALUES_LINUX = 'linux';\nvar TMP_OSTYPEVALUES_DARWIN = 'darwin';\nvar TMP_OSTYPEVALUES_FREEBSD = 'freebsd';\nvar TMP_OSTYPEVALUES_NETBSD = 'netbsd';\nvar TMP_OSTYPEVALUES_OPENBSD = 'openbsd';\nvar TMP_OSTYPEVALUES_DRAGONFLYBSD = 'dragonflybsd';\nvar TMP_OSTYPEVALUES_HPUX = 'hpux';\nvar TMP_OSTYPEVALUES_AIX = 'aix';\nvar TMP_OSTYPEVALUES_SOLARIS = 'solaris';\nvar TMP_OSTYPEVALUES_Z_OS = 'z_os';\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_WINDOWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_WINDOWS = TMP_OSTYPEVALUES_WINDOWS;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_LINUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_LINUX = TMP_OSTYPEVALUES_LINUX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DARWIN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_DARWIN = TMP_OSTYPEVALUES_DARWIN;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_FREEBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_FREEBSD = TMP_OSTYPEVALUES_FREEBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_NETBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_NETBSD = TMP_OSTYPEVALUES_NETBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_OPENBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_OPENBSD = TMP_OSTYPEVALUES_OPENBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DRAGONFLYBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_DRAGONFLYBSD = TMP_OSTYPEVALUES_DRAGONFLYBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_HPUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_HPUX = TMP_OSTYPEVALUES_HPUX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_AIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_AIX = TMP_OSTYPEVALUES_AIX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_SOLARIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_SOLARIS = TMP_OSTYPEVALUES_SOLARIS;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_Z_OS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_Z_OS = TMP_OSTYPEVALUES_Z_OS;\n/**\n * The constant map of values for OsTypeValues.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport var OsTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_OSTYPEVALUES_WINDOWS,\n    TMP_OSTYPEVALUES_LINUX,\n    TMP_OSTYPEVALUES_DARWIN,\n    TMP_OSTYPEVALUES_FREEBSD,\n    TMP_OSTYPEVALUES_NETBSD,\n    TMP_OSTYPEVALUES_OPENBSD,\n    TMP_OSTYPEVALUES_DRAGONFLYBSD,\n    TMP_OSTYPEVALUES_HPUX,\n    TMP_OSTYPEVALUES_AIX,\n    TMP_OSTYPEVALUES_SOLARIS,\n    TMP_OSTYPEVALUES_Z_OS,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_CPP = 'cpp';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET = 'dotnet';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG = 'erlang';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_GO = 'go';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA = 'java';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS = 'nodejs';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_PHP = 'php';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON = 'python';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY = 'ruby';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS = 'webjs';\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_CPP.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_CPP = TMP_TELEMETRYSDKLANGUAGEVALUES_CPP;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_DOTNET = TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_ERLANG = TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_GO.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_GO = TMP_TELEMETRYSDKLANGUAGEVALUES_GO;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_JAVA.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_JAVA = TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_NODEJS = TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PHP.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_PHP = TMP_TELEMETRYSDKLANGUAGEVALUES_PHP;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_PYTHON = TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_RUBY.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_RUBY = TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_WEBJS = TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS;\n/**\n * The constant map of values for TelemetrySdkLanguageValues.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport var TelemetrySdkLanguageValues = \n/*#__PURE__*/ createConstMap([\n    TMP_TELEMETRYSDKLANGUAGEVALUES_CPP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_GO,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PHP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n]);\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function defaultServiceName() {\n    return \"unknown_service:\" + process.argv0;\n}\n//# sourceMappingURL=default-service-name.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { diag } from '@opentelemetry/api';\nimport { SEMRESATTRS_SERVICE_NAME, SEMRESATTRS_TELEMETRY_SDK_LANGUAGE, SEMRESATTRS_TELEMETRY_SDK_NAME, SEMRESATTRS_TELEMETRY_SDK_VERSION, } from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { defaultServiceName } from './platform';\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nvar Resource = /** @class */ (function () {\n    function Resource(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes, asyncAttributesPromise) {\n        var _this = this;\n        var _a;\n        this._attributes = attributes;\n        this.asyncAttributesPending = asyncAttributesPromise != null;\n        this._syncAttributes = (_a = this._attributes) !== null && _a !== void 0 ? _a : {};\n        this._asyncAttributesPromise = asyncAttributesPromise === null || asyncAttributesPromise === void 0 ? void 0 : asyncAttributesPromise.then(function (asyncAttributes) {\n            _this._attributes = Object.assign({}, _this._attributes, asyncAttributes);\n            _this.asyncAttributesPending = false;\n            return asyncAttributes;\n        }, function (err) {\n            diag.debug(\"a resource's async attributes promise rejected: %s\", err);\n            _this.asyncAttributesPending = false;\n            return {};\n        });\n    }\n    /**\n     * Returns an empty Resource\n     */\n    Resource.empty = function () {\n        return Resource.EMPTY;\n    };\n    /**\n     * Returns a Resource that identifies the SDK in use.\n     */\n    Resource.default = function () {\n        var _a;\n        return new Resource((_a = {},\n            _a[SEMRESATTRS_SERVICE_NAME] = defaultServiceName(),\n            _a[SEMRESATTRS_TELEMETRY_SDK_LANGUAGE] = SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_LANGUAGE],\n            _a[SEMRESATTRS_TELEMETRY_SDK_NAME] = SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_NAME],\n            _a[SEMRESATTRS_TELEMETRY_SDK_VERSION] = SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_VERSION],\n            _a));\n    };\n    Object.defineProperty(Resource.prototype, \"attributes\", {\n        get: function () {\n            var _a;\n            if (this.asyncAttributesPending) {\n                diag.error('Accessing resource attributes before async attributes settled');\n            }\n            return (_a = this._attributes) !== null && _a !== void 0 ? _a : {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Returns a promise that will never be rejected. Resolves when all async attributes have finished being added to\n     * this Resource's attributes. This is useful in exporters to block until resource detection\n     * has finished.\n     */\n    Resource.prototype.waitForAsyncAttributes = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.asyncAttributesPending) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._asyncAttributesPromise];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns a new, merged {@link Resource} by merging the current Resource\n     * with the other Resource. In case of a collision, other Resource takes\n     * precedence.\n     *\n     * @param other the Resource that will be merged with this.\n     * @returns the newly merged Resource.\n     */\n    Resource.prototype.merge = function (other) {\n        var _this = this;\n        var _a;\n        if (!other)\n            return this;\n        // SpanAttributes from other resource overwrite attributes from this resource.\n        var mergedSyncAttributes = __assign(__assign({}, this._syncAttributes), ((_a = other._syncAttributes) !== null && _a !== void 0 ? _a : other.attributes));\n        if (!this._asyncAttributesPromise &&\n            !other._asyncAttributesPromise) {\n            return new Resource(mergedSyncAttributes);\n        }\n        var mergedAttributesPromise = Promise.all([\n            this._asyncAttributesPromise,\n            other._asyncAttributesPromise,\n        ]).then(function (_a) {\n            var _b;\n            var _c = __read(_a, 2), thisAsyncAttributes = _c[0], otherAsyncAttributes = _c[1];\n            return __assign(__assign(__assign(__assign({}, _this._syncAttributes), thisAsyncAttributes), ((_b = other._syncAttributes) !== null && _b !== void 0 ? _b : other.attributes)), otherAsyncAttributes);\n        });\n        return new Resource(mergedSyncAttributes, mergedAttributesPromise);\n    };\n    Resource.EMPTY = new Resource({});\n    return Resource;\n}());\nexport { Resource };\n//# sourceMappingURL=Resource.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { globalErrorHandler } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nvar MultiSpanProcessor = /** @class */ (function () {\n    function MultiSpanProcessor(_spanProcessors) {\n        this._spanProcessors = _spanProcessors;\n    }\n    MultiSpanProcessor.prototype.forceFlush = function () {\n        var e_1, _a;\n        var promises = [];\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                promises.push(spanProcessor.forceFlush());\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return new Promise(function (resolve) {\n            Promise.all(promises)\n                .then(function () {\n                resolve();\n            })\n                .catch(function (error) {\n                globalErrorHandler(error || new Error('MultiSpanProcessor: forceFlush failed'));\n                resolve();\n            });\n        });\n    };\n    MultiSpanProcessor.prototype.onStart = function (span, context) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                spanProcessor.onStart(span, context);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    MultiSpanProcessor.prototype.onEnd = function (span) {\n        var e_3, _a;\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                spanProcessor.onEnd(span);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    MultiSpanProcessor.prototype.shutdown = function () {\n        var e_4, _a;\n        var promises = [];\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                promises.push(spanProcessor.shutdown());\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return new Promise(function (resolve, reject) {\n            Promise.all(promises).then(function () {\n                resolve();\n            }, reject);\n        });\n    };\n    return MultiSpanProcessor;\n}());\nexport { MultiSpanProcessor };\n//# sourceMappingURL=MultiSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** No-op implementation of SpanProcessor */\nvar NoopSpanProcessor = /** @class */ (function () {\n    function NoopSpanProcessor() {\n    }\n    NoopSpanProcessor.prototype.onStart = function (_span, _context) { };\n    NoopSpanProcessor.prototype.onEnd = function (_span) { };\n    NoopSpanProcessor.prototype.shutdown = function () {\n        return Promise.resolve();\n    };\n    NoopSpanProcessor.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    return NoopSpanProcessor;\n}());\nexport { NoopSpanProcessor };\n//# sourceMappingURL=NoopSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { context, diag, propagation, trace, } from '@opentelemetry/api';\nimport { CompositePropagator, W3CBaggagePropagator, W3CTraceContextPropagator, getEnv, merge, } from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { Tracer } from './Tracer';\nimport { loadDefaultConfig } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { BatchSpanProcessor } from './platform';\nimport { reconfigureLimits } from './utility';\nexport var ForceFlushState;\n(function (ForceFlushState) {\n    ForceFlushState[ForceFlushState[\"resolved\"] = 0] = \"resolved\";\n    ForceFlushState[ForceFlushState[\"timeout\"] = 1] = \"timeout\";\n    ForceFlushState[ForceFlushState[\"error\"] = 2] = \"error\";\n    ForceFlushState[ForceFlushState[\"unresolved\"] = 3] = \"unresolved\";\n})(ForceFlushState || (ForceFlushState = {}));\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nvar BasicTracerProvider = /** @class */ (function () {\n    function BasicTracerProvider(config) {\n        if (config === void 0) { config = {}; }\n        var _a, _b;\n        this._registeredSpanProcessors = [];\n        this._tracers = new Map();\n        var mergedConfig = merge({}, loadDefaultConfig(), reconfigureLimits(config));\n        this.resource = (_a = mergedConfig.resource) !== null && _a !== void 0 ? _a : Resource.empty();\n        if (mergedConfig.mergeResourceWithDefaults) {\n            this.resource = Resource.default().merge(this.resource);\n        }\n        this._config = Object.assign({}, mergedConfig, {\n            resource: this.resource,\n        });\n        if ((_b = config.spanProcessors) === null || _b === void 0 ? void 0 : _b.length) {\n            this._registeredSpanProcessors = __spreadArray([], __read(config.spanProcessors), false);\n            this.activeSpanProcessor = new MultiSpanProcessor(this._registeredSpanProcessors);\n        }\n        else {\n            var defaultExporter = this._buildExporterFromEnv();\n            if (defaultExporter !== undefined) {\n                var batchProcessor = new BatchSpanProcessor(defaultExporter);\n                this.activeSpanProcessor = batchProcessor;\n            }\n            else {\n                this.activeSpanProcessor = new NoopSpanProcessor();\n            }\n        }\n    }\n    BasicTracerProvider.prototype.getTracer = function (name, version, options) {\n        var key = name + \"@\" + (version || '') + \":\" + ((options === null || options === void 0 ? void 0 : options.schemaUrl) || '');\n        if (!this._tracers.has(key)) {\n            this._tracers.set(key, new Tracer({ name: name, version: version, schemaUrl: options === null || options === void 0 ? void 0 : options.schemaUrl }, this._config, this));\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tracers.get(key);\n    };\n    /**\n     * @deprecated please use {@link TracerConfig} spanProcessors property\n     * Adds a new {@link SpanProcessor} to this tracer.\n     * @param spanProcessor the new SpanProcessor to be added.\n     */\n    BasicTracerProvider.prototype.addSpanProcessor = function (spanProcessor) {\n        if (this._registeredSpanProcessors.length === 0) {\n            // since we might have enabled by default a batchProcessor, we disable it\n            // before adding the new one\n            this.activeSpanProcessor\n                .shutdown()\n                .catch(function (err) {\n                return diag.error('Error while trying to shutdown current span processor', err);\n            });\n        }\n        this._registeredSpanProcessors.push(spanProcessor);\n        this.activeSpanProcessor = new MultiSpanProcessor(this._registeredSpanProcessors);\n    };\n    BasicTracerProvider.prototype.getActiveSpanProcessor = function () {\n        return this.activeSpanProcessor;\n    };\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    BasicTracerProvider.prototype.register = function (config) {\n        if (config === void 0) { config = {}; }\n        trace.setGlobalTracerProvider(this);\n        if (config.propagator === undefined) {\n            config.propagator = this._buildPropagatorFromEnv();\n        }\n        if (config.contextManager) {\n            context.setGlobalContextManager(config.contextManager);\n        }\n        if (config.propagator) {\n            propagation.setGlobalPropagator(config.propagator);\n        }\n    };\n    BasicTracerProvider.prototype.forceFlush = function () {\n        var timeout = this._config.forceFlushTimeoutMillis;\n        var promises = this._registeredSpanProcessors.map(function (spanProcessor) {\n            return new Promise(function (resolve) {\n                var state;\n                var timeoutInterval = setTimeout(function () {\n                    resolve(new Error(\"Span processor did not completed within timeout period of \" + timeout + \" ms\"));\n                    state = ForceFlushState.timeout;\n                }, timeout);\n                spanProcessor\n                    .forceFlush()\n                    .then(function () {\n                    clearTimeout(timeoutInterval);\n                    if (state !== ForceFlushState.timeout) {\n                        state = ForceFlushState.resolved;\n                        resolve(state);\n                    }\n                })\n                    .catch(function (error) {\n                    clearTimeout(timeoutInterval);\n                    state = ForceFlushState.error;\n                    resolve(error);\n                });\n            });\n        });\n        return new Promise(function (resolve, reject) {\n            Promise.all(promises)\n                .then(function (results) {\n                var errors = results.filter(function (result) { return result !== ForceFlushState.resolved; });\n                if (errors.length > 0) {\n                    reject(errors);\n                }\n                else {\n                    resolve();\n                }\n            })\n                .catch(function (error) { return reject([error]); });\n        });\n    };\n    BasicTracerProvider.prototype.shutdown = function () {\n        return this.activeSpanProcessor.shutdown();\n    };\n    /**\n     * TS cannot yet infer the type of this.constructor:\n     * https://github.com/Microsoft/TypeScript/issues/3841#issuecomment-337560146\n     * There is no need to override either of the getters in your child class.\n     * The type of the registered component maps should be the same across all\n     * classes in the inheritance tree.\n     */\n    BasicTracerProvider.prototype._getPropagator = function (name) {\n        var _a;\n        return (_a = this.constructor._registeredPropagators.get(name)) === null || _a === void 0 ? void 0 : _a();\n    };\n    BasicTracerProvider.prototype._getSpanExporter = function (name) {\n        var _a;\n        return (_a = this.constructor._registeredExporters.get(name)) === null || _a === void 0 ? void 0 : _a();\n    };\n    BasicTracerProvider.prototype._buildPropagatorFromEnv = function () {\n        var _this = this;\n        // per spec, propagators from env must be deduplicated\n        var uniquePropagatorNames = Array.from(new Set(getEnv().OTEL_PROPAGATORS));\n        var propagators = uniquePropagatorNames.map(function (name) {\n            var propagator = _this._getPropagator(name);\n            if (!propagator) {\n                diag.warn(\"Propagator \\\"\" + name + \"\\\" requested through environment variable is unavailable.\");\n            }\n            return propagator;\n        });\n        var validPropagators = propagators.reduce(function (list, item) {\n            if (item) {\n                list.push(item);\n            }\n            return list;\n        }, []);\n        if (validPropagators.length === 0) {\n            return;\n        }\n        else if (uniquePropagatorNames.length === 1) {\n            return validPropagators[0];\n        }\n        else {\n            return new CompositePropagator({\n                propagators: validPropagators,\n            });\n        }\n    };\n    BasicTracerProvider.prototype._buildExporterFromEnv = function () {\n        var exporterName = getEnv().OTEL_TRACES_EXPORTER;\n        if (exporterName === 'none' || exporterName === '')\n            return;\n        var exporter = this._getSpanExporter(exporterName);\n        if (!exporter) {\n            diag.error(\"Exporter \\\"\" + exporterName + \"\\\" requested through environment variable is unavailable.\");\n        }\n        return exporter;\n    };\n    BasicTracerProvider._registeredPropagators = new Map([\n        ['tracecontext', function () { return new W3CTraceContextPropagator(); }],\n        ['baggage', function () { return new W3CBaggagePropagator(); }],\n    ]);\n    BasicTracerProvider._registeredExporters = new Map();\n    return BasicTracerProvider;\n}());\nexport { BasicTracerProvider };\n//# sourceMappingURL=BasicTracerProvider.js.map","import { _optionalChain } from '@sentry/core';\nimport { ATTR_URL_FULL, SEMATTRS_HTTP_URL, ATTR_HTTP_REQUEST_METHOD, SEMATTRS_HTTP_METHOD, SEMATTRS_DB_SYSTEM, SEMATTRS_RPC_SERVICE, SEMATTRS_MESSAGING_SYSTEM, SEMATTRS_FAAS_TRIGGER, SEMATTRS_DB_STATEMENT, SEMATTRS_HTTP_TARGET, ATTR_HTTP_ROUTE, ATTR_HTTP_RESPONSE_STATUS_CODE, SEMATTRS_HTTP_STATUS_CODE, SEMATTRS_RPC_GRPC_STATUS_CODE } from '@opentelemetry/semantic-conventions';\nimport { parseUrl, getSanitizedUrlString, SDK_VERSION, addNonEnumerableProperty, isSentryRequestUrl, getClient, baggageHeaderToDynamicSamplingContext, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, stripUrlQueryAndFragment, spanToJSON, hasTracingEnabled, dynamicSamplingContextToSentryBaggageHeader, getDynamicSamplingContextFromSpan, getRootSpan, LRUMap, logger, parseBaggageHeader, SENTRY_BAGGAGE_KEY_PREFIX, generateSentryTraceHeader, stringMatchesSomePattern, generateSpanId, getCurrentScope, getDynamicSamplingContextFromScope, propagationContextFromHeaders, getIsolationScope, handleCallbackErrors, spanToTraceContext, getTraceContextFromScope, getCapturedScopesOnSpan, setAsyncContextStrategy, getDefaultCurrentScope, getDefaultIsolationScope, SPAN_STATUS_OK, SPAN_STATUS_ERROR, getSpanStatusFromHttpCode, timedEventsToMeasurements, captureEvent, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, dropUndefinedKeys, getStatusMessage, spanTimeInputToSeconds, getMetricSummaryJsonForSpan, addChildSpanToSpan, setCapturedScopesOnSpan, logSpanStart, logSpanEnd, sampleSpan } from '@sentry/core';\nexport { getClient, getCurrentHubShim, getDynamicSamplingContextFromSpan } from '@sentry/core';\nimport * as api from '@opentelemetry/api';\nimport { trace, SpanKind, createContextKey, TraceFlags, propagation, INVALID_TRACEID, context, SpanStatusCode, ROOT_CONTEXT, isSpanContextValid } from '@opentelemetry/api';\nimport { TraceState, W3CBaggagePropagator, isTracingSuppressed, suppressTracing as suppressTracing$1 } from '@opentelemetry/core';\nimport { SamplingDecision } from '@opentelemetry/sdk-trace-base';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\n\n/** If this attribute is true, it means that the parent is a remote span. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE = 'sentry.parentIsRemote';\n\n// These are not standardized yet, but used by the graphql instrumentation\nconst SEMANTIC_ATTRIBUTE_SENTRY_GRAPHQL_OPERATION = 'sentry.graphql.operation';\n\n/**\n * Check if a given span has attributes.\n * This is necessary because the base `Span` type does not have attributes,\n * so in places where we are passed a generic span, we need to check if we want to access them.\n */\nfunction spanHasAttributes(\n  span,\n) {\n  const castSpan = span ;\n  return !!castSpan.attributes && typeof castSpan.attributes === 'object';\n}\n\n/**\n * Check if a given span has a kind.\n * This is necessary because the base `Span` type does not have a kind,\n * so in places where we are passed a generic span, we need to check if we want to access it.\n */\nfunction spanHasKind(span) {\n  const castSpan = span ;\n  return typeof castSpan.kind === 'number';\n}\n\n/**\n * Check if a given span has a status.\n * This is necessary because the base `Span` type does not have a status,\n * so in places where we are passed a generic span, we need to check if we want to access it.\n */\nfunction spanHasStatus(\n  span,\n) {\n  const castSpan = span ;\n  return !!castSpan.status;\n}\n\n/**\n * Check if a given span has a name.\n * This is necessary because the base `Span` type does not have a name,\n * so in places where we are passed a generic span, we need to check if we want to access it.\n */\nfunction spanHasName(span) {\n  const castSpan = span ;\n  return !!castSpan.name;\n}\n\n/**\n * Check if a given span has a kind.\n * This is necessary because the base `Span` type does not have a kind,\n * so in places where we are passed a generic span, we need to check if we want to access it.\n */\nfunction spanHasParentId(\n  span,\n) {\n  const castSpan = span ;\n  return !!castSpan.parentSpanId;\n}\n\n/**\n * Check if a given span has events.\n * This is necessary because the base `Span` type does not have events,\n * so in places where we are passed a generic span, we need to check if we want to access it.\n */\nfunction spanHasEvents(\n  span,\n) {\n  const castSpan = span ;\n  return Array.isArray(castSpan.events);\n}\n\n/**\n * Get sanitizied request data from an OTEL span.\n */\nfunction getRequestSpanData(span) {\n  // The base `Span` type has no `attributes`, so we need to guard here against that\n  if (!spanHasAttributes(span)) {\n    return {};\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const maybeUrlAttribute = (span.attributes[ATTR_URL_FULL] || span.attributes[SEMATTRS_HTTP_URL])\n\n;\n\n  const data = {\n    url: maybeUrlAttribute,\n    // eslint-disable-next-line deprecation/deprecation\n    'http.method': (span.attributes[ATTR_HTTP_REQUEST_METHOD] || span.attributes[SEMATTRS_HTTP_METHOD])\n\n,\n  };\n\n  // Default to GET if URL is set but method is not\n  if (!data['http.method'] && data.url) {\n    data['http.method'] = 'GET';\n  }\n\n  try {\n    if (typeof maybeUrlAttribute === 'string') {\n      const url = parseUrl(maybeUrlAttribute);\n\n      data.url = getSanitizedUrlString(url);\n\n      if (url.search) {\n        data['http.query'] = url.search;\n      }\n      if (url.hash) {\n        data['http.fragment'] = url.hash;\n      }\n    }\n  } catch (e) {\n    // ignore\n  }\n\n  return data;\n}\n\nfunction _optionalChain$6(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\n// Typescript complains if we do not use `...args: any[]` for the mixin, with:\n// A mixin class must have a constructor with a single rest parameter of type 'any[]'.ts(2545)\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Wrap an Client with things we need for OpenTelemetry support.\n *\n * Usage:\n * const OpenTelemetryClient = getWrappedClientClass(NodeClient);\n * const client = new OpenTelemetryClient(options);\n */\nfunction wrapClientClass\n\n(ClientClass) {\n  class OpenTelemetryClient extends ClientClass  {\n\n     constructor(...args) {\n      super(...args);\n    }\n\n    /** Get the OTEL tracer. */\n     get tracer() {\n      if (this._tracer) {\n        return this._tracer;\n      }\n\n      const name = '@sentry/opentelemetry';\n      const version = SDK_VERSION;\n      const tracer = trace.getTracer(name, version);\n      this._tracer = tracer;\n\n      return tracer;\n    }\n\n    /**\n     * @inheritDoc\n     */\n     async flush(timeout) {\n      const provider = this.traceProvider;\n      const spanProcessor = _optionalChain$6([provider, 'optionalAccess', _ => _.activeSpanProcessor]);\n\n      if (spanProcessor) {\n        await spanProcessor.forceFlush();\n      }\n\n      return super.flush(timeout);\n    }\n  }\n\n  return OpenTelemetryClient ;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n/**\n * Get the span kind from a span.\n * For whatever reason, this is not public API on the generic \"Span\" type,\n * so we need to check if we actually have a `SDKTraceBaseSpan` where we can fetch this from.\n * Otherwise, we fall back to `SpanKind.INTERNAL`.\n */\nfunction getSpanKind(span) {\n  if (spanHasKind(span)) {\n    return span.kind;\n  }\n\n  return SpanKind.INTERNAL;\n}\n\nconst SENTRY_TRACE_HEADER = 'sentry-trace';\nconst SENTRY_BAGGAGE_HEADER = 'baggage';\n\nconst SENTRY_TRACE_STATE_DSC = 'sentry.dsc';\nconst SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING = 'sentry.sampled_not_recording';\nconst SENTRY_TRACE_STATE_URL = 'sentry.url';\n\nconst SENTRY_SCOPES_CONTEXT_KEY = createContextKey('sentry_scopes');\n\nconst SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY = createContextKey('sentry_fork_isolation_scope');\n\nconst SENTRY_FORK_SET_SCOPE_CONTEXT_KEY = createContextKey('sentry_fork_set_scope');\n\nconst SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY = createContextKey('sentry_fork_set_isolation_scope');\n\nconst SCOPE_CONTEXT_FIELD = '_scopeContext';\n\n/**\n * Try to get the current scopes from the given OTEL context.\n * This requires a Context Manager that was wrapped with getWrappedContextManager.\n */\nfunction getScopesFromContext(context) {\n  return context.getValue(SENTRY_SCOPES_CONTEXT_KEY) ;\n}\n\n/**\n * Set the current scopes on an OTEL context.\n * This will return a forked context with the Propagation Context set.\n */\nfunction setScopesOnContext(context, scopes) {\n  return context.setValue(SENTRY_SCOPES_CONTEXT_KEY, scopes);\n}\n\n/**\n * Set the context on the scope so we can later look it up.\n * We need this to get the context from the scope in the `trace` functions.\n */\nfunction setContextOnScope(scope, context) {\n  addNonEnumerableProperty(scope, SCOPE_CONTEXT_FIELD, context);\n}\n\n/**\n * Get the context related to a scope.\n * TODO v8: Use this for the `trace` functions.\n * */\nfunction getContextFromScope(scope) {\n  return (scope )[SCOPE_CONTEXT_FIELD];\n}\n\n/**\n *\n * @param otelSpan Checks whether a given OTEL Span is an http request to sentry.\n * @returns boolean\n */\nfunction isSentryRequestSpan(span) {\n  if (!spanHasAttributes(span)) {\n    return false;\n  }\n\n  const { attributes } = span;\n\n  // `ATTR_URL_FULL` is the new attribute, but we still support the old one, `ATTR_HTTP_URL`, for now.\n  // eslint-disable-next-line deprecation/deprecation\n  const httpUrl = attributes[SEMATTRS_HTTP_URL] || attributes[ATTR_URL_FULL];\n\n  if (!httpUrl) {\n    return false;\n  }\n\n  return isSentryRequestUrl(httpUrl.toString(), getClient());\n}\n\nfunction _optionalChain$5(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\n/**\n * OpenTelemetry only knows about SAMPLED or NONE decision,\n * but for us it is important to differentiate between unset and unsampled.\n *\n * Both of these are identified as `traceFlags === TracegFlags.NONE`,\n * but we additionally look at a special trace state to differentiate between them.\n */\nfunction getSamplingDecision(spanContext) {\n  const { traceFlags, traceState } = spanContext;\n\n  const sampledNotRecording = traceState ? traceState.get(SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING) === '1' : false;\n\n  // If trace flag is `SAMPLED`, we interpret this as sampled\n  // If it is `NONE`, it could mean either it was sampled to be not recorder, or that it was not sampled at all\n  // For us this is an important difference, sow e look at the SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING\n  // to identify which it is\n  if (traceFlags === TraceFlags.SAMPLED) {\n    return true;\n  }\n\n  if (sampledNotRecording) {\n    return false;\n  }\n\n  // Fall back to DSC as a last resort, that may also contain `sampled`...\n  const dscString = traceState ? traceState.get(SENTRY_TRACE_STATE_DSC) : undefined;\n  const dsc = dscString ? baggageHeaderToDynamicSamplingContext(dscString) : undefined;\n\n  if (_optionalChain$5([dsc, 'optionalAccess', _ => _.sampled]) === 'true') {\n    return true;\n  }\n  if (_optionalChain$5([dsc, 'optionalAccess', _2 => _2.sampled]) === 'false') {\n    return false;\n  }\n\n  return undefined;\n}\n\n/**\n * Infer the op & description for a set of name, attributes and kind of a span.\n */\nfunction inferSpanData(spanName, attributes, kind) {\n  // if http.method exists, this is an http request span\n  // eslint-disable-next-line deprecation/deprecation\n  const httpMethod = attributes[ATTR_HTTP_REQUEST_METHOD] || attributes[SEMATTRS_HTTP_METHOD];\n  if (httpMethod) {\n    return descriptionForHttpMethod({ attributes, name: spanName, kind }, httpMethod);\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const dbSystem = attributes[SEMATTRS_DB_SYSTEM];\n  const opIsCache =\n    typeof attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] === 'string' &&\n    attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP].startsWith('cache.');\n\n  // If db.type exists then this is a database call span\n  // If the Redis DB is used as a cache, the span description should not be changed\n  if (dbSystem && !opIsCache) {\n    return descriptionForDbSystem({ attributes, name: spanName });\n  }\n\n  const customSourceOrRoute = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] === 'custom' ? 'custom' : 'route';\n\n  // If rpc.service exists then this is a rpc call span.\n  // eslint-disable-next-line deprecation/deprecation\n  const rpcService = attributes[SEMATTRS_RPC_SERVICE];\n  if (rpcService) {\n    return {\n      ...getUserUpdatedNameAndSource(spanName, attributes, 'route'),\n      op: 'rpc',\n    };\n  }\n\n  // If messaging.system exists then this is a messaging system span.\n  // eslint-disable-next-line deprecation/deprecation\n  const messagingSystem = attributes[SEMATTRS_MESSAGING_SYSTEM];\n  if (messagingSystem) {\n    return {\n      ...getUserUpdatedNameAndSource(spanName, attributes, customSourceOrRoute),\n      op: 'message',\n    };\n  }\n\n  // If faas.trigger exists then this is a function as a service span.\n  // eslint-disable-next-line deprecation/deprecation\n  const faasTrigger = attributes[SEMATTRS_FAAS_TRIGGER];\n  if (faasTrigger) {\n    return {\n      ...getUserUpdatedNameAndSource(spanName, attributes, customSourceOrRoute),\n      op: faasTrigger.toString(),\n    };\n  }\n\n  return { op: undefined, description: spanName, source: 'custom' };\n}\n\n/**\n * Extract better op/description from an otel span.\n *\n * Does not overwrite the span name if the source is already set to custom to ensure\n * that user-updated span names are preserved. In this case, we only adjust the op but\n * leave span description and source unchanged.\n *\n * Based on https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/7422ce2a06337f68a59b552b8c5a2ac125d6bae5/exporter/sentryexporter/sentry_exporter.go#L306\n */\nfunction parseSpanDescription(span) {\n  const attributes = spanHasAttributes(span) ? span.attributes : {};\n  const name = spanHasName(span) ? span.name : '<unknown>';\n  const kind = getSpanKind(span);\n\n  return inferSpanData(name, attributes, kind);\n}\n\nfunction descriptionForDbSystem({ attributes, name }) {\n  // if we already have a custom name, we don't overwrite it but only set the op\n  const userDefinedName = attributes[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n  if (typeof userDefinedName === 'string') {\n    return {\n      op: 'db',\n      description: userDefinedName,\n      source: (attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ) || 'custom',\n    };\n  }\n\n  // if we already have the source set to custom, we don't overwrite the span description but only set the op\n  if (attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] === 'custom') {\n    return { op: 'db', description: name, source: 'custom' };\n  }\n\n  // Use DB statement (Ex \"SELECT * FROM table\") if possible as description.\n  // eslint-disable-next-line deprecation/deprecation\n  const statement = attributes[SEMATTRS_DB_STATEMENT];\n\n  const description = statement ? statement.toString() : name;\n\n  return { op: 'db', description, source: 'task' };\n}\n\n/** Only exported for tests. */\nfunction descriptionForHttpMethod(\n  { name, kind, attributes },\n  httpMethod,\n) {\n  const opParts = ['http'];\n\n  switch (kind) {\n    case SpanKind.CLIENT:\n      opParts.push('client');\n      break;\n    case SpanKind.SERVER:\n      opParts.push('server');\n      break;\n  }\n\n  // Spans for HTTP requests we have determined to be prefetch requests will have a `.prefetch` postfix in the op\n  if (attributes['sentry.http.prefetch']) {\n    opParts.push('prefetch');\n  }\n\n  const { urlPath, url, query, fragment, hasRoute } = getSanitizedUrl(attributes, kind);\n\n  if (!urlPath) {\n    return { ...getUserUpdatedNameAndSource(name, attributes), op: opParts.join('.') };\n  }\n\n  const graphqlOperationsAttribute = attributes[SEMANTIC_ATTRIBUTE_SENTRY_GRAPHQL_OPERATION];\n\n  // Ex. GET /api/users\n  const baseDescription = `${httpMethod} ${urlPath}`;\n\n  // When the http span has a graphql operation, append it to the description\n  // We add these in the graphqlIntegration\n  const inferredDescription = graphqlOperationsAttribute\n    ? `${baseDescription} (${getGraphqlOperationNamesFromAttribute(graphqlOperationsAttribute)})`\n    : baseDescription;\n\n  // If `httpPath` is a root path, then we can categorize the transaction source as route.\n  const inferredSource = hasRoute || urlPath === '/' ? 'route' : 'url';\n\n  const data = {};\n\n  if (url) {\n    data.url = url;\n  }\n  if (query) {\n    data['http.query'] = query;\n  }\n  if (fragment) {\n    data['http.fragment'] = fragment;\n  }\n\n  // If the span kind is neither client nor server, we use the original name\n  // this infers that somebody manually started this span, in which case we don't want to overwrite the name\n  const isClientOrServerKind = kind === SpanKind.CLIENT || kind === SpanKind.SERVER;\n\n  // If the span is an auto-span (=it comes from one of our instrumentations),\n  // we always want to infer the name\n  // this is necessary because some of the auto-instrumentation we use uses kind=INTERNAL\n  const origin = attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] || 'manual';\n  const isManualSpan = !`${origin}`.startsWith('auto');\n\n  // If users (or in very rare occasions we) set the source to custom, we don't overwrite the name\n  const alreadyHasCustomSource = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] === 'custom';\n  const customSpanName = attributes[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n\n  const useInferredDescription =\n    !alreadyHasCustomSource && customSpanName == null && (isClientOrServerKind || !isManualSpan);\n\n  const { description, source } = useInferredDescription\n    ? { description: inferredDescription, source: inferredSource }\n    : getUserUpdatedNameAndSource(name, attributes);\n\n  return {\n    op: opParts.join('.'),\n    description,\n    source,\n    data,\n  };\n}\n\nfunction getGraphqlOperationNamesFromAttribute(attr) {\n  if (Array.isArray(attr)) {\n    const sorted = attr.slice().sort();\n\n    // Up to 5 items, we just add all of them\n    if (sorted.length <= 5) {\n      return sorted.join(', ');\n    } else {\n      // Else, we add the first 5 and the diff of other operations\n      return `${sorted.slice(0, 5).join(', ')}, +${sorted.length - 5}`;\n    }\n  }\n\n  return `${attr}`;\n}\n\n/** Exported for tests only */\nfunction getSanitizedUrl(\n  attributes,\n  kind,\n)\n\n {\n  // This is the relative path of the URL, e.g. /sub\n  // eslint-disable-next-line deprecation/deprecation\n  const httpTarget = attributes[SEMATTRS_HTTP_TARGET];\n  // This is the full URL, including host & query params etc., e.g. https://example.com/sub?foo=bar\n  // eslint-disable-next-line deprecation/deprecation\n  const httpUrl = attributes[SEMATTRS_HTTP_URL] || attributes[ATTR_URL_FULL];\n  // This is the normalized route name - may not always be available!\n  const httpRoute = attributes[ATTR_HTTP_ROUTE];\n\n  const parsedUrl = typeof httpUrl === 'string' ? parseUrl(httpUrl) : undefined;\n  const url = parsedUrl ? getSanitizedUrlString(parsedUrl) : undefined;\n  const query = parsedUrl && parsedUrl.search ? parsedUrl.search : undefined;\n  const fragment = parsedUrl && parsedUrl.hash ? parsedUrl.hash : undefined;\n\n  if (typeof httpRoute === 'string') {\n    return { urlPath: httpRoute, url, query, fragment, hasRoute: true };\n  }\n\n  if (kind === SpanKind.SERVER && typeof httpTarget === 'string') {\n    return { urlPath: stripUrlQueryAndFragment(httpTarget), url, query, fragment, hasRoute: false };\n  }\n\n  if (parsedUrl) {\n    return { urlPath: url, url, query, fragment, hasRoute: false };\n  }\n\n  // fall back to target even for client spans, if no URL is present\n  if (typeof httpTarget === 'string') {\n    return { urlPath: stripUrlQueryAndFragment(httpTarget), url, query, fragment, hasRoute: false };\n  }\n\n  return { urlPath: undefined, url, query, fragment, hasRoute: false };\n}\n\n/**\n * Because Otel instrumentation sometimes mutates span names via `span.updateName`, the only way\n * to ensure that a user-set span name is preserved is to store it as a tmp attribute on the span.\n * We delete this attribute once we're done with it when preparing the event envelope.\n *\n * This temp attribute always takes precedence over the original name.\n *\n * We also need to take care of setting the correct source. Users can always update the source\n * after updating the name, so we need to respect that.\n *\n * @internal exported only for testing\n */\nfunction getUserUpdatedNameAndSource(\n  originalName,\n  attributes,\n  fallbackSource = 'custom',\n)\n\n {\n  const source = (attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ) || fallbackSource;\n  const description = attributes[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n\n  if (description && typeof description === 'string') {\n    return {\n      description,\n      source,\n    };\n  }\n\n  return { description: originalName, source };\n}\n\n/**\n * Setup a DSC handler on the passed client,\n * ensuring that the transaction name is inferred from the span correctly.\n */\nfunction enhanceDscWithOpenTelemetryRootSpanName(client) {\n  client.on('createDsc', (dsc, rootSpan) => {\n    if (!rootSpan) {\n      return;\n    }\n\n    // We want to overwrite the transaction on the DSC that is created by default in core\n    // The reason for this is that we want to infer the span name, not use the initial one\n    // Otherwise, we'll get names like \"GET\" instead of e.g. \"GET /foo\"\n    // `parseSpanDescription` takes the attributes of the span into account for the name\n    // This mutates the passed-in DSC\n\n    const jsonSpan = spanToJSON(rootSpan);\n    const attributes = jsonSpan.data || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n    const { description } = spanHasName(rootSpan) ? parseSpanDescription(rootSpan) : { description: undefined };\n    if (source !== 'url' && description) {\n      dsc.transaction = description;\n    }\n\n    // Also ensure sampling decision is correctly inferred\n    // In core, we use `spanIsSampled`, which just looks at the trace flags\n    // but in OTEL, we use a slightly more complex logic to be able to differntiate between unsampled and deferred sampling\n    if (hasTracingEnabled()) {\n      const sampled = getSamplingDecision(rootSpan.spanContext());\n      dsc.sampled = sampled == undefined ? undefined : String(sampled);\n    }\n  });\n}\n\n/**\n * Generate a TraceState for the given data.\n */\nfunction makeTraceState({\n  dsc,\n  sampled,\n}\n\n) {\n  // We store the DSC as OTEL trace state on the span context\n  const dscString = dsc ? dynamicSamplingContextToSentryBaggageHeader(dsc) : undefined;\n\n  const traceStateBase = new TraceState();\n\n  const traceStateWithDsc = dscString ? traceStateBase.set(SENTRY_TRACE_STATE_DSC, dscString) : traceStateBase;\n\n  // We also specifically want to store if this is sampled to be not recording,\n  // or unsampled (=could be either sampled or not)\n  return sampled === false ? traceStateWithDsc.set(SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING, '1') : traceStateWithDsc;\n}\n\n/**\n * Generates a SpanContext that represents a PropagationContext.\n * This can be set on a `context` to make this a (virtual) active span.\n *\n * @deprecated This function is deprecated and will be removed in the next major version.\n */\nfunction generateSpanContextForPropagationContext(propagationContext) {\n  // We store the DSC as OTEL trace state on the span context\n  const traceState = makeTraceState({\n    dsc: propagationContext.dsc,\n    sampled: propagationContext.sampled,\n  });\n\n  const spanContext = {\n    traceId: propagationContext.traceId,\n    // TODO: Do not create an invalid span context here\n    spanId: propagationContext.parentSpanId || '',\n    isRemote: true,\n    traceFlags: propagationContext.sampled ? TraceFlags.SAMPLED : TraceFlags.NONE,\n    traceState,\n  };\n\n  return spanContext;\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  return trace.getActiveSpan();\n}\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nconst setupElements = new Set();\n\n/** Get all the OpenTelemetry elements that have been set up. */\nfunction openTelemetrySetupCheck() {\n  return Array.from(setupElements);\n}\n\n/** Mark an OpenTelemetry element as setup. */\nfunction setIsSetup(element) {\n  setupElements.add(element);\n}\n\nfunction _optionalChain$4(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\n/** Get the Sentry propagation context from a span context. */\nfunction getPropagationContextFromSpan(span) {\n  const spanContext = span.spanContext();\n  const { traceId, spanId, traceState } = spanContext;\n\n  // When we have a dsc trace state, it means this came from the incoming trace\n  // Then this takes presedence over the root span\n  const dscString = traceState ? traceState.get(SENTRY_TRACE_STATE_DSC) : undefined;\n  const traceStateDsc = dscString ? baggageHeaderToDynamicSamplingContext(dscString) : undefined;\n\n  const parentSpanId = spanHasParentId(span) ? span.parentSpanId : undefined;\n  const sampled = getSamplingDecision(spanContext);\n\n  // No trace state? --> Take DSC from root span\n  const dsc = traceStateDsc || getDynamicSamplingContextFromSpan(getRootSpan(span));\n\n  return {\n    traceId,\n    spanId,\n    sampled,\n    parentSpanId,\n    dsc,\n  };\n}\n\n/**\n * Injects and extracts `sentry-trace` and `baggage` headers from carriers.\n */\nclass SentryPropagator extends W3CBaggagePropagator {\n  /** A map of URLs that have already been checked for if they match tracePropagationTargets. */\n\n   constructor() {\n    super();\n    setIsSetup('SentryPropagator');\n\n    // We're caching results so we don't have to recompute regexp every time we create a request.\n    this._urlMatchesTargetsMap = new LRUMap(100);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   inject(context, carrier, setter) {\n    if (isTracingSuppressed(context)) {\n      DEBUG_BUILD && logger.log('[Tracing] Not injecting trace data for url because tracing is suppressed.');\n      return;\n    }\n\n    const activeSpan = trace.getSpan(context);\n    const url = activeSpan && getCurrentURL(activeSpan);\n\n    const tracePropagationTargets = _optionalChain$4([getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3(), 'optionalAccess', _4 => _4.tracePropagationTargets]);\n    if (!shouldPropagateTraceForUrl(url, tracePropagationTargets, this._urlMatchesTargetsMap)) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Tracing] Not injecting trace data for url because it does not match tracePropagationTargets:',\n          url,\n        );\n      return;\n    }\n\n    const existingBaggageHeader = getExistingBaggage(carrier);\n    let baggage = propagation.getBaggage(context) || propagation.createBaggage({});\n\n    const { dynamicSamplingContext, traceId, spanId, sampled } = getInjectionData(context);\n\n    if (existingBaggageHeader) {\n      const baggageEntries = parseBaggageHeader(existingBaggageHeader);\n\n      if (baggageEntries) {\n        Object.entries(baggageEntries).forEach(([key, value]) => {\n          baggage = baggage.setEntry(key, { value });\n        });\n      }\n    }\n\n    if (dynamicSamplingContext) {\n      baggage = Object.entries(dynamicSamplingContext).reduce((b, [dscKey, dscValue]) => {\n        if (dscValue) {\n          return b.setEntry(`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`, { value: dscValue });\n        }\n        return b;\n      }, baggage);\n    }\n\n    // We also want to avoid setting the default OTEL trace ID, if we get that for whatever reason\n    if (traceId && traceId !== INVALID_TRACEID) {\n      setter.set(carrier, SENTRY_TRACE_HEADER, generateSentryTraceHeader(traceId, spanId, sampled));\n    }\n\n    super.inject(propagation.setBaggage(context, baggage), carrier, setter);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   extract(context, carrier, getter) {\n    const maybeSentryTraceHeader = getter.get(carrier, SENTRY_TRACE_HEADER);\n    const baggage = getter.get(carrier, SENTRY_BAGGAGE_HEADER);\n\n    const sentryTrace = maybeSentryTraceHeader\n      ? Array.isArray(maybeSentryTraceHeader)\n        ? maybeSentryTraceHeader[0]\n        : maybeSentryTraceHeader\n      : undefined;\n\n    // Add remote parent span context\n    // If there is no incoming trace, this will return the context as-is\n    return ensureScopesOnContext(getContextWithRemoteActiveSpan(context, { sentryTrace, baggage }));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   fields() {\n    return [SENTRY_TRACE_HEADER, SENTRY_BAGGAGE_HEADER];\n  }\n}\n\nconst NOT_PROPAGATED_MESSAGE =\n  '[Tracing] Not injecting trace data for url because it does not match tracePropagationTargets:';\n\n/**\n * Check if a given URL should be propagated to or not.\n * If no url is defined, or no trace propagation targets are defined, this will always return `true`.\n * You can also optionally provide a decision map, to cache decisions and avoid repeated regex lookups.\n */\nfunction shouldPropagateTraceForUrl(\n  url,\n  tracePropagationTargets,\n  decisionMap,\n) {\n  if (typeof url !== 'string' || !tracePropagationTargets) {\n    return true;\n  }\n\n  const cachedDecision = _optionalChain$4([decisionMap, 'optionalAccess', _5 => _5.get, 'call', _6 => _6(url)]);\n  if (cachedDecision !== undefined) {\n    DEBUG_BUILD && !cachedDecision && logger.log(NOT_PROPAGATED_MESSAGE, url);\n    return cachedDecision;\n  }\n\n  const decision = stringMatchesSomePattern(url, tracePropagationTargets);\n  _optionalChain$4([decisionMap, 'optionalAccess', _7 => _7.set, 'call', _8 => _8(url, decision)]);\n\n  DEBUG_BUILD && !decision && logger.log(NOT_PROPAGATED_MESSAGE, url);\n  return decision;\n}\n\n/**\n * Get propagation injection data for the given context.\n */\nfunction getInjectionData(context)\n\n {\n  const span = trace.getSpan(context);\n\n  // If we have a remote span, the spanId should be considered as the parentSpanId, not spanId itself\n  // Instead, we use a virtual (generated) spanId for propagation\n  if (span && span.spanContext().isRemote) {\n    const spanContext = span.spanContext();\n    const dynamicSamplingContext = getDynamicSamplingContextFromSpan(span);\n\n    return {\n      dynamicSamplingContext,\n      traceId: spanContext.traceId,\n      // Because this is a remote span, we do not want to propagate this directly\n      // As otherwise things may be attached \"directly\" to an unrelated span\n      spanId: generateSpanId(),\n      sampled: getSamplingDecision(spanContext),\n    };\n  }\n\n  // If we have a local span, we just use this\n  if (span) {\n    const spanContext = span.spanContext();\n    const dynamicSamplingContext = getDynamicSamplingContextFromSpan(span);\n\n    return {\n      dynamicSamplingContext,\n      traceId: spanContext.traceId,\n      spanId: spanContext.spanId,\n      sampled: getSamplingDecision(spanContext),\n    };\n  }\n\n  // Else we try to use the propagation context from the scope\n  // The only scenario where this should happen is when we neither have a span, nor an incoming trace\n  const scope = _optionalChain$4([getScopesFromContext, 'call', _9 => _9(context), 'optionalAccess', _10 => _10.scope]) || getCurrentScope();\n  const client = getClient();\n\n  const propagationContext = scope.getPropagationContext();\n  const dynamicSamplingContext = client ? getDynamicSamplingContextFromScope(client, scope) : undefined;\n  return {\n    dynamicSamplingContext,\n    traceId: propagationContext.traceId,\n    // TODO(v9): Use generateSpanId() instead\n    // eslint-disable-next-line deprecation/deprecation\n    spanId: propagationContext.spanId,\n    sampled: propagationContext.sampled,\n  };\n}\n\nfunction getContextWithRemoteActiveSpan(\n  ctx,\n  { sentryTrace, baggage },\n) {\n  const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n\n  const { traceId, parentSpanId, sampled, dsc } = propagationContext;\n\n  // We only want to set the virtual span if we are continuing a concrete trace\n  // Otherwise, we ignore the incoming trace here, e.g. if we have no trace headers\n  if (!parentSpanId) {\n    return ctx;\n  }\n\n  const spanContext = generateRemoteSpanContext({\n    traceId,\n    spanId: parentSpanId,\n    sampled,\n    dsc,\n  });\n\n  return trace.setSpanContext(ctx, spanContext);\n}\n\n/**\n * Takes trace strings and propagates them as a remote active span.\n * This should be used in addition to `continueTrace` in OTEL-powered environments.\n */\nfunction continueTraceAsRemoteSpan(\n  ctx,\n  options,\n  callback,\n) {\n  const ctxWithSpanContext = ensureScopesOnContext(getContextWithRemoteActiveSpan(ctx, options));\n\n  return context.with(ctxWithSpanContext, callback);\n}\n\nfunction ensureScopesOnContext(ctx) {\n  // If there are no scopes yet on the context, ensure we have them\n  const scopes = getScopesFromContext(ctx);\n  const newScopes = {\n    // If we have no scope here, this is most likely either the root context or a context manually derived from it\n    // In this case, we want to fork the current scope, to ensure we do not pollute the root scope\n    scope: scopes ? scopes.scope : getCurrentScope().clone(),\n    isolationScope: scopes ? scopes.isolationScope : getIsolationScope(),\n  };\n\n  return setScopesOnContext(ctx, newScopes);\n}\n\n/** Try to get the existing baggage header so we can merge this in. */\nfunction getExistingBaggage(carrier) {\n  try {\n    const baggage = (carrier )[SENTRY_BAGGAGE_HEADER];\n    return Array.isArray(baggage) ? baggage.join(',') : baggage;\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * It is pretty tricky to get access to the outgoing request URL of a request in the propagator.\n * As we only have access to the context of the span to be sent and the carrier (=headers),\n * but the span may be unsampled and thus have no attributes.\n *\n * So we use the following logic:\n * 1. If we have an active span, we check if it has a URL attribute.\n * 2. Else, if the active span has no URL attribute (e.g. it is unsampled), we check a special trace state (which we set in our sampler).\n */\nfunction getCurrentURL(span) {\n  const spanData = spanToJSON(span).data;\n  // `ATTR_URL_FULL` is the new attribute, but we still support the old one, `SEMATTRS_HTTP_URL`, for now.\n  // eslint-disable-next-line deprecation/deprecation\n  const urlAttribute = _optionalChain$4([spanData, 'optionalAccess', _11 => _11[SEMATTRS_HTTP_URL]]) || _optionalChain$4([spanData, 'optionalAccess', _12 => _12[ATTR_URL_FULL]]);\n  if (urlAttribute) {\n    return urlAttribute;\n  }\n\n  // Also look at the traceState, which we may set in the sampler even for unsampled spans\n  const urlTraceState = _optionalChain$4([span, 'access', _13 => _13.spanContext, 'call', _14 => _14(), 'access', _15 => _15.traceState, 'optionalAccess', _16 => _16.get, 'call', _17 => _17(SENTRY_TRACE_STATE_URL)]);\n  if (urlTraceState) {\n    return urlTraceState;\n  }\n\n  return undefined;\n}\n\nfunction generateRemoteSpanContext({\n  spanId,\n  traceId,\n  sampled,\n  dsc,\n}\n\n) {\n  // We store the DSC as OTEL trace state on the span context\n  const traceState = makeTraceState({\n    dsc,\n    sampled,\n  });\n\n  const spanContext = {\n    traceId,\n    spanId,\n    isRemote: true,\n    traceFlags: sampled ? TraceFlags.SAMPLED : TraceFlags.NONE,\n    traceState,\n  };\n\n  return spanContext;\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpan(options, callback) {\n  const tracer = getTracer();\n\n  const { name, parentSpan: customParentSpan } = options;\n\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = getActiveSpanWrapper(customParentSpan);\n\n  return wrapper(() => {\n    const activeCtx = getContext(options.scope, options.forceTransaction);\n    const shouldSkipSpan = options.onlyIfParent && !trace.getSpan(activeCtx);\n    const ctx = shouldSkipSpan ? suppressTracing$1(activeCtx) : activeCtx;\n\n    const spanOptions = getSpanOptions(options);\n\n    return tracer.startActiveSpan(name, spanOptions, ctx, span => {\n      return handleCallbackErrors(\n        () => callback(span),\n        () => {\n          // Only set the span status to ERROR when there wasn't any status set before, in order to avoid stomping useful span statuses\n          if (spanToJSON(span).status === undefined) {\n            span.setStatus({ code: SpanStatusCode.ERROR });\n          }\n        },\n        () => span.end(),\n      );\n    });\n  });\n}\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpanManual(\n  options,\n  callback,\n) {\n  const tracer = getTracer();\n\n  const { name, parentSpan: customParentSpan } = options;\n\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = getActiveSpanWrapper(customParentSpan);\n\n  return wrapper(() => {\n    const activeCtx = getContext(options.scope, options.forceTransaction);\n    const shouldSkipSpan = options.onlyIfParent && !trace.getSpan(activeCtx);\n    const ctx = shouldSkipSpan ? suppressTracing$1(activeCtx) : activeCtx;\n\n    const spanOptions = getSpanOptions(options);\n\n    return tracer.startActiveSpan(name, spanOptions, ctx, span => {\n      return handleCallbackErrors(\n        () => callback(span, () => span.end()),\n        () => {\n          // Only set the span status to ERROR when there wasn't any status set before, in order to avoid stomping useful span statuses\n          if (spanToJSON(span).status === undefined) {\n            span.setStatus({ code: SpanStatusCode.ERROR });\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getActiveSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * This function will always return a span,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startInactiveSpan(options) {\n  const tracer = getTracer();\n\n  const { name, parentSpan: customParentSpan } = options;\n\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = getActiveSpanWrapper(customParentSpan);\n\n  return wrapper(() => {\n    const activeCtx = getContext(options.scope, options.forceTransaction);\n    const shouldSkipSpan = options.onlyIfParent && !trace.getSpan(activeCtx);\n    const ctx = shouldSkipSpan ? suppressTracing$1(activeCtx) : activeCtx;\n\n    const spanOptions = getSpanOptions(options);\n\n    const span = tracer.startSpan(name, spanOptions, ctx);\n\n    return span;\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback. Can be\n * passed `null` to start an entirely new span tree.\n *\n * @param span Spans started in the context of the provided callback will be children of this span. If `null` is passed,\n * spans started within the callback will be root spans.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nfunction withActiveSpan(span, callback) {\n  const newContextWithActiveSpan = span ? trace.setSpan(context.active(), span) : trace.deleteSpan(context.active());\n  return context.with(newContextWithActiveSpan, () => callback(getCurrentScope()));\n}\n\nfunction getTracer() {\n  const client = getClient();\n  return (client && client.tracer) || trace.getTracer('@sentry/opentelemetry', SDK_VERSION);\n}\n\nfunction getSpanOptions(options) {\n  const { startTime, attributes, kind, op } = options;\n\n  // OTEL expects timestamps in ms, not seconds\n  const fixedStartTime = typeof startTime === 'number' ? ensureTimestampInMilliseconds(startTime) : startTime;\n\n  return {\n    attributes: op\n      ? {\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: op,\n          ...attributes,\n        }\n      : attributes,\n    kind,\n    startTime: fixedStartTime,\n  };\n}\n\nfunction ensureTimestampInMilliseconds(timestamp) {\n  const isMs = timestamp < 9999999999;\n  return isMs ? timestamp * 1000 : timestamp;\n}\n\nfunction getContext(scope, forceTransaction) {\n  const ctx = getContextForScope(scope);\n  const parentSpan = trace.getSpan(ctx);\n\n  // In the case that we have no parent span, we start a new trace\n  // Note that if we continue a trace, we'll always have a remote parent span here anyhow\n  if (!parentSpan) {\n    return ctx;\n  }\n\n  // If we don't want to force a transaction, and we have a parent span, all good, we just return as-is!\n  if (!forceTransaction) {\n    return ctx;\n  }\n\n  // Else, if we do have a parent span but want to force a transaction, we have to simulate a \"root\" context\n\n  // Else, we need to do two things:\n  // 1. Unset the parent span from the context, so we'll create a new root span\n  // 2. Ensure the propagation context is correct, so we'll continue from the parent span\n  const ctxWithoutSpan = trace.deleteSpan(ctx);\n\n  const { spanId, traceId } = parentSpan.spanContext();\n  const sampled = getSamplingDecision(parentSpan.spanContext());\n\n  // In this case, when we are forcing a transaction, we want to treat this like continuing an incoming trace\n  // so we set the traceState according to the root span\n  const rootSpan = getRootSpan(parentSpan);\n  const dsc = getDynamicSamplingContextFromSpan(rootSpan);\n\n  const traceState = makeTraceState({\n    dsc,\n    sampled,\n  });\n\n  const spanOptions = {\n    traceId,\n    spanId,\n    isRemote: true,\n    traceFlags: sampled ? TraceFlags.SAMPLED : TraceFlags.NONE,\n    traceState,\n  };\n\n  const ctxWithSpanContext = trace.setSpanContext(ctxWithoutSpan, spanOptions);\n\n  return ctxWithSpanContext;\n}\n\nfunction getContextForScope(scope) {\n  if (scope) {\n    const ctx = getContextFromScope(scope);\n    if (ctx) {\n      return ctx;\n    }\n  }\n\n  return context.active();\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n * and `<meta name=\"baggage\">` HTML tags.\n *\n * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n * be attached to the incoming trace.\n *\n * This is a custom version of `continueTrace` that is used in OTEL-powered environments.\n * It propagates the trace as a remote span, in addition to setting it on the propagation context.\n */\nfunction continueTrace(options, callback) {\n  return continueTraceAsRemoteSpan(context.active(), options, callback);\n}\n\n/**\n * Get the trace context for a given scope.\n * We have a custom implemention here because we need an OTEL-specific way to get the span from a scope.\n */\nfunction getTraceContextForScope(\n  client,\n  scope,\n) {\n  const ctx = getContextFromScope(scope);\n  const span = ctx && trace.getSpan(ctx);\n\n  const traceContext = span ? spanToTraceContext(span) : getTraceContextFromScope(scope);\n\n  const dynamicSamplingContext = span\n    ? getDynamicSamplingContextFromSpan(span)\n    : getDynamicSamplingContextFromScope(client, scope);\n  return [dynamicSamplingContext, traceContext];\n}\n\nfunction getActiveSpanWrapper(parentSpan) {\n  return parentSpan !== undefined\n    ? (callback) => {\n        return withActiveSpan(parentSpan, callback);\n      }\n    : (callback) => callback();\n}\n\n/** Suppress tracing in the given callback, ensuring no spans are generated inside of it. */\nfunction suppressTracing(callback) {\n  const ctx = suppressTracing$1(context.active());\n  return context.with(ctx, callback);\n}\n\n/** Ensure the `trace` context is set on all events. */\nfunction setupEventContextTrace(client) {\n  client.on('preprocessEvent', event => {\n    const span = getActiveSpan();\n    // For transaction events, this is handled separately\n    // Because the active span may not be the span that is actually the transaction event\n    if (!span || event.type === 'transaction') {\n      return;\n    }\n\n    // If event has already set `trace` context, use that one.\n    event.contexts = {\n      trace: spanToTraceContext(span),\n      ...event.contexts,\n    };\n\n    const rootSpan = getRootSpan(span);\n\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(rootSpan),\n      ...event.sdkProcessingMetadata,\n    };\n\n    return event;\n  });\n}\n\n/**\n * Otel-specific implementation of `getTraceData`.\n * @see `@sentry/core` version of `getTraceData` for more information\n */\nfunction getTraceData({ span } = {}) {\n  let ctx = api.context.active();\n\n  if (span) {\n    const { scope } = getCapturedScopesOnSpan(span);\n    // fall back to current context if for whatever reason we can't find the one of the span\n    ctx = (scope && getContextFromScope(scope)) || api.trace.setSpan(api.context.active(), span);\n  }\n\n  const { traceId, spanId, sampled, dynamicSamplingContext } = getInjectionData(ctx);\n\n  return {\n    'sentry-trace': generateSentryTraceHeader(traceId, spanId, sampled),\n    baggage: dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext),\n  };\n}\n\n/**\n * Sets the async context strategy to use follow the OTEL context under the hood.\n * We handle forking a hub inside of our custom OTEL Context Manager (./otelContextManager.ts)\n */\nfunction setOpenTelemetryContextAsyncContextStrategy() {\n  function getScopes() {\n    const ctx = api.context.active();\n    const scopes = getScopesFromContext(ctx);\n\n    if (scopes) {\n      return scopes;\n    }\n\n    // fallback behavior:\n    // if, for whatever reason, we can't find scopes on the context here, we have to fix this somehow\n    return {\n      scope: getDefaultCurrentScope(),\n      isolationScope: getDefaultIsolationScope(),\n    };\n  }\n\n  function withScope(callback) {\n    const ctx = api.context.active();\n\n    // We depend on the otelContextManager to handle the context/hub\n    // We set the `SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY` context value, which is picked up by\n    // the OTEL context manager, which uses the presence of this key to determine if it should\n    // fork the isolation scope, or not\n    // as by default, we don't want to fork this, unless triggered explicitly by `withScope`\n    return api.context.with(ctx, () => {\n      return callback(getCurrentScope());\n    });\n  }\n\n  function withSetScope(scope, callback) {\n    const ctx = api.context.active();\n\n    // We depend on the otelContextManager to handle the context/hub\n    // We set the `SENTRY_FORK_SET_SCOPE_CONTEXT_KEY` context value, which is picked up by\n    // the OTEL context manager, which picks up this scope as the current scope\n    return api.context.with(ctx.setValue(SENTRY_FORK_SET_SCOPE_CONTEXT_KEY, scope), () => {\n      return callback(scope);\n    });\n  }\n\n  function withIsolationScope(callback) {\n    const ctx = api.context.active();\n\n    // We depend on the otelContextManager to handle the context/hub\n    // We set the `SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY` context value, which is picked up by\n    // the OTEL context manager, which uses the presence of this key to determine if it should\n    // fork the isolation scope, or not\n    return api.context.with(ctx.setValue(SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY, true), () => {\n      return callback(getIsolationScope());\n    });\n  }\n\n  function withSetIsolationScope(isolationScope, callback) {\n    const ctx = api.context.active();\n\n    // We depend on the otelContextManager to handle the context/hub\n    // We set the `SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY` context value, which is picked up by\n    // the OTEL context manager, which uses the presence of this key to determine if it should\n    // fork the isolation scope, or not\n    return api.context.with(ctx.setValue(SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY, isolationScope), () => {\n      return callback(getIsolationScope());\n    });\n  }\n\n  function getCurrentScope() {\n    return getScopes().scope;\n  }\n\n  function getIsolationScope() {\n    return getScopes().isolationScope;\n  }\n\n  setAsyncContextStrategy({\n    withScope,\n    withSetScope,\n    withSetIsolationScope,\n    withIsolationScope,\n    getCurrentScope,\n    getIsolationScope,\n    startSpan,\n    startSpanManual,\n    startInactiveSpan,\n    getActiveSpan,\n    suppressTracing,\n    getTraceData,\n    continueTrace,\n    // The types here don't fully align, because our own `Span` type is narrower\n    // than the OTEL one - but this is OK for here, as we now we'll only have OTEL spans passed around\n    withActiveSpan: withActiveSpan ,\n  });\n}\n\nfunction _optionalChain$3(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\n/**\n * Wrap an OpenTelemetry ContextManager in a way that ensures the context is kept in sync with the Sentry Scope.\n *\n * Usage:\n * import { AsyncLocalStorageContextManager } from '@opentelemetry/context-async-hooks';\n * const SentryContextManager = wrapContextManagerClass(AsyncLocalStorageContextManager);\n * const contextManager = new SentryContextManager();\n */\nfunction wrapContextManagerClass(\n  ContextManagerClass,\n) {\n  /**\n   * This is a custom ContextManager for OpenTelemetry, which extends the default AsyncLocalStorageContextManager.\n   * It ensures that we create new scopes per context, so that the OTEL Context & the Sentry Scope are always in sync.\n   *\n   * Note that we currently only support AsyncHooks with this,\n   * but since this should work for Node 14+ anyhow that should be good enough.\n   */\n\n  // @ts-expect-error TS does not like this, but we know this is fine\n  class SentryContextManager extends ContextManagerClass {\n     constructor(...args) {\n      super(...args);\n      setIsSetup('SentryContextManager');\n    }\n    /**\n     * Overwrite with() of the original AsyncLocalStorageContextManager\n     * to ensure we also create new scopes per context.\n     */\n     with(\n      context,\n      fn,\n      thisArg,\n      ...args\n    ) {\n      const currentScopes = getScopesFromContext(context);\n      const currentScope = _optionalChain$3([currentScopes, 'optionalAccess', _ => _.scope]) || getCurrentScope();\n      const currentIsolationScope = _optionalChain$3([currentScopes, 'optionalAccess', _2 => _2.isolationScope]) || getIsolationScope();\n\n      const shouldForkIsolationScope = context.getValue(SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY) === true;\n      const scope = context.getValue(SENTRY_FORK_SET_SCOPE_CONTEXT_KEY) ;\n      const isolationScope = context.getValue(SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY) ;\n\n      const newCurrentScope = scope || currentScope.clone();\n      const newIsolationScope =\n        isolationScope || (shouldForkIsolationScope ? currentIsolationScope.clone() : currentIsolationScope);\n      const scopes = { scope: newCurrentScope, isolationScope: newIsolationScope };\n\n      const ctx1 = setScopesOnContext(context, scopes);\n\n      // Remove the unneeded values again\n      const ctx2 = ctx1\n        .deleteValue(SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY)\n        .deleteValue(SENTRY_FORK_SET_SCOPE_CONTEXT_KEY)\n        .deleteValue(SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY);\n\n      setContextOnScope(newCurrentScope, ctx2);\n\n      return super.with(ctx2, fn, thisArg, ...args);\n    }\n  }\n\n  return SentryContextManager ;\n}\n\n/**\n * This function runs through a list of OTEL Spans, and wraps them in an `SpanNode`\n * where each node holds a reference to their parent node.\n */\nfunction groupSpansWithParents(spans) {\n  const nodeMap = new Map();\n\n  for (const span of spans) {\n    createOrUpdateSpanNodeAndRefs(nodeMap, span);\n  }\n\n  return Array.from(nodeMap, function ([_id, spanNode]) {\n    return spanNode;\n  });\n}\n\n/**\n * This returns the _local_ parent ID - `parentId` on the span may point to a remote span.\n */\nfunction getLocalParentId(span) {\n  const parentIsRemote = span.attributes[SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE] === true;\n  // If the parentId is the trace parent ID, we pretend it's undefined\n  // As this means the parent exists somewhere else\n  return !parentIsRemote ? span.parentSpanId : undefined;\n}\n\nfunction createOrUpdateSpanNodeAndRefs(nodeMap, span) {\n  const id = span.spanContext().spanId;\n  const parentId = getLocalParentId(span);\n\n  if (!parentId) {\n    createOrUpdateNode(nodeMap, { id, span, children: [] });\n    return;\n  }\n\n  // Else make sure to create parent node as well\n  // Note that the parent may not know it's parent _yet_, this may be updated in a later pass\n  const parentNode = createOrGetParentNode(nodeMap, parentId);\n  const node = createOrUpdateNode(nodeMap, { id, span, parentNode, children: [] });\n  parentNode.children.push(node);\n}\n\nfunction createOrGetParentNode(nodeMap, id) {\n  const existing = nodeMap.get(id);\n\n  if (existing) {\n    return existing;\n  }\n\n  return createOrUpdateNode(nodeMap, { id, children: [] });\n}\n\nfunction createOrUpdateNode(nodeMap, spanNode) {\n  const existing = nodeMap.get(spanNode.id);\n\n  // If span is already set, nothing to do here\n  if (existing && existing.span) {\n    return existing;\n  }\n\n  // If it exists but span is not set yet, we update it\n  if (existing && !existing.span) {\n    existing.span = spanNode.span;\n    existing.parentNode = spanNode.parentNode;\n    return existing;\n  }\n\n  // Else, we create a new one...\n  nodeMap.set(spanNode.id, spanNode);\n  return spanNode;\n}\n\n// canonicalCodesGrpcMap maps some GRPC codes to Sentry's span statuses. See description in grpc documentation.\nconst canonicalGrpcErrorCodesMap = {\n  '1': 'cancelled',\n  '2': 'unknown_error',\n  '3': 'invalid_argument',\n  '4': 'deadline_exceeded',\n  '5': 'not_found',\n  '6': 'already_exists',\n  '7': 'permission_denied',\n  '8': 'resource_exhausted',\n  '9': 'failed_precondition',\n  '10': 'aborted',\n  '11': 'out_of_range',\n  '12': 'unimplemented',\n  '13': 'internal_error',\n  '14': 'unavailable',\n  '15': 'data_loss',\n  '16': 'unauthenticated',\n} ;\n\nconst isStatusErrorMessageValid = (message) => {\n  return Object.values(canonicalGrpcErrorCodesMap).includes(message );\n};\n\n/**\n * Get a Sentry span status from an otel span.\n */\nfunction mapStatus(span) {\n  const attributes = spanHasAttributes(span) ? span.attributes : {};\n  const status = spanHasStatus(span) ? span.status : undefined;\n\n  if (status) {\n    // Since span status OK is not set by default, we give it priority: https://opentelemetry.io/docs/concepts/signals/traces/#span-status\n    if (status.code === SpanStatusCode.OK) {\n      return { code: SPAN_STATUS_OK };\n      // If the span is already marked as erroneous we return that exact status\n    } else if (status.code === SpanStatusCode.ERROR) {\n      if (typeof status.message === 'undefined') {\n        const inferredStatus = inferStatusFromAttributes(attributes);\n        if (inferredStatus) {\n          return inferredStatus;\n        }\n      }\n\n      if (status.message && isStatusErrorMessageValid(status.message)) {\n        return { code: SPAN_STATUS_ERROR, message: status.message };\n      } else {\n        return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n      }\n    }\n  }\n\n  // If the span status is UNSET, we try to infer it from HTTP or GRPC status codes.\n  const inferredStatus = inferStatusFromAttributes(attributes);\n\n  if (inferredStatus) {\n    return inferredStatus;\n  }\n\n  // We default to setting the spans status to ok.\n  if (status && status.code === SpanStatusCode.UNSET) {\n    return { code: SPAN_STATUS_OK };\n  } else {\n    return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n  }\n}\n\nfunction inferStatusFromAttributes(attributes) {\n  // If the span status is UNSET, we try to infer it from HTTP or GRPC status codes.\n\n  // eslint-disable-next-line deprecation/deprecation\n  const httpCodeAttribute = attributes[ATTR_HTTP_RESPONSE_STATUS_CODE] || attributes[SEMATTRS_HTTP_STATUS_CODE];\n  // eslint-disable-next-line deprecation/deprecation\n  const grpcCodeAttribute = attributes[SEMATTRS_RPC_GRPC_STATUS_CODE];\n\n  const numberHttpCode =\n    typeof httpCodeAttribute === 'number'\n      ? httpCodeAttribute\n      : typeof httpCodeAttribute === 'string'\n        ? parseInt(httpCodeAttribute)\n        : undefined;\n\n  if (typeof numberHttpCode === 'number') {\n    return getSpanStatusFromHttpCode(numberHttpCode);\n  }\n\n  if (typeof grpcCodeAttribute === 'string') {\n    return { code: SPAN_STATUS_ERROR, message: canonicalGrpcErrorCodesMap[grpcCodeAttribute] || 'unknown_error' };\n  }\n\n  return undefined;\n}\n\nfunction _optionalChain$2(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\nconst MAX_SPAN_COUNT = 1000;\nconst DEFAULT_TIMEOUT = 300; // 5 min\n\n/**\n * A Sentry-specific exporter that converts OpenTelemetry Spans to Sentry Spans & Transactions.\n */\nclass SentrySpanExporter {\n\n  /*\n   * A quick explanation on the buckets: We do bucketing of finished spans for efficiency. This span exporter is\n   * accumulating spans until a root span is encountered and then it flushes all the spans that are descendants of that\n   * root span. Because it is totally in the realm of possibilities that root spans are never finished, and we don't\n   * want to accumulate spans indefinitely in memory, we need to periodically evacuate spans. Naively we could simply\n   * store the spans in an array and each time a new span comes in we could iterate through the entire array and\n   * evacuate all spans that have an end-timestamp that is older than our limit. This could get quite expensive because\n   * we would have to iterate a potentially large number of spans every time we evacuate. We want to avoid these large\n   * bursts of computation.\n   *\n   * Instead we go for a bucketing approach and put spans into buckets, based on what second\n   * (modulo the time limit) the span was put into the exporter. With buckets, when we decide to evacuate, we can\n   * iterate through the bucket entries instead, which have an upper bound of items, making the evacuation much more\n   * efficient. Cleaning up also becomes much more efficient since it simply involves de-referencing a bucket within the\n   * bucket array, and letting garbage collection take care of the rest.\n   */\n\n   constructor(options\n\n) {\n    this._finishedSpanBucketSize = _optionalChain$2([options, 'optionalAccess', _ => _.timeout]) || DEFAULT_TIMEOUT;\n    this._finishedSpanBuckets = new Array(this._finishedSpanBucketSize).fill(undefined);\n    this._lastCleanupTimestampInS = Math.floor(Date.now() / 1000);\n    this._spansToBucketEntry = new WeakMap();\n  }\n\n  /** Export a single span. */\n   export(span) {\n    const currentTimestampInS = Math.floor(Date.now() / 1000);\n\n    if (this._lastCleanupTimestampInS !== currentTimestampInS) {\n      let droppedSpanCount = 0;\n      this._finishedSpanBuckets.forEach((bucket, i) => {\n        if (bucket && bucket.timestampInS <= currentTimestampInS - this._finishedSpanBucketSize) {\n          droppedSpanCount += bucket.spans.size;\n          this._finishedSpanBuckets[i] = undefined;\n        }\n      });\n      if (droppedSpanCount > 0) {\n        DEBUG_BUILD &&\n          logger.log(\n            `SpanExporter dropped ${droppedSpanCount} spans because they were pending for more than ${this._finishedSpanBucketSize} seconds.`,\n          );\n      }\n      this._lastCleanupTimestampInS = currentTimestampInS;\n    }\n\n    const currentBucketIndex = currentTimestampInS % this._finishedSpanBucketSize;\n    const currentBucket = this._finishedSpanBuckets[currentBucketIndex] || {\n      timestampInS: currentTimestampInS,\n      spans: new Set(),\n    };\n    this._finishedSpanBuckets[currentBucketIndex] = currentBucket;\n    currentBucket.spans.add(span);\n    this._spansToBucketEntry.set(span, currentBucket);\n\n    // If the span doesn't have a local parent ID (it's a root span), we're gonna flush all the ended spans\n    if (!getLocalParentId(span)) {\n      this._clearTimeout();\n\n      // If we got a parent span, we try to send the span tree\n      // Wait a tick for this, to ensure we avoid race conditions\n      this._flushTimeout = setTimeout(() => {\n        this.flush();\n      }, 1);\n    }\n  }\n\n  /** Try to flush any pending spans immediately. */\n   flush() {\n    this._clearTimeout();\n\n    const finishedSpans = [];\n    this._finishedSpanBuckets.forEach(bucket => {\n      if (bucket) {\n        finishedSpans.push(...bucket.spans);\n      }\n    });\n\n    const sentSpans = maybeSend(finishedSpans);\n\n    const sentSpanCount = sentSpans.size;\n\n    const remainingOpenSpanCount = finishedSpans.length - sentSpanCount;\n\n    DEBUG_BUILD &&\n      logger.log(\n        `SpanExporter exported ${sentSpanCount} spans, ${remainingOpenSpanCount} spans are waiting for their parent spans to finish`,\n      );\n\n    sentSpans.forEach(span => {\n      const bucketEntry = this._spansToBucketEntry.get(span);\n      if (bucketEntry) {\n        bucketEntry.spans.delete(span);\n      }\n    });\n  }\n\n  /** Clear the exporter. */\n   clear() {\n    this._finishedSpanBuckets = this._finishedSpanBuckets.fill(undefined);\n    this._clearTimeout();\n  }\n\n  /** Clear the flush timeout. */\n   _clearTimeout() {\n    if (this._flushTimeout) {\n      clearTimeout(this._flushTimeout);\n      this._flushTimeout = undefined;\n    }\n  }\n}\n\n/**\n * Send the given spans, but only if they are part of a finished transaction.\n *\n * Returns the sent spans.\n * Spans remain unsent when their parent span is not yet finished.\n * This will happen regularly, as child spans are generally finished before their parents.\n * But it _could_ also happen because, for whatever reason, a parent span was lost.\n * In this case, we'll eventually need to clean this up.\n */\nfunction maybeSend(spans) {\n  const grouped = groupSpansWithParents(spans);\n  const sentSpans = new Set();\n\n  const rootNodes = getCompletedRootNodes(grouped);\n\n  rootNodes.forEach(root => {\n    const span = root.span;\n    sentSpans.add(span);\n    const transactionEvent = createTransactionForOtelSpan(span);\n\n    // We'll recursively add all the child spans to this array\n    const spans = transactionEvent.spans || [];\n\n    root.children.forEach(child => {\n      createAndFinishSpanForOtelSpan(child, spans, sentSpans);\n    });\n\n    // spans.sort() mutates the array, but we do not use this anymore after this point\n    // so we can safely mutate it here\n    transactionEvent.spans =\n      spans.length > MAX_SPAN_COUNT\n        ? spans.sort((a, b) => a.start_timestamp - b.start_timestamp).slice(0, MAX_SPAN_COUNT)\n        : spans;\n\n    const measurements = timedEventsToMeasurements(span.events);\n    if (measurements) {\n      transactionEvent.measurements = measurements;\n    }\n\n    captureEvent(transactionEvent);\n  });\n\n  return sentSpans;\n}\n\nfunction nodeIsCompletedRootNode(node) {\n  return !!node.span && !node.parentNode;\n}\n\nfunction getCompletedRootNodes(nodes) {\n  return nodes.filter(nodeIsCompletedRootNode);\n}\n\nfunction parseSpan(span) {\n  const attributes = span.attributes;\n\n  const origin = attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ;\n  const op = attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] ;\n  const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ;\n\n  return { origin, op, source };\n}\n\n/** Exported only for tests. */\nfunction createTransactionForOtelSpan(span) {\n  const { op, description, data, origin = 'manual', source } = getSpanData(span);\n  const capturedSpanScopes = getCapturedScopesOnSpan(span );\n\n  const sampleRate = span.attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] ;\n\n  const attributes = dropUndefinedKeys({\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n    [SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE]: sampleRate,\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: op,\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: origin,\n    ...data,\n    ...removeSentryAttributes(span.attributes),\n  });\n\n  const { traceId: trace_id, spanId: span_id } = span.spanContext();\n\n  // If parentSpanIdFromTraceState is defined at all, we want it to take precedence\n  // In that case, an empty string should be interpreted as \"no parent span id\",\n  // even if `span.parentSpanId` is set\n  // this is the case when we are starting a new trace, where we have a virtual span based on the propagationContext\n  // We only want to continue the traceId in this case, but ignore the parent span\n  const parent_span_id = span.parentSpanId;\n\n  const status = mapStatus(span);\n\n  const traceContext = dropUndefinedKeys({\n    parent_span_id,\n    span_id,\n    trace_id,\n    data: attributes,\n    origin,\n    op,\n    status: getStatusMessage(status), // As per protocol, span status is allowed to be undefined\n  });\n\n  const statusCode = attributes[ATTR_HTTP_RESPONSE_STATUS_CODE];\n  const responseContext = typeof statusCode === 'number' ? { response: { status_code: statusCode } } : undefined;\n\n  const transactionEvent = dropUndefinedKeys({\n    contexts: {\n      trace: traceContext,\n      otel: {\n        resource: span.resource.attributes,\n      },\n      ...responseContext,\n    },\n    spans: [],\n    start_timestamp: spanTimeInputToSeconds(span.startTime),\n    timestamp: spanTimeInputToSeconds(span.endTime),\n    transaction: description,\n    type: 'transaction',\n    sdkProcessingMetadata: {\n      ...dropUndefinedKeys({\n        capturedSpanScope: capturedSpanScopes.scope,\n        capturedSpanIsolationScope: capturedSpanScopes.isolationScope,\n        sampleRate,\n        dynamicSamplingContext: getDynamicSamplingContextFromSpan(span ),\n      }),\n    },\n    ...(source && {\n      transaction_info: {\n        source,\n      },\n    }),\n    _metrics_summary: getMetricSummaryJsonForSpan(span ),\n  });\n\n  return transactionEvent;\n}\n\nfunction createAndFinishSpanForOtelSpan(node, spans, sentSpans) {\n  const span = node.span;\n\n  if (span) {\n    sentSpans.add(span);\n  }\n\n  const shouldDrop = !span;\n\n  // If this span should be dropped, we still want to create spans for the children of this\n  if (shouldDrop) {\n    node.children.forEach(child => {\n      createAndFinishSpanForOtelSpan(child, spans, sentSpans);\n    });\n    return;\n  }\n\n  const span_id = span.spanContext().spanId;\n  const trace_id = span.spanContext().traceId;\n\n  const { attributes, startTime, endTime, parentSpanId } = span;\n\n  const { op, description, data, origin = 'manual' } = getSpanData(span);\n  const allData = dropUndefinedKeys({\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: origin,\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: op,\n    ...removeSentryAttributes(attributes),\n    ...data,\n  });\n\n  const status = mapStatus(span);\n\n  const spanJSON = dropUndefinedKeys({\n    span_id,\n    trace_id,\n    data: allData,\n    description,\n    parent_span_id: parentSpanId,\n    start_timestamp: spanTimeInputToSeconds(startTime),\n    // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n    timestamp: spanTimeInputToSeconds(endTime) || undefined,\n    status: getStatusMessage(status), // As per protocol, span status is allowed to be undefined\n    op,\n    origin,\n    _metrics_summary: getMetricSummaryJsonForSpan(span ),\n    measurements: timedEventsToMeasurements(span.events),\n  });\n\n  spans.push(spanJSON);\n\n  node.children.forEach(child => {\n    createAndFinishSpanForOtelSpan(child, spans, sentSpans);\n  });\n}\n\nfunction getSpanData(span)\n\n {\n  const { op: definedOp, source: definedSource, origin } = parseSpan(span);\n  const { op: inferredOp, description, source: inferredSource, data: inferredData } = parseSpanDescription(span);\n\n  const op = definedOp || inferredOp;\n  const source = definedSource || inferredSource;\n\n  const data = { ...inferredData, ...getData(span) };\n\n  return {\n    op,\n    description,\n    source,\n    origin,\n    data,\n  };\n}\n\n/**\n * Remove custom `sentry.` attributes we do not need to send.\n * These are more carrier attributes we use inside of the SDK, we do not need to send them to the API.\n */\nfunction removeSentryAttributes(data) {\n  const cleanedData = { ...data };\n\n  /* eslint-disable @typescript-eslint/no-dynamic-delete */\n  delete cleanedData[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE];\n  delete cleanedData[SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE];\n  delete cleanedData[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n  /* eslint-enable @typescript-eslint/no-dynamic-delete */\n\n  return cleanedData;\n}\n\nfunction getData(span) {\n  const attributes = span.attributes;\n  const data = {};\n\n  if (span.kind !== SpanKind.INTERNAL) {\n    data['otel.kind'] = SpanKind[span.kind];\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const maybeHttpStatusCodeAttribute = attributes[SEMATTRS_HTTP_STATUS_CODE];\n  if (maybeHttpStatusCodeAttribute) {\n    data[ATTR_HTTP_RESPONSE_STATUS_CODE] = maybeHttpStatusCodeAttribute ;\n  }\n\n  const requestData = getRequestSpanData(span);\n\n  if (requestData.url) {\n    data.url = requestData.url;\n  }\n\n  if (requestData['http.query']) {\n    data['http.query'] = requestData['http.query'].slice(1);\n  }\n  if (requestData['http.fragment']) {\n    data['http.fragment'] = requestData['http.fragment'].slice(1);\n  }\n\n  return data;\n}\n\nfunction _optionalChain$1(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\nfunction onSpanStart(span, parentContext) {\n  // This is a reliable way to get the parent span - because this is exactly how the parent is identified in the OTEL SDK\n  const parentSpan = trace.getSpan(parentContext);\n\n  let scopes = getScopesFromContext(parentContext);\n\n  // We need access to the parent span in order to be able to move up the span tree for breadcrumbs\n  if (parentSpan && !parentSpan.spanContext().isRemote) {\n    addChildSpanToSpan(parentSpan, span);\n  }\n\n  // We need this in the span exporter\n  if (parentSpan && parentSpan.spanContext().isRemote) {\n    span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE, true);\n  }\n\n  // The root context does not have scopes stored, so we check for this specifically\n  // As fallback we attach the global scopes\n  if (parentContext === ROOT_CONTEXT) {\n    scopes = {\n      scope: getDefaultCurrentScope(),\n      isolationScope: getDefaultIsolationScope(),\n    };\n  }\n\n  // We need the scope at time of span creation in order to apply it to the event when the span is finished\n  if (scopes) {\n    setCapturedScopesOnSpan(span, scopes.scope, scopes.isolationScope);\n  }\n\n  logSpanStart(span);\n\n  const client = getClient();\n  _optionalChain$1([client, 'optionalAccess', _ => _.emit, 'call', _2 => _2('spanStart', span)]);\n}\n\nfunction onSpanEnd(span) {\n  logSpanEnd(span);\n\n  const client = getClient();\n  _optionalChain$1([client, 'optionalAccess', _3 => _3.emit, 'call', _4 => _4('spanEnd', span)]);\n}\n\n/**\n * Converts OpenTelemetry Spans to Sentry Spans and sends them to Sentry via\n * the Sentry SDK.\n */\nclass SentrySpanProcessor  {\n\n   constructor(options) {\n    setIsSetup('SentrySpanProcessor');\n    this._exporter = new SentrySpanExporter(options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   async forceFlush() {\n    this._exporter.flush();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   async shutdown() {\n    this._exporter.clear();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   onStart(span, parentContext) {\n    onSpanStart(span, parentContext);\n  }\n\n  /** @inheritDoc */\n   onEnd(span) {\n    onSpanEnd(span);\n\n    this._exporter.export(span);\n  }\n}\n\n/**\n * A custom OTEL sampler that uses Sentry sampling rates to make its decision\n */\nclass SentrySampler  {\n\n   constructor(client) {\n    this._client = client;\n    setIsSetup('SentrySampler');\n  }\n\n  /** @inheritDoc */\n   shouldSample(\n    context,\n    traceId,\n    spanName,\n    spanKind,\n    spanAttributes,\n    _links,\n  ) {\n    const options = this._client.getOptions();\n\n    const parentSpan = getValidSpan(context);\n    const parentContext = _optionalChain([parentSpan, 'optionalAccess', _ => _.spanContext, 'call', _2 => _2()]);\n\n    if (!hasTracingEnabled(options)) {\n      return wrapSamplingDecision({ decision: undefined, context, spanAttributes });\n    }\n\n    // `ATTR_HTTP_REQUEST_METHOD` is the new attribute, but we still support the old one, `SEMATTRS_HTTP_METHOD`, for now.\n    // eslint-disable-next-line deprecation/deprecation\n    const maybeSpanHttpMethod = spanAttributes[SEMATTRS_HTTP_METHOD] || spanAttributes[ATTR_HTTP_REQUEST_METHOD];\n\n    // If we have a http.client span that has no local parent, we never want to sample it\n    // but we want to leave downstream sampling decisions up to the server\n    if (spanKind === SpanKind.CLIENT && maybeSpanHttpMethod && (!parentSpan || _optionalChain([parentContext, 'optionalAccess', _3 => _3.isRemote]))) {\n      return wrapSamplingDecision({ decision: undefined, context, spanAttributes });\n    }\n\n    const parentSampled = parentSpan ? getParentSampled(parentSpan, traceId, spanName) : undefined;\n\n    // We want to pass the inferred name & attributes to the sampler method\n    const {\n      description: inferredSpanName,\n      data: inferredAttributes,\n      op,\n    } = inferSpanData(spanName, spanAttributes, spanKind);\n\n    const mergedAttributes = {\n      ...inferredAttributes,\n      ...spanAttributes,\n    };\n\n    if (op) {\n      mergedAttributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] = op;\n    }\n\n    const mutableSamplingDecision = { decision: true };\n    this._client.emit(\n      'beforeSampling',\n      {\n        spanAttributes: mergedAttributes,\n        spanName: inferredSpanName,\n        parentSampled: parentSampled,\n        parentContext: parentContext,\n      },\n      mutableSamplingDecision,\n    );\n    if (!mutableSamplingDecision.decision) {\n      return wrapSamplingDecision({ decision: undefined, context, spanAttributes });\n    }\n\n    const [sampled, sampleRate] = sampleSpan(options, {\n      name: inferredSpanName,\n      attributes: mergedAttributes,\n      transactionContext: {\n        name: inferredSpanName,\n        parentSampled,\n      },\n      parentSampled,\n    });\n\n    const attributes = {\n      [SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE]: sampleRate,\n    };\n\n    const method = `${maybeSpanHttpMethod}`.toUpperCase();\n    if (method === 'OPTIONS' || method === 'HEAD') {\n      DEBUG_BUILD && logger.log(`[Tracing] Not sampling span because HTTP method is '${method}' for ${spanName}`);\n\n      return {\n        ...wrapSamplingDecision({ decision: SamplingDecision.NOT_RECORD, context, spanAttributes }),\n        attributes,\n      };\n    }\n\n    if (!sampled) {\n      return {\n        ...wrapSamplingDecision({ decision: SamplingDecision.NOT_RECORD, context, spanAttributes }),\n        attributes,\n      };\n    }\n    return {\n      ...wrapSamplingDecision({ decision: SamplingDecision.RECORD_AND_SAMPLED, context, spanAttributes }),\n      attributes,\n    };\n  }\n\n  /** Returns the sampler name or short description with the configuration. */\n   toString() {\n    return 'SentrySampler';\n  }\n}\n\nfunction getParentRemoteSampled(parentSpan) {\n  const traceId = parentSpan.spanContext().traceId;\n  const traceparentData = getPropagationContextFromSpan(parentSpan);\n\n  // Only inherit sampled if `traceId` is the same\n  return traceparentData && traceId === traceparentData.traceId ? traceparentData.sampled : undefined;\n}\n\nfunction getParentSampled(parentSpan, traceId, spanName) {\n  const parentContext = parentSpan.spanContext();\n\n  // Only inherit sample rate if `traceId` is the same\n  // Note for testing: `isSpanContextValid()` checks the format of the traceId/spanId, so we need to pass valid ones\n  if (isSpanContextValid(parentContext) && parentContext.traceId === traceId) {\n    if (parentContext.isRemote) {\n      const parentSampled = getParentRemoteSampled(parentSpan);\n      DEBUG_BUILD &&\n        logger.log(`[Tracing] Inheriting remote parent's sampled decision for ${spanName}: ${parentSampled}`);\n      return parentSampled;\n    }\n\n    const parentSampled = getSamplingDecision(parentContext);\n    DEBUG_BUILD && logger.log(`[Tracing] Inheriting parent's sampled decision for ${spanName}: ${parentSampled}`);\n    return parentSampled;\n  }\n\n  return undefined;\n}\n\n/**\n * Wrap a sampling decision with data that Sentry needs to work properly with it.\n * If you pass `decision: undefined`, it will be treated as `NOT_RECORDING`, but in contrast to passing `NOT_RECORDING`\n * it will not propagate this decision to downstream Sentry SDKs.\n */\nfunction wrapSamplingDecision({\n  decision,\n  context,\n  spanAttributes,\n}) {\n  const traceState = getBaseTraceState(context, spanAttributes);\n\n  // If the decision is undefined, we treat it as NOT_RECORDING, but we don't propagate this decision to downstream SDKs\n  // Which is done by not setting `SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING` traceState\n  if (decision == undefined) {\n    return { decision: SamplingDecision.NOT_RECORD, traceState };\n  }\n\n  if (decision === SamplingDecision.NOT_RECORD) {\n    return { decision, traceState: traceState.set(SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING, '1') };\n  }\n\n  return { decision, traceState };\n}\n\nfunction getBaseTraceState(context, spanAttributes) {\n  const parentSpan = trace.getSpan(context);\n  const parentContext = _optionalChain([parentSpan, 'optionalAccess', _4 => _4.spanContext, 'call', _5 => _5()]);\n\n  let traceState = _optionalChain([parentContext, 'optionalAccess', _6 => _6.traceState]) || new TraceState();\n\n  // We always keep the URL on the trace state, so we can access it in the propagator\n  // `ATTR_URL_FULL` is the new attribute, but we still support the old one, `ATTR_HTTP_URL`, for now.\n  // eslint-disable-next-line deprecation/deprecation\n  const url = spanAttributes[SEMATTRS_HTTP_URL] || spanAttributes[ATTR_URL_FULL];\n  if (url && typeof url === 'string') {\n    traceState = traceState.set(SENTRY_TRACE_STATE_URL, url);\n  }\n\n  return traceState;\n}\n\n/**\n * If the active span is invalid, we want to ignore it as parent.\n * This aligns with how otel tracers and default samplers handle these cases.\n */\nfunction getValidSpan(context) {\n  const span = trace.getSpan(context);\n  return span && isSpanContextValid(span.spanContext()) ? span : undefined;\n}\n\n/**\n * This method takes an OpenTelemetry instrumentation or\n * array of instrumentations and registers them with OpenTelemetry.\n *\n * @deprecated This method will be removed in the next major version of the SDK.\n * Use the `openTelemetryInstrumentations` option in `Sentry.init()` or your custom Sentry Client instead.\n */\nfunction addOpenTelemetryInstrumentation(...instrumentations) {\n  registerInstrumentations({\n    instrumentations,\n  });\n}\n\nexport { SEMANTIC_ATTRIBUTE_SENTRY_GRAPHQL_OPERATION, SentryPropagator, SentrySampler, SentrySpanProcessor, addOpenTelemetryInstrumentation, continueTrace, enhanceDscWithOpenTelemetryRootSpanName, generateSpanContextForPropagationContext, getActiveSpan, getPropagationContextFromSpan, getRequestSpanData, getScopesFromContext, getSpanKind, getTraceContextForScope, isSentryRequestSpan, openTelemetrySetupCheck, setOpenTelemetryContextAsyncContextStrategy, setupEventContextTrace, shouldPropagateTraceForUrl, spanHasAttributes, spanHasEvents, spanHasKind, spanHasName, spanHasParentId, spanHasStatus, startInactiveSpan, startSpan, startSpanManual, suppressTracing, withActiveSpan, wrapClientClass, wrapContextManagerClass, wrapSamplingDecision };\n//# sourceMappingURL=index.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = '0.9.0';\nexports.PACKAGE_NAME = '@opentelemetry/instrumentation-undici';\n//# sourceMappingURL=version.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticAttributes = void 0;\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexports.SemanticAttributes = {\n    /**\n     * State of the HTTP connection in the HTTP connection pool.\n     */\n    HTTP_CONNECTION_STATE: 'http.connection.state',\n    /**\n    * Describes a class of error the operation ended with.\n    *\n    * Note: The `error.type` SHOULD be predictable and SHOULD have low cardinality.\n  Instrumentations SHOULD document the list of errors they report.\n  \n  The cardinality of `error.type` within one instrumentation library SHOULD be low.\n  Telemetry consumers that aggregate data from multiple instrumentation libraries and applications\n  should be prepared for `error.type` to have high cardinality at query time when no\n  additional filters are applied.\n  \n  If the operation has completed successfully, instrumentations SHOULD NOT set `error.type`.\n  \n  If a specific domain defines its own set of error identifiers (such as HTTP or gRPC status codes),\n  it&#39;s RECOMMENDED to:\n  \n  * Use a domain-specific attribute\n  * Set `error.type` to capture all errors, regardless of whether they are defined within the domain-specific set or not.\n    */\n    ERROR_TYPE: 'error.type',\n    /**\n     * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_REQUEST_BODY_SIZE: 'http.request.body.size',\n    /**\n    * HTTP request method.\n    *\n    * Note: HTTP request method value SHOULD be &#34;known&#34; to the instrumentation.\n  By default, this convention defines &#34;known&#34; methods as the ones listed in [RFC9110](https://www.rfc-editor.org/rfc/rfc9110.html#name-methods)\n  and the PATCH method defined in [RFC5789](https://www.rfc-editor.org/rfc/rfc5789.html).\n  \n  If the HTTP request method is not known to instrumentation, it MUST set the `http.request.method` attribute to `_OTHER`.\n  \n  If the HTTP instrumentation could end up converting valid HTTP request methods to `_OTHER`, then it MUST provide a way to override\n  the list of known HTTP methods. If this override is done via environment variable, then the environment variable MUST be named\n  OTEL_INSTRUMENTATION_HTTP_KNOWN_METHODS and support a comma-separated list of case-sensitive known HTTP methods\n  (this list MUST be a full override of the default known method, it is not a list of known methods in addition to the defaults).\n  \n  HTTP method names are case-sensitive and `http.request.method` attribute value MUST match a known HTTP method name exactly.\n  Instrumentations for specific web frameworks that consider HTTP methods to be case insensitive, SHOULD populate a canonical equivalent.\n  Tracing instrumentations that do so, MUST also set `http.request.method_original` to the original value.\n    */\n    HTTP_REQUEST_METHOD: 'http.request.method',\n    /**\n     * Original HTTP method sent by the client in the request line.\n     */\n    HTTP_REQUEST_METHOD_ORIGINAL: 'http.request.method_original',\n    /**\n     * The ordinal number of request resending attempt (for any reason, including redirects).\n     *\n     * Note: The resend count SHOULD be updated each time an HTTP request gets resent by the client, regardless of what was the cause of the resending (e.g. redirection, authorization failure, 503 Server Unavailable, network issues, or any other).\n     */\n    HTTP_REQUEST_RESEND_COUNT: 'http.request.resend_count',\n    /**\n     * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_RESPONSE_BODY_SIZE: 'http.response.body.size',\n    /**\n     * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n     */\n    HTTP_RESPONSE_STATUS_CODE: 'http.response.status_code',\n    /**\n    * The matched route, that is, the path template in the format used by the respective server framework.\n    *\n    * Note: MUST NOT be populated when this is not supported by the HTTP server framework as the route attribute should have low-cardinality and the URI path can NOT substitute it.\n  SHOULD include the [application root](/docs/http/http-spans.md#http-server-definitions) if there is one.\n    */\n    HTTP_ROUTE: 'http.route',\n    /**\n     * Peer address of the network connection - IP address or Unix domain socket name.\n     */\n    NETWORK_PEER_ADDRESS: 'network.peer.address',\n    /**\n     * Peer port number of the network connection.\n     */\n    NETWORK_PEER_PORT: 'network.peer.port',\n    /**\n     * [OSI application layer](https://osi-model.com/application-layer/) or non-OSI equivalent.\n     *\n     * Note: The value SHOULD be normalized to lowercase.\n     */\n    NETWORK_PROTOCOL_NAME: 'network.protocol.name',\n    /**\n     * Version of the protocol specified in `network.protocol.name`.\n     *\n     * Note: `network.protocol.version` refers to the version of the protocol used and might be different from the protocol client&#39;s version. If the HTTP client has a version of `0.27.2`, but sends HTTP version `1.1`, this attribute should be set to `1.1`.\n     */\n    NETWORK_PROTOCOL_VERSION: 'network.protocol.version',\n    /**\n     * Server domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n     *\n     * Note: When observed from the client side, and when communicating through an intermediary, `server.address` SHOULD represent the server address behind any intermediaries, for example proxies, if it&#39;s available.\n     */\n    SERVER_ADDRESS: 'server.address',\n    /**\n     * Server port number.\n     *\n     * Note: When observed from the client side, and when communicating through an intermediary, `server.port` SHOULD represent the server port behind any intermediaries, for example proxies, if it&#39;s available.\n     */\n    SERVER_PORT: 'server.port',\n    /**\n    * Absolute URL describing a network resource according to [RFC3986](https://www.rfc-editor.org/rfc/rfc3986).\n    *\n    * Note: For network calls, URL usually has `scheme://host[:port][path][?query][#fragment]` format, where the fragment is not transmitted over HTTP, but if it is known, it SHOULD be included nevertheless.\n  `url.full` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case username and password SHOULD be redacted and attribute&#39;s value SHOULD be `https://REDACTED:REDACTED@www.example.com/`.\n  `url.full` SHOULD capture the absolute URL when it is available (or can be reconstructed) and SHOULD NOT be validated or modified except for sanitizing purposes.\n    */\n    URL_FULL: 'url.full',\n    /**\n     * The [URI path](https://www.rfc-editor.org/rfc/rfc3986#section-3.3) component.\n     */\n    URL_PATH: 'url.path',\n    /**\n     * The [URI query](https://www.rfc-editor.org/rfc/rfc3986#section-3.4) component.\n     *\n     * Note: Sensitive content provided in query string SHOULD be scrubbed when instrumentations can identify it.\n     */\n    URL_QUERY: 'url.query',\n    /**\n     * The [URI scheme](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) component identifying the used protocol.\n     */\n    URL_SCHEME: 'url.scheme',\n    /**\n     * Value of the [HTTP User-Agent](https://www.rfc-editor.org/rfc/rfc9110.html#field.user-agent) header sent by the client.\n     */\n    USER_AGENT_ORIGINAL: 'user_agent.original',\n};\n//# sourceMappingURL=SemanticAttributes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UndiciInstrumentation = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst diagch = require(\"diagnostics_channel\");\nconst url_1 = require(\"url\");\nconst instrumentation_1 = require(\"@opentelemetry/instrumentation\");\nconst api_1 = require(\"@opentelemetry/api\");\n/** @knipignore */\nconst version_1 = require(\"./version\");\nconst SemanticAttributes_1 = require(\"./enums/SemanticAttributes\");\nconst core_1 = require(\"@opentelemetry/core\");\n// A combination of https://github.com/elastic/apm-agent-nodejs and\n// https://github.com/gadget-inc/opentelemetry-instrumentations/blob/main/packages/opentelemetry-instrumentation-undici/src/index.ts\nclass UndiciInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n        this._recordFromReq = new WeakMap();\n    }\n    // No need to instrument files/modules\n    init() {\n        return undefined;\n    }\n    disable() {\n        super.disable();\n        this._channelSubs.forEach(sub => sub.unsubscribe());\n        this._channelSubs.length = 0;\n    }\n    enable() {\n        // \"enabled\" handling is currently a bit messy with InstrumentationBase.\n        // If constructed with `{enabled: false}`, this `.enable()` is still called,\n        // and `this.getConfig().enabled !== this.isEnabled()`, creating confusion.\n        //\n        // For now, this class will setup for instrumenting if `.enable()` is\n        // called, but use `this.getConfig().enabled` to determine if\n        // instrumentation should be generated. This covers the more likely common\n        // case of config being given a construction time, rather than later via\n        // `instance.enable()`, `.disable()`, or `.setConfig()` calls.\n        super.enable();\n        // This method is called by the super-class constructor before ours is\n        // called. So we need to ensure the property is initalized.\n        this._channelSubs = this._channelSubs || [];\n        // Avoid to duplicate subscriptions\n        if (this._channelSubs.length > 0) {\n            return;\n        }\n        this.subscribeToChannel('undici:request:create', this.onRequestCreated.bind(this));\n        this.subscribeToChannel('undici:client:sendHeaders', this.onRequestHeaders.bind(this));\n        this.subscribeToChannel('undici:request:headers', this.onResponseHeaders.bind(this));\n        this.subscribeToChannel('undici:request:trailers', this.onDone.bind(this));\n        this.subscribeToChannel('undici:request:error', this.onError.bind(this));\n    }\n    _updateMetricInstruments() {\n        this._httpClientDurationHistogram = this.meter.createHistogram('http.client.request.duration', {\n            description: 'Measures the duration of outbound HTTP requests.',\n            unit: 's',\n            valueType: api_1.ValueType.DOUBLE,\n            advice: {\n                explicitBucketBoundaries: [\n                    0.005, 0.01, 0.025, 0.05, 0.075, 0.1, 0.25, 0.5, 0.75, 1, 2.5, 5,\n                    7.5, 10,\n                ],\n            },\n        });\n    }\n    subscribeToChannel(diagnosticChannel, onMessage) {\n        var _a;\n        // `diagnostics_channel` had a ref counting bug until v18.19.0.\n        // https://github.com/nodejs/node/pull/47520\n        const [major, minor] = process.version\n            .replace('v', '')\n            .split('.')\n            .map(n => Number(n));\n        const useNewSubscribe = major > 18 || (major === 18 && minor >= 19);\n        let unsubscribe;\n        if (useNewSubscribe) {\n            (_a = diagch.subscribe) === null || _a === void 0 ? void 0 : _a.call(diagch, diagnosticChannel, onMessage);\n            unsubscribe = () => { var _a; return (_a = diagch.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(diagch, diagnosticChannel, onMessage); };\n        }\n        else {\n            const channel = diagch.channel(diagnosticChannel);\n            channel.subscribe(onMessage);\n            unsubscribe = () => channel.unsubscribe(onMessage);\n        }\n        this._channelSubs.push({\n            name: diagnosticChannel,\n            unsubscribe,\n        });\n    }\n    // This is the 1st message we receive for each request (fired after request creation). Here we will\n    // create the span and populate some atttributes, then link the span to the request for further\n    // span processing\n    onRequestCreated({ request }) {\n        // Ignore if:\n        // - instrumentation is disabled\n        // - ignored by config\n        // - method is 'CONNECT'\n        const config = this.getConfig();\n        const enabled = config.enabled !== false;\n        const shouldIgnoreReq = (0, instrumentation_1.safeExecuteInTheMiddle)(() => {\n            var _a;\n            return !enabled ||\n                request.method === 'CONNECT' ||\n                ((_a = config.ignoreRequestHook) === null || _a === void 0 ? void 0 : _a.call(config, request));\n        }, e => e && this._diag.error('caught ignoreRequestHook error: ', e), true);\n        if (shouldIgnoreReq) {\n            return;\n        }\n        const startTime = (0, core_1.hrTime)();\n        let requestUrl;\n        try {\n            requestUrl = new url_1.URL(request.path, request.origin);\n        }\n        catch (err) {\n            this._diag.warn('could not determine url.full:', err);\n            // Skip instrumenting this request.\n            return;\n        }\n        const urlScheme = requestUrl.protocol.replace(':', '');\n        const requestMethod = this.getRequestMethod(request.method);\n        const attributes = {\n            [SemanticAttributes_1.SemanticAttributes.HTTP_REQUEST_METHOD]: requestMethod,\n            [SemanticAttributes_1.SemanticAttributes.HTTP_REQUEST_METHOD_ORIGINAL]: request.method,\n            [SemanticAttributes_1.SemanticAttributes.URL_FULL]: requestUrl.toString(),\n            [SemanticAttributes_1.SemanticAttributes.URL_PATH]: requestUrl.pathname,\n            [SemanticAttributes_1.SemanticAttributes.URL_QUERY]: requestUrl.search,\n            [SemanticAttributes_1.SemanticAttributes.URL_SCHEME]: urlScheme,\n        };\n        const schemePorts = { https: '443', http: '80' };\n        const serverAddress = requestUrl.hostname;\n        const serverPort = requestUrl.port || schemePorts[urlScheme];\n        attributes[SemanticAttributes_1.SemanticAttributes.SERVER_ADDRESS] = serverAddress;\n        if (serverPort && !isNaN(Number(serverPort))) {\n            attributes[SemanticAttributes_1.SemanticAttributes.SERVER_PORT] = Number(serverPort);\n        }\n        // Get user agent from headers\n        let userAgent;\n        if (Array.isArray(request.headers)) {\n            const idx = request.headers.findIndex(h => h.toLowerCase() === 'user-agent');\n            if (idx >= 0) {\n                userAgent = request.headers[idx + 1];\n            }\n        }\n        else if (typeof request.headers === 'string') {\n            const headers = request.headers.split('\\r\\n');\n            const uaHeader = headers.find(h => h.toLowerCase().startsWith('user-agent'));\n            userAgent =\n                uaHeader && uaHeader.substring(uaHeader.indexOf(':') + 1).trim();\n        }\n        if (userAgent) {\n            attributes[SemanticAttributes_1.SemanticAttributes.USER_AGENT_ORIGINAL] = userAgent;\n        }\n        // Get attributes from the hook if present\n        const hookAttributes = (0, instrumentation_1.safeExecuteInTheMiddle)(() => { var _a; return (_a = config.startSpanHook) === null || _a === void 0 ? void 0 : _a.call(config, request); }, e => e && this._diag.error('caught startSpanHook error: ', e), true);\n        if (hookAttributes) {\n            Object.entries(hookAttributes).forEach(([key, val]) => {\n                attributes[key] = val;\n            });\n        }\n        // Check if parent span is required via config and:\n        // - if a parent is required but not present, we use a `NoopSpan` to still\n        //   propagate context without recording it.\n        // - create a span otherwise\n        const activeCtx = api_1.context.active();\n        const currentSpan = api_1.trace.getSpan(activeCtx);\n        let span;\n        if (config.requireParentforSpans &&\n            (!currentSpan || !api_1.trace.isSpanContextValid(currentSpan.spanContext()))) {\n            span = api_1.trace.wrapSpanContext(api_1.INVALID_SPAN_CONTEXT);\n        }\n        else {\n            span = this.tracer.startSpan(requestMethod === '_OTHER' ? 'HTTP' : requestMethod, {\n                kind: api_1.SpanKind.CLIENT,\n                attributes: attributes,\n            }, activeCtx);\n        }\n        // Execute the request hook if defined\n        (0, instrumentation_1.safeExecuteInTheMiddle)(() => { var _a; return (_a = config.requestHook) === null || _a === void 0 ? void 0 : _a.call(config, span, request); }, e => e && this._diag.error('caught requestHook error: ', e), true);\n        // Context propagation goes last so no hook can tamper\n        // the propagation headers\n        const requestContext = api_1.trace.setSpan(api_1.context.active(), span);\n        const addedHeaders = {};\n        api_1.propagation.inject(requestContext, addedHeaders);\n        const headerEntries = Object.entries(addedHeaders);\n        for (let i = 0; i < headerEntries.length; i++) {\n            const [k, v] = headerEntries[i];\n            if (typeof request.addHeader === 'function') {\n                request.addHeader(k, v);\n            }\n            else if (typeof request.headers === 'string') {\n                request.headers += `${k}: ${v}\\r\\n`;\n            }\n            else if (Array.isArray(request.headers)) {\n                // undici@6.11.0 accidentally, briefly removed `request.addHeader()`.\n                request.headers.push(k, v);\n            }\n        }\n        this._recordFromReq.set(request, { span, attributes, startTime });\n    }\n    // This is the 2nd message we receive for each request. It is fired when connection with\n    // the remote is established and about to send the first byte. Here we do have info about the\n    // remote address and port so we can populate some `network.*` attributes into the span\n    onRequestHeaders({ request, socket }) {\n        var _a;\n        const record = this._recordFromReq.get(request);\n        if (!record) {\n            return;\n        }\n        const config = this.getConfig();\n        const { span } = record;\n        const { remoteAddress, remotePort } = socket;\n        const spanAttributes = {\n            [SemanticAttributes_1.SemanticAttributes.NETWORK_PEER_ADDRESS]: remoteAddress,\n            [SemanticAttributes_1.SemanticAttributes.NETWORK_PEER_PORT]: remotePort,\n        };\n        // After hooks have been processed (which may modify request headers)\n        // we can collect the headers based on the configuration\n        if ((_a = config.headersToSpanAttributes) === null || _a === void 0 ? void 0 : _a.requestHeaders) {\n            const headersToAttribs = new Set(config.headersToSpanAttributes.requestHeaders.map(n => n.toLowerCase()));\n            // headers could be in form\n            // ['name: value', ...] for v5\n            // ['name', 'value', ...] for v6\n            const rawHeaders = Array.isArray(request.headers)\n                ? request.headers\n                : request.headers.split('\\r\\n');\n            rawHeaders.forEach((h, idx) => {\n                const sepIndex = h.indexOf(':');\n                const hasSeparator = sepIndex !== -1;\n                const name = (hasSeparator ? h.substring(0, sepIndex) : h).toLowerCase();\n                const value = hasSeparator\n                    ? h.substring(sepIndex + 1)\n                    : rawHeaders[idx + 1];\n                if (headersToAttribs.has(name)) {\n                    spanAttributes[`http.request.header.${name}`] = value.trim();\n                }\n            });\n        }\n        span.setAttributes(spanAttributes);\n    }\n    // This is the 3rd message we get for each request and it's fired when the server\n    // headers are received, body may not be accessible yet.\n    // From the response headers we can set the status and content length\n    onResponseHeaders({ request, response, }) {\n        var _a, _b;\n        const record = this._recordFromReq.get(request);\n        if (!record) {\n            return;\n        }\n        const { span, attributes } = record;\n        const spanAttributes = {\n            [SemanticAttributes_1.SemanticAttributes.HTTP_RESPONSE_STATUS_CODE]: response.statusCode,\n        };\n        const config = this.getConfig();\n        // Execute the response hook if defined\n        (0, instrumentation_1.safeExecuteInTheMiddle)(() => { var _a; return (_a = config.responseHook) === null || _a === void 0 ? void 0 : _a.call(config, span, { request, response }); }, e => e && this._diag.error('caught responseHook error: ', e), true);\n        const headersToAttribs = new Set();\n        if ((_a = config.headersToSpanAttributes) === null || _a === void 0 ? void 0 : _a.responseHeaders) {\n            (_b = config.headersToSpanAttributes) === null || _b === void 0 ? void 0 : _b.responseHeaders.forEach(name => headersToAttribs.add(name.toLowerCase()));\n        }\n        for (let idx = 0; idx < response.headers.length; idx = idx + 2) {\n            const name = response.headers[idx].toString().toLowerCase();\n            const value = response.headers[idx + 1];\n            if (headersToAttribs.has(name)) {\n                spanAttributes[`http.response.header.${name}`] = value.toString();\n            }\n            if (name === 'content-length') {\n                const contentLength = Number(value.toString());\n                if (!isNaN(contentLength)) {\n                    spanAttributes['http.response.header.content-length'] = contentLength;\n                }\n            }\n        }\n        span.setAttributes(spanAttributes);\n        span.setStatus({\n            code: response.statusCode >= 400\n                ? api_1.SpanStatusCode.ERROR\n                : api_1.SpanStatusCode.UNSET,\n        });\n        record.attributes = Object.assign(attributes, spanAttributes);\n    }\n    // This is the last event we receive if the request went without any errors\n    onDone({ request }) {\n        const record = this._recordFromReq.get(request);\n        if (!record) {\n            return;\n        }\n        const { span, attributes, startTime } = record;\n        // End the span\n        span.end();\n        this._recordFromReq.delete(request);\n        // Record metrics\n        this.recordRequestDuration(attributes, startTime);\n    }\n    // This is the event we get when something is wrong in the request like\n    // - invalid options when calling `fetch` global API or any undici method for request\n    // - connectivity errors such as unreachable host\n    // - requests aborted through an `AbortController.signal`\n    // NOTE: server errors are considered valid responses and it's the lib consumer\n    // who should deal with that.\n    onError({ request, error }) {\n        const record = this._recordFromReq.get(request);\n        if (!record) {\n            return;\n        }\n        const { span, attributes, startTime } = record;\n        // NOTE: in `undici@6.3.0` when request aborted the error type changes from\n        // a custom error (`RequestAbortedError`) to a built-in `DOMException` carrying\n        // some differences:\n        // - `code` is from DOMEXception (ABORT_ERR: 20)\n        // - `message` changes\n        // - stacktrace is smaller and contains node internal frames\n        span.recordException(error);\n        span.setStatus({\n            code: api_1.SpanStatusCode.ERROR,\n            message: error.message,\n        });\n        span.end();\n        this._recordFromReq.delete(request);\n        // Record metrics (with the error)\n        attributes[SemanticAttributes_1.SemanticAttributes.ERROR_TYPE] = error.message;\n        this.recordRequestDuration(attributes, startTime);\n    }\n    recordRequestDuration(attributes, startTime) {\n        // Time to record metrics\n        const metricsAttributes = {};\n        // Get the attribs already in span attributes\n        const keysToCopy = [\n            SemanticAttributes_1.SemanticAttributes.HTTP_RESPONSE_STATUS_CODE,\n            SemanticAttributes_1.SemanticAttributes.HTTP_REQUEST_METHOD,\n            SemanticAttributes_1.SemanticAttributes.SERVER_ADDRESS,\n            SemanticAttributes_1.SemanticAttributes.SERVER_PORT,\n            SemanticAttributes_1.SemanticAttributes.URL_SCHEME,\n            SemanticAttributes_1.SemanticAttributes.ERROR_TYPE,\n        ];\n        keysToCopy.forEach(key => {\n            if (key in attributes) {\n                metricsAttributes[key] = attributes[key];\n            }\n        });\n        // Take the duration and record it\n        const durationSeconds = (0, core_1.hrTimeToMilliseconds)((0, core_1.hrTimeDuration)(startTime, (0, core_1.hrTime)())) / 1000;\n        this._httpClientDurationHistogram.record(durationSeconds, metricsAttributes);\n    }\n    getRequestMethod(original) {\n        const knownMethods = {\n            CONNECT: true,\n            OPTIONS: true,\n            HEAD: true,\n            GET: true,\n            POST: true,\n            PUT: true,\n            PATCH: true,\n            DELETE: true,\n            TRACE: true,\n        };\n        if (original.toUpperCase() in knownMethods) {\n            return original.toUpperCase();\n        }\n        return '_OTHER';\n    }\n}\nexports.UndiciInstrumentation = UndiciInstrumentation;\n//# sourceMappingURL=undici.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./undici\"), exports);\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","import { _optionalChain } from '@sentry/core';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { UndiciInstrumentation } from '@opentelemetry/instrumentation-undici';\nimport { defineIntegration, LRUMap, hasTracingEnabled, getTraceData, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getBreadcrumbLogLevelFromHttpStatusCode, addBreadcrumb, parseUrl, getSanitizedUrlString, getClient } from '@sentry/core';\nimport { shouldPropagateTraceForUrl } from '@sentry/opentelemetry';\n\nconst _nativeNodeFetchIntegration = ((options = {}) => {\n  const _breadcrumbs = typeof options.breadcrumbs === 'undefined' ? true : options.breadcrumbs;\n  const _ignoreOutgoingRequests = options.ignoreOutgoingRequests;\n\n  return {\n    name: 'NodeFetch',\n    setupOnce() {\n      const propagationDecisionMap = new LRUMap(100);\n\n      const instrumentation = new UndiciInstrumentation({\n        requireParentforSpans: false,\n        ignoreRequestHook: request => {\n          const url = getAbsoluteUrl(request.origin, request.path);\n          const shouldIgnore = _ignoreOutgoingRequests && url && _ignoreOutgoingRequests(url);\n\n          if (shouldIgnore) {\n            return true;\n          }\n\n          // If tracing is disabled, we still want to propagate traces\n          // So we do that manually here, matching what the instrumentation does otherwise\n          if (!hasTracingEnabled()) {\n            const tracePropagationTargets = _optionalChain([getClient, 'call', _2 => _2(), 'optionalAccess', _3 => _3.getOptions, 'call', _4 => _4(), 'access', _5 => _5.tracePropagationTargets]);\n            const addedHeaders = shouldPropagateTraceForUrl(url, tracePropagationTargets, propagationDecisionMap)\n              ? getTraceData()\n              : {};\n\n            const requestHeaders = request.headers;\n            if (Array.isArray(requestHeaders)) {\n              Object.entries(addedHeaders).forEach(headers => requestHeaders.push(...headers));\n            } else {\n              request.headers += Object.entries(addedHeaders)\n                .map(([k, v]) => `${k}: ${v}\\r\\n`)\n                .join('');\n            }\n\n            // Prevent starting a span for this request\n            return true;\n          }\n\n          return false;\n        },\n        startSpanHook: () => {\n          return {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.node_fetch',\n          };\n        },\n        responseHook: (_, { request, response }) => {\n          if (_breadcrumbs) {\n            addRequestBreadcrumb(request, response);\n          }\n        },\n      });\n\n      registerInstrumentations({ instrumentations: [instrumentation] });\n    },\n  };\n}) ;\n\nconst nativeNodeFetchIntegration = defineIntegration(_nativeNodeFetchIntegration);\n\n/** Add a breadcrumb for outgoing requests. */\nfunction addRequestBreadcrumb(request, response) {\n  const data = getBreadcrumbData(request);\n  const statusCode = response.statusCode;\n  const level = getBreadcrumbLogLevelFromHttpStatusCode(statusCode);\n\n  addBreadcrumb(\n    {\n      category: 'http',\n      data: {\n        status_code: statusCode,\n        ...data,\n      },\n      type: 'http',\n      level,\n    },\n    {\n      event: 'response',\n      request,\n      response,\n    },\n  );\n}\n\nfunction getBreadcrumbData(request) {\n  try {\n    const url = new URL(request.path, request.origin);\n    const parsedUrl = parseUrl(url.toString());\n\n    const data = {\n      url: getSanitizedUrlString(parsedUrl),\n      'http.method': request.method || 'GET',\n    };\n\n    if (parsedUrl.search) {\n      data['http.query'] = parsedUrl.search;\n    }\n    if (parsedUrl.hash) {\n      data['http.fragment'] = parsedUrl.hash;\n    }\n\n    return data;\n  } catch (e) {\n    return {};\n  }\n}\n\n// Matching the behavior of the base instrumentation\nfunction getAbsoluteUrl(origin, path = '/') {\n  const url = `${origin}`;\n\n  if (url.endsWith('/') && path.startsWith('/')) {\n    return `${url}${path.slice(1)}`;\n  }\n\n  if (!url.endsWith('/') && !path.startsWith('/')) {\n    return `${url}/${path.slice(1)}`;\n  }\n\n  return `${url}${path}`;\n}\n\nexport { nativeNodeFetchIntegration };\n//# sourceMappingURL=node-fetch.js.map\n","import * as util from 'node:util';\nimport { defineIntegration, addConsoleInstrumentationHandler, getClient, addBreadcrumb, severityLevelFromString, truncate } from '@sentry/core';\n\nconst INTEGRATION_NAME = 'Console';\n\n/**\n * Capture console logs as breadcrumbs.\n */\nconst consoleIntegration = defineIntegration(() => {\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        addBreadcrumb(\n          {\n            category: 'console',\n            level: severityLevelFromString(level),\n            message: truncate(util.format.apply(undefined, args), 2048), // 2KB\n          },\n          {\n            input: [...args],\n            level,\n          },\n        );\n      });\n    },\n  };\n});\n\nexport { consoleIntegration };\n//# sourceMappingURL=console.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { execFile } from 'node:child_process';\nimport { readFile, readdir } from 'node:fs';\nimport * as os from 'node:os';\nimport { join } from 'node:path';\nimport { promisify } from 'node:util';\nimport { defineIntegration } from '@sentry/core';\n\n/* eslint-disable max-lines */\n\nconst readFileAsync = promisify(readFile);\nconst readDirAsync = promisify(readdir);\n\n// Process enhanced with methods from Node 18, 20, 22 as @types/node\n// is on `14.18.0` to match minimum version requirements of the SDK\n\nconst INTEGRATION_NAME = 'Context';\n\nconst _nodeContextIntegration = ((options = {}) => {\n  let cachedContext;\n\n  const _options = {\n    app: true,\n    os: true,\n    device: true,\n    culture: true,\n    cloudResource: true,\n    ...options,\n  };\n\n  /** Add contexts to the event. Caches the context so we only look it up once. */\n  async function addContext(event) {\n    if (cachedContext === undefined) {\n      cachedContext = _getContexts();\n    }\n\n    const updatedContext = _updateContext(await cachedContext);\n\n    event.contexts = {\n      ...event.contexts,\n      app: { ...updatedContext.app, ..._optionalChain([event, 'access', _ => _.contexts, 'optionalAccess', _2 => _2.app]) },\n      os: { ...updatedContext.os, ..._optionalChain([event, 'access', _3 => _3.contexts, 'optionalAccess', _4 => _4.os]) },\n      device: { ...updatedContext.device, ..._optionalChain([event, 'access', _5 => _5.contexts, 'optionalAccess', _6 => _6.device]) },\n      culture: { ...updatedContext.culture, ..._optionalChain([event, 'access', _7 => _7.contexts, 'optionalAccess', _8 => _8.culture]) },\n      cloud_resource: { ...updatedContext.cloud_resource, ..._optionalChain([event, 'access', _9 => _9.contexts, 'optionalAccess', _10 => _10.cloud_resource]) },\n    };\n\n    return event;\n  }\n\n  /** Get the contexts from node. */\n  async function _getContexts() {\n    const contexts = {};\n\n    if (_options.os) {\n      contexts.os = await getOsContext();\n    }\n\n    if (_options.app) {\n      contexts.app = getAppContext();\n    }\n\n    if (_options.device) {\n      contexts.device = getDeviceContext(_options.device);\n    }\n\n    if (_options.culture) {\n      const culture = getCultureContext();\n\n      if (culture) {\n        contexts.culture = culture;\n      }\n    }\n\n    if (_options.cloudResource) {\n      contexts.cloud_resource = getCloudResourceContext();\n    }\n\n    return contexts;\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      return addContext(event);\n    },\n  };\n}) ;\n\n/**\n * Capture context about the environment and the device that the client is running on, to events.\n */\nconst nodeContextIntegration = defineIntegration(_nodeContextIntegration);\n\n/**\n * Updates the context with dynamic values that can change\n */\nfunction _updateContext(contexts) {\n  // Only update properties if they exist\n\n  if (_optionalChain([contexts, 'optionalAccess', _11 => _11.app, 'optionalAccess', _12 => _12.app_memory])) {\n    contexts.app.app_memory = process.memoryUsage().rss;\n  }\n\n  if (_optionalChain([contexts, 'optionalAccess', _13 => _13.app, 'optionalAccess', _14 => _14.free_memory]) && typeof (process ).availableMemory === 'function') {\n    const freeMemory = _optionalChain([(process ), 'access', _15 => _15.availableMemory, 'optionalCall', _16 => _16()]);\n    if (freeMemory != null) {\n      contexts.app.free_memory = freeMemory;\n    }\n  }\n\n  if (_optionalChain([contexts, 'optionalAccess', _17 => _17.device, 'optionalAccess', _18 => _18.free_memory])) {\n    contexts.device.free_memory = os.freemem();\n  }\n\n  return contexts;\n}\n\n/**\n * Returns the operating system context.\n *\n * Based on the current platform, this uses a different strategy to provide the\n * most accurate OS information. Since this might involve spawning subprocesses\n * or accessing the file system, this should only be executed lazily and cached.\n *\n *  - On macOS (Darwin), this will execute the `sw_vers` utility. The context\n *    has a `name`, `version`, `build` and `kernel_version` set.\n *  - On Linux, this will try to load a distribution release from `/etc` and set\n *    the `name`, `version` and `kernel_version` fields.\n *  - On all other platforms, only a `name` and `version` will be returned. Note\n *    that `version` might actually be the kernel version.\n */\nasync function getOsContext() {\n  const platformId = os.platform();\n  switch (platformId) {\n    case 'darwin':\n      return getDarwinInfo();\n    case 'linux':\n      return getLinuxInfo();\n    default:\n      return {\n        name: PLATFORM_NAMES[platformId] || platformId,\n        version: os.release(),\n      };\n  }\n}\n\nfunction getCultureContext() {\n  try {\n    if (typeof process.versions.icu !== 'string') {\n      // Node was built without ICU support\n      return;\n    }\n\n    // Check that node was built with full Intl support. Its possible it was built without support for non-English\n    // locales which will make resolvedOptions inaccurate\n    //\n    // https://nodejs.org/api/intl.html#detecting-internationalization-support\n    const january = new Date(9e8);\n    const spanish = new Intl.DateTimeFormat('es', { month: 'long' });\n    if (spanish.format(january) === 'enero') {\n      const options = Intl.DateTimeFormat().resolvedOptions();\n\n      return {\n        locale: options.locale,\n        timezone: options.timeZone,\n      };\n    }\n  } catch (err) {\n    //\n  }\n\n  return;\n}\n\n/**\n * Get app context information from process\n */\nfunction getAppContext() {\n  const app_memory = process.memoryUsage().rss;\n  const app_start_time = new Date(Date.now() - process.uptime() * 1000).toISOString();\n  // https://nodejs.org/api/process.html#processavailablememory\n  const appContext = { app_start_time, app_memory };\n\n  if (typeof (process ).availableMemory === 'function') {\n    const freeMemory = _optionalChain([(process ), 'access', _19 => _19.availableMemory, 'optionalCall', _20 => _20()]);\n    if (freeMemory != null) {\n      appContext.free_memory = freeMemory;\n    }\n  }\n\n  return appContext;\n}\n\n/**\n * Gets device information from os\n */\nfunction getDeviceContext(deviceOpt) {\n  const device = {};\n\n  // Sometimes os.uptime() throws due to lacking permissions: https://github.com/getsentry/sentry-javascript/issues/8202\n  let uptime;\n  try {\n    uptime = os.uptime && os.uptime();\n  } catch (e) {\n    // noop\n  }\n\n  // os.uptime or its return value seem to be undefined in certain environments (e.g. Azure functions).\n  // Hence, we only set boot time, if we get a valid uptime value.\n  // @see https://github.com/getsentry/sentry-javascript/issues/5856\n  if (typeof uptime === 'number') {\n    device.boot_time = new Date(Date.now() - uptime * 1000).toISOString();\n  }\n\n  device.arch = os.arch();\n\n  if (deviceOpt === true || deviceOpt.memory) {\n    device.memory_size = os.totalmem();\n    device.free_memory = os.freemem();\n  }\n\n  if (deviceOpt === true || deviceOpt.cpu) {\n    const cpuInfo = os.cpus();\n    const firstCpu = cpuInfo && cpuInfo[0];\n    if (firstCpu) {\n      device.processor_count = cpuInfo.length;\n      device.cpu_description = firstCpu.model;\n      device.processor_frequency = firstCpu.speed;\n    }\n  }\n\n  return device;\n}\n\n/** Mapping of Node's platform names to actual OS names. */\nconst PLATFORM_NAMES = {\n  aix: 'IBM AIX',\n  freebsd: 'FreeBSD',\n  openbsd: 'OpenBSD',\n  sunos: 'SunOS',\n  win32: 'Windows',\n};\n\n/** Linux version file to check for a distribution. */\n\n/** Mapping of linux release files located in /etc to distributions. */\nconst LINUX_DISTROS = [\n  { name: 'fedora-release', distros: ['Fedora'] },\n  { name: 'redhat-release', distros: ['Red Hat Linux', 'Centos'] },\n  { name: 'redhat_version', distros: ['Red Hat Linux'] },\n  { name: 'SuSE-release', distros: ['SUSE Linux'] },\n  { name: 'lsb-release', distros: ['Ubuntu Linux', 'Arch Linux'] },\n  { name: 'debian_version', distros: ['Debian'] },\n  { name: 'debian_release', distros: ['Debian'] },\n  { name: 'arch-release', distros: ['Arch Linux'] },\n  { name: 'gentoo-release', distros: ['Gentoo Linux'] },\n  { name: 'novell-release', distros: ['SUSE Linux'] },\n  { name: 'alpine-release', distros: ['Alpine Linux'] },\n];\n\n/** Functions to extract the OS version from Linux release files. */\nconst LINUX_VERSIONS\n\n = {\n  alpine: content => content,\n  arch: content => matchFirst(/distrib_release=(.*)/, content),\n  centos: content => matchFirst(/release ([^ ]+)/, content),\n  debian: content => content,\n  fedora: content => matchFirst(/release (..)/, content),\n  mint: content => matchFirst(/distrib_release=(.*)/, content),\n  red: content => matchFirst(/release ([^ ]+)/, content),\n  suse: content => matchFirst(/VERSION = (.*)\\n/, content),\n  ubuntu: content => matchFirst(/distrib_release=(.*)/, content),\n};\n\n/**\n * Executes a regular expression with one capture group.\n *\n * @param regex A regular expression to execute.\n * @param text Content to execute the RegEx on.\n * @returns The captured string if matched; otherwise undefined.\n */\nfunction matchFirst(regex, text) {\n  const match = regex.exec(text);\n  return match ? match[1] : undefined;\n}\n\n/** Loads the macOS operating system context. */\nasync function getDarwinInfo() {\n  // Default values that will be used in case no operating system information\n  // can be loaded. The default version is computed via heuristics from the\n  // kernel version, but the build ID is missing.\n  const darwinInfo = {\n    kernel_version: os.release(),\n    name: 'Mac OS X',\n    version: `10.${Number(os.release().split('.')[0]) - 4}`,\n  };\n\n  try {\n    // We try to load the actual macOS version by executing the `sw_vers` tool.\n    // This tool should be available on every standard macOS installation. In\n    // case this fails, we stick with the values computed above.\n\n    const output = await new Promise((resolve, reject) => {\n      execFile('/usr/bin/sw_vers', (error, stdout) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(stdout);\n      });\n    });\n\n    darwinInfo.name = matchFirst(/^ProductName:\\s+(.*)$/m, output);\n    darwinInfo.version = matchFirst(/^ProductVersion:\\s+(.*)$/m, output);\n    darwinInfo.build = matchFirst(/^BuildVersion:\\s+(.*)$/m, output);\n  } catch (e) {\n    // ignore\n  }\n\n  return darwinInfo;\n}\n\n/** Returns a distribution identifier to look up version callbacks. */\nfunction getLinuxDistroId(name) {\n  return (name.split(' ') )[0].toLowerCase();\n}\n\n/** Loads the Linux operating system context. */\nasync function getLinuxInfo() {\n  // By default, we cannot assume anything about the distribution or Linux\n  // version. `os.release()` returns the kernel version and we assume a generic\n  // \"Linux\" name, which will be replaced down below.\n  const linuxInfo = {\n    kernel_version: os.release(),\n    name: 'Linux',\n  };\n\n  try {\n    // We start guessing the distribution by listing files in the /etc\n    // directory. This is were most Linux distributions (except Knoppix) store\n    // release files with certain distribution-dependent meta data. We search\n    // for exactly one known file defined in `LINUX_DISTROS` and exit if none\n    // are found. In case there are more than one file, we just stick with the\n    // first one.\n    const etcFiles = await readDirAsync('/etc');\n    const distroFile = LINUX_DISTROS.find(file => etcFiles.includes(file.name));\n    if (!distroFile) {\n      return linuxInfo;\n    }\n\n    // Once that file is known, load its contents. To make searching in those\n    // files easier, we lowercase the file contents. Since these files are\n    // usually quite small, this should not allocate too much memory and we only\n    // hold on to it for a very short amount of time.\n    const distroPath = join('/etc', distroFile.name);\n    const contents = ((await readFileAsync(distroPath, { encoding: 'utf-8' })) ).toLowerCase();\n\n    // Some Linux distributions store their release information in the same file\n    // (e.g. RHEL and Centos). In those cases, we scan the file for an\n    // identifier, that basically consists of the first word of the linux\n    // distribution name (e.g. \"red\" for Red Hat). In case there is no match, we\n    // just assume the first distribution in our list.\n    const { distros } = distroFile;\n    linuxInfo.name = distros.find(d => contents.indexOf(getLinuxDistroId(d)) >= 0) || distros[0];\n\n    // Based on the found distribution, we can now compute the actual version\n    // number. This is different for every distribution, so several strategies\n    // are computed in `LINUX_VERSIONS`.\n    const id = getLinuxDistroId(linuxInfo.name);\n    linuxInfo.version = _optionalChain([LINUX_VERSIONS, 'access', _21 => _21[id], 'optionalCall', _22 => _22(contents)]);\n  } catch (e) {\n    // ignore\n  }\n\n  return linuxInfo;\n}\n\n/**\n * Grabs some information about hosting provider based on best effort.\n */\nfunction getCloudResourceContext() {\n  if (process.env.VERCEL) {\n    // https://vercel.com/docs/concepts/projects/environment-variables/system-environment-variables#system-environment-variables\n    return {\n      'cloud.provider': 'vercel',\n      'cloud.region': process.env.VERCEL_REGION,\n    };\n  } else if (process.env.AWS_REGION) {\n    // https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\n    return {\n      'cloud.provider': 'aws',\n      'cloud.region': process.env.AWS_REGION,\n      'cloud.platform': process.env.AWS_EXECUTION_ENV,\n    };\n  } else if (process.env.GCP_PROJECT) {\n    // https://cloud.google.com/composer/docs/how-to/managing/environment-variables#reserved_variables\n    return {\n      'cloud.provider': 'gcp',\n    };\n  } else if (process.env.ALIYUN_REGION_ID) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'alibaba_cloud',\n      'cloud.region': process.env.ALIYUN_REGION_ID,\n    };\n  } else if (process.env.WEBSITE_SITE_NAME && process.env.REGION_NAME) {\n    // https://learn.microsoft.com/en-us/azure/app-service/reference-app-settings?tabs=kudu%2Cdotnet#app-environment\n    return {\n      'cloud.provider': 'azure',\n      'cloud.region': process.env.REGION_NAME,\n    };\n  } else if (process.env.IBM_CLOUD_REGION) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'ibm_cloud',\n      'cloud.region': process.env.IBM_CLOUD_REGION,\n    };\n  } else if (process.env.TENCENTCLOUD_REGION) {\n    // https://www.tencentcloud.com/document/product/583/32748\n    return {\n      'cloud.provider': 'tencent_cloud',\n      'cloud.region': process.env.TENCENTCLOUD_REGION,\n      'cloud.account.id': process.env.TENCENTCLOUD_APPID,\n      'cloud.availability_zone': process.env.TENCENTCLOUD_ZONE,\n    };\n  } else if (process.env.NETLIFY) {\n    // https://docs.netlify.com/configure-builds/environment-variables/#read-only-variables\n    return {\n      'cloud.provider': 'netlify',\n    };\n  } else if (process.env.FLY_REGION) {\n    // https://fly.io/docs/reference/runtime-environment/\n    return {\n      'cloud.provider': 'fly.io',\n      'cloud.region': process.env.FLY_REGION,\n    };\n  } else if (process.env.DYNO) {\n    // https://devcenter.heroku.com/articles/dynos#local-environment-variables\n    return {\n      'cloud.provider': 'heroku',\n    };\n  } else {\n    return undefined;\n  }\n}\n\nexport { getAppContext, getDeviceContext, nodeContextIntegration, readDirAsync, readFileAsync };\n//# sourceMappingURL=context.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { createReadStream } from 'node:fs';\nimport { createInterface } from 'node:readline';\nimport { LRUMap, defineIntegration, logger, snipLine } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst LRU_FILE_CONTENTS_CACHE = new LRUMap(10);\nconst LRU_FILE_CONTENTS_FS_READ_FAILED = new LRUMap(20);\nconst DEFAULT_LINES_OF_CONTEXT = 7;\nconst INTEGRATION_NAME = 'ContextLines';\n// Determines the upper bound of lineno/colno that we will attempt to read. Large colno values are likely to be\n// minified code while large lineno values are likely to be bundled code.\n// Exported for testing purposes.\nconst MAX_CONTEXTLINES_COLNO = 1000;\nconst MAX_CONTEXTLINES_LINENO = 10000;\n\n/**\n * Get or init map value\n */\nfunction emplace(map, key, contents) {\n  const value = map.get(key);\n\n  if (value === undefined) {\n    map.set(key, contents);\n    return contents;\n  }\n\n  return value;\n}\n\n/**\n * Determines if context lines should be skipped for a file.\n * - .min.(mjs|cjs|js) files are and not useful since they dont point to the original source\n * - node: prefixed modules are part of the runtime and cannot be resolved to a file\n * - data: skip json, wasm and inline js https://nodejs.org/api/esm.html#data-imports\n */\nfunction shouldSkipContextLinesForFile(path) {\n  // Test the most common prefix and extension first. These are the ones we\n  // are most likely to see in user applications and are the ones we can break out of first.\n  if (path.startsWith('node:')) return true;\n  if (path.endsWith('.min.js')) return true;\n  if (path.endsWith('.min.cjs')) return true;\n  if (path.endsWith('.min.mjs')) return true;\n  if (path.startsWith('data:')) return true;\n  return false;\n}\n\n/**\n * Determines if we should skip contextlines based off the max lineno and colno values.\n */\nfunction shouldSkipContextLinesForFrame(frame) {\n  if (frame.lineno !== undefined && frame.lineno > MAX_CONTEXTLINES_LINENO) return true;\n  if (frame.colno !== undefined && frame.colno > MAX_CONTEXTLINES_COLNO) return true;\n  return false;\n}\n/**\n * Checks if we have all the contents that we need in the cache.\n */\nfunction rangeExistsInContentCache(file, range) {\n  const contents = LRU_FILE_CONTENTS_CACHE.get(file);\n  if (contents === undefined) return false;\n\n  for (let i = range[0]; i <= range[1]; i++) {\n    if (contents[i] === undefined) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Creates contiguous ranges of lines to read from a file. In the case where context lines overlap,\n * the ranges are merged to create a single range.\n */\nfunction makeLineReaderRanges(lines, linecontext) {\n  if (!lines.length) {\n    return [];\n  }\n\n  let i = 0;\n  const line = lines[0];\n\n  if (typeof line !== 'number') {\n    return [];\n  }\n\n  let current = makeContextRange(line, linecontext);\n  const out = [];\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (i === lines.length - 1) {\n      out.push(current);\n      break;\n    }\n\n    // If the next line falls into the current range, extend the current range to lineno + linecontext.\n    const next = lines[i + 1];\n    if (typeof next !== 'number') {\n      break;\n    }\n    if (next <= current[1]) {\n      current[1] = next + linecontext;\n    } else {\n      out.push(current);\n      current = makeContextRange(next, linecontext);\n    }\n\n    i++;\n  }\n\n  return out;\n}\n\n/**\n * Extracts lines from a file and stores them in a cache.\n */\nfunction getContextLinesFromFile(path, ranges, output) {\n  return new Promise((resolve, _reject) => {\n    // It is important *not* to have any async code between createInterface and the 'line' event listener\n    // as it will cause the 'line' event to\n    // be emitted before the listener is attached.\n    const stream = createReadStream(path);\n    const lineReaded = createInterface({\n      input: stream,\n    });\n\n    // We need to explicitly destroy the stream to prevent memory leaks,\n    // removing the listeners on the readline interface is not enough.\n    // See: https://github.com/nodejs/node/issues/9002 and https://github.com/getsentry/sentry-javascript/issues/14892\n    function destroyStreamAndResolve() {\n      stream.destroy();\n      resolve();\n    }\n\n    // Init at zero and increment at the start of the loop because lines are 1 indexed.\n    let lineNumber = 0;\n    let currentRangeIndex = 0;\n    const range = ranges[currentRangeIndex];\n    if (range === undefined) {\n      // We should never reach this point, but if we do, we should resolve the promise to prevent it from hanging.\n      destroyStreamAndResolve();\n      return;\n    }\n    let rangeStart = range[0];\n    let rangeEnd = range[1];\n\n    // We use this inside Promise.all, so we need to resolve the promise even if there is an error\n    // to prevent Promise.all from short circuiting the rest.\n    function onStreamError(e) {\n      // Mark file path as failed to read and prevent multiple read attempts.\n      LRU_FILE_CONTENTS_FS_READ_FAILED.set(path, 1);\n      DEBUG_BUILD && logger.error(`Failed to read file: ${path}. Error: ${e}`);\n      lineReaded.close();\n      lineReaded.removeAllListeners();\n      destroyStreamAndResolve();\n    }\n\n    // We need to handle the error event to prevent the process from crashing in < Node 16\n    // https://github.com/nodejs/node/pull/31603\n    stream.on('error', onStreamError);\n    lineReaded.on('error', onStreamError);\n    lineReaded.on('close', destroyStreamAndResolve);\n\n    lineReaded.on('line', line => {\n      lineNumber++;\n      if (lineNumber < rangeStart) return;\n\n      // !Warning: This mutates the cache by storing the snipped line into the cache.\n      output[lineNumber] = snipLine(line, 0);\n\n      if (lineNumber >= rangeEnd) {\n        if (currentRangeIndex === ranges.length - 1) {\n          // We need to close the file stream and remove listeners, else the reader will continue to run our listener;\n          lineReaded.close();\n          lineReaded.removeAllListeners();\n          return;\n        }\n        currentRangeIndex++;\n        const range = ranges[currentRangeIndex];\n        if (range === undefined) {\n          // This should never happen as it means we have a bug in the context.\n          lineReaded.close();\n          lineReaded.removeAllListeners();\n          return;\n        }\n        rangeStart = range[0];\n        rangeEnd = range[1];\n      }\n    });\n  });\n}\n\n/**\n * Adds surrounding (context) lines of the line that an exception occurred on to the event.\n * This is done by reading the file line by line and extracting the lines. The extracted lines are stored in\n * a cache to prevent multiple reads of the same file. Failures to read a file are similarly cached to prevent multiple\n * failing reads from happening.\n */\n/* eslint-disable complexity */\nasync function addSourceContext(event, contextLines) {\n  // keep a lookup map of which files we've already enqueued to read,\n  // so we don't enqueue the same file multiple times which would cause multiple i/o reads\n  const filesToLines = {};\n\n  if (contextLines > 0 && _optionalChain([event, 'access', _ => _.exception, 'optionalAccess', _2 => _2.values])) {\n    for (const exception of event.exception.values) {\n      if (!_optionalChain([exception, 'access', _3 => _3.stacktrace, 'optionalAccess', _4 => _4.frames, 'optionalAccess', _5 => _5.length])) {\n        continue;\n      }\n\n      // Maps preserve insertion order, so we iterate in reverse, starting at the\n      // outermost frame and closer to where the exception has occurred (poor mans priority)\n      for (let i = exception.stacktrace.frames.length - 1; i >= 0; i--) {\n        const frame = exception.stacktrace.frames[i];\n        const filename = _optionalChain([frame, 'optionalAccess', _6 => _6.filename]);\n\n        if (\n          !frame ||\n          typeof filename !== 'string' ||\n          typeof frame.lineno !== 'number' ||\n          shouldSkipContextLinesForFile(filename) ||\n          shouldSkipContextLinesForFrame(frame)\n        ) {\n          continue;\n        }\n\n        const filesToLinesOutput = filesToLines[filename];\n        if (!filesToLinesOutput) filesToLines[filename] = [];\n        // @ts-expect-error this is defined above\n        filesToLines[filename].push(frame.lineno);\n      }\n    }\n  }\n\n  const files = Object.keys(filesToLines);\n  if (files.length == 0) {\n    return event;\n  }\n\n  const readlinePromises = [];\n  for (const file of files) {\n    // If we failed to read this before, dont try reading it again.\n    if (LRU_FILE_CONTENTS_FS_READ_FAILED.get(file)) {\n      continue;\n    }\n\n    const filesToLineRanges = filesToLines[file];\n    if (!filesToLineRanges) {\n      continue;\n    }\n\n    // Sort ranges so that they are sorted by line increasing order and match how the file is read.\n    filesToLineRanges.sort((a, b) => a - b);\n    // Check if the contents are already in the cache and if we can avoid reading the file again.\n    const ranges = makeLineReaderRanges(filesToLineRanges, contextLines);\n    if (ranges.every(r => rangeExistsInContentCache(file, r))) {\n      continue;\n    }\n\n    const cache = emplace(LRU_FILE_CONTENTS_CACHE, file, {});\n    readlinePromises.push(getContextLinesFromFile(file, ranges, cache));\n  }\n\n  // The promise rejections are caught in order to prevent them from short circuiting Promise.all\n  await Promise.all(readlinePromises).catch(() => {\n    DEBUG_BUILD && logger.log('Failed to read one or more source files and resolve context lines');\n  });\n\n  // Perform the same loop as above, but this time we can assume all files are in the cache\n  // and attempt to add source context to frames.\n  if (contextLines > 0 && _optionalChain([event, 'access', _7 => _7.exception, 'optionalAccess', _8 => _8.values])) {\n    for (const exception of event.exception.values) {\n      if (exception.stacktrace && exception.stacktrace.frames && exception.stacktrace.frames.length > 0) {\n        addSourceContextToFrames(exception.stacktrace.frames, contextLines, LRU_FILE_CONTENTS_CACHE);\n      }\n    }\n  }\n\n  return event;\n}\n/* eslint-enable complexity */\n\n/** Adds context lines to frames */\nfunction addSourceContextToFrames(\n  frames,\n  contextLines,\n  cache,\n) {\n  for (const frame of frames) {\n    // Only add context if we have a filename and it hasn't already been added\n    if (frame.filename && frame.context_line === undefined && typeof frame.lineno === 'number') {\n      const contents = cache.get(frame.filename);\n      if (contents === undefined) {\n        continue;\n      }\n\n      addContextToFrame(frame.lineno, frame, contextLines, contents);\n    }\n  }\n}\n\n/**\n * Clears the context lines from a frame, used to reset a frame to its original state\n * if we fail to resolve all context lines for it.\n */\nfunction clearLineContext(frame) {\n  delete frame.pre_context;\n  delete frame.context_line;\n  delete frame.post_context;\n}\n\n/**\n * Resolves context lines before and after the given line number and appends them to the frame;\n */\nfunction addContextToFrame(\n  lineno,\n  frame,\n  contextLines,\n  contents,\n) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping.\n  // We already check for lineno before calling this, but since StackFrame lineno ism optional, we check it again.\n  if (frame.lineno === undefined || contents === undefined) {\n    DEBUG_BUILD && logger.error('Cannot resolve context for frame with no lineno or file contents');\n    return;\n  }\n\n  frame.pre_context = [];\n  for (let i = makeRangeStart(lineno, contextLines); i < lineno; i++) {\n    // We always expect the start context as line numbers cannot be negative. If we dont find a line, then\n    // something went wrong somewhere. Clear the context and return without adding any linecontext.\n    const line = contents[i];\n    if (line === undefined) {\n      clearLineContext(frame);\n      DEBUG_BUILD && logger.error(`Could not find line ${i} in file ${frame.filename}`);\n      return;\n    }\n\n    frame.pre_context.push(line);\n  }\n\n  // We should always have the context line. If we dont, something went wrong, so we clear the context and return\n  // without adding any linecontext.\n  if (contents[lineno] === undefined) {\n    clearLineContext(frame);\n    DEBUG_BUILD && logger.error(`Could not find line ${lineno} in file ${frame.filename}`);\n    return;\n  }\n\n  frame.context_line = contents[lineno];\n\n  const end = makeRangeEnd(lineno, contextLines);\n  frame.post_context = [];\n  for (let i = lineno + 1; i <= end; i++) {\n    // Since we dont track when the file ends, we cant clear the context if we dont find a line as it could\n    // just be that we reached the end of the file.\n    const line = contents[i];\n    if (line === undefined) {\n      break;\n    }\n    frame.post_context.push(line);\n  }\n}\n\n// Helper functions for generating line context ranges. They take a line number and the number of lines of context to\n// include before and after the line and generate an inclusive range of indices.\n\n// Compute inclusive end context range\nfunction makeRangeStart(line, linecontext) {\n  return Math.max(1, line - linecontext);\n}\n// Compute inclusive start context range\nfunction makeRangeEnd(line, linecontext) {\n  return line + linecontext;\n}\n// Determine start and end indices for context range (inclusive);\nfunction makeContextRange(line, linecontext) {\n  return [makeRangeStart(line, linecontext), makeRangeEnd(line, linecontext)];\n}\n\n/** Exported only for tests, as a type-safe variant. */\nconst _contextLinesIntegration = ((options = {}) => {\n  const contextLines = options.frameContextLines !== undefined ? options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      return addSourceContext(event, contextLines);\n    },\n  };\n}) ;\n\n/**\n * Capture the lines before and after the frame's context.\n */\nconst contextLinesIntegration = defineIntegration(_contextLinesIntegration);\n\nexport { MAX_CONTEXTLINES_COLNO, MAX_CONTEXTLINES_LINENO, _contextLinesIntegration, addContextToFrame, contextLinesIntegration };\n//# sourceMappingURL=contextlines.js.map\n","import { parseSemver } from '@sentry/core';\n\nconst NODE_VERSION = parseSemver(process.versions.node) ;\nconst NODE_MAJOR = NODE_VERSION.major;\n\nexport { NODE_MAJOR, NODE_VERSION };\n//# sourceMappingURL=nodeVersion.js.map\n","let cachedDebuggerEnabled;\n\n/**\n * Was the debugger enabled when this function was first called?\n */\nasync function isDebuggerEnabled() {\n  if (cachedDebuggerEnabled === undefined) {\n    try {\n      // Node can be built without inspector support\n      const inspector = await import('node:inspector');\n      cachedDebuggerEnabled = !!inspector.url();\n    } catch (_) {\n      cachedDebuggerEnabled = false;\n    }\n  }\n\n  return cachedDebuggerEnabled;\n}\n\nexport { isDebuggerEnabled };\n//# sourceMappingURL=debug.js.map\n","/**\n * The key used to store the local variables on the error object.\n */\nconst LOCAL_VARIABLES_KEY = '__SENTRY_ERROR_LOCAL_VARIABLES__';\n\n/**\n * Creates a rate limiter that will call the disable callback when the rate limit is reached and the enable callback\n * when a timeout has occurred.\n * @param maxPerSecond Maximum number of calls per second\n * @param enable Callback to enable capture\n * @param disable Callback to disable capture\n * @returns A function to call to increment the rate limiter count\n */\nfunction createRateLimiter(\n  maxPerSecond,\n  enable,\n  disable,\n) {\n  let count = 0;\n  let retrySeconds = 5;\n  let disabledTimeout = 0;\n\n  setInterval(() => {\n    if (disabledTimeout === 0) {\n      if (count > maxPerSecond) {\n        retrySeconds *= 2;\n        disable(retrySeconds);\n\n        // Cap at one day\n        if (retrySeconds > 86400) {\n          retrySeconds = 86400;\n        }\n        disabledTimeout = retrySeconds;\n      }\n    } else {\n      disabledTimeout -= 1;\n\n      if (disabledTimeout === 0) {\n        enable();\n      }\n    }\n\n    count = 0;\n  }, 1000).unref();\n\n  return () => {\n    count += 1;\n  };\n}\n\n// Add types for the exception event data\n\n/** Could this be an anonymous function? */\nfunction isAnonymous(name) {\n  return name !== undefined && (name.length === 0 || name === '?' || name === '<anonymous>');\n}\n\n/** Do the function names appear to match? */\nfunction functionNamesMatch(a, b) {\n  return a === b || (isAnonymous(a) && isAnonymous(b));\n}\n\nexport { LOCAL_VARIABLES_KEY, createRateLimiter, functionNamesMatch, isAnonymous };\n//# sourceMappingURL=common.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { Worker } from 'node:worker_threads';\nimport { defineIntegration, logger } from '@sentry/core';\nimport { isDebuggerEnabled } from '../../utils/debug.js';\nimport { LOCAL_VARIABLES_KEY, functionNamesMatch } from './common.js';\n\n// This string is a placeholder that gets overwritten with the worker code.\nconst base64WorkerScript = 'LyohIEBzZW50cnkvbm9kZSA4LjUxLjAgKDNhMGUxNjApIHwgaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnktamF2YXNjcmlwdCAqLwppbXBvcnR7U2Vzc2lvbiBhcyBlfWZyb20ibm9kZTppbnNwZWN0b3IvcHJvbWlzZXMiO2ltcG9ydHt3b3JrZXJEYXRhIGFzIHR9ZnJvbSJub2RlOndvcmtlcl90aHJlYWRzIjtjb25zdCBuPSI4LjUxLjAiLG89Z2xvYmFsVGhpcztjb25zdCBpPSJ1bmRlZmluZWQiPT10eXBlb2YgX19TRU5UUllfREVCVUdfX3x8X19TRU5UUllfREVCVUdfXyxhPVsiZGVidWciLCJpbmZvIiwid2FybiIsImVycm9yIiwibG9nIiwiYXNzZXJ0IiwidHJhY2UiXSxzPXt9O2Z1bmN0aW9uIGMoZSl7aWYoISgiY29uc29sZSJpbiBvKSlyZXR1cm4gZSgpO2NvbnN0IHQ9by5jb25zb2xlLG49e30saT1PYmplY3Qua2V5cyhzKTtpLmZvckVhY2goKGU9Pntjb25zdCBvPXNbZV07bltlXT10W2VdLHRbZV09b30pKTt0cnl7cmV0dXJuIGUoKX1maW5hbGx5e2kuZm9yRWFjaCgoZT0+e3RbZV09bltlXX0pKX19IWZ1bmN0aW9uKGUsdCxpKXtjb25zdCBhPW8scz1hLl9fU0VOVFJZX189YS5fX1NFTlRSWV9ffHx7fSxjPXNbbl09c1tuXXx8e307Y1tlXXx8KGNbZV09dCgpKX0oImxvZ2dlciIsKGZ1bmN0aW9uKCl7bGV0IGU9ITE7Y29uc3QgdD17ZW5hYmxlOigpPT57ZT0hMH0sZGlzYWJsZTooKT0+e2U9ITF9LGlzRW5hYmxlZDooKT0+ZX07cmV0dXJuIGk/YS5mb3JFYWNoKChuPT57dFtuXT0oLi4udCk9PntlJiZjKCgoKT0+e28uY29uc29sZVtuXShgU2VudHJ5IExvZ2dlciBbJHtufV06YCwuLi50KX0pKX19KSk6YS5mb3JFYWNoKChlPT57dFtlXT0oKT0+e319KSksdH0pKTtjb25zdCByPSJfX1NFTlRSWV9FUlJPUl9MT0NBTF9WQVJJQUJMRVNfXyI7Y29uc3QgdT10O2Z1bmN0aW9uIGwoLi4uZSl7dS5kZWJ1ZyYmYygoKCk9PmNvbnNvbGUubG9nKCJbTG9jYWxWYXJpYWJsZXMgV29ya2VyXSIsLi4uZSkpKX1hc3luYyBmdW5jdGlvbiBmKGUsdCxuLG8pe2NvbnN0IGk9YXdhaXQgZS5wb3N0KCJSdW50aW1lLmdldFByb3BlcnRpZXMiLHtvYmplY3RJZDp0LG93blByb3BlcnRpZXM6ITB9KTtvW25dPWkucmVzdWx0LmZpbHRlcigoZT0+Imxlbmd0aCIhPT1lLm5hbWUmJiFpc05hTihwYXJzZUludChlLm5hbWUsMTApKSkpLnNvcnQoKChlLHQpPT5wYXJzZUludChlLm5hbWUsMTApLXBhcnNlSW50KHQubmFtZSwxMCkpKS5tYXAoKGU9PmUudmFsdWU/LnZhbHVlKSl9YXN5bmMgZnVuY3Rpb24gZyhlLHQsbixvKXtjb25zdCBpPWF3YWl0IGUucG9zdCgiUnVudGltZS5nZXRQcm9wZXJ0aWVzIix7b2JqZWN0SWQ6dCxvd25Qcm9wZXJ0aWVzOiEwfSk7b1tuXT1pLnJlc3VsdC5tYXAoKGU9PltlLm5hbWUsZS52YWx1ZT8udmFsdWVdKSkucmVkdWNlKCgoZSxbdCxuXSk9PihlW3RdPW4sZSkpLHt9KX1mdW5jdGlvbiBkKGUsdCl7ZS52YWx1ZSYmKCJ2YWx1ZSJpbiBlLnZhbHVlP3ZvaWQgMD09PWUudmFsdWUudmFsdWV8fG51bGw9PT1lLnZhbHVlLnZhbHVlP3RbZS5uYW1lXT1gPCR7ZS52YWx1ZS52YWx1ZX0+YDp0W2UubmFtZV09ZS52YWx1ZS52YWx1ZToiZGVzY3JpcHRpb24iaW4gZS52YWx1ZSYmImZ1bmN0aW9uIiE9PWUudmFsdWUudHlwZT90W2UubmFtZV09YDwke2UudmFsdWUuZGVzY3JpcHRpb259PmA6InVuZGVmaW5lZCI9PT1lLnZhbHVlLnR5cGUmJih0W2UubmFtZV09Ijx1bmRlZmluZWQ+IikpfWFzeW5jIGZ1bmN0aW9uIGIoZSx0KXtjb25zdCBuPWF3YWl0IGUucG9zdCgiUnVudGltZS5nZXRQcm9wZXJ0aWVzIix7b2JqZWN0SWQ6dCxvd25Qcm9wZXJ0aWVzOiEwfSksbz17fTtmb3IoY29uc3QgdCBvZiBuLnJlc3VsdClpZih0Py52YWx1ZT8ub2JqZWN0SWQmJiJBcnJheSI9PT10Py52YWx1ZS5jbGFzc05hbWUpe2NvbnN0IG49dC52YWx1ZS5vYmplY3RJZDthd2FpdCBmKGUsbix0Lm5hbWUsbyl9ZWxzZSBpZih0Py52YWx1ZT8ub2JqZWN0SWQmJiJPYmplY3QiPT09dD8udmFsdWU/LmNsYXNzTmFtZSl7Y29uc3Qgbj10LnZhbHVlLm9iamVjdElkO2F3YWl0IGcoZSxuLHQubmFtZSxvKX1lbHNlIHQ/LnZhbHVlJiZkKHQsbyk7cmV0dXJuIG99bGV0IHA7KGFzeW5jIGZ1bmN0aW9uKCl7Y29uc3QgdD1uZXcgZTt0LmNvbm5lY3RUb01haW5UaHJlYWQoKSxsKCJDb25uZWN0ZWQgdG8gbWFpbiB0aHJlYWQiKTtsZXQgbj0hMTt0Lm9uKCJEZWJ1Z2dlci5yZXN1bWVkIiwoKCk9PntuPSExfSkpLHQub24oIkRlYnVnZ2VyLnBhdXNlZCIsKGU9PntuPSEwLGFzeW5jIGZ1bmN0aW9uKGUse3JlYXNvbjp0LGRhdGE6e29iamVjdElkOm59LGNhbGxGcmFtZXM6b30pe2lmKCJleGNlcHRpb24iIT09dCYmInByb21pc2VSZWplY3Rpb24iIT09dClyZXR1cm47aWYocD8uKCksbnVsbD09bilyZXR1cm47Y29uc3QgaT1bXTtmb3IobGV0IHQ9MDt0PG8ubGVuZ3RoO3QrKyl7Y29uc3R7c2NvcGVDaGFpbjpuLGZ1bmN0aW9uTmFtZTphLHRoaXM6c309b1t0XSxjPW4uZmluZCgoZT0+ImxvY2FsIj09PWUudHlwZSkpLHI9Imdsb2JhbCIhPT1zLmNsYXNzTmFtZSYmcy5jbGFzc05hbWU/YCR7cy5jbGFzc05hbWV9LiR7YX1gOmE7aWYodm9pZCAwPT09Yz8ub2JqZWN0Lm9iamVjdElkKWlbdF09e2Z1bmN0aW9uOnJ9O2Vsc2V7Y29uc3Qgbj1hd2FpdCBiKGUsYy5vYmplY3Qub2JqZWN0SWQpO2lbdF09e2Z1bmN0aW9uOnIsdmFyczpufX19YXdhaXQgZS5wb3N0KCJSdW50aW1lLmNhbGxGdW5jdGlvbk9uIix7ZnVuY3Rpb25EZWNsYXJhdGlvbjpgZnVuY3Rpb24oKSB7IHRoaXMuJHtyfSA9IHRoaXMuJHtyfSB8fCAke0pTT04uc3RyaW5naWZ5KGkpfTsgfWAsc2lsZW50OiEwLG9iamVjdElkOm59KSxhd2FpdCBlLnBvc3QoIlJ1bnRpbWUucmVsZWFzZU9iamVjdCIse29iamVjdElkOm59KX0odCxlLnBhcmFtcykudGhlbigoYXN5bmMoKT0+e24mJmF3YWl0IHQucG9zdCgiRGVidWdnZXIucmVzdW1lIil9KSwoYXN5bmMgZT0+e24mJmF3YWl0IHQucG9zdCgiRGVidWdnZXIucmVzdW1lIil9KSl9KSksYXdhaXQgdC5wb3N0KCJEZWJ1Z2dlci5lbmFibGUiKTtjb25zdCBvPSExIT09dS5jYXB0dXJlQWxsRXhjZXB0aW9ucztpZihhd2FpdCB0LnBvc3QoIkRlYnVnZ2VyLnNldFBhdXNlT25FeGNlcHRpb25zIix7c3RhdGU6bz8iYWxsIjoidW5jYXVnaHQifSksbyl7Y29uc3QgZT11Lm1heEV4Y2VwdGlvbnNQZXJTZWNvbmR8fDUwO3A9ZnVuY3Rpb24oZSx0LG4pe2xldCBvPTAsaT01LGE9MDtyZXR1cm4gc2V0SW50ZXJ2YWwoKCgpPT57MD09PWE/bz5lJiYoaSo9MixuKGkpLGk+ODY0MDAmJihpPTg2NDAwKSxhPWkpOihhLT0xLDA9PT1hJiZ0KCkpLG89MH0pLDFlMykudW5yZWYoKSwoKT0+e28rPTF9fShlLChhc3luYygpPT57bCgiUmF0ZS1saW1pdCBsaWZ0ZWQuIiksYXdhaXQgdC5wb3N0KCJEZWJ1Z2dlci5zZXRQYXVzZU9uRXhjZXB0aW9ucyIse3N0YXRlOiJhbGwifSl9KSwoYXN5bmMgZT0+e2woYFJhdGUtbGltaXQgZXhjZWVkZWQuIERpc2FibGluZyBjYXB0dXJpbmcgb2YgY2F1Z2h0IGV4Y2VwdGlvbnMgZm9yICR7ZX0gc2Vjb25kcy5gKSxhd2FpdCB0LnBvc3QoIkRlYnVnZ2VyLnNldFBhdXNlT25FeGNlcHRpb25zIix7c3RhdGU6InVuY2F1Z2h0In0pfSkpfX0pKCkuY2F0Y2goKGU9PntsKCJGYWlsZWQgdG8gc3RhcnQgZGVidWdnZXIiLGUpfSkpLHNldEludGVydmFsKCgoKT0+e30pLDFlNCk7';\n\nfunction log(...args) {\n  logger.log('[LocalVariables]', ...args);\n}\n\n/**\n * Adds local variables to exception frames\n */\nconst localVariablesAsyncIntegration = defineIntegration(((\n  integrationOptions = {},\n) => {\n  function addLocalVariablesToException(exception, localVariables) {\n    // Filter out frames where the function name is `new Promise` since these are in the error.stack frames\n    // but do not appear in the debugger call frames\n    const frames = (_optionalChain([exception, 'access', _ => _.stacktrace, 'optionalAccess', _2 => _2.frames]) || []).filter(frame => frame.function !== 'new Promise');\n\n    for (let i = 0; i < frames.length; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frames.length - i - 1;\n\n      const frameLocalVariables = localVariables[i];\n      const frame = frames[frameIndex];\n\n      if (!frame || !frameLocalVariables) {\n        // Drop out if we run out of frames to match up\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        frameLocalVariables.vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        frame.in_app === false ||\n        // The function names need to match\n        !functionNamesMatch(frame.function, frameLocalVariables.function)\n      ) {\n        continue;\n      }\n\n      frame.vars = frameLocalVariables.vars;\n    }\n  }\n\n  function addLocalVariablesToEvent(event, hint) {\n    if (\n      hint.originalException &&\n      typeof hint.originalException === 'object' &&\n      LOCAL_VARIABLES_KEY in hint.originalException &&\n      Array.isArray(hint.originalException[LOCAL_VARIABLES_KEY])\n    ) {\n      for (const exception of _optionalChain([event, 'access', _3 => _3.exception, 'optionalAccess', _4 => _4.values]) || []) {\n        addLocalVariablesToException(exception, hint.originalException[LOCAL_VARIABLES_KEY]);\n      }\n\n      hint.originalException[LOCAL_VARIABLES_KEY] = undefined;\n    }\n\n    return event;\n  }\n\n  async function startInspector() {\n    // We load inspector dynamically because on some platforms Node is built without inspector support\n    const inspector = await import('node:inspector');\n    if (!inspector.url()) {\n      inspector.open(0);\n    }\n  }\n\n  function startWorker(options) {\n    const worker = new Worker(new URL(`data:application/javascript;base64,${base64WorkerScript}`), {\n      workerData: options,\n      // We don't want any Node args to be passed to the worker\n      execArgv: [],\n      env: { ...process.env, NODE_OPTIONS: undefined },\n    });\n\n    process.on('exit', () => {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      worker.terminate();\n    });\n\n    worker.once('error', (err) => {\n      log('Worker error', err);\n    });\n\n    worker.once('exit', (code) => {\n      log('Worker exit', code);\n    });\n\n    // Ensure this thread can't block app exit\n    worker.unref();\n  }\n\n  return {\n    name: 'LocalVariablesAsync',\n    async setup(client) {\n      const clientOptions = client.getOptions();\n\n      if (!clientOptions.includeLocalVariables) {\n        return;\n      }\n\n      if (await isDebuggerEnabled()) {\n        logger.warn('Local variables capture has been disabled because the debugger was already enabled');\n        return;\n      }\n\n      const options = {\n        ...integrationOptions,\n        debug: logger.isEnabled(),\n      };\n\n      startInspector().then(\n        () => {\n          try {\n            startWorker(options);\n          } catch (e) {\n            logger.error('Failed to start worker', e);\n          }\n        },\n        e => {\n          logger.error('Failed to start inspector', e);\n        },\n      );\n    },\n    processEvent(event, hint) {\n      return addLocalVariablesToEvent(event, hint);\n    },\n  };\n}) );\n\nexport { base64WorkerScript, localVariablesAsyncIntegration };\n//# sourceMappingURL=local-variables-async.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { defineIntegration, LRUMap, getClient, logger } from '@sentry/core';\nimport { NODE_MAJOR } from '../../nodeVersion.js';\nimport { isDebuggerEnabled } from '../../utils/debug.js';\nimport { createRateLimiter, functionNamesMatch } from './common.js';\n\n/** Creates a unique hash from stack frames */\nfunction hashFrames(frames) {\n  if (frames === undefined) {\n    return;\n  }\n\n  // Only hash the 10 most recent frames (ie. the last 10)\n  return frames.slice(-10).reduce((acc, frame) => `${acc},${frame.function},${frame.lineno},${frame.colno}`, '');\n}\n\n/**\n * We use the stack parser to create a unique hash from the exception stack trace\n * This is used to lookup vars when the exception passes through the event processor\n */\nfunction hashFromStack(stackParser, stack) {\n  if (stack === undefined) {\n    return undefined;\n  }\n\n  return hashFrames(stackParser(stack, 1));\n}\n\n/** Creates a container for callbacks to be called sequentially */\nfunction createCallbackList(complete) {\n  // A collection of callbacks to be executed last to first\n  let callbacks = [];\n\n  let completedCalled = false;\n  function checkedComplete(result) {\n    callbacks = [];\n    if (completedCalled) {\n      return;\n    }\n    completedCalled = true;\n    complete(result);\n  }\n\n  // complete should be called last\n  callbacks.push(checkedComplete);\n\n  function add(fn) {\n    callbacks.push(fn);\n  }\n\n  function next(result) {\n    const popped = callbacks.pop() || checkedComplete;\n\n    try {\n      popped(result);\n    } catch (_) {\n      // If there is an error, we still want to call the complete callback\n      checkedComplete(result);\n    }\n  }\n\n  return { add, next };\n}\n\n/**\n * Promise API is available as `Experimental` and in Node 19 only.\n *\n * Callback-based API is `Stable` since v14 and `Experimental` since v8.\n * Because of that, we are creating our own `AsyncSession` class.\n *\n * https://nodejs.org/docs/latest-v19.x/api/inspector.html#promises-api\n * https://nodejs.org/docs/latest-v14.x/api/inspector.html\n */\nclass AsyncSession  {\n  /** Throws if inspector API is not available */\n   constructor(  _session) {this._session = _session;\n    //\n  }\n\n   static async create(orDefault) {\n    if (orDefault) {\n      return orDefault;\n    }\n\n    const inspector = await import('node:inspector');\n    return new AsyncSession(new inspector.Session());\n  }\n\n  /** @inheritdoc */\n   configureAndConnect(onPause, captureAll) {\n    this._session.connect();\n\n    this._session.on('Debugger.paused', event => {\n      onPause(event, () => {\n        // After the pause work is complete, resume execution or the exception context memory is leaked\n        this._session.post('Debugger.resume');\n      });\n    });\n\n    this._session.post('Debugger.enable');\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n   setPauseOnExceptions(captureAll) {\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n  /** @inheritdoc */\n   getLocalVariables(objectId, complete) {\n    this._getProperties(objectId, props => {\n      const { add, next } = createCallbackList(complete);\n\n      for (const prop of props) {\n        if (_optionalChain([prop, 'optionalAccess', _2 => _2.value, 'optionalAccess', _3 => _3.objectId]) && _optionalChain([prop, 'optionalAccess', _4 => _4.value, 'access', _5 => _5.className]) === 'Array') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollArray(id, prop.name, vars, next));\n        } else if (_optionalChain([prop, 'optionalAccess', _6 => _6.value, 'optionalAccess', _7 => _7.objectId]) && _optionalChain([prop, 'optionalAccess', _8 => _8.value, 'optionalAccess', _9 => _9.className]) === 'Object') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollObject(id, prop.name, vars, next));\n        } else if (_optionalChain([prop, 'optionalAccess', _10 => _10.value])) {\n          add(vars => this._unrollOther(prop, vars, next));\n        }\n      }\n\n      next({});\n    });\n  }\n\n  /**\n   * Gets all the PropertyDescriptors of an object\n   */\n   _getProperties(objectId, next) {\n    this._session.post(\n      'Runtime.getProperties',\n      {\n        objectId,\n        ownProperties: true,\n      },\n      (err, params) => {\n        if (err) {\n          next([]);\n        } else {\n          next(params.result);\n        }\n      },\n    );\n  }\n\n  /**\n   * Unrolls an array property\n   */\n   _unrollArray(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .filter(v => v.name !== 'length' && !isNaN(parseInt(v.name, 10)))\n        .sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10))\n        .map(v => _optionalChain([v, 'optionalAccess', _11 => _11.value, 'optionalAccess', _12 => _12.value]));\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls an object property\n   */\n   _unrollObject(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .map(v => [v.name, _optionalChain([v, 'optionalAccess', _13 => _13.value, 'optionalAccess', _14 => _14.value])])\n        .reduce((obj, [key, val]) => {\n          obj[key] = val;\n          return obj;\n        }, {} );\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls other properties\n   */\n   _unrollOther(prop, vars, next) {\n    if (prop.value) {\n      if ('value' in prop.value) {\n        if (prop.value.value === undefined || prop.value.value === null) {\n          vars[prop.name] = `<${prop.value.value}>`;\n        } else {\n          vars[prop.name] = prop.value.value;\n        }\n      } else if ('description' in prop.value && prop.value.type !== 'function') {\n        vars[prop.name] = `<${prop.value.description}>`;\n      } else if (prop.value.type === 'undefined') {\n        vars[prop.name] = '<undefined>';\n      }\n    }\n\n    next(vars);\n  }\n}\n\nconst INTEGRATION_NAME = 'LocalVariables';\n\n/**\n * Adds local variables to exception frames\n */\nconst _localVariablesSyncIntegration = ((\n  options = {},\n  sessionOverride,\n) => {\n  const cachedFrames = new LRUMap(20);\n  let rateLimiter;\n  let shouldProcessEvent = false;\n\n  function addLocalVariablesToException(exception) {\n    const hash = hashFrames(_optionalChain([exception, 'optionalAccess', _15 => _15.stacktrace, 'optionalAccess', _16 => _16.frames]));\n\n    if (hash === undefined) {\n      return;\n    }\n\n    // Check if we have local variables for an exception that matches the hash\n    // remove is identical to get but also removes the entry from the cache\n    const cachedFrame = cachedFrames.remove(hash);\n\n    if (cachedFrame === undefined) {\n      return;\n    }\n\n    // Filter out frames where the function name is `new Promise` since these are in the error.stack frames\n    // but do not appear in the debugger call frames\n    const frames = (_optionalChain([exception, 'access', _17 => _17.stacktrace, 'optionalAccess', _18 => _18.frames]) || []).filter(frame => frame.function !== 'new Promise');\n\n    for (let i = 0; i < frames.length; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frames.length - i - 1;\n\n      const cachedFrameVariable = cachedFrame[i];\n      const frameVariable = frames[frameIndex];\n\n      // Drop out if we run out of frames to match up\n      if (!frameVariable || !cachedFrameVariable) {\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        cachedFrameVariable.vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        frameVariable.in_app === false ||\n        // The function names need to match\n        !functionNamesMatch(frameVariable.function, cachedFrameVariable.function)\n      ) {\n        continue;\n      }\n\n      frameVariable.vars = cachedFrameVariable.vars;\n    }\n  }\n\n  function addLocalVariablesToEvent(event) {\n    for (const exception of _optionalChain([event, 'optionalAccess', _19 => _19.exception, 'optionalAccess', _20 => _20.values]) || []) {\n      addLocalVariablesToException(exception);\n    }\n\n    return event;\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    async setupOnce() {\n      const client = getClient();\n      const clientOptions = _optionalChain([client, 'optionalAccess', _21 => _21.getOptions, 'call', _22 => _22()]);\n\n      if (!_optionalChain([clientOptions, 'optionalAccess', _23 => _23.includeLocalVariables])) {\n        return;\n      }\n\n      // Only setup this integration if the Node version is >= v18\n      // https://github.com/getsentry/sentry-javascript/issues/7697\n      const unsupportedNodeVersion = NODE_MAJOR < 18;\n\n      if (unsupportedNodeVersion) {\n        logger.log('The `LocalVariables` integration is only supported on Node >= v18.');\n        return;\n      }\n\n      if (await isDebuggerEnabled()) {\n        logger.warn('Local variables capture has been disabled because the debugger was already enabled');\n        return;\n      }\n\n      AsyncSession.create(sessionOverride).then(\n        session => {\n          function handlePaused(\n            stackParser,\n            { params: { reason, data, callFrames } },\n            complete,\n          ) {\n            if (reason !== 'exception' && reason !== 'promiseRejection') {\n              complete();\n              return;\n            }\n\n            _optionalChain([rateLimiter, 'optionalCall', _24 => _24()]);\n\n            // data.description contains the original error.stack\n            const exceptionHash = hashFromStack(stackParser, _optionalChain([data, 'optionalAccess', _25 => _25.description]));\n\n            if (exceptionHash == undefined) {\n              complete();\n              return;\n            }\n\n            const { add, next } = createCallbackList(frames => {\n              cachedFrames.set(exceptionHash, frames);\n              complete();\n            });\n\n            // Because we're queuing up and making all these calls synchronously, we can potentially overflow the stack\n            // For this reason we only attempt to get local variables for the first 5 frames\n            for (let i = 0; i < Math.min(callFrames.length, 5); i++) {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              const { scopeChain, functionName, this: obj } = callFrames[i];\n\n              const localScope = scopeChain.find(scope => scope.type === 'local');\n\n              // obj.className is undefined in ESM modules\n              const fn =\n                obj.className === 'global' || !obj.className ? functionName : `${obj.className}.${functionName}`;\n\n              if (_optionalChain([localScope, 'optionalAccess', _26 => _26.object, 'access', _27 => _27.objectId]) === undefined) {\n                add(frames => {\n                  frames[i] = { function: fn };\n                  next(frames);\n                });\n              } else {\n                const id = localScope.object.objectId;\n                add(frames =>\n                  _optionalChain([session, 'optionalAccess', _28 => _28.getLocalVariables, 'call', _29 => _29(id, vars => {\n                    frames[i] = { function: fn, vars };\n                    next(frames);\n                  })]),\n                );\n              }\n            }\n\n            next([]);\n          }\n\n          const captureAll = options.captureAllExceptions !== false;\n\n          session.configureAndConnect(\n            (ev, complete) =>\n              handlePaused(clientOptions.stackParser, ev , complete),\n            captureAll,\n          );\n\n          if (captureAll) {\n            const max = options.maxExceptionsPerSecond || 50;\n\n            rateLimiter = createRateLimiter(\n              max,\n              () => {\n                logger.log('Local variables rate-limit lifted.');\n                _optionalChain([session, 'optionalAccess', _30 => _30.setPauseOnExceptions, 'call', _31 => _31(true)]);\n              },\n              seconds => {\n                logger.log(\n                  `Local variables rate-limit exceeded. Disabling capturing of caught exceptions for ${seconds} seconds.`,\n                );\n                _optionalChain([session, 'optionalAccess', _32 => _32.setPauseOnExceptions, 'call', _33 => _33(false)]);\n              },\n            );\n          }\n\n          shouldProcessEvent = true;\n        },\n        error => {\n          logger.log('The `LocalVariables` integration failed to start.', error);\n        },\n      );\n    },\n    processEvent(event) {\n      if (shouldProcessEvent) {\n        return addLocalVariablesToEvent(event);\n      }\n\n      return event;\n    },\n    // These are entirely for testing\n    _getCachedFramesCount() {\n      return cachedFrames.size;\n    },\n    _getFirstCachedFrame() {\n      return cachedFrames.values()[0];\n    },\n  };\n}) ;\n\n/**\n * Adds local variables to exception frames.\n */\nconst localVariablesSyncIntegration = defineIntegration(_localVariablesSyncIntegration);\n\nexport { createCallbackList, hashFrames, hashFromStack, localVariablesSyncIntegration };\n//# sourceMappingURL=local-variables-sync.js.map\n","import { NODE_VERSION } from '../../nodeVersion.js';\nimport { localVariablesAsyncIntegration } from './local-variables-async.js';\nimport { localVariablesSyncIntegration } from './local-variables-sync.js';\n\nconst localVariablesIntegration = (options = {}) => {\n  return NODE_VERSION.major < 19 ? localVariablesSyncIntegration(options) : localVariablesAsyncIntegration(options);\n};\n\nexport { localVariablesIntegration };\n//# sourceMappingURL=index.js.map\n","import { consoleSandbox, getClient, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\n/**\n * @hidden\n */\nfunction logAndExitProcess(error) {\n  consoleSandbox(() => {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  });\n\n  const client = getClient();\n\n  if (client === undefined) {\n    DEBUG_BUILD && logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n    return;\n  }\n\n  const options = client.getOptions();\n  const timeout =\n    (options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout) ||\n    DEFAULT_SHUTDOWN_TIMEOUT;\n  client.close(timeout).then(\n    (result) => {\n      if (!result) {\n        DEBUG_BUILD && logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n      }\n      global.process.exit(1);\n    },\n    error => {\n      DEBUG_BUILD && logger.error(error);\n    },\n  );\n}\n\nexport { logAndExitProcess };\n//# sourceMappingURL=errorhandling.js.map\n","import { defineIntegration, getClient, captureException, consoleSandbox } from '@sentry/core';\nimport { logAndExitProcess } from '../utils/errorhandling.js';\n\nconst INTEGRATION_NAME = 'OnUnhandledRejection';\n\nconst _onUnhandledRejectionIntegration = ((options = {}) => {\n  const mode = options.mode || 'warn';\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      global.process.on('unhandledRejection', makeUnhandledPromiseHandler(client, { mode }));\n    },\n  };\n}) ;\n\n/**\n * Add a global promise rejection handler.\n */\nconst onUnhandledRejectionIntegration = defineIntegration(_onUnhandledRejectionIntegration);\n\n/**\n * Send an exception with reason\n * @param reason string\n * @param promise promise\n *\n * Exported only for tests.\n */\nfunction makeUnhandledPromiseHandler(\n  client,\n  options,\n) {\n  return function sendUnhandledPromise(reason, promise) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    captureException(reason, {\n      originalException: promise,\n      captureContext: {\n        extra: { unhandledPromiseRejection: true },\n      },\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n\n    handleRejection(reason, options);\n  };\n}\n\n/**\n * Handler for `mode` option\n */\nfunction handleRejection(reason, options) {\n  // https://github.com/nodejs/node/blob/7cf6f9e964aa00772965391c23acda6d71972a9a/lib/internal/process/promises.js#L234-L240\n  const rejectionWarning =\n    'This error originated either by ' +\n    'throwing inside of an async function without a catch block, ' +\n    'or by rejecting a promise which was not handled with .catch().' +\n    ' The promise rejected with the reason:';\n\n  /* eslint-disable no-console */\n  if (options.mode === 'warn') {\n    consoleSandbox(() => {\n      console.warn(rejectionWarning);\n      console.error(reason && typeof reason === 'object' && 'stack' in reason ? reason.stack : reason);\n    });\n  } else if (options.mode === 'strict') {\n    consoleSandbox(() => {\n      console.warn(rejectionWarning);\n    });\n    logAndExitProcess(reason);\n  }\n  /* eslint-enable no-console */\n}\n\nexport { makeUnhandledPromiseHandler, onUnhandledRejectionIntegration };\n//# sourceMappingURL=onunhandledrejection.js.map\n","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractAsyncHooksContextManager = void 0;\nconst events_1 = require(\"events\");\nconst ADD_LISTENER_METHODS = [\n    'addListener',\n    'on',\n    'once',\n    'prependListener',\n    'prependOnceListener',\n];\nclass AbstractAsyncHooksContextManager {\n    constructor() {\n        this._kOtListeners = Symbol('OtListeners');\n        this._wrapped = false;\n    }\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param context A context (span) to be bind to target\n     * @param target a function or event emitter. When target or one of its callbacks is called,\n     *  the provided context will be used as the active context for the duration of the call.\n     */\n    bind(context, target) {\n        if (target instanceof events_1.EventEmitter) {\n            return this._bindEventEmitter(context, target);\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(context, target);\n        }\n        return target;\n    }\n    _bindFunction(context, target) {\n        const manager = this;\n        const contextWrapper = function (...args) {\n            return manager.with(context, () => target.apply(this, args));\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        /**\n         * It isn't possible to tell Typescript that contextWrapper is the same as T\n         * so we forced to cast as any here.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return contextWrapper;\n    }\n    /**\n     * By default, EventEmitter call their callback with their context, which we do\n     * not want, instead we will bind a specific context to all callbacks that\n     * go through it.\n     * @param context the context we want to bind\n     * @param ee EventEmitter an instance of EventEmitter to patch\n     */\n    _bindEventEmitter(context, ee) {\n        const map = this._getPatchMap(ee);\n        if (map !== undefined)\n            return ee;\n        this._createPatchMap(ee);\n        // patch methods that add a listener to propagate context\n        ADD_LISTENER_METHODS.forEach(methodName => {\n            if (ee[methodName] === undefined)\n                return;\n            ee[methodName] = this._patchAddListener(ee, ee[methodName], context);\n        });\n        // patch methods that remove a listener\n        if (typeof ee.removeListener === 'function') {\n            ee.removeListener = this._patchRemoveListener(ee, ee.removeListener);\n        }\n        if (typeof ee.off === 'function') {\n            ee.off = this._patchRemoveListener(ee, ee.off);\n        }\n        // patch method that remove all listeners\n        if (typeof ee.removeAllListeners === 'function') {\n            ee.removeAllListeners = this._patchRemoveAllListeners(ee, ee.removeAllListeners);\n        }\n        return ee;\n    }\n    /**\n     * Patch methods that remove a given listener so that we match the \"patched\"\n     * version of that listener (the one that propagate context).\n     * @param ee EventEmitter instance\n     * @param original reference to the patched method\n     */\n    _patchRemoveListener(ee, original) {\n        const contextManager = this;\n        return function (event, listener) {\n            var _a;\n            const events = (_a = contextManager._getPatchMap(ee)) === null || _a === void 0 ? void 0 : _a[event];\n            if (events === undefined) {\n                return original.call(this, event, listener);\n            }\n            const patchedListener = events.get(listener);\n            return original.call(this, event, patchedListener || listener);\n        };\n    }\n    /**\n     * Patch methods that remove all listeners so we remove our\n     * internal references for a given event.\n     * @param ee EventEmitter instance\n     * @param original reference to the patched method\n     */\n    _patchRemoveAllListeners(ee, original) {\n        const contextManager = this;\n        return function (event) {\n            const map = contextManager._getPatchMap(ee);\n            if (map !== undefined) {\n                if (arguments.length === 0) {\n                    contextManager._createPatchMap(ee);\n                }\n                else if (map[event] !== undefined) {\n                    delete map[event];\n                }\n            }\n            return original.apply(this, arguments);\n        };\n    }\n    /**\n     * Patch methods on an event emitter instance that can add listeners so we\n     * can force them to propagate a given context.\n     * @param ee EventEmitter instance\n     * @param original reference to the patched method\n     * @param [context] context to propagate when calling listeners\n     */\n    _patchAddListener(ee, original, context) {\n        const contextManager = this;\n        return function (event, listener) {\n            /**\n             * This check is required to prevent double-wrapping the listener.\n             * The implementation for ee.once wraps the listener and calls ee.on.\n             * Without this check, we would wrap that wrapped listener.\n             * This causes an issue because ee.removeListener depends on the onceWrapper\n             * to properly remove the listener. If we wrap their wrapper, we break\n             * that detection.\n             */\n            if (contextManager._wrapped) {\n                return original.call(this, event, listener);\n            }\n            let map = contextManager._getPatchMap(ee);\n            if (map === undefined) {\n                map = contextManager._createPatchMap(ee);\n            }\n            let listeners = map[event];\n            if (listeners === undefined) {\n                listeners = new WeakMap();\n                map[event] = listeners;\n            }\n            const patchedListener = contextManager.bind(context, listener);\n            // store a weak reference of the user listener to ours\n            listeners.set(listener, patchedListener);\n            /**\n             * See comment at the start of this function for the explanation of this property.\n             */\n            contextManager._wrapped = true;\n            try {\n                return original.call(this, event, patchedListener);\n            }\n            finally {\n                contextManager._wrapped = false;\n            }\n        };\n    }\n    _createPatchMap(ee) {\n        const map = Object.create(null);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ee[this._kOtListeners] = map;\n        return map;\n    }\n    _getPatchMap(ee) {\n        return ee[this._kOtListeners];\n    }\n}\nexports.AbstractAsyncHooksContextManager = AbstractAsyncHooksContextManager;\n//# sourceMappingURL=AbstractAsyncHooksContextManager.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncHooksContextManager = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst asyncHooks = require(\"async_hooks\");\nconst AbstractAsyncHooksContextManager_1 = require(\"./AbstractAsyncHooksContextManager\");\nclass AsyncHooksContextManager extends AbstractAsyncHooksContextManager_1.AbstractAsyncHooksContextManager {\n    constructor() {\n        super();\n        this._contexts = new Map();\n        this._stack = [];\n        this._asyncHook = asyncHooks.createHook({\n            init: this._init.bind(this),\n            before: this._before.bind(this),\n            after: this._after.bind(this),\n            destroy: this._destroy.bind(this),\n            promiseResolve: this._destroy.bind(this),\n        });\n    }\n    active() {\n        var _a;\n        return (_a = this._stack[this._stack.length - 1]) !== null && _a !== void 0 ? _a : api_1.ROOT_CONTEXT;\n    }\n    with(context, fn, thisArg, ...args) {\n        this._enterContext(context);\n        try {\n            return fn.call(thisArg, ...args);\n        }\n        finally {\n            this._exitContext();\n        }\n    }\n    enable() {\n        this._asyncHook.enable();\n        return this;\n    }\n    disable() {\n        this._asyncHook.disable();\n        this._contexts.clear();\n        this._stack = [];\n        return this;\n    }\n    /**\n     * Init hook will be called when userland create a async context, setting the\n     * context as the current one if it exist.\n     * @param uid id of the async context\n     * @param type the resource type\n     */\n    _init(uid, type) {\n        // ignore TIMERWRAP as they combine timers with same timeout which can lead to\n        // false context propagation. TIMERWRAP has been removed in node 11\n        // every timer has it's own `Timeout` resource anyway which is used to propagate\n        // context.\n        if (type === 'TIMERWRAP')\n            return;\n        const context = this._stack[this._stack.length - 1];\n        if (context !== undefined) {\n            this._contexts.set(uid, context);\n        }\n    }\n    /**\n     * Destroy hook will be called when a given context is no longer used so we can\n     * remove its attached context.\n     * @param uid uid of the async context\n     */\n    _destroy(uid) {\n        this._contexts.delete(uid);\n    }\n    /**\n     * Before hook is called just before executing a async context.\n     * @param uid uid of the async context\n     */\n    _before(uid) {\n        const context = this._contexts.get(uid);\n        if (context !== undefined) {\n            this._enterContext(context);\n        }\n    }\n    /**\n     * After hook is called just after completing the execution of a async context.\n     */\n    _after() {\n        this._exitContext();\n    }\n    /**\n     * Set the given context as active\n     */\n    _enterContext(context) {\n        this._stack.push(context);\n    }\n    /**\n     * Remove the context at the root of the stack\n     */\n    _exitContext() {\n        this._stack.pop();\n    }\n}\nexports.AsyncHooksContextManager = AsyncHooksContextManager;\n//# sourceMappingURL=AsyncHooksContextManager.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncLocalStorageContextManager = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst async_hooks_1 = require(\"async_hooks\");\nconst AbstractAsyncHooksContextManager_1 = require(\"./AbstractAsyncHooksContextManager\");\nclass AsyncLocalStorageContextManager extends AbstractAsyncHooksContextManager_1.AbstractAsyncHooksContextManager {\n    constructor() {\n        super();\n        this._asyncLocalStorage = new async_hooks_1.AsyncLocalStorage();\n    }\n    active() {\n        var _a;\n        return (_a = this._asyncLocalStorage.getStore()) !== null && _a !== void 0 ? _a : api_1.ROOT_CONTEXT;\n    }\n    with(context, fn, thisArg, ...args) {\n        const cb = thisArg == null ? fn : fn.bind(thisArg);\n        return this._asyncLocalStorage.run(context, cb, ...args);\n    }\n    enable() {\n        return this;\n    }\n    disable() {\n        this._asyncLocalStorage.disable();\n        return this;\n    }\n}\nexports.AsyncLocalStorageContextManager = AsyncLocalStorageContextManager;\n//# sourceMappingURL=AsyncLocalStorageContextManager.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncLocalStorageContextManager = exports.AsyncHooksContextManager = void 0;\nvar AsyncHooksContextManager_1 = require(\"./AsyncHooksContextManager\");\nObject.defineProperty(exports, \"AsyncHooksContextManager\", { enumerable: true, get: function () { return AsyncHooksContextManager_1.AsyncHooksContextManager; } });\nvar AsyncLocalStorageContextManager_1 = require(\"./AsyncLocalStorageContextManager\");\nObject.defineProperty(exports, \"AsyncLocalStorageContextManager\", { enumerable: true, get: function () { return AsyncLocalStorageContextManager_1.AsyncLocalStorageContextManager; } });\n//# sourceMappingURL=index.js.map","import { AsyncLocalStorageContextManager } from '@opentelemetry/context-async-hooks';\nimport { wrapContextManagerClass } from '@sentry/opentelemetry';\n\n/**\n * This is a custom ContextManager for OpenTelemetry, which extends the default AsyncLocalStorageContextManager.\n * It ensures that we create a new hub per context, so that the OTEL Context & the Sentry Hub are always in sync.\n *\n * Note that we currently only support AsyncHooks with this,\n * but since this should work for Node 14+ anyhow that should be good enough.\n */\nconst SentryContextManager = wrapContextManagerClass(AsyncLocalStorageContextManager);\n\nexport { SentryContextManager };\n//# sourceMappingURL=contextManager.js.map\n","import { posix, sep } from 'node:path';\nimport { dirname } from '@sentry/core';\n\n/** normalizes Windows paths */\nfunction normalizeWindowsPath(path) {\n  return path\n    .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n    .replace(/\\\\/g, '/'); // replace all `\\` instances with `/`\n}\n\n/** Creates a function that gets the module name from a filename */\nfunction createGetModuleFromFilename(\n  basePath = process.argv[1] ? dirname(process.argv[1]) : process.cwd(),\n  isWindows = sep === '\\\\',\n) {\n  const normalizedBase = isWindows ? normalizeWindowsPath(basePath) : basePath;\n\n  return (filename) => {\n    if (!filename) {\n      return;\n    }\n\n    const normalizedFilename = isWindows ? normalizeWindowsPath(filename) : filename;\n\n    // eslint-disable-next-line prefer-const\n    let { dir, base: file, ext } = posix.parse(normalizedFilename);\n\n    if (ext === '.js' || ext === '.mjs' || ext === '.cjs') {\n      file = file.slice(0, ext.length * -1);\n    }\n\n    // The file name might be URI-encoded which we want to decode to\n    // the original file name.\n    const decodedFile = decodeURIComponent(file);\n\n    if (!dir) {\n      // No dirname whatsoever\n      dir = '.';\n    }\n\n    const n = dir.lastIndexOf('/node_modules');\n    if (n > -1) {\n      return `${dir.slice(n + 14).replace(/\\//g, '.')}:${decodedFile}`;\n    }\n\n    // Let's see if it's a part of the main module\n    // To be a part of main module, it has to share the same base\n    if (dir.startsWith(normalizedBase)) {\n      const moduleName = dir.slice(normalizedBase.length + 1).replace(/\\//g, '.');\n      return moduleName ? `${moduleName}:${decodedFile}` : decodedFile;\n    }\n\n    return decodedFile;\n  };\n}\n\nexport { createGetModuleFromFilename };\n//# sourceMappingURL=module.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/core';\nimport * as os from 'node:os';\nimport { trace } from '@opentelemetry/api';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { ServerRuntimeClient, applySdkMetadata, logger, SDK_VERSION } from '@sentry/core';\nimport { getTraceContextForScope } from '@sentry/opentelemetry';\nimport { isMainThread, threadId } from 'worker_threads';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst DEFAULT_CLIENT_REPORT_FLUSH_INTERVAL_MS = 60000; // 60s was chosen arbitrarily\n\n/** A client for using Sentry with Node & OpenTelemetry. */\nclass NodeClient extends ServerRuntimeClient {\n\n   constructor(options) {\n    const clientOptions = {\n      ...options,\n      platform: 'node',\n      runtime: { name: 'node', version: global.process.version },\n      serverName: options.serverName || global.process.env.SENTRY_NAME || os.hostname(),\n    };\n\n    if (options.openTelemetryInstrumentations) {\n      registerInstrumentations({\n        instrumentations: options.openTelemetryInstrumentations,\n      });\n    }\n\n    applySdkMetadata(clientOptions, 'node');\n\n    logger.log(\n      `Initializing Sentry: process: ${process.pid}, thread: ${isMainThread ? 'main' : `worker-${threadId}`}.`,\n    );\n\n    super(clientOptions);\n  }\n\n  /** Get the OTEL tracer. */\n   get tracer() {\n    if (this._tracer) {\n      return this._tracer;\n    }\n\n    const name = '@sentry/node';\n    const version = SDK_VERSION;\n    const tracer = trace.getTracer(name, version);\n    this._tracer = tracer;\n\n    return tracer;\n  }\n\n  // Eslint ignore explanation: This is already documented in super.\n  // eslint-disable-next-line jsdoc/require-jsdoc\n   async flush(timeout) {\n    const provider = this.traceProvider;\n    const spanProcessor = _optionalChain([provider, 'optionalAccess', _ => _.activeSpanProcessor]);\n\n    if (spanProcessor) {\n      await spanProcessor.forceFlush();\n    }\n\n    if (this.getOptions().sendClientReports) {\n      this._flushOutcomes();\n    }\n\n    return super.flush(timeout);\n  }\n\n  // Eslint ignore explanation: This is already documented in super.\n  // eslint-disable-next-line jsdoc/require-jsdoc\n   close(timeout) {\n    if (this._clientReportInterval) {\n      clearInterval(this._clientReportInterval);\n    }\n\n    if (this._clientReportOnExitFlushListener) {\n      process.off('beforeExit', this._clientReportOnExitFlushListener);\n    }\n\n    return super.close(timeout);\n  }\n\n  /**\n   * Will start tracking client reports for this client.\n   *\n   * NOTICE: This method will create an interval that is periodically called and attach a `process.on('beforeExit')`\n   * hook. To clean up these resources, call `.close()` when you no longer intend to use the client. Not doing so will\n   * result in a memory leak.\n   */\n  // The reason client reports need to be manually activated with this method instead of just enabling them in a\n  // constructor, is that if users periodically and unboundedly create new clients, we will create more and more\n  // intervals and beforeExit listeners, thus leaking memory. In these situations, users are required to call\n  // `client.close()` in order to dispose of the acquired resources.\n  // We assume that calling this method in Sentry.init() is a sensible default, because calling Sentry.init() over and\n  // over again would also result in memory leaks.\n  // Note: We have experimented with using `FinalizationRegisty` to clear the interval when the client is garbage\n  // collected, but it did not work, because the cleanup function never got called.\n   startClientReportTracking() {\n    const clientOptions = this.getOptions();\n    if (clientOptions.sendClientReports) {\n      this._clientReportOnExitFlushListener = () => {\n        this._flushOutcomes();\n      };\n\n      this._clientReportInterval = setInterval(() => {\n        DEBUG_BUILD && logger.log('Flushing client reports based on interval.');\n        this._flushOutcomes();\n      }, _nullishCoalesce(clientOptions.clientReportFlushInterval, () => ( DEFAULT_CLIENT_REPORT_FLUSH_INTERVAL_MS)))\n        // Unref is critical for not preventing the process from exiting because the interval is active.\n        .unref();\n\n      process.on('beforeExit', this._clientReportOnExitFlushListener);\n    }\n  }\n\n  /** Custom implementation for OTEL, so we can handle scope-span linking. */\n   _getTraceInfoFromScope(\n    scope,\n  ) {\n    if (!scope) {\n      return [undefined, undefined];\n    }\n\n    return getTraceContextForScope(this, scope);\n  }\n}\n\nexport { NodeClient };\n//# sourceMappingURL=client.js.map\n","import { _optionalChain } from '@sentry/core';\nimport moduleModule from 'module';\nimport { diag, DiagLogLevel } from '@opentelemetry/api';\nimport { Resource } from '@opentelemetry/resources';\nimport { BasicTracerProvider } from '@opentelemetry/sdk-trace-base';\nimport { ATTR_SERVICE_NAME, SEMRESATTRS_SERVICE_NAMESPACE, ATTR_SERVICE_VERSION } from '@opentelemetry/semantic-conventions';\nimport { logger, SDK_VERSION, GLOBAL_OBJ, consoleSandbox } from '@sentry/core';\nimport { SentrySampler, SentrySpanProcessor, SentryPropagator } from '@sentry/opentelemetry';\nimport { createAddHookMessageChannel } from 'import-in-the-middle';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getOpenTelemetryInstrumentationToPreload } from '../integrations/tracing/index.js';\nimport { SentryContextManager } from '../otel/contextManager.js';\nimport { isCjs } from '../utils/commonjs.js';\n\n// About 277h - this must fit into new Array(len)!\nconst MAX_MAX_SPAN_WAIT_DURATION = 1000000;\n\n/**\n * Initialize OpenTelemetry for Node.\n */\nfunction initOpenTelemetry(client, options = {}) {\n  if (client.getOptions().debug) {\n    setupOpenTelemetryLogger();\n  }\n\n  const provider = setupOtel(client, options);\n  client.traceProvider = provider;\n}\n\nfunction getRegisterOptions(esmHookConfig) {\n  // TODO(v9): Make onlyIncludeInstrumentedModules: true the default behavior.\n  if (_optionalChain([esmHookConfig, 'optionalAccess', _ => _.onlyIncludeInstrumentedModules])) {\n    const { addHookMessagePort } = createAddHookMessageChannel();\n    // If the user supplied include, we need to use that as a starting point or use an empty array to ensure no modules\n    // are wrapped if they are not hooked\n    // eslint-disable-next-line deprecation/deprecation\n    return { data: { addHookMessagePort, include: esmHookConfig.include || [] }, transferList: [addHookMessagePort] };\n  }\n\n  return { data: esmHookConfig };\n}\n\n/** Initialize the ESM loader. */\nfunction maybeInitializeEsmLoader(esmHookConfig) {\n  const [nodeMajor = 0, nodeMinor = 0] = process.versions.node.split('.').map(Number);\n\n  // Register hook was added in v20.6.0 and v18.19.0\n  if (nodeMajor >= 22 || (nodeMajor === 20 && nodeMinor >= 6) || (nodeMajor === 18 && nodeMinor >= 19)) {\n    // We need to work around using import.meta.url directly because jest complains about it.\n    const importMetaUrl =\n      typeof import.meta.url !== 'undefined' ? import.meta.url : undefined;\n\n    if (!GLOBAL_OBJ._sentryEsmLoaderHookRegistered && importMetaUrl) {\n      try {\n        // @ts-expect-error register is available in these versions\n        moduleModule.register('import-in-the-middle/hook.mjs', importMetaUrl, getRegisterOptions(esmHookConfig));\n        GLOBAL_OBJ._sentryEsmLoaderHookRegistered = true;\n      } catch (error) {\n        logger.warn('Failed to register ESM hook', error);\n      }\n    }\n  } else {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Sentry] You are using Node.js in ESM mode (\"import syntax\"). The Sentry Node.js SDK is not compatible with ESM in Node.js versions before 18.19.0 or before 20.6.0. Please either build your application with CommonJS (\"require() syntax\"), or upgrade your Node.js version.',\n      );\n    });\n  }\n}\n\n/**\n * Preload OpenTelemetry for Node.\n * This can be used to preload instrumentation early, but set up Sentry later.\n * By preloading the OTEL instrumentation wrapping still happens early enough that everything works.\n */\nfunction preloadOpenTelemetry(options = {}) {\n  const { debug } = options;\n\n  if (debug) {\n    logger.enable();\n    setupOpenTelemetryLogger();\n  }\n\n  if (!isCjs()) {\n    maybeInitializeEsmLoader(options.registerEsmLoaderHooks);\n  }\n\n  // These are all integrations that we need to pre-load to ensure they are set up before any other code runs\n  getPreloadMethods(options.integrations).forEach(fn => {\n    fn();\n\n    if (debug) {\n      logger.log(`[Sentry] Preloaded ${fn.id} instrumentation`);\n    }\n  });\n}\n\nfunction getPreloadMethods(integrationNames) {\n  const instruments = getOpenTelemetryInstrumentationToPreload();\n\n  if (!integrationNames) {\n    return instruments;\n  }\n\n  return instruments.filter(instrumentation => integrationNames.includes(instrumentation.id));\n}\n\n/** Just exported for tests. */\nfunction setupOtel(client, options = {}) {\n  // Create and configure NodeTracerProvider\n  const provider = new BasicTracerProvider({\n    sampler: new SentrySampler(client),\n    resource: new Resource({\n      [ATTR_SERVICE_NAME]: 'node',\n      // eslint-disable-next-line deprecation/deprecation\n      [SEMRESATTRS_SERVICE_NAMESPACE]: 'sentry',\n      [ATTR_SERVICE_VERSION]: SDK_VERSION,\n    }),\n    forceFlushTimeoutMillis: 500,\n    spanProcessors: [\n      new SentrySpanProcessor({\n        timeout: _clampSpanProcessorTimeout(client.getOptions().maxSpanWaitDuration),\n      }),\n      ...(options.spanProcessors || []),\n    ],\n  });\n\n  // Initialize the provider\n  provider.register({\n    propagator: new SentryPropagator(),\n    contextManager: new SentryContextManager(),\n  });\n\n  return provider;\n}\n\n/** Just exported for tests. */\nfunction _clampSpanProcessorTimeout(maxSpanWaitDuration) {\n  if (maxSpanWaitDuration == null) {\n    return undefined;\n  }\n\n  // We guard for a max. value here, because we create an array with this length\n  // So if this value is too large, this would fail\n  if (maxSpanWaitDuration > MAX_MAX_SPAN_WAIT_DURATION) {\n    DEBUG_BUILD &&\n      logger.warn(`\\`maxSpanWaitDuration\\` is too high, using the maximum value of ${MAX_MAX_SPAN_WAIT_DURATION}`);\n    return MAX_MAX_SPAN_WAIT_DURATION;\n  } else if (maxSpanWaitDuration <= 0 || Number.isNaN(maxSpanWaitDuration)) {\n    DEBUG_BUILD && logger.warn('`maxSpanWaitDuration` must be a positive number, using default value instead.');\n    return undefined;\n  }\n\n  return maxSpanWaitDuration;\n}\n\n/**\n * Setup the OTEL logger to use our own logger.\n */\nfunction setupOpenTelemetryLogger() {\n  const otelLogger = new Proxy(logger , {\n    get(target, prop, receiver) {\n      const actualProp = prop === 'verbose' ? 'debug' : prop;\n      return Reflect.get(target, actualProp, receiver);\n    },\n  });\n\n  // Disable diag, to ensure this works even if called multiple times\n  diag.disable();\n  diag.setLogger(otelLogger, DiagLogLevel.DEBUG);\n}\n\nexport { _clampSpanProcessorTimeout, initOpenTelemetry, maybeInitializeEsmLoader, preloadOpenTelemetry, setupOtel };\n//# sourceMappingURL=initOtel.js.map\n","import { normalizeUrlToBase } from '@sentry/core';\nimport { app } from 'electron';\n\nlet RENDERERS;\n/**\n * Enable tracking of renderer properties via events\n *\n * This allows us to get the last known state of a renderer even if it's been destroyed\n **/\nfunction trackRendererProperties() {\n    if (RENDERERS) {\n        return;\n    }\n    const renderers = (RENDERERS = new Map());\n    function updateUrl(id, url) {\n        const state = renderers.get(id) || { id };\n        state.url = normalizeUrlToBase(url, app.getAppPath());\n        renderers.set(id, state);\n    }\n    function updateTitle(id, title) {\n        const state = renderers.get(id) || { id };\n        state.title = title;\n        renderers.set(id, state);\n    }\n    app.on('web-contents-created', (_, contents) => {\n        const id = contents.id;\n        contents.on('did-navigate', (_, url) => updateUrl(id, url));\n        contents.on('did-navigate-in-page', (_, url) => updateUrl(id, url));\n        contents.on('page-title-updated', (_, title) => updateTitle(id, title));\n        contents.on('destroyed', () => {\n            // We need to delay since consumers of this API sometimes need to\n            // access the state shortly after a renderer is destroyed\n            setTimeout(() => {\n                renderers.delete(id);\n            }, 5000);\n        });\n    });\n}\n/** Gets the properties for a renderer */\nfunction getRendererProperties(id) {\n    return RENDERERS?.get(id);\n}\n\nexport { getRendererProperties, trackRendererProperties };\n//# sourceMappingURL=renderers.js.map\n","import { defineIntegration, addBreadcrumb } from '@sentry/core';\nimport { app, screen, powerMonitor, autoUpdater } from 'electron';\nimport { trackRendererProperties, getRendererProperties } from '../renderers.js';\n\nconst DEFAULT_OPTIONS = {\n    // We exclude events starting with remote as they can be quite verbose\n    app: (name) => !name.startsWith('remote-'),\n    autoUpdater: () => true,\n    webContents: (name) => ['dom-ready', 'context-menu', 'load-url', 'destroyed'].includes(name),\n    browserWindow: (name) => [\n        'closed',\n        'close',\n        'unresponsive',\n        'responsive',\n        'show',\n        'blur',\n        'focus',\n        'hide',\n        'maximize',\n        'minimize',\n        'restore',\n        'enter-full-screen',\n        'leave-full-screen',\n    ].includes(name),\n    screen: () => true,\n    powerMonitor: () => true,\n    captureWindowTitles: false,\n};\n/** Converts all user supplied options to function | false */\nfunction normalizeOptions(options) {\n    return Object.keys(options).reduce((obj, k) => {\n        if (k === 'captureWindowTitles') {\n            obj[k] = !!options[k];\n        }\n        else {\n            const val = options[k];\n            if (Array.isArray(val)) {\n                obj[k] = (name) => val.includes(name);\n            }\n            else if (typeof val === 'function' || val === false) {\n                obj[k] = val;\n            }\n        }\n        return obj;\n    }, {});\n}\n/**\n * Adds breadcrumbs for Electron events.\n */\nconst electronBreadcrumbsIntegration = defineIntegration((userOptions = {}) => {\n    const options = {\n        ...DEFAULT_OPTIONS,\n        ...normalizeOptions(userOptions),\n    };\n    function patchEventEmitter(emitter, category, shouldCapture, id) {\n        const emit = emitter.emit.bind(emitter);\n        emitter.emit = (event, ...args) => {\n            if (shouldCapture && shouldCapture(event)) {\n                const breadcrumb = {\n                    category: 'electron',\n                    message: `${category}.${event}`,\n                    timestamp: new Date().getTime() / 1000,\n                    type: 'ui',\n                };\n                if (id) {\n                    breadcrumb.data = { ...getRendererProperties(id) };\n                    if (!options.captureWindowTitles && breadcrumb.data?.title) {\n                        delete breadcrumb.data?.title;\n                    }\n                }\n                addBreadcrumb(breadcrumb);\n            }\n            return emit(event, ...args);\n        };\n    }\n    return {\n        name: 'ElectronBreadcrumbs',\n        setup(client) {\n            const clientOptions = client.getOptions();\n            trackRendererProperties();\n            app.whenReady().then(() => {\n                // We can't access these until app 'ready'\n                if (options.screen) {\n                    patchEventEmitter(screen, 'screen', options.screen);\n                }\n                if (options.powerMonitor) {\n                    patchEventEmitter(powerMonitor, 'powerMonitor', options.powerMonitor);\n                }\n            }, () => {\n                // ignore\n            });\n            if (options.app) {\n                patchEventEmitter(app, 'app', options.app);\n            }\n            if (options.autoUpdater) {\n                patchEventEmitter(autoUpdater, 'autoUpdater', options.autoUpdater);\n            }\n            if (options.browserWindow) {\n                app.on('browser-window-created', (_, window) => {\n                    const id = window.webContents.id;\n                    const windowName = clientOptions?.getRendererName?.(window.webContents) || 'window';\n                    patchEventEmitter(window, windowName, options.browserWindow, id);\n                });\n            }\n            if (options.webContents) {\n                app.on('web-contents-created', (_, contents) => {\n                    const id = contents.id;\n                    const webContentsName = clientOptions?.getRendererName?.(contents) || 'renderer';\n                    patchEventEmitter(contents, webContentsName, options.webContents, id);\n                });\n            }\n        },\n    };\n});\n\nexport { electronBreadcrumbsIntegration, normalizeOptions };\n//# sourceMappingURL=electron-breadcrumbs.js.map\n","import { defineIntegration, captureException } from '@sentry/core';\nimport { dialog } from 'electron';\n\n/** Capture unhandled errors. */\nconst onUncaughtExceptionIntegration = defineIntegration(() => {\n    return {\n        name: 'OnUncaughtException',\n        setup(client) {\n            const options = client.getOptions();\n            global.process.on('uncaughtException', (error) => {\n                captureException(error, {\n                    originalException: error,\n                    captureContext: {\n                        level: 'fatal',\n                    },\n                    data: {\n                        mechanism: {\n                            handled: false,\n                            type: 'generic',\n                        },\n                    },\n                });\n                client.flush(options.shutdownTimeout || 2000).then(() => {\n                    if (options?.onFatalError) {\n                        options.onFatalError(error);\n                    }\n                    else if (global.process.listenerCount('uncaughtException') <= 2) {\n                        // In addition to this handler there is always one in Electron\n                        // The dialog is only shown if there are no other handlers\n                        // eslint-disable-next-line no-console\n                        console.error('Uncaught Exception:');\n                        // eslint-disable-next-line no-console\n                        console.error(error);\n                        const ref = error.stack;\n                        const stack = ref !== undefined ? ref : `${error.name}: ${error.message}`;\n                        const message = `Uncaught Exception:\\n${stack}`;\n                        dialog.showErrorBox('A JavaScript error occurred in the main process', message);\n                    }\n                }, () => {\n                    // ignore\n                });\n            });\n        },\n    };\n});\n\nexport { onUncaughtExceptionIntegration };\n//# sourceMappingURL=onuncaughtexception.js.map\n","import { getIsolationScope, getCurrentScope, getGlobalScope, mergeScopeData } from '@sentry/core';\n\n/** Gets the merged scope data */\nfunction getScopeData() {\n    const globalScope = getGlobalScope().getScopeData();\n    const isolationScope = getIsolationScope().getScopeData();\n    const currentScope = getCurrentScope().getScopeData();\n    mergeScopeData(globalScope, isolationScope);\n    mergeScopeData(globalScope, currentScope);\n    globalScope.eventProcessors = [];\n    return globalScope;\n}\n/** Hooks both current and isolation scope changes and passes merged scope on changes  */\nfunction addScopeListener(callback) {\n    getIsolationScope().addScopeListener((isolation) => {\n        const merged = getScopeData();\n        callback(merged, isolation);\n    });\n    getCurrentScope().addScopeListener((current) => {\n        const merged = getScopeData();\n        callback(merged, current);\n    });\n    getGlobalScope().addScopeListener((global) => {\n        const merged = getScopeData();\n        callback(merged, global);\n    });\n}\n\nexport { addScopeListener, getScopeData };\n//# sourceMappingURL=scope.js.map\n","const SDK_VERSION = '5.11.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { app } from 'electron';\nimport { SDK_VERSION } from './version.js';\n\nconst SDK_NAME = 'sentry.javascript.electron';\n/** Gets SDK info */\nfunction getSdkInfo() {\n    return {\n        name: SDK_NAME,\n        packages: [\n            {\n                name: 'npm:@sentry/electron',\n                version: SDK_VERSION,\n            },\n        ],\n        version: SDK_VERSION,\n    };\n}\n/** Gets the default release name */\nfunction getDefaultReleaseName() {\n    const app_name = app.name || app.getName();\n    return `${app_name.replace(/\\W/g, '-')}@${app.getVersion()}`;\n}\n/** Gets the default environment */\nfunction getDefaultEnvironment() {\n    return app.isPackaged ? 'production' : 'development';\n}\n/**\n * Gets the default event data by calling all event processors.\n */\nasync function getEventDefaults(client) {\n    let event = { message: 'test' };\n    const eventHint = {};\n    for (const processor of client.getEventProcessors()) {\n        if (event === null)\n            break;\n        event = await processor(event, eventHint);\n    }\n    delete event?.message;\n    return event || {};\n}\n\nexport { SDK_NAME, getDefaultEnvironment, getDefaultReleaseName, getEventDefaults, getSdkInfo };\n//# sourceMappingURL=context.js.map\n","/** Ways to communicate between the renderer and main process  */\nvar IPCMode;\n(function (IPCMode) {\n    /** Configures Electron IPC to receive messages from renderers */\n    IPCMode[IPCMode[\"Classic\"] = 1] = \"Classic\";\n    /** Configures Electron protocol module to receive messages from renderers */\n    IPCMode[IPCMode[\"Protocol\"] = 2] = \"Protocol\";\n    /**\n     * Configures both methods for best compatibility.\n     *\n     * Renderers favour IPC but fall back to protocol if IPC has not\n     * been configured in a preload script\n     */\n    IPCMode[IPCMode[\"Both\"] = 3] = \"Both\";\n})(IPCMode || (IPCMode = {}));\nconst PROTOCOL_SCHEME = 'sentry-ipc';\nvar IPCChannel;\n(function (IPCChannel) {\n    /** IPC to check main process is listening */\n    IPCChannel[\"RENDERER_START\"] = \"sentry-electron.renderer-start\";\n    /** IPC to send a captured event to Sentry. */\n    IPCChannel[\"EVENT\"] = \"sentry-electron.event\";\n    /** IPC to pass scope changes to main process. */\n    IPCChannel[\"SCOPE\"] = \"sentry-electron.scope\";\n    /** IPC to pass envelopes to the main process. */\n    IPCChannel[\"ENVELOPE\"] = \"sentry-electron.envelope\";\n    /** IPC to pass renderer status updates */\n    IPCChannel[\"STATUS\"] = \"sentry-electron.status\";\n    /** IPC to pass renderer metric additions to the main process */\n    IPCChannel[\"ADD_METRIC\"] = \"sentry-electron.add-metric\";\n})(IPCChannel || (IPCChannel = {}));\nconst RENDERER_ID_HEADER = 'sentry-electron-renderer-id';\nconst UTILITY_PROCESS_MAGIC_MESSAGE_KEY = '__sentry_message_port_message__';\n/** Does the message look like the magic message */\nfunction isMagicMessage(msg) {\n    return !!(msg && typeof msg === 'object' && UTILITY_PROCESS_MAGIC_MESSAGE_KEY in msg);\n}\n/** Get the magic message to send to the utility process */\nfunction getMagicMessage() {\n    return { [UTILITY_PROCESS_MAGIC_MESSAGE_KEY]: true };\n}\n\nexport { IPCChannel, IPCMode, PROTOCOL_SCHEME, RENDERER_ID_HEADER, getMagicMessage, isMagicMessage };\n//# sourceMappingURL=ipc.js.map\n","import { parseSemver } from '@sentry/core';\nimport { app } from 'electron';\nimport { join } from 'path';\nimport { RENDERER_ID_HEADER } from '../common/ipc.js';\n\nconst parsed = parseSemver(process.versions.electron);\nconst version = { major: parsed.major || 0, minor: parsed.minor || 0, patch: parsed.patch || 0 };\nconst ELECTRON_MAJOR_VERSION = version.major;\nconst EXIT_REASONS = [\n    'clean-exit',\n    'abnormal-exit',\n    'killed',\n    'crashed',\n    'oom',\n    'launch-failed',\n    'integrity-failure',\n];\nconst CRASH_REASONS = ['crashed', 'oom'];\n/** Gets the Sentry Cache path */\nfunction getSentryCachePath() {\n    return join(app.getPath('userData'), 'sentry');\n}\n/**\n * Uses Crashpad on Linux\n * https://github.com/electron/electron/issues/27859\n */\nfunction crashpadLinux() {\n    if (version.major >= 16) {\n        return true;\n    }\n    // Crashpad Linux for v15 is behind a switch\n    return app.commandLine.hasSwitch('enable-crashpad');\n}\n/** Is using Crashpad */\nfunction usesCrashpad() {\n    return process.platform !== 'linux' || crashpadLinux();\n}\n/**\n * Electron >= 25 support `protocol.handle`\n */\nfunction supportsProtocolHandle() {\n    return version.major >= 25;\n}\n/**\n * Registers a custom protocol to receive events from the renderer\n *\n * Uses `protocol.handle` if available, otherwise falls back to `protocol.registerStringProtocol`\n */\nfunction registerProtocol(protocol, scheme, callback) {\n    if (supportsProtocolHandle()) {\n        protocol.handle(scheme, async (request) => {\n            callback({\n                windowId: request.headers.get(RENDERER_ID_HEADER) || undefined,\n                url: request.url,\n                body: Buffer.from(await request.arrayBuffer()),\n            });\n            return new Response('');\n        });\n    }\n    else {\n        // eslint-disable-next-line deprecation/deprecation\n        protocol.registerStringProtocol(scheme, (request, complete) => {\n            callback({\n                windowId: request.headers[RENDERER_ID_HEADER],\n                url: request.url,\n                body: request.uploadData?.[0]?.bytes,\n            });\n            complete('');\n        });\n    }\n}\n\nexport { CRASH_REASONS, ELECTRON_MAJOR_VERSION, EXIT_REASONS, getSentryCachePath, registerProtocol, usesCrashpad };\n//# sourceMappingURL=electron-normalize.js.map\n","// This code was originally copied from  https://github.com/DirtyHairy/async-mutex\n// before being significantly simplified for our usage\n//\n// Copied at commit: 3d2d987e60799d0fa222f1df8f99fc90ed570bfd\n// Original licence:\n/** An async mutex that queues up tasks for a shared resource */\nclass Mutex {\n    constructor() {\n        this._entries = [];\n        this._waiters = [];\n        this._value = 1;\n    }\n    /** Run a task when all pending tasks are complete */\n    async runExclusive(task) {\n        const release = await this._acquire();\n        try {\n            return await task();\n        }\n        finally {\n            release();\n        }\n    }\n    /** Gets a promise that resolves when all pending tasks are complete */\n    _acquire() {\n        return new Promise((resolve, reject) => {\n            this._entries.push({ resolve, reject });\n            this._dispatch();\n        });\n    }\n    /** Releases after a task is complete */\n    _release() {\n        this._value += 1;\n        this._dispatch();\n    }\n    /** Dispatches pending tasks */\n    _dispatch() {\n        for (let weight = this._value; weight > 0; weight--) {\n            const queueEntry = this._entries?.shift();\n            if (!queueEntry)\n                continue;\n            this._value -= weight;\n            weight = this._value + 1;\n            queueEntry.resolve(this._newReleaser());\n        }\n        this._drainUnlockWaiters();\n    }\n    /** Creates a new releaser */\n    _newReleaser() {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this._release();\n        };\n    }\n    /** Drain unlock waiters */\n    _drainUnlockWaiters() {\n        for (let weight = this._value; weight > 0; weight--) {\n            if (!this._waiters[weight - 1])\n                continue;\n            this._waiters.forEach((waiter) => waiter());\n            this._waiters = [];\n        }\n    }\n}\n\nexport { Mutex };\n//# sourceMappingURL=mutex.js.map\n","import { logger } from '@sentry/core';\nimport { promises } from 'fs';\nimport { join, dirname } from 'path';\nimport { Mutex } from './mutex.js';\n\nconst dateFormat = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.*\\d{0,10}Z$/;\n/** JSON revive function to enable de-serialization of Date objects */\nfunction dateReviver(_, value) {\n    if (typeof value === 'string' && dateFormat.test(value)) {\n        return new Date(value);\n    }\n    return value;\n}\n/**\n * Stores data serialized to a JSON file.\n */\nclass Store {\n    /**\n     * Creates a new store.\n     *\n     * @param path A unique filename to store this data.\n     * @param id A unique filename to store this data.\n     * @param initial An initial value to initialize data with.\n     */\n    constructor(path, id, initial) {\n        this._lock = new Mutex();\n        this._path = join(path, `${id}.json`);\n        this._initial = initial;\n    }\n    /**\n     * Updates data by replacing it with the given value.\n     * @param data New data to replace the previous one.\n     */\n    async set(data) {\n        await this._lock.runExclusive(async () => {\n            this._data = data;\n            try {\n                if (data === undefined) {\n                    try {\n                        await promises.unlink(this._path);\n                    }\n                    catch (_) {\n                        //\n                    }\n                }\n                else {\n                    await promises.mkdir(dirname(this._path), { recursive: true });\n                    await promises.writeFile(this._path, JSON.stringify(data));\n                }\n            }\n            catch (e) {\n                logger.warn('Failed to write to store', e);\n                // This usually fails due to anti virus scanners, issues in the file\n                // system, or problems with network drives. We cannot fix or handle this\n                // issue and must resume gracefully. Thus, we have to ignore this error.\n            }\n        });\n    }\n    /**\n     * Returns the current data.\n     *\n     * When invoked for the first time, it will try to load previously stored data\n     * from disk. If the file does not exist, the initial value provided to the\n     * constructor is used.\n     */\n    async get() {\n        return this._lock.runExclusive(async () => {\n            if (this._data === undefined) {\n                try {\n                    this._data = JSON.parse(await promises.readFile(this._path, 'utf8'), dateReviver);\n                }\n                catch (e) {\n                    this._data = this._initial;\n                }\n            }\n            return this._data;\n        });\n    }\n    /**\n     * Updates data by passing it through the given function.\n     * @param fn A function receiving the current data and returning new one.\n     */\n    async update(fn) {\n        await this.set(fn(await this.get()));\n    }\n    /** Returns store to its initial state */\n    async clear() {\n        await this.set(this._initial);\n    }\n    /** Gets the Date that the file was last modified */\n    async getModifiedDate() {\n        try {\n            return (await promises.stat(this._path))?.mtime;\n        }\n        catch (_) {\n            return undefined;\n        }\n    }\n}\n/**\n * Extends Store to throttle writes.\n */\nclass BufferedWriteStore extends Store {\n    /**\n     * Creates a new ThrottledStore.\n     *\n     * @param path A unique filename to store this data.\n     * @param id A unique filename to store this data.\n     * @param initial An initial value to initialize data with.\n     * @param throttleTime The minimum time between writes\n     */\n    constructor(path, id, initial, _throttleTime = 500) {\n        super(path, id, initial);\n        this._throttleTime = _throttleTime;\n    }\n    /** @inheritdoc */\n    async set(data) {\n        this._data = data;\n        this._pendingWrite = {\n            // We overwrite the data for the pending write so that the latest data is written in the next flush\n            data,\n            // If there is already a pending timeout, we keep that rather than starting the timeout again\n            timeout: this._pendingWrite?.timeout || setTimeout(() => this._writePending(), this._throttleTime),\n        };\n    }\n    /** Writes the pending write to disk */\n    _writePending() {\n        if (this._pendingWrite) {\n            const data = this._pendingWrite.data;\n            // Clear the pending write immediately so that subsequent writes can be queued\n            this._pendingWrite = undefined;\n            super.set(data).catch(() => {\n                // ignore\n            });\n        }\n    }\n}\n\nexport { BufferedWriteStore, Store };\n//# sourceMappingURL=store.js.map\n","import { startSession as startSession$1, captureSession, getCurrentScope, getClient, logger, makeSession, updateSession, endSession as endSession$1 } from '@sentry/core';\nimport { flush } from '@sentry/node';\nimport { app } from 'electron';\nimport { getSentryCachePath } from './electron-normalize.js';\nimport { Store } from './store.js';\n\nconst PERSIST_INTERVAL_MS = 60000;\n/** Stores the app session in case of termination due to main process crash or app killed */\nlet sessionStore;\n/** Previous session if it did not exit cleanly */\nlet previousSession;\nfunction getSessionStore() {\n    if (!sessionStore) {\n        sessionStore = new Store(getSentryCachePath(), 'session', undefined);\n        previousSession = sessionStore.get().then((sesh) => (sesh ? makeSession(sesh) : sesh));\n    }\n    return sessionStore;\n}\n/** Copies a session and removes the toJSON function so it can be serialised without conversion */\nfunction makeSessionSafeToSerialize(session) {\n    const copy = { ...session };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    delete copy.toJSON;\n    return copy;\n}\nlet persistTimer;\n/** Starts a session */\nfunction startSession(sendOnCreate) {\n    const session = startSession$1();\n    if (sendOnCreate) {\n        captureSession();\n    }\n    getSessionStore()\n        .set(makeSessionSafeToSerialize(session))\n        .catch(() => {\n        // Does not throw\n    });\n    // Every PERSIST_INTERVAL, write the session to disk\n    persistTimer = setInterval(async () => {\n        const currentSession = getCurrentScope().getSession();\n        // Only bother saving if it hasn't already ended\n        if (currentSession && currentSession.status === 'ok') {\n            await getSessionStore().set(makeSessionSafeToSerialize(currentSession));\n        }\n    }, PERSIST_INTERVAL_MS);\n}\n/** Cleanly ends a session */\nasync function endSession() {\n    // Once the session had ended there is no point persisting it\n    if (persistTimer) {\n        clearInterval(persistTimer);\n    }\n    const session = getCurrentScope().getSession();\n    if (session) {\n        if (session.status === 'ok') {\n            logger.log('Ending session');\n            endSession$1();\n        }\n        else {\n            logger.log('Session was already ended');\n        }\n    }\n    else {\n        logger.log('No session');\n    }\n    await getSessionStore().clear();\n    await flush(2000);\n}\n/** Determines if a Date is likely to have occurred in the previous uncompleted session */\nasync function unreportedDuringLastSession(crashDate) {\n    if (!crashDate) {\n        return false;\n    }\n    const previousSessionModified = await getSessionStore().getModifiedDate();\n    // There is no previous session\n    if (previousSessionModified === undefined) {\n        return false;\n    }\n    const previousSessionModifiedTime = previousSessionModified.getTime();\n    const crashTime = crashDate.getTime();\n    // Session could have run until modified time + persist interval\n    const prevSessionEnd = previousSessionModifiedTime + PERSIST_INTERVAL_MS;\n    // Event cannot have occurred before last persist time, We add a 2 second overlap to be sure\n    const lastPersist = previousSessionModifiedTime - 2000;\n    // If the crash occurred between the last persist and estimated end of session\n    return crashTime > lastPersist && crashTime < prevSessionEnd;\n}\n/** Sets the previous session as the current session and returns any existing session */\nasync function setPreviousSessionAsCurrent() {\n    const previous = await previousSession;\n    const scope = getCurrentScope();\n    const currentSession = scope.getSession();\n    if (previous) {\n        previousSession = undefined;\n        if (previous.status === 'ok') {\n            scope.setSession(makeSession(previous));\n        }\n    }\n    return currentSession;\n}\n/** Restores a session */\nfunction restorePreviousSession(session) {\n    getCurrentScope().setSession(session);\n}\n/** Report the previous session as abnormal */\nasync function previousSessionWasAbnormal() {\n    const client = getClient();\n    const previous = await previousSession;\n    if (previous && client) {\n        // Ignore if the previous session is already ended\n        if (previous.status !== 'ok') {\n            previousSession = undefined;\n            return;\n        }\n        logger.log(`Found previous abnormal session`);\n        const sesh = makeSession(previous);\n        updateSession(sesh, {\n            status: 'abnormal',\n            errors: (sesh.errors || 0) + 1,\n            release: previous.attrs?.release,\n            environment: previous.attrs?.environment,\n        });\n        await client.sendSession(sesh);\n        previousSession = undefined;\n    }\n}\n/** Checks if the previous session needs sending as crashed or abnormal  */\nasync function checkPreviousSession(crashed) {\n    const client = getClient();\n    const previous = await previousSession;\n    if (previous && client) {\n        // Ignore if the previous session is already ended\n        if (previous.status !== 'ok') {\n            previousSession = undefined;\n            return;\n        }\n        const status = crashed ? 'crashed' : 'abnormal';\n        logger.log(`Found previous ${status} session`);\n        const sesh = makeSession(previous);\n        updateSession(sesh, {\n            status,\n            errors: (sesh.errors || 0) + 1,\n            release: previous.attrs?.release,\n            environment: previous.attrs?.environment,\n        });\n        await client.sendSession(sesh);\n        previousSession = undefined;\n    }\n}\n/** Sets the current session as crashed */\nfunction sessionCrashed() {\n    // stop persisting session\n    if (persistTimer) {\n        clearInterval(persistTimer);\n    }\n    logger.log('Session Crashed');\n    const session = getCurrentScope().getSession();\n    if (!session) {\n        logger.log('No session to update');\n        return;\n    }\n    if (session.status === 'ok') {\n        logger.log('Setting session as crashed');\n        const errors = session.errors + 1;\n        updateSession(session, { status: 'crashed', errors });\n        captureSession();\n    }\n    else {\n        logger.log('Session already ended');\n    }\n}\n/** Sets the current session as ANR */\nfunction sessionAnr() {\n    // stop persisting session\n    if (persistTimer) {\n        clearInterval(persistTimer);\n    }\n    const session = getCurrentScope().getSession();\n    if (!session) {\n        return;\n    }\n    if (session.status === 'ok') {\n        logger.log('Setting session as abnormal ANR');\n        updateSession(session, { status: 'abnormal', abnormal_mechanism: 'anr_foreground' });\n        captureSession();\n    }\n}\n/**\n * End the current session on app exit\n */\nfunction endSessionOnExit() {\n    // 'before-quit' is always called before 'will-quit' so we listen there and ensure our 'will-quit' handler is still\n    // the last listener\n    app.on('before-quit', () => {\n        // We track the end of sessions via the 'will-quit' event which is the last event emitted before close.\n        //\n        // We need to be the last 'will-quit' listener so as not to interfere with any user defined listeners which may\n        // call `event.preventDefault()` to abort the exit.\n        app.removeListener('will-quit', exitHandler);\n        app.on('will-quit', exitHandler);\n    });\n}\n/** Handles the exit */\nconst exitHandler = async (event) => {\n    if (event.defaultPrevented) {\n        return;\n    }\n    logger.log('[Session] Exit Handler');\n    // Stop the exit so we have time to send the session\n    event.preventDefault();\n    try {\n        // End the session\n        await endSession();\n    }\n    catch (e) {\n        // Ignore and log any errors which would prevent app exit\n        logger.warn('[Session] Error ending session:', e);\n    }\n    app.exit();\n};\n\nexport { checkPreviousSession, endSession, endSessionOnExit, previousSessionWasAbnormal, restorePreviousSession, sessionAnr, sessionCrashed, setPreviousSessionAsCurrent, startSession, unreportedDuringLastSession };\n//# sourceMappingURL=sessions.js.map\n","import { logger, basename } from '@sentry/core';\nimport { app } from 'electron';\nimport { promises } from 'fs';\nimport { join } from 'path';\nimport { usesCrashpad } from '../../electron-normalize.js';\nimport { Mutex } from '../../mutex.js';\n\n/** Maximum number of days to keep a minidump before deleting it. */\nconst MAX_AGE_DAYS = 30;\nconst MS_PER_DAY = 24 * 3600 * 1000;\n/** Minimum number of milliseconds a minidump should not be modified for before we assume writing is complete */\nconst NOT_MODIFIED_MS = 1000;\nconst MAX_RETRY_MS = 5000;\nconst RETRY_DELAY_MS = 500;\nconst MAX_RETRIES = MAX_RETRY_MS / RETRY_DELAY_MS;\nconst MINIDUMP_HEADER = 'MDMP';\nfunction delay(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n/**\n * Creates a minidump loader\n * @param getMinidumpPaths A function that returns paths to minidumps\n * @param preProcessFile A function that pre-processes the minidump file\n * @returns A function to fetch minidumps\n */\nfunction createMinidumpLoader(getMinidumpPaths, preProcessFile = (file) => file) {\n    // The mutex protects against a whole host of reentrancy issues and race conditions.\n    const mutex = new Mutex();\n    return async (deleteAll, callback) => {\n        // any calls to this function will be queued and run exclusively\n        await mutex.runExclusive(async () => {\n            for (const path of await getMinidumpPaths()) {\n                try {\n                    if (deleteAll) {\n                        continue;\n                    }\n                    logger.log('Found minidump', path);\n                    let stats = await promises.stat(path);\n                    const thirtyDaysAgo = new Date().getTime() - MAX_AGE_DAYS * MS_PER_DAY;\n                    if (stats.mtimeMs < thirtyDaysAgo) {\n                        logger.log(`Ignoring minidump as it is over ${MAX_AGE_DAYS} days old`);\n                        continue;\n                    }\n                    let retries = 0;\n                    while (retries <= MAX_RETRIES) {\n                        const twoSecondsAgo = new Date().getTime() - NOT_MODIFIED_MS;\n                        if (stats.mtimeMs < twoSecondsAgo) {\n                            const file = await promises.readFile(path);\n                            const data = preProcessFile(file);\n                            if (data.length < 10000 || data.subarray(0, 4).toString() !== MINIDUMP_HEADER) {\n                                logger.warn('Dropping minidump as it appears invalid.');\n                                break;\n                            }\n                            const minidumpProcess = getMinidumpProcessType(data);\n                            logger.log('Sending minidump');\n                            await callback(minidumpProcess, {\n                                attachmentType: 'event.minidump',\n                                filename: basename(path),\n                                data,\n                            });\n                            break;\n                        }\n                        logger.log(`Waiting. Minidump has been modified in the last ${NOT_MODIFIED_MS} milliseconds.`);\n                        retries += 1;\n                        await delay(RETRY_DELAY_MS);\n                        // update the stats\n                        stats = await promises.stat(path);\n                    }\n                    if (retries >= MAX_RETRIES) {\n                        logger.warn('Timed out waiting for minidump to stop being modified');\n                    }\n                }\n                catch (e) {\n                    logger.error('Failed to load minidump', e);\n                }\n                finally {\n                    // We always attempt to delete the minidump\n                    try {\n                        await promises.unlink(path);\n                    }\n                    catch (e) {\n                        logger.warn('Could not delete minidump', path);\n                    }\n                }\n            }\n        });\n    };\n}\n/** Attempts to remove the metadata file so Crashpad doesn't output `failed to stat report` errors to the console */\nasync function deleteCrashpadMetadataFile(crashesDirectory, waitMs = 100) {\n    if (waitMs > 2000) {\n        return;\n    }\n    const metadataPath = join(crashesDirectory, 'metadata');\n    try {\n        await promises.unlink(metadataPath);\n        logger.log('Deleted Crashpad metadata file', metadataPath);\n    }\n    catch (e) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (e.code && e.code == 'EBUSY') {\n            // Since Crashpad probably still has the metadata file open, we make a few attempts to delete it, backing\n            // off and waiting longer each time.\n            setTimeout(async () => {\n                await deleteCrashpadMetadataFile(crashesDirectory, waitMs * 2);\n            }, waitMs);\n        }\n    }\n}\nasync function readDirsAsync(paths) {\n    const found = [];\n    for (const path of paths) {\n        try {\n            const files = await promises.readdir(path);\n            found.push(...files.map((file) => join(path, file)));\n        }\n        catch (_) {\n            //\n        }\n    }\n    return found;\n}\nfunction crashpadMinidumpLoader() {\n    const crashesDirectory = app.getPath('crashDumps');\n    const crashpadSubDirectory = process.platform === 'win32' ? 'reports' : 'completed';\n    const dumpDirectories = [join(crashesDirectory, crashpadSubDirectory)];\n    if (process.platform === 'darwin') {\n        dumpDirectories.push(join(crashesDirectory, 'pending'));\n    }\n    return createMinidumpLoader(async () => {\n        await deleteCrashpadMetadataFile(crashesDirectory).catch((error) => logger.error(error));\n        const files = await readDirsAsync(dumpDirectories);\n        return files.filter((file) => file.endsWith('.dmp'));\n    });\n}\n/** Crudely parses the minidump from the Breakpad multipart file */\nfunction minidumpFromBreakpadMultipart(file) {\n    const binaryStart = file.lastIndexOf('Content-Type: application/octet-stream');\n    if (binaryStart > 0) {\n        const dumpStart = file.indexOf(MINIDUMP_HEADER, binaryStart);\n        const dumpEnd = file.lastIndexOf('----------------------------');\n        if (dumpStart > 0 && dumpEnd > 0 && dumpEnd > dumpStart) {\n            return file.subarray(dumpStart, dumpEnd);\n        }\n    }\n    return file;\n}\nfunction removeBreakpadMetadata(crashesDirectory, paths) {\n    // Remove all metadata files and forget about them.\n    Promise.all(paths\n        .filter((file) => file.endsWith('.txt') && !file.endsWith('log.txt'))\n        .map(async (file) => {\n        const path = join(crashesDirectory, file);\n        try {\n            await promises.unlink(path);\n        }\n        catch (e) {\n            logger.warn('Could not delete', path);\n        }\n    })).catch(() => {\n        // ignore since we catch each unlink individually\n    });\n}\nfunction breakpadMinidumpLoader() {\n    const crashesDirectory = app.getPath('crashDumps');\n    return createMinidumpLoader(async () => {\n        // Breakpad stores all minidump files along with a metadata file directly in\n        // the crashes directory.\n        const files = await promises.readdir(crashesDirectory);\n        removeBreakpadMetadata(crashesDirectory, files);\n        return files.filter((file) => file.endsWith('.dmp')).map((file) => join(crashesDirectory, file));\n    }, minidumpFromBreakpadMultipart);\n}\n/**\n * Gets the minidump loader\n */\nfunction getMinidumpLoader() {\n    return usesCrashpad() ? crashpadMinidumpLoader() : breakpadMinidumpLoader();\n}\n/**\n * Crashpad includes it's own custom stream in the minidump file that can include metadata. Electron uses this to\n * include details about the app and process that caused the crash.\n *\n * Rather than parse the minidump by reading the header and parsing through all the streams, we can just look for the\n * 'process_type' key and then pick the string that comes after that.\n */\nfunction getMinidumpProcessType(buffer) {\n    const index = buffer.indexOf('process_type');\n    if (index < 0) {\n        return;\n    }\n    // start after 'process_type'\n    let start = index + 12;\n    // Move start to the first ascii character\n    while ((buffer[start] || 0) < 32) {\n        start++;\n        // If we can't find the start in the first 20 bytes, we assume it's not there\n        if (start - index > 20) {\n            return;\n        }\n    }\n    let end = start;\n    // Move the end of the ascii\n    while ((buffer[end] || -1) >= 32) {\n        end++;\n        // If we can't find the end in the first 20 bytes, we assume it's not there\n        if (end - start > 20) {\n            return;\n        }\n    }\n    const processType = buffer.subarray(start, end).toString().replace('-process', '');\n    // For backwards compatibility\n    if (processType === 'gpu') {\n        return 'GPU';\n    }\n    return processType;\n}\n\nexport { createMinidumpLoader, getMinidumpLoader };\n//# sourceMappingURL=minidump-loader.js.map\n","import { defineIntegration, Scope, SentryError, logger, captureEvent, applyScopeDataToEvent } from '@sentry/core';\nimport { app, crashReporter } from 'electron';\nimport { addScopeListener, getScopeData } from '../../../common/scope.js';\nimport { getEventDefaults } from '../../context.js';\nimport { getSentryCachePath, EXIT_REASONS, usesCrashpad } from '../../electron-normalize.js';\nimport { trackRendererProperties, getRendererProperties } from '../../renderers.js';\nimport { previousSessionWasAbnormal, setPreviousSessionAsCurrent, restorePreviousSession } from '../../sessions.js';\nimport { BufferedWriteStore } from '../../store.js';\nimport { getMinidumpLoader } from './minidump-loader.js';\n\n/**\n * Sends minidumps via the Sentry uploader\n */\nconst sentryMinidumpIntegration = defineIntegration((options = {}) => {\n    // The remaining number of minidumps that can be sent in this session\n    let minidumpsRemaining = options.maxMinidumpsPerSession || 10;\n    // Store to persist context information beyond application crashes.\n    let scopeStore;\n    // We need to store the scope in a variable here so it can be attached to minidumps\n    let scopeLastRun;\n    let minidumpLoader;\n    function startCrashReporter() {\n        logger.log('Starting Electron crashReporter');\n        crashReporter.start({\n            companyName: '',\n            ignoreSystemCrashHandler: true,\n            productName: app.name || app.getName(),\n            // Empty string doesn't work for Linux Crashpad and no submitURL doesn't work for older versions of Electron\n            submitURL: 'https://f.a.k/e',\n            uploadToServer: false,\n            compress: true,\n        });\n    }\n    function setupScopeListener(client) {\n        function scopeChanged(scope) {\n            // Since the initial scope read is async, we need to ensure that any writes do not beat that\n            // https://github.com/getsentry/sentry-electron/issues/585\n            setImmediate(async () => scopeStore?.set({\n                scope,\n                event: await getEventDefaults(client),\n            }));\n        }\n        addScopeListener((scope) => {\n            scopeChanged(scope);\n        });\n        scopeChanged(getScopeData());\n    }\n    async function sendNativeCrashes(client, getEvent) {\n        // Whenever we are called, assume that the crashes we are going to load down\n        // below have occurred recently. This means, we can use the same event data\n        // for all minidumps that we load now. There are two conditions:\n        //\n        //  1. The application crashed and we are just starting up. The stored\n        //     breadcrumbs and context reflect the state during the application\n        //     crash.\n        //\n        //  2. A renderer process crashed recently and we have just been notified\n        //     about it. Just use the breadcrumbs and context information we have\n        //     right now and hope that the delay was not too long.\n        if (minidumpsRemaining <= 0) {\n            logger.log('Not sending minidumps because the limit has been reached');\n        }\n        // If the SDK is not enabled, or we've already reached the minidump limit, tell the loader to delete all minidumps\n        const deleteAll = client.getOptions().enabled === false || minidumpsRemaining <= 0;\n        let minidumpFound = false;\n        await minidumpLoader?.(deleteAll, async (minidumpProcess, attachment) => {\n            minidumpFound = true;\n            const event = await getEvent(minidumpProcess);\n            if (minidumpsRemaining > 0) {\n                minidumpsRemaining -= 1;\n                captureEvent(event, { attachments: [attachment] });\n            }\n        });\n        return minidumpFound;\n    }\n    async function sendRendererCrash(client, options, contents, details) {\n        const { getRendererName } = options;\n        await sendNativeCrashes(client, (minidumpProcess) => {\n            // We only call 'getRendererName' if this was in fact a renderer crash\n            const crashedProcess = (minidumpProcess === 'renderer' && getRendererName ? getRendererName(contents) : minidumpProcess) ||\n                (usesCrashpad() ? 'unknown' : 'renderer');\n            logger.log(`'${crashedProcess}' process '${details.reason}'`);\n            return {\n                contexts: {\n                    electron: {\n                        crashed_url: getRendererProperties(contents.id)?.url || 'unknown',\n                        details,\n                    },\n                },\n                level: 'fatal',\n                // The default is javascript\n                platform: 'native',\n                tags: {\n                    'event.environment': 'native',\n                    'event.process': crashedProcess,\n                    'exit.reason': details.reason,\n                },\n            };\n        });\n    }\n    async function sendChildProcessCrash(client, details) {\n        logger.log(`${details.type} process has ${details.reason}`);\n        await sendNativeCrashes(client, (minidumpProcess) => ({\n            contexts: {\n                electron: { details },\n            },\n            level: 'fatal',\n            // The default is javascript\n            platform: 'native',\n            tags: {\n                'event.environment': 'native',\n                'event.process': minidumpProcess || details.type,\n                'exit.reason': details.reason,\n                event_type: 'native',\n            },\n        }));\n    }\n    return {\n        name: 'SentryMinidump',\n        setup(client) {\n            // Mac AppStore builds cannot run the crash reporter due to the sandboxing\n            // requirements. In this case, we prevent enabling native crashes entirely.\n            // https://electronjs.org/docs/tutorial/mac-app-store-submission-guide#limitations-of-mas-build\n            if (process.mas) {\n                return;\n            }\n            startCrashReporter();\n            scopeStore = new BufferedWriteStore(getSentryCachePath(), 'scope_v3', {\n                scope: new Scope().getScopeData(),\n            });\n            scopeLastRun = scopeStore.get();\n            minidumpLoader = getMinidumpLoader();\n            const options = client.getOptions();\n            setupScopeListener(client);\n            if (!options?.dsn) {\n                throw new SentryError('Attempted to enable Electron native crash reporter but no DSN was supplied');\n            }\n            trackRendererProperties();\n            app.on('render-process-gone', async (_, contents, details) => {\n                if (EXIT_REASONS.includes(details.reason)) {\n                    await sendRendererCrash(client, options, contents, details);\n                }\n            });\n            app.on('child-process-gone', async (_, details) => {\n                if (EXIT_REASONS.includes(details.reason)) {\n                    await sendChildProcessCrash(client, details);\n                }\n            });\n            let sessionToRestore;\n            // Start to submit recent minidump crashes. This will load breadcrumbs and\n            // context information that was cached on disk in the previous app run, prior to the crash.\n            sendNativeCrashes(client, async (minidumpProcess) => {\n                const event = {\n                    level: 'fatal',\n                    platform: 'native',\n                    tags: {\n                        'event.environment': 'native',\n                        'event.process': minidumpProcess || (usesCrashpad() ? 'unknown' : 'browser'),\n                    },\n                };\n                // This crash was found at startup, we need to apply the scope and context from the previous run\n                const previousRun = await scopeLastRun;\n                if (previousRun) {\n                    if (previousRun.scope) {\n                        applyScopeDataToEvent(event, previousRun.scope);\n                    }\n                    event.release = previousRun.event?.release;\n                    event.environment = previousRun.event?.environment;\n                    event.contexts = previousRun.event?.contexts;\n                }\n                sessionToRestore = await setPreviousSessionAsCurrent();\n                return event;\n            })\n                .then(async (minidumpsFound) => {\n                if (!minidumpsFound) {\n                    await previousSessionWasAbnormal();\n                }\n                else if (sessionToRestore) {\n                    restorePreviousSession(sessionToRestore);\n                }\n            })\n                .catch((error) => logger.error(error));\n        },\n    };\n});\n\nexport { sentryMinidumpIntegration };\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import deepMerge from 'deepmerge';\n\n/** Removes private properties from event before merging */\nfunction removePrivateProperties(event) {\n    // These contain recursive structures and are not meant to be serialized\n    delete event.sdkProcessingMetadata?.capturedSpanScope;\n    delete event.sdkProcessingMetadata?.capturedSpanIsolationScope;\n    for (const span of event.spans || []) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        delete span.spanRecorder;\n    }\n}\n/** Merges Events with defaults */\nfunction mergeEvents(defaults, event) {\n    removePrivateProperties(event);\n    const newEvent = deepMerge(defaults, event);\n    // We need to copy spans across manually\n    //\n    // Spans contain a custom toJSON function for serialization and without\n    // this they are serialised with camelCase properties rather than the\n    // snake_case required by the Sentry API.\n    if (event.spans || defaults.spans) {\n        newEvent.spans = event.spans || defaults.spans;\n    }\n    // We don't want packages array in sdk to get merged with duplicates\n    return {\n        ...newEvent,\n        sdk: {\n            ...defaults.sdk,\n            ...event.sdk,\n        },\n    };\n}\n\nexport { mergeEvents };\n//# sourceMappingURL=merge.js.map\n","import { normalizeUrlToBase, createEnvelope, forEachEnvelopeItem, getCurrentScope, addItemToEnvelope } from '@sentry/core';\n\n/**\n * Normalizes all URLs in an event. See {@link normalizeUrl} for more\n * information. Mutates the passed in event.\n *\n * @param event The event to normalize.\n */\nfunction normalizePaths(event, basePath) {\n    // Retrieve stack traces and normalize their paths. Without this, grouping\n    // would not work due to usernames in file paths.\n    for (const exception of event.exception?.values || []) {\n        for (const frame of exception.stacktrace?.frames || []) {\n            if (frame.filename) {\n                frame.filename = normalizeUrlToBase(frame.filename, basePath);\n            }\n        }\n    }\n    // We need to normalize debug ID images the same way as the stack frames for symbolicator to match them correctly\n    for (const debugImage of event.debug_meta?.images || []) {\n        if (debugImage.type === 'sourcemap') {\n            debugImage.code_file = normalizeUrlToBase(debugImage.code_file, basePath);\n        }\n    }\n    if (event.transaction) {\n        event.transaction = normalizeUrlToBase(event.transaction, basePath);\n    }\n    const { request = {} } = event;\n    if (request.url) {\n        request.url = normalizeUrlToBase(request.url, basePath);\n    }\n    if (event.contexts?.feedback?.url && typeof event.contexts.feedback.url === 'string') {\n        event.contexts.feedback.url = normalizeUrlToBase(event.contexts.feedback.url, basePath);\n    }\n    if (event.spans) {\n        for (const span of event.spans) {\n            if (span.description?.startsWith('file://')) {\n                span.description = normalizeUrlToBase(span.description, basePath);\n            }\n        }\n    }\n    return event;\n}\n/** Normalizes URLs in any replay_event items found in an envelope */\nfunction normalizeUrlsInReplayEnvelope(envelope, basePath) {\n    let modifiedEnvelope = createEnvelope(envelope[0]);\n    let isReplay = false;\n    forEachEnvelopeItem(envelope, (item, type) => {\n        if (type === 'replay_event') {\n            isReplay = true;\n            const [headers, event] = item;\n            const currentScope = getCurrentScope().getScopeData();\n            event.breadcrumbs = currentScope.breadcrumbs;\n            event.tags = currentScope.tags;\n            event.user = currentScope.user;\n            if (Array.isArray(event.urls)) {\n                event.urls = event.urls.map((url) => normalizeUrlToBase(url, basePath));\n            }\n            if (event?.request?.url) {\n                event.request.url = normalizeUrlToBase(event.request.url, basePath);\n            }\n            modifiedEnvelope = addItemToEnvelope(modifiedEnvelope, [headers, event]);\n        }\n        else if (type === 'replay_recording') {\n            modifiedEnvelope = addItemToEnvelope(modifiedEnvelope, item);\n        }\n    });\n    return isReplay ? modifiedEnvelope : envelope;\n}\n/**\n * Normalizes all URLs in a profile\n */\nfunction normaliseProfile(profile, basePath) {\n    for (const frame of profile.profile.frames) {\n        if (frame.abs_path) {\n            frame.abs_path = normalizeUrlToBase(frame.abs_path, basePath);\n        }\n    }\n}\n\nexport { normaliseProfile, normalizePaths, normalizeUrlsInReplayEnvelope };\n//# sourceMappingURL=normalize.js.map\n","import { defineIntegration, logger } from '@sentry/core';\nimport { app } from 'electron';\nimport { existsSync } from 'fs';\nimport { isAbsolute, resolve } from 'path';\nimport { fileURLToPath } from 'url';\nimport { IPCMode } from '../../common/ipc.js';\n\n// After bundling with webpack, require.resolve can return number so we include that in the types\n// to ensure we check for that!\nfunction getPreloadPath() {\n    try {\n        return require.resolve('../../preload/index.js');\n    }\n    catch (_) {\n        try {\n            // This could be ESM\n            const currentDir = fileURLToPath(import.meta.url);\n            // Use the CJS preload\n            return resolve(currentDir, '..', '..', '..', '..', 'preload', 'index.js');\n        }\n        catch (_) {\n            //\n        }\n    }\n    return undefined;\n}\n/**\n * Injects the preload script into the provided sessions.\n *\n * Defaults to injecting into the defaultSession\n */\nconst preloadInjectionIntegration = defineIntegration(() => {\n    return {\n        name: 'PreloadInjection',\n        setup(client) {\n            const options = client.getOptions();\n            // If classic IPC mode is disabled, we shouldn't attempt to inject preload scripts\n            // eslint-disable-next-line no-bitwise\n            if ((options.ipcMode & IPCMode.Classic) === 0) {\n                return;\n            }\n            app.once('ready', () => {\n                const path = getPreloadPath();\n                if (path && typeof path === 'string' && isAbsolute(path) && existsSync(path)) {\n                    for (const sesh of options.getSessions()) {\n                        // Fetch any existing preloads so we don't overwrite them\n                        const existing = sesh.getPreloads();\n                        sesh.setPreloads([path, ...existing]);\n                    }\n                }\n                else {\n                    logger.log('The preload script could not be injected automatically. This is most likely caused by bundling of the main process');\n                }\n            });\n        },\n    };\n});\n\nexport { preloadInjectionIntegration };\n//# sourceMappingURL=preload-injection.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { startSession, endSessionOnExit } from '../sessions.js';\n\n/** Tracks sessions as the main process lifetime. */\nconst mainProcessSessionIntegration = defineIntegration((options = {}) => {\n    return {\n        name: 'MainProcessSession',\n        setup() {\n            startSession(!!options.sendOnCreate);\n            endSessionOnExit();\n        },\n    };\n});\n\nexport { mainProcessSessionIntegration };\n//# sourceMappingURL=main-process-session.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { app, screen } from 'electron';\nimport { mergeEvents } from '../merge.js';\n\nconst DEFAULT_OPTIONS = {\n    screen: true,\n};\n/**\n * Adds additional Electron context to events\n */\nconst additionalContextIntegration = defineIntegration((userOptions = {}) => {\n    const _lazyDeviceContext = {};\n    const options = {\n        ...DEFAULT_OPTIONS,\n        ...userOptions,\n    };\n    function _setPrimaryDisplayInfo() {\n        const display = screen.getPrimaryDisplay();\n        const width = Math.floor(display.size.width * display.scaleFactor);\n        const height = Math.floor(display.size.height * display.scaleFactor);\n        _lazyDeviceContext.screen_density = display.scaleFactor;\n        _lazyDeviceContext.screen_resolution = `${width}x${height}`;\n    }\n    return {\n        name: 'AdditionalContext',\n        setup() {\n            // Some metrics are only available after app ready so we lazily load them\n            app.whenReady().then(() => {\n                const { screen: screen$1 } = options;\n                if (screen$1) {\n                    _setPrimaryDisplayInfo();\n                    screen.on('display-metrics-changed', () => {\n                        _setPrimaryDisplayInfo();\n                    });\n                }\n            }, () => {\n                // ignore\n            });\n        },\n        processEvent(event) {\n            const device = _lazyDeviceContext;\n            return mergeEvents(event, { contexts: { device } });\n        },\n    };\n});\n\nexport { additionalContextIntegration };\n//# sourceMappingURL=additional-context.js.map\n","import { defineIntegration, getClient, fill, LRUMap, startInactiveSpan, SentryNonRecordingSpan, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getIsolationScope, getCurrentScope, spanToTraceHeader, getDynamicSamplingContextFromSpan, generateSentryTraceHeader, getDynamicSamplingContextFromClient, setHttpStatus, addBreadcrumb, getBreadcrumbLogLevelFromHttpStatusCode, logger, dynamicSamplingContextToSentryBaggageHeader, stringMatchesSomePattern } from '@sentry/core';\nimport { net } from 'electron';\nimport * as urlModule from 'url';\n\n/**\n * Trimmed down version of the code from Electron here:\n * https://github.com/electron/electron/blob/f3df76dbdc58cb704637b89357e1400791c92cfe/lib/browser/api/net.ts#L209-L269\n *\n * We want to match the final URL that Electron uses\n */\nfunction parseOptions(optionsIn) {\n    const { method, options } = typeof optionsIn === 'string'\n        ? // eslint-disable-next-line deprecation/deprecation\n            { method: 'GET', options: urlModule.parse(optionsIn) }\n        : { method: (optionsIn.method || 'GET').toUpperCase(), options: optionsIn };\n    let url = 'url' in options ? options.url : undefined;\n    if (!url) {\n        const urlObj = {};\n        urlObj.protocol = options.protocol || 'http:';\n        if (options.host) {\n            urlObj.host = options.host;\n        }\n        else {\n            if (options.hostname) {\n                urlObj.hostname = options.hostname;\n            }\n            else {\n                urlObj.hostname = 'localhost';\n            }\n            if (options.port) {\n                urlObj.port = options.port;\n            }\n        }\n        // eslint-disable-next-line deprecation/deprecation\n        const pathObj = urlModule.parse(options.path || '/');\n        urlObj.pathname = pathObj.pathname;\n        urlObj.search = pathObj.search;\n        urlObj.hash = pathObj.hash;\n        url = urlModule.format(urlObj);\n    }\n    return {\n        method,\n        url,\n    };\n}\nfunction addHeadersToRequest(request, url, sentryTraceHeader, dynamicSamplingContext) {\n    logger.log(`[Tracing] Adding sentry-trace header ${sentryTraceHeader} to outgoing request to \"${url}\": `);\n    request.setHeader('sentry-trace', sentryTraceHeader);\n    const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n    if (sentryBaggageHeader) {\n        request.setHeader('baggage', sentryBaggageHeader);\n    }\n}\nfunction createWrappedRequestFactory(options, tracePropagationTargets) {\n    // We're caching results so we don't have to recompute regexp every time we create a request.\n    const createSpanUrlMap = new LRUMap(100);\n    const headersUrlMap = new LRUMap(100);\n    const shouldCreateSpan = (method, url) => {\n        if (options.tracing === undefined) {\n            return true;\n        }\n        if (options.tracing === false) {\n            return false;\n        }\n        const key = `${method}:${url}`;\n        const cachedDecision = createSpanUrlMap.get(key);\n        if (cachedDecision !== undefined) {\n            return cachedDecision;\n        }\n        const decision = options.tracing === true || options.tracing(method, url);\n        createSpanUrlMap.set(key, decision);\n        return decision;\n    };\n    // This will be considerably simpler once `tracingOrigins` is removed in the next major release\n    const shouldAttachTraceData = (method, url) => {\n        const key = `${method}:${url}`;\n        const cachedDecision = headersUrlMap.get(key);\n        if (cachedDecision !== undefined) {\n            return cachedDecision;\n        }\n        if (tracePropagationTargets) {\n            const decision = stringMatchesSomePattern(url, tracePropagationTargets);\n            headersUrlMap.set(key, decision);\n            return decision;\n        }\n        // We cannot reach here since either `tracePropagationTargets` or `tracingOrigins` will be defined but TypeScript\n        // cannot infer that\n        return true;\n    };\n    return function wrappedRequestMethodFactory(originalRequestMethod) {\n        return function requestMethod(reqOptions) {\n            const { url, method } = parseOptions(reqOptions);\n            const request = originalRequestMethod.apply(this, [reqOptions]);\n            if (url.match(/sentry_key/) || request.getHeader('x-sentry-auth')) {\n                return request;\n            }\n            const span = shouldCreateSpan(method, url)\n                ? startInactiveSpan({\n                    name: `${method} ${url}`,\n                    onlyIfParent: true,\n                    attributes: {\n                        url,\n                        type: 'net.request',\n                        'http.method': method,\n                    },\n                    op: 'http.client',\n                })\n                : new SentryNonRecordingSpan();\n            span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, 'auto.http.electron.net');\n            if (shouldAttachTraceData(method, url)) {\n                // eslint-disable-next-line deprecation/deprecation\n                const { traceId, spanId, sampled, dsc } = {\n                    ...getIsolationScope().getPropagationContext(),\n                    ...getCurrentScope().getPropagationContext(),\n                };\n                if (span.isRecording()) {\n                    const sentryTraceHeader = spanToTraceHeader(span);\n                    const dynamicSamplingContext = dsc || getDynamicSamplingContextFromSpan(span);\n                    addHeadersToRequest(request, url, sentryTraceHeader, dynamicSamplingContext);\n                }\n                else {\n                    const sentryTraceHeader = generateSentryTraceHeader(traceId, spanId, sampled);\n                    const client = getClient();\n                    const dynamicSamplingContext = dsc || (client ? getDynamicSamplingContextFromClient(traceId, client) : undefined);\n                    addHeadersToRequest(request, url, sentryTraceHeader, dynamicSamplingContext);\n                }\n            }\n            return request\n                .once('response', function (res) {\n                if (options.breadcrumbs !== false) {\n                    addRequestBreadcrumb('response', method, url, this, res);\n                }\n                if (res.statusCode) {\n                    setHttpStatus(span, res.statusCode);\n                }\n                span.end();\n            })\n                .once('error', function (_error) {\n                if (options.breadcrumbs !== false) {\n                    addRequestBreadcrumb('error', method, url, this, undefined);\n                }\n                setHttpStatus(span, 500);\n                span.end();\n            });\n        };\n    };\n}\n/**\n * Captures Breadcrumb based on provided request/response pair\n */\nfunction addRequestBreadcrumb(event, method, url, req, res) {\n    addBreadcrumb({\n        type: 'http',\n        category: 'electron.net',\n        data: {\n            url,\n            method: method,\n            status_code: res?.statusCode,\n        },\n        level: getBreadcrumbLogLevelFromHttpStatusCode(res?.statusCode),\n    }, {\n        event,\n        request: req,\n        response: res,\n    });\n}\n/**\n * Electron 'net' module integration\n */\nconst electronNetIntegration = defineIntegration((options = {}) => {\n    return {\n        name: 'ElectronNet',\n        setup() {\n            const clientOptions = getClient()?.getOptions();\n            // No need to instrument if we don't want to track anything\n            if (options.breadcrumbs === false && options.tracing === false) {\n                return;\n            }\n            fill(net, 'request', createWrappedRequestFactory(options, clientOptions?.tracePropagationTargets));\n        },\n    };\n});\n\nexport { electronNetIntegration };\n//# sourceMappingURL=net-breadcrumbs.js.map\n","import { defineIntegration, captureMessage, addBreadcrumb } from '@sentry/core';\nimport { app } from 'electron';\nimport { EXIT_REASONS } from '../electron-normalize.js';\n\nconst DEFAULT_OPTIONS = {\n    breadcrumbs: EXIT_REASONS,\n    events: ['abnormal-exit', 'launch-failed', 'integrity-failure'],\n};\n/** Gets message and severity */\nfunction getMessageAndSeverity(reason, proc) {\n    const message = `'${proc}' process exited with '${reason}'`;\n    switch (reason) {\n        case 'abnormal-exit':\n        case 'killed':\n            return { message, level: 'warning' };\n        case 'crashed':\n        case 'oom':\n        case 'launch-failed':\n        case 'integrity-failure':\n            return { message, level: 'fatal' };\n        default:\n            return { message, level: 'debug' };\n    }\n}\n/**\n * Adds breadcrumbs for Electron child process events.\n */\nconst childProcessIntegration = defineIntegration((userOptions = {}) => {\n    const { breadcrumbs, events } = userOptions;\n    const options = {\n        breadcrumbs: Array.isArray(breadcrumbs) ? breadcrumbs : breadcrumbs === false ? [] : DEFAULT_OPTIONS.breadcrumbs,\n        events: Array.isArray(events) ? events : events === false ? [] : DEFAULT_OPTIONS.events,\n    };\n    return {\n        name: 'ChildProcess',\n        setup(client) {\n            const { breadcrumbs, events } = options;\n            const allReasons = Array.from(new Set([...breadcrumbs, ...events]));\n            // only hook these events if we're after more than just the unresponsive event\n            if (allReasons.length > 0) {\n                const clientOptions = client.getOptions();\n                app.on('child-process-gone', (_, details) => {\n                    const { reason } = details;\n                    // Capture message first\n                    if (events.includes(reason)) {\n                        const { message, level } = getMessageAndSeverity(details.reason, details.type);\n                        captureMessage(message, { level, tags: { 'event.process': details.type } });\n                    }\n                    // And then add breadcrumbs for subsequent events\n                    if (breadcrumbs.includes(reason)) {\n                        addBreadcrumb({\n                            type: 'process',\n                            category: 'child-process',\n                            ...getMessageAndSeverity(details.reason, details.type),\n                            data: details,\n                        });\n                    }\n                });\n                app.on('render-process-gone', (_, contents, details) => {\n                    const { reason } = details;\n                    const name = clientOptions?.getRendererName?.(contents) || 'renderer';\n                    // Capture message first\n                    if (events.includes(reason)) {\n                        const { message, level } = getMessageAndSeverity(details.reason, name);\n                        captureMessage(message, level);\n                    }\n                    // And then add breadcrumbs for subsequent events\n                    if (breadcrumbs.includes(reason)) {\n                        addBreadcrumb({\n                            type: 'process',\n                            category: 'child-process',\n                            ...getMessageAndSeverity(details.reason, name),\n                            data: details,\n                        });\n                    }\n                });\n            }\n        },\n    };\n});\n\nexport { childProcessIntegration };\n//# sourceMappingURL=child-process.js.map\n","import { defineIntegration, logger } from '@sentry/core';\nimport { BrowserWindow } from 'electron';\n\n/**\n * Captures and attaches screenshots to events\n */\nconst screenshotsIntegration = defineIntegration(() => {\n    return {\n        name: 'Screenshots',\n        async processEvent(event, hint, client) {\n            const attachScreenshot = !!client.getOptions().attachScreenshot;\n            if (!attachScreenshot) {\n                return event;\n            }\n            // We don't capture screenshots for transactions or native crashes\n            if (!event.transaction && event.platform !== 'native') {\n                let count = 1;\n                for (const window of BrowserWindow.getAllWindows()) {\n                    if (!hint.attachments) {\n                        hint.attachments = [];\n                    }\n                    try {\n                        if (!window.isDestroyed() && window.isVisible()) {\n                            const filename = count === 1 ? 'screenshot.png' : `screenshot-${count}.png`;\n                            const image = await window.capturePage();\n                            hint.attachments.push({ filename, data: image.toPNG(), contentType: 'image/png' });\n                            count += 1;\n                        }\n                    }\n                    catch (e) {\n                        // Catch all errors so we don't break event submission if something goes wrong\n                        logger.error('Error capturing screenshot', e);\n                    }\n                }\n            }\n            return event;\n        },\n    };\n});\n\nexport { screenshotsIntegration };\n//# sourceMappingURL=screenshots.js.map\n","import { defineIntegration, LRUMap, forEachEnvelopeItem } from '@sentry/core';\nimport { app } from 'electron';\nimport { getDefaultReleaseName, getDefaultEnvironment } from '../context.js';\nimport { normaliseProfile } from '../normalize.js';\n\nconst DOCUMENT_POLICY_HEADER = 'Document-Policy';\nconst JS_PROFILING_HEADER = 'js-profiling';\n// A cache of renderer profiles which need attaching to events\nlet RENDERER_PROFILES;\n/**\n * Caches a profile to later be re-attached to an event\n */\nfunction rendererProfileFromIpc(event, profile) {\n    if (!RENDERER_PROFILES) {\n        return;\n    }\n    const profile_id = profile.event_id;\n    RENDERER_PROFILES.set(profile_id, profile);\n    if (event) {\n        event.contexts = {\n            ...event.contexts,\n            // Re-add the profile context which we can later use to find the correct profile\n            profile: {\n                profile_id,\n            },\n        };\n    }\n}\nfunction addJsProfilingHeader(responseHeaders = {}) {\n    if (responseHeaders[DOCUMENT_POLICY_HEADER]) {\n        const docPolicy = responseHeaders[DOCUMENT_POLICY_HEADER];\n        if (Array.isArray(docPolicy)) {\n            docPolicy.push(JS_PROFILING_HEADER);\n        }\n        else {\n            responseHeaders[DOCUMENT_POLICY_HEADER] = [docPolicy, JS_PROFILING_HEADER];\n        }\n    }\n    else {\n        responseHeaders[DOCUMENT_POLICY_HEADER] = JS_PROFILING_HEADER;\n    }\n    return { responseHeaders };\n}\n/**\n * Injects 'js-profiling' document policy headers and ensures that profiles get forwarded with transactions\n */\nconst rendererProfilingIntegration = defineIntegration(() => {\n    return {\n        name: 'RendererProfiling',\n        setup(client) {\n            const options = client.getOptions();\n            if (!options.enableRendererProfiling) {\n                return;\n            }\n            RENDERER_PROFILES = new LRUMap(10);\n            app.on('ready', () => {\n                // Ensure the correct headers are set to enable the browser profiler\n                for (const sesh of options.getSessions()) {\n                    sesh.webRequest.onHeadersReceived((details, callback) => {\n                        callback(addJsProfilingHeader(details.responseHeaders));\n                    });\n                }\n            });\n            // Copy the profiles back into the event envelopes\n            client.on?.('beforeEnvelope', (envelope) => {\n                let profile_id;\n                forEachEnvelopeItem(envelope, (item, type) => {\n                    if (type !== 'transaction') {\n                        return;\n                    }\n                    for (let j = 1; j < item.length; j++) {\n                        const event = item[j];\n                        if (event?.contexts?.profile?.profile_id) {\n                            profile_id = event.contexts.profile.profile_id;\n                            // This can be removed as it's no longer needed\n                            delete event.contexts.profile;\n                        }\n                    }\n                });\n                if (!profile_id) {\n                    return;\n                }\n                const profile = RENDERER_PROFILES?.remove(profile_id);\n                if (!profile) {\n                    return;\n                }\n                normaliseProfile(profile, app.getAppPath());\n                profile.release = options.release || getDefaultReleaseName();\n                profile.environment = options.environment || getDefaultEnvironment();\n                // @ts-expect-error untyped envelope\n                envelope[1].push([{ type: 'profile' }, profile]);\n            });\n        },\n    };\n});\n\nexport { rendererProfileFromIpc, rendererProfilingIntegration };\n//# sourceMappingURL=renderer-profiling.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { app } from 'electron';\nimport { normalizePaths } from '../normalize.js';\n\nconst normalizePathsIntegration = defineIntegration(() => {\n    return {\n        name: 'NormalizePaths',\n        processEvent(event) {\n            return normalizePaths(event, app.getAppPath());\n        },\n    };\n});\n\nexport { normalizePathsIntegration };\n//# sourceMappingURL=normalize-paths.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { app } from 'electron';\nimport { getDefaultReleaseName, getDefaultEnvironment } from '../context.js';\nimport { mergeEvents } from '../merge.js';\n\nfunction getAppMemory() {\n    return app.getAppMetrics().reduce((acc, metric) => acc + metric.memory.workingSetSize * 1024, 0);\n}\nconst electronContextIntegration = defineIntegration(() => {\n    return {\n        name: 'ElectronContext',\n        processEvent(event, _, client) {\n            // We don't want to send the server_name as it includes the machine name which is potentially PII\n            delete event.server_name;\n            delete event.tags?.server_name;\n            // We delete the Node runtime context so our Electron runtime context is used instead\n            delete event.contexts?.runtime;\n            // Electron is multi-process so the Node process memory will be inaccurate\n            delete event.contexts?.app?.app_memory;\n            // The user agent is parsed by Sentry and would overwrite certain context\n            // information, which we don't want. Generally remove it, since we know that\n            // we are browsing with Chrome.\n            if (event.request?.headers) {\n                delete event.request.headers['User-Agent'];\n            }\n            const { release = getDefaultReleaseName(), environment = getDefaultEnvironment(), sendDefaultPii, } = client.getOptions();\n            if (sendDefaultPii === true && typeof event.user?.ip_address === 'undefined') {\n                event.user = event.user || {};\n                event.user.ip_address = event.user.ip_address || '{{auto}}';\n            }\n            return mergeEvents({\n                contexts: {\n                    app: {\n                        app_name: app.name || app.getName(),\n                        app_version: app.getVersion(),\n                        build_type: process.mas ? 'app-store' : process.windowsStore ? 'windows-store' : undefined,\n                        app_memory: getAppMemory(),\n                        app_arch: process.arch,\n                    },\n                    browser: {\n                        name: 'Chrome',\n                    },\n                    chrome: {\n                        name: 'Chrome',\n                        type: 'runtime',\n                        version: process.versions.chrome,\n                    },\n                    device: {\n                        family: 'Desktop',\n                    },\n                    node: {\n                        name: 'Node',\n                        type: 'runtime',\n                        version: process.versions.node,\n                    },\n                    runtime: {\n                        name: 'Electron',\n                        version: process.versions.electron,\n                    },\n                },\n                environment,\n                release,\n                tags: {\n                    'event.origin': 'electron',\n                    'event.environment': 'javascript',\n                    'event.process': 'browser',\n                },\n            }, event);\n        },\n    };\n});\n\nexport { electronContextIntegration };\n//# sourceMappingURL=electron-context.js.map\n","import { createTransport, dropUndefinedKeys } from '@sentry/core';\nimport { app, net } from 'electron';\nimport { Readable } from 'stream';\nimport { URL } from 'url';\nimport { createGzip } from 'zlib';\n\n// Estimated maximum size for reasonable standalone event\nconst GZIP_THRESHOLD = 1024 * 32;\n/**\n * Gets a stream from a Buffer or string\n * We don't have Readable.from in earlier versions of node\n */\nfunction streamFromBody(body) {\n    return new Readable({\n        read() {\n            this.push(body);\n            this.push(null);\n        },\n    });\n}\nfunction getRequestOptions(url) {\n    const { hostname, pathname, port, protocol, search } = new URL(url);\n    return {\n        method: 'POST',\n        hostname,\n        path: `${pathname}${search}`,\n        port: parseInt(port, 10),\n        protocol,\n    };\n}\n/**\n * Creates a Transport that uses Electrons net module to send events to Sentry.\n */\nfunction makeElectronTransport(options) {\n    return createTransport(options, createElectronNetRequestExecutor(options.url, options.headers || {}));\n}\n/**\n * Creates a RequestExecutor to be used with `createTransport`.\n */\nfunction createElectronNetRequestExecutor(url, baseHeaders) {\n    baseHeaders['Content-Type'] = 'application/x-sentry-envelope';\n    return function makeRequest(request) {\n        return app.whenReady().then(() => new Promise((resolve, reject) => {\n            let bodyStream = streamFromBody(request.body);\n            const headers = { ...baseHeaders };\n            if (request.body.length > GZIP_THRESHOLD) {\n                headers['content-encoding'] = 'gzip';\n                bodyStream = bodyStream.pipe(createGzip());\n            }\n            const req = net.request(getRequestOptions(url));\n            for (const [header, value] of Object.entries(headers)) {\n                req.setHeader(header, value);\n            }\n            req.on('response', (res) => {\n                res.on('error', reject);\n                res.on('data', () => {\n                    // Drain socket\n                });\n                res.on('end', () => {\n                    // Drain socket\n                });\n                // \"Key-value pairs of header names and values. Header names are lower-cased.\"\n                // https://nodejs.org/api/http.html#http_message_headers\n                const retryAfterHeader = res.headers['retry-after'] ?? null;\n                const rateLimitsHeader = res.headers['x-sentry-rate-limits'] ?? null;\n                resolve({\n                    statusCode: res.statusCode,\n                    headers: dropUndefinedKeys({\n                        'retry-after': Array.isArray(retryAfterHeader) ? retryAfterHeader[0] || null : retryAfterHeader,\n                        'x-sentry-rate-limits': Array.isArray(rateLimitsHeader)\n                            ? rateLimitsHeader[0] || null\n                            : rateLimitsHeader,\n                    }),\n                });\n            });\n            req.on('error', reject);\n            // The docs say that ClientRequest is Writable but the types don't match exactly\n            bodyStream.pipe(req);\n        }));\n    };\n}\n\nexport { createElectronNetRequestExecutor, makeElectronTransport };\n//# sourceMappingURL=electron-net.js.map\n","import { parseEnvelope, logger, uuid4, serializeEnvelope } from '@sentry/core';\nimport { promises } from 'fs';\nimport { join } from 'path';\nimport { getSentryCachePath } from '../electron-normalize.js';\nimport { Store } from '../store.js';\n\nconst MILLISECONDS_PER_DAY = 86400000;\nfunction isOutdated(request, maxAgeDays) {\n    const cutOff = Date.now() - MILLISECONDS_PER_DAY * maxAgeDays;\n    return (request?.date?.getTime() || 0) < cutOff;\n}\nfunction getSentAtFromEnvelope(envelope) {\n    const header = envelope[0];\n    if (typeof header.sent_at === 'string') {\n        return new Date(header.sent_at);\n    }\n    return undefined;\n}\n/**\n * Creates a new offline store.\n */\nfunction createOfflineStore(userOptions) {\n    function log(...args) {\n        logger.log(`[Offline Store]:`, ...args);\n    }\n    const options = {\n        maxAgeDays: userOptions.maxAgeDays || 30,\n        maxQueueSize: userOptions.maxQueueSize || 30,\n        queuePath: userOptions.queuePath || join(getSentryCachePath(), 'queue'),\n    };\n    const queue = new Store(options.queuePath, 'queue-v2', []);\n    function removeBody(id) {\n        promises.unlink(join(options.queuePath, id)).catch(() => {\n            // ignore\n        });\n    }\n    function removeStaleRequests(queue) {\n        while (queue[0] && isOutdated(queue[0], options.maxAgeDays)) {\n            const removed = queue.shift();\n            log('Removing stale envelope', removed);\n            removeBody(removed.id);\n        }\n    }\n    async function insert(env, which, previousDate) {\n        log(`${which}ing envelope into offline storage`);\n        const id = uuid4();\n        try {\n            const data = serializeEnvelope(env);\n            await promises.mkdir(options.queuePath, { recursive: true });\n            await promises.writeFile(join(options.queuePath, id), data);\n        }\n        catch (e) {\n            log('Failed to save', e);\n        }\n        await queue.update((queue) => {\n            if (which === 'push') {\n                removeStaleRequests(queue);\n                if (queue.length >= options.maxQueueSize) {\n                    removeBody(id);\n                    return queue;\n                }\n            }\n            queue[which]({ id, date: previousDate || getSentAtFromEnvelope(env) || new Date() });\n            return queue;\n        });\n    }\n    // We store the timestamp for the last envelope that was shifted out so that if it gets unshifted back in\n    // it can keep its original date\n    let lastShiftedDate;\n    return {\n        push: async (env) => {\n            await insert(env, 'push');\n        },\n        unshift: async (env) => {\n            await insert(env, 'unshift', lastShiftedDate);\n        },\n        shift: async () => {\n            log('Popping envelope from offline storage');\n            let request;\n            await queue.update((queue) => {\n                removeStaleRequests(queue);\n                request = queue.shift();\n                return queue;\n            });\n            if (request) {\n                try {\n                    const data = await promises.readFile(join(options.queuePath, request.id));\n                    removeBody(request.id);\n                    lastShiftedDate = request.date;\n                    return parseEnvelope(data);\n                }\n                catch (e) {\n                    log('Failed to read', e);\n                }\n            }\n            return undefined;\n        },\n    };\n}\n\nexport { createOfflineStore };\n//# sourceMappingURL=offline-store.js.map\n","import { makeOfflineTransport } from '@sentry/core';\nimport { makeElectronTransport } from './electron-net.js';\nimport { createOfflineStore } from './offline-store.js';\n\n// Transport that throws if the `shouldSend` callback returns false\nfunction makeShouldSendTransport(baseTransport) {\n    return (options) => {\n        const transport = baseTransport(options);\n        return {\n            ...transport,\n            send: async (envelope) => {\n                const shouldAttemptSend = options.shouldSend === undefined || (await options.shouldSend(envelope));\n                if (shouldAttemptSend) {\n                    return transport.send(envelope);\n                }\n                throw new Error(\"'shouldSend' callback returned false. Skipped sending.\");\n            },\n        };\n    };\n}\n/**\n * Creates a Transport that uses Electrons net module to send events to Sentry. When they fail to send they are\n * persisted to disk and sent later\n */\nfunction makeElectronOfflineTransport(baseTransport = makeElectronTransport) {\n    return (userOptions) => {\n        // `makeElectronOfflineTransport` is a combination of three transports.\n        //\n        // The base Electron transport (`makeElectronTransport`) is first wrapped by `makeShouldSendTransport` which skips\n        // sending events and throws when the `shouldSend` callback returns false.\n        //\n        // This is then wrapped again by `makeOfflineTransport` which stores events to disk when they fail to send.\n        return makeOfflineTransport(makeShouldSendTransport(baseTransport))({\n            flushAtStartup: true,\n            createStore: createOfflineStore,\n            ...userOptions,\n        });\n    };\n}\n\nexport { makeElectronOfflineTransport };\n//# sourceMappingURL=electron-offline-net.js.map\n","import { forEachEnvelopeItem } from '@sentry/core';\n\n/** Pulls an event and additional envelope items out of an envelope. Returns undefined if there was no event */\nfunction eventFromEnvelope(envelope) {\n    let event;\n    const attachments = [];\n    let profile;\n    forEachEnvelopeItem(envelope, (item, type) => {\n        if (type === 'event' || type === 'transaction' || type === 'feedback') {\n            event = Array.isArray(item) ? item[1] : undefined;\n        }\n        else if (type === 'attachment') {\n            const [headers, data] = item;\n            attachments.push({\n                filename: headers.filename,\n                attachmentType: headers.attachment_type,\n                contentType: headers.content_type,\n                data,\n            });\n        }\n        else if (type === 'profile') {\n            profile = item[1];\n        }\n    });\n    return event ? [event, attachments, profile] : undefined;\n}\n\nexport { eventFromEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { watchdogTimer, stripSentryFramesAndReverse, callFrameToStackFrame, logger } from '@sentry/core';\nimport { captureEvent, createGetModuleFromFilename, getClient } from '@sentry/node';\nimport { app } from 'electron';\nimport { sessionAnr } from './sessions.js';\n\nfunction getRendererName(contents) {\n    const options = getClient()?.getOptions();\n    return options?.getRendererName?.(contents);\n}\nfunction sendRendererAnrEvent(contents, blockedMs, frames) {\n    sessionAnr();\n    const rendererName = getRendererName(contents) || 'renderer';\n    const event = {\n        level: 'error',\n        exception: {\n            values: [\n                {\n                    type: 'ApplicationNotResponding',\n                    value: `Application Not Responding for at least ${blockedMs} ms`,\n                    stacktrace: { frames },\n                    mechanism: {\n                        // This ensures the UI doesn't say 'Crashed in' for the stack trace\n                        type: 'ANR',\n                    },\n                },\n            ],\n        },\n        tags: {\n            'event.process': rendererName,\n        },\n    };\n    captureEvent(event);\n}\nfunction rendererDebugger(contents, pausedStack) {\n    contents.debugger.attach('1.3');\n    // Collect scriptId -> url map so we can look up the filenames later\n    const scripts = new Map();\n    const getModuleFromFilename = createGetModuleFromFilename(app.getAppPath());\n    contents.debugger.on('message', (_, method, params) => {\n        if (method === 'Debugger.scriptParsed') {\n            const param = params;\n            scripts.set(param.scriptId, param.url);\n        }\n        else if (method === 'Debugger.paused') {\n            const param = params;\n            if (param.reason !== 'other') {\n                return;\n            }\n            // copy the frames\n            const callFrames = [...param.callFrames];\n            contents.debugger.sendCommand('Debugger.resume').then(null, () => {\n                // ignore\n            });\n            const stackFrames = stripSentryFramesAndReverse(callFrames.map((frame) => callFrameToStackFrame(frame, scripts.get(frame.location.scriptId), getModuleFromFilename)));\n            pausedStack(stackFrames);\n        }\n    });\n    // In node, we enable just before pausing but for Chrome, the debugger must be enabled before he ANR event occurs\n    contents.debugger.sendCommand('Debugger.enable').catch(() => {\n        // ignore\n    });\n    return () => {\n        return contents.debugger.sendCommand('Debugger.pause');\n    };\n}\nlet rendererWatchdogTimers;\nfunction createHrTimer() {\n    let lastPoll = process.hrtime();\n    return {\n        getTimeMs: () => {\n            const [seconds, nanoSeconds] = process.hrtime(lastPoll);\n            return Math.floor(seconds * 1e3 + nanoSeconds / 1e6);\n        },\n        reset: () => {\n            lastPoll = process.hrtime();\n        },\n    };\n}\n/** Creates a renderer ANR status hook */\nfunction createRendererAnrStatusHandler() {\n    function log(message, ...args) {\n        logger.log(`[Renderer ANR] ${message}`, ...args);\n    }\n    return (message, contents) => {\n        rendererWatchdogTimers = rendererWatchdogTimers || new Map();\n        let watchdog = rendererWatchdogTimers.get(contents);\n        if (watchdog === undefined) {\n            log('Renderer sent first status message', message.config);\n            let pauseAndCapture;\n            if (message.config.captureStackTrace) {\n                log('Connecting to debugger');\n                pauseAndCapture = rendererDebugger(contents, (frames) => {\n                    log('Event captured with stack frames');\n                    sendRendererAnrEvent(contents, message.config.anrThreshold, frames);\n                });\n            }\n            watchdog = watchdogTimer(createHrTimer, 100, message.config.anrThreshold, async () => {\n                log('Watchdog timeout');\n                if (pauseAndCapture) {\n                    log('Pausing debugger to capture stack trace');\n                    pauseAndCapture();\n                }\n                else {\n                    log('Capturing event');\n                    sendRendererAnrEvent(contents, message.config.anrThreshold);\n                }\n            });\n            contents.once('destroyed', () => {\n                rendererWatchdogTimers?.delete(contents);\n            });\n            rendererWatchdogTimers.set(contents, watchdog);\n        }\n        watchdog.poll();\n        if (message.status !== 'alive') {\n            log('Renderer visibility changed', message.status);\n            watchdog.enabled(message.status === 'visible');\n        }\n    };\n}\n\nexport { createRendererAnrStatusHandler };\n//# sourceMappingURL=anr.js.map\n","import { SentryError, logger, parseEnvelope } from '@sentry/core';\nimport { getClient, metrics, getCurrentScope, captureEvent } from '@sentry/node';\nimport { app, protocol, ipcMain, webContents } from 'electron';\nimport { eventFromEnvelope } from '../common/envelope.js';\nimport { IPCMode, IPCChannel, PROTOCOL_SCHEME } from '../common/ipc.js';\nimport { createRendererAnrStatusHandler } from './anr.js';\nimport { registerProtocol } from './electron-normalize.js';\nimport { rendererProfileFromIpc } from './integrations/renderer-profiling.js';\nimport { mergeEvents } from './merge.js';\nimport { normalizeUrlsInReplayEnvelope } from './normalize.js';\n\nlet KNOWN_RENDERERS;\nlet WINDOW_ID_TO_WEB_CONTENTS;\nconst SENTRY_CUSTOM_SCHEME = {\n    scheme: PROTOCOL_SCHEME,\n    privileges: { bypassCSP: true, corsEnabled: true, supportFetchAPI: true, secure: true },\n};\nfunction newProtocolRenderer() {\n    KNOWN_RENDERERS = KNOWN_RENDERERS || new Set();\n    WINDOW_ID_TO_WEB_CONTENTS = WINDOW_ID_TO_WEB_CONTENTS || new Map();\n    for (const wc of webContents.getAllWebContents()) {\n        const wcId = wc.id;\n        if (KNOWN_RENDERERS.has(wcId)) {\n            continue;\n        }\n        if (!wc.isDestroyed()) {\n            wc.executeJavaScript('window.__SENTRY_RENDERER_ID__').then((windowId) => {\n                if (windowId && KNOWN_RENDERERS && WINDOW_ID_TO_WEB_CONTENTS) {\n                    KNOWN_RENDERERS.add(wcId);\n                    WINDOW_ID_TO_WEB_CONTENTS.set(windowId, wcId);\n                    wc.once('destroyed', () => {\n                        KNOWN_RENDERERS?.delete(wcId);\n                        WINDOW_ID_TO_WEB_CONTENTS?.delete(windowId);\n                    });\n                }\n            }, logger.error);\n        }\n    }\n}\nfunction captureEventFromRenderer(options, event, attachments, contents) {\n    const process = contents ? options?.getRendererName?.(contents) || 'renderer' : 'renderer';\n    // Ensure breadcrumbs are empty as they sent via scope updates\n    event.breadcrumbs = event.breadcrumbs || [];\n    // Remove the environment as it defaults to 'production' and overwrites the main process environment\n    delete event.environment;\n    // Remove the SDK info as we want the Electron SDK to be the one reporting the event\n    delete event.sdk?.name;\n    delete event.sdk?.version;\n    delete event.sdk?.packages;\n    captureEvent(mergeEvents(event, { tags: { 'event.process': process } }), { attachments });\n}\nfunction handleEvent(options, jsonEvent, contents) {\n    let event;\n    try {\n        event = JSON.parse(jsonEvent);\n    }\n    catch {\n        logger.warn('sentry-electron received an invalid event message');\n        return;\n    }\n    captureEventFromRenderer(options, event, [], contents);\n}\nfunction handleEnvelope(options, env, contents) {\n    const envelope = parseEnvelope(env);\n    const eventAndAttachments = eventFromEnvelope(envelope);\n    if (eventAndAttachments) {\n        const [event, attachments, profile] = eventAndAttachments;\n        if (profile) {\n            // We have a 'profile' item and there is no way for us to pass this through event capture\n            // so store them in a cache and reattach them via the `beforeEnvelope` hook before sending\n            rendererProfileFromIpc(event, profile);\n        }\n        captureEventFromRenderer(options, event, attachments, contents);\n    }\n    else {\n        const normalizedEnvelope = normalizeUrlsInReplayEnvelope(envelope, app.getAppPath());\n        // Pass other types of envelope straight to the transport\n        void getClient()?.getTransport()?.send(normalizedEnvelope);\n    }\n}\nfunction handleMetric(metric) {\n    const client = getClient();\n    if (!client) {\n        return;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    const metricsAggregator = metrics.getMetricsAggregatorForClient(client);\n    metricsAggregator.add(metric.metricType, metric.name, metric.value, metric.unit, metric.tags, metric.timestamp);\n}\n/** Is object defined and has keys */\nfunction hasKeys(obj) {\n    return obj != undefined && Object.keys(obj).length > 0;\n}\n/**\n * Handle scope updates from renderer processes\n */\nfunction handleScope(options, jsonScope) {\n    let sentScope;\n    try {\n        sentScope = JSON.parse(jsonScope);\n    }\n    catch {\n        logger.warn('sentry-electron received an invalid scope message');\n        return;\n    }\n    const scope = getCurrentScope();\n    if (hasKeys(sentScope.user)) {\n        scope.setUser(sentScope.user);\n    }\n    if (hasKeys(sentScope.tags)) {\n        scope.setTags(sentScope.tags);\n    }\n    if (hasKeys(sentScope.extra)) {\n        scope.setExtras(sentScope.extra);\n    }\n    for (const attachment of sentScope.attachments || []) {\n        scope.addAttachment(attachment);\n    }\n    const breadcrumb = sentScope.breadcrumbs.pop();\n    if (breadcrumb) {\n        scope.addBreadcrumb(breadcrumb, options?.maxBreadcrumbs || 100);\n    }\n}\n/** Enables Electron protocol handling */\nfunction configureProtocol(options) {\n    if (app.isReady()) {\n        throw new SentryError(\"Sentry SDK should be initialized before the Electron app 'ready' event is fired\");\n    }\n    protocol.registerSchemesAsPrivileged([SENTRY_CUSTOM_SCHEME]);\n    // We Proxy this function so that later user calls to registerSchemesAsPrivileged don't overwrite our custom scheme\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    protocol.registerSchemesAsPrivileged = new Proxy(protocol.registerSchemesAsPrivileged, {\n        apply: (target, __, args) => {\n            target([...args[0], SENTRY_CUSTOM_SCHEME]);\n        },\n    });\n    const rendererStatusChanged = createRendererAnrStatusHandler();\n    app\n        .whenReady()\n        .then(() => {\n        for (const sesh of options.getSessions()) {\n            registerProtocol(sesh.protocol, PROTOCOL_SCHEME, (request) => {\n                const getWebContents = () => {\n                    const webContentsId = request.windowId ? WINDOW_ID_TO_WEB_CONTENTS?.get(request.windowId) : undefined;\n                    return webContentsId ? webContents.fromId(webContentsId) : undefined;\n                };\n                const data = request.body;\n                if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.RENDERER_START}`)) {\n                    newProtocolRenderer();\n                }\n                else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.EVENT}`) && data) {\n                    handleEvent(options, data.toString(), getWebContents());\n                }\n                else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.SCOPE}`) && data) {\n                    handleScope(options, data.toString());\n                }\n                else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.ENVELOPE}`) && data) {\n                    handleEnvelope(options, data, getWebContents());\n                }\n                else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.ADD_METRIC}`) && data) {\n                    handleMetric(JSON.parse(data.toString()));\n                }\n                else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.STATUS}`) && data) {\n                    const contents = getWebContents();\n                    if (contents) {\n                        const status = JSON.parse(data.toString()).status;\n                        rendererStatusChanged(status, contents);\n                    }\n                }\n            });\n        }\n    })\n        .catch((error) => logger.error(error));\n}\n/**\n * Hooks IPC for communication with the renderer processes\n */\nfunction configureClassic(options) {\n    ipcMain.on(IPCChannel.RENDERER_START, ({ sender }) => {\n        const id = sender.id;\n        // Keep track of renderers that are using IPC\n        KNOWN_RENDERERS = KNOWN_RENDERERS || new Set();\n        if (KNOWN_RENDERERS.has(id)) {\n            return;\n        }\n        // In older Electron, sender can be destroyed before this callback is called\n        if (!sender.isDestroyed()) {\n            KNOWN_RENDERERS.add(id);\n            sender.once('destroyed', () => {\n                KNOWN_RENDERERS?.delete(id);\n            });\n        }\n    });\n    ipcMain.on(IPCChannel.EVENT, ({ sender }, jsonEvent) => handleEvent(options, jsonEvent, sender));\n    ipcMain.on(IPCChannel.SCOPE, (_, jsonScope) => handleScope(options, jsonScope));\n    ipcMain.on(IPCChannel.ENVELOPE, ({ sender }, env) => handleEnvelope(options, env, sender));\n    const rendererStatusChanged = createRendererAnrStatusHandler();\n    ipcMain.on(IPCChannel.STATUS, ({ sender }, status) => rendererStatusChanged(status, sender));\n    ipcMain.on(IPCChannel.ADD_METRIC, (_, metric) => handleMetric(metric));\n}\n/** Sets up communication channels with the renderer */\nfunction configureIPC(options) {\n    // eslint-disable-next-line no-bitwise\n    if ((options.ipcMode & IPCMode.Protocol) > 0) {\n        configureProtocol(options);\n    }\n    // eslint-disable-next-line no-bitwise\n    if ((options.ipcMode & IPCMode.Classic) > 0) {\n        configureClassic(options);\n    }\n}\n\nexport { configureIPC };\n//# sourceMappingURL=ipc.js.map\n","import { createStackParser, nodeStackLineParser } from '@sentry/core';\nimport { createGetModuleFromFilename } from '@sentry/node';\nimport { app } from 'electron';\n\n// node.js stack parser but filename normalized before parsing the module\nconst defaultStackParser = createStackParser(nodeStackLineParser(createGetModuleFromFilename(app.getAppPath())));\n\nexport { defaultStackParser };\n//# sourceMappingURL=stack-parse.js.map\n","import { parseEnvelope, logger } from '@sentry/core';\nimport { getClient, captureEvent } from '@sentry/node';\nimport * as electron from 'electron';\nimport { eventFromEnvelope } from '../common/envelope.js';\nimport { isMagicMessage, getMagicMessage } from '../common/ipc.js';\nimport { mergeEvents } from './merge.js';\n\nfunction log(message) {\n    logger.log(`[Utility Process] ${message}`);\n}\n/**\n * We wrap `electron.utilityProcess.fork` so we can pass a messageport to any SDK running in the utility process\n */\nfunction configureUtilityProcessIPC() {\n    if (!electron.utilityProcess?.fork) {\n        return;\n    }\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    electron.utilityProcess.fork = new Proxy(electron.utilityProcess.fork, {\n        apply: (target, thisArg, args) => {\n            // Call the underlying function to get the child process\n            const child = target.apply(thisArg, args);\n            function getProcessName() {\n                const [, , options] = args;\n                return options?.serviceName || `pid:${child.pid}`;\n            }\n            // We don't send any messages unless we've heard from the child SDK. At that point we know it's ready to receive\n            // and will also filter out any messages we send so users don't see them\n            child.on('message', (msg) => {\n                if (isMagicMessage(msg)) {\n                    log(`SDK started in utility process '${getProcessName()}'`);\n                    const { port1, port2 } = new electron.MessageChannelMain();\n                    port2.on('message', (msg) => {\n                        if (msg.data instanceof Uint8Array || typeof msg.data === 'string') {\n                            handleEnvelopeFromUtility(msg.data);\n                        }\n                    });\n                    port2.start();\n                    // Send one side of the message port to the child SDK\n                    child.postMessage(getMagicMessage(), [port1]);\n                }\n            });\n            // We proxy child.on so we can filter messages from the child SDK and ensure that users do not see them\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            child.on = new Proxy(child.on, {\n                apply: (target, thisArg, [event, listener]) => {\n                    if (event === 'message') {\n                        return target.apply(thisArg, [\n                            'message',\n                            (msg) => {\n                                if (isMagicMessage(msg)) {\n                                    return;\n                                }\n                                return listener(msg);\n                            },\n                        ]);\n                    }\n                    return target.apply(thisArg, [event, listener]);\n                },\n            });\n            return child;\n        },\n    });\n}\nfunction handleEnvelopeFromUtility(env) {\n    const envelope = parseEnvelope(env);\n    const eventAndAttachments = eventFromEnvelope(envelope);\n    if (eventAndAttachments) {\n        const [event, attachments] = eventAndAttachments;\n        captureEventFromUtility(event, attachments);\n    }\n    else {\n        // Pass other types of envelope straight to the transport\n        void getClient()?.getTransport()?.send(envelope);\n    }\n}\nfunction captureEventFromUtility(event, attachments) {\n    // Remove the environment as it defaults to 'production' and overwrites the main process environment\n    delete event.environment;\n    delete event.release;\n    // Remove the SDK info as we want the Electron SDK to be the one reporting the event\n    delete event.sdk?.name;\n    delete event.sdk?.version;\n    delete event.sdk?.packages;\n    captureEvent(mergeEvents(event, { tags: { 'event.process': 'utility' } }), { attachments });\n}\n\nexport { configureUtilityProcessIPC };\n//# sourceMappingURL=utility-processes.js.map\n","import { stackParserFromStackParserOptions, getIntegrationsToSetup, logger } from '@sentry/core';\nimport { inboundFiltersIntegration, functionToStringIntegration, linkedErrorsIntegration, consoleIntegration, nativeNodeFetchIntegration, onUnhandledRejectionIntegration, contextLinesIntegration, localVariablesIntegration, nodeContextIntegration, setNodeAsyncContextStrategy, getCurrentScope, NodeClient, initOpenTelemetry } from '@sentry/node';\nimport { session } from 'electron';\nimport { IPCMode } from '../common/ipc.js';\nimport { getSdkInfo, getDefaultReleaseName, getDefaultEnvironment } from './context.js';\nimport { additionalContextIntegration } from './integrations/additional-context.js';\nimport { childProcessIntegration } from './integrations/child-process.js';\nimport { electronBreadcrumbsIntegration } from './integrations/electron-breadcrumbs.js';\nimport { electronContextIntegration } from './integrations/electron-context.js';\nimport { mainProcessSessionIntegration } from './integrations/main-process-session.js';\nimport { electronNetIntegration } from './integrations/net-breadcrumbs.js';\nimport { normalizePathsIntegration } from './integrations/normalize-paths.js';\nimport { onUncaughtExceptionIntegration } from './integrations/onuncaughtexception.js';\nimport { preloadInjectionIntegration } from './integrations/preload-injection.js';\nimport { rendererProfilingIntegration } from './integrations/renderer-profiling.js';\nimport { screenshotsIntegration } from './integrations/screenshots.js';\nimport { sentryMinidumpIntegration } from './integrations/sentry-minidump/index.js';\nimport { configureIPC } from './ipc.js';\nimport { defaultStackParser } from './stack-parse.js';\nimport { makeElectronOfflineTransport } from './transports/electron-offline-net.js';\nimport { configureUtilityProcessIPC } from './utility-processes.js';\n\n/** Get the default integrations for the main process SDK. */\nfunction getDefaultIntegrations(options) {\n    const integrations = [\n        // Electron integrations\n        sentryMinidumpIntegration(),\n        electronBreadcrumbsIntegration(),\n        electronNetIntegration(),\n        electronContextIntegration(),\n        childProcessIntegration(),\n        onUncaughtExceptionIntegration(),\n        preloadInjectionIntegration(),\n        additionalContextIntegration(),\n        screenshotsIntegration(),\n        // Node integrations\n        inboundFiltersIntegration(),\n        functionToStringIntegration(),\n        linkedErrorsIntegration(),\n        consoleIntegration(),\n        nativeNodeFetchIntegration(),\n        onUnhandledRejectionIntegration(),\n        contextLinesIntegration(),\n        localVariablesIntegration(),\n        nodeContextIntegration({ cloudResource: false }),\n        // We want paths to be normailzed after we've captured context\n        normalizePathsIntegration(),\n    ];\n    // eslint-disable-next-line deprecation/deprecation\n    if (options.autoSessionTracking !== false) {\n        integrations.push(mainProcessSessionIntegration());\n    }\n    if (options.attachScreenshot) {\n        integrations.push(screenshotsIntegration());\n    }\n    if (options.enableRendererProfiling) {\n        integrations.push(rendererProfilingIntegration());\n    }\n    return integrations;\n}\n/**\n * Initialize Sentry in the Electron main process\n */\nfunction init(userOptions) {\n    const optionsWithDefaults = {\n        _metadata: { sdk: getSdkInfo() },\n        ipcMode: IPCMode.Both,\n        release: getDefaultReleaseName(),\n        environment: getDefaultEnvironment(),\n        defaultIntegrations: getDefaultIntegrations(userOptions),\n        transport: makeElectronOfflineTransport(),\n        transportOptions: {},\n        getSessions: () => [session.defaultSession],\n        ...userOptions,\n        stackParser: stackParserFromStackParserOptions(userOptions.stackParser || defaultStackParser),\n    };\n    const options = {\n        ...optionsWithDefaults,\n        integrations: getIntegrationsToSetup(optionsWithDefaults),\n    };\n    if (options.debug) {\n        logger.enable();\n    }\n    removeRedundantIntegrations(options);\n    configureIPC(options);\n    configureUtilityProcessIPC();\n    setNodeAsyncContextStrategy();\n    const scope = getCurrentScope();\n    scope.update(options.initialScope);\n    const client = new NodeClient(options);\n    scope.setClient(client);\n    client.init();\n    // If users opt-out of this, they _have_ to set up OpenTelemetry themselves\n    // There is no way to use this SDK without OpenTelemetry!\n    if (!options.skipOpenTelemetrySetup) {\n        initOpenTelemetry(client);\n    }\n}\n/** A list of integrations which cause default integrations to be removed */\nconst INTEGRATION_OVERRIDES = [\n    { userAdded: 'ElectronMinidump', toRemove: 'SentryMinidump' },\n    { userAdded: 'BrowserWindowSession', toRemove: 'MainProcessSession' },\n];\n/** Sets the default integrations and ensures that multiple minidump or session integrations are not enabled */\nfunction removeRedundantIntegrations(\n// At this point we know that the integrations are an array\noptions) {\n    for (const { userAdded, toRemove } of INTEGRATION_OVERRIDES) {\n        if (options.integrations.some((i) => i.name === userAdded)) {\n            options.integrations = options.integrations.filter((i) => i.name !== toRemove);\n        }\n    }\n}\n\nexport { getDefaultIntegrations, init };\n//# sourceMappingURL=sdk.js.map\n","function errorToStringMainProcess(error: unknown, depth: number = 0): string {\n  if (error instanceof Error) {\n    let errorString = `${error.name}: ${error.message}`\n    if (error.cause) {\n      errorString += `\\nCaused by: ${errorToStringMainProcess(error.cause, depth + 1)}`\n    }\n    if (depth === 0) {\n      // Optionally include the stack trace at the top level\n      errorString += `\\nStack Trace:\\n${error.stack}`\n    }\n    return errorString\n  }\n  return String(error)\n}\n\nexport default errorToStringMainProcess\n","import { AgentConfig, Chat } from '@/lib/llm/types'\nimport { SearchProps } from './types'\n\nexport type APIInterface = 'openai' | 'anthropic' | 'ollama'\n\nexport interface LLMAPIConfig {\n  name: string\n  apiInterface: APIInterface\n  apiURL?: string\n  apiKey?: string\n}\n\nexport interface LLMConfig {\n  modelName: string\n  apiName: string\n  contextLength?: number\n}\n\nexport type LLMGenerationParameters = {\n  maxTokens?: number\n  temperature?: number\n}\n\nexport type EmbeddingModelConfig = EmbeddingModelWithRepo | EmbeddingModelWithLocalPath\n\nexport type TamaguiThemeTypes = 'light' | 'dark'\n\nexport interface EmbeddingModelWithRepo {\n  type: 'repo'\n  repoName: string\n  description?: string\n  readableName?: string\n}\n\nexport interface EmbeddingModelWithLocalPath {\n  type: 'local'\n  localPath: string\n  description?: string\n  readableName?: string\n}\n\nexport interface StoreSchema {\n  hasUserOpenedAppBefore: boolean\n  schemaVersion: number\n  user: {\n    vaultDirectories: string[]\n    directoryFromPreviousSession?: string\n  }\n  LLMs: LLMConfig[]\n  LLMAPIs: LLMAPIConfig[]\n  embeddingModels: {\n    [modelAlias: string]: EmbeddingModelConfig\n  }\n  defaultLLM: string\n  defaultEmbedFuncRepo: string\n  llmGenerationParameters: LLMGenerationParameters\n  chats: {\n    [vaultDir: string]: Chat[]\n  }\n  agentConfigs: AgentConfig[]\n  analytics?: boolean\n  chunkSize: number\n  spellCheck: string\n  EditorFlexCenter: boolean\n  showDocumentStats: boolean\n  autoContext: boolean\n  tamaguiTheme: TamaguiThemeTypes\n  searchParams: SearchProps\n}\n\nexport enum StoreKeys {\n  hasUserOpenedAppBefore = 'hasUserOpenedAppBefore',\n  Analytics = 'analytics',\n  SchemaVersion = 'schemaVersion',\n  DirectoryFromPreviousSession = 'user.directoryFromPreviousSession',\n  LLMs = 'LLMs',\n  LLMAPIs = 'LLMAPIs',\n  EmbeddingModels = 'embeddingModels',\n  DefaultLLM = 'defaultLLM',\n  DefaultEmbeddingModelAlias = 'defaultEmbeddingModelAlias',\n  MaxRAGExamples = 'RAG.maxRAGExamples',\n  LLMGenerationParameters = 'llmGenerationParameters',\n  Chats = 'chats',\n  AgentConfigs = 'agentConfigs',\n  ChunkSize = 'chunkSize',\n  SpellCheck = 'spellCheck',\n  EditorFlexCenter = 'editorFlexCenter',\n  showDocumentStats = 'showDocumentStats',\n  AutoContext = 'autoContext',\n  TamaguiTheme = 'tamaguiTheme',\n  SearchParams = 'searchParams',\n}\n","import path from 'path'\n\nfunction addExtensionToFilenameIfNoExtensionPresent(\n  filename: string,\n  acceptableExtensions: string[],\n  defaultExtension: string,\n): string {\n  const extension = path.extname(filename).toLowerCase()\n  if (acceptableExtensions.includes(extension)) {\n    return filename\n  }\n\n  return `${filename}${defaultExtension}`\n}\n\nexport default addExtensionToFilenameIfNoExtensionPresent\n","import { FileInfoNode } from 'electron/main/filesystem/types'\nimport { ReorChatMessage } from '@/lib/llm/types'\n\nexport const generateChatName = (messages: ReorChatMessage[], userInput?: string): string => {\n  if (userInput) {\n    return userInput.slice(0, 50)\n  }\n  if (!messages || messages.length === 0 || !messages[0].content) {\n    return 'Empty Chat'\n  }\n\n  const firstMsg = messages[0]\n\n  if (firstMsg.visibleContent) {\n    return firstMsg.visibleContent.slice(0, 30)\n  }\n\n  const firstMessage = firstMsg.content\n  if (!firstMessage || firstMessage === '' || typeof firstMessage !== 'string') {\n    return 'Empty Chat'\n  }\n  return firstMessage.slice(0, 30)\n}\n\nexport const isFileNodeDirectory = (fileInfo: FileInfoNode): boolean => fileInfo.children !== undefined\n","import * as fs from 'fs'\nimport * as path from 'path'\n\nimport chokidar from 'chokidar'\nimport { BrowserWindow } from 'electron'\n\nimport { FileInfo, FileInfoTree } from './types'\nimport addExtensionToFilenameIfNoExtensionPresent from '../path/path'\nimport { isFileNodeDirectory } from '../../../shared/utils'\n\nexport const markdownExtensions = ['.md', '.markdown', '.mdown', '.mkdn', '.mkd']\n\nexport function isHidden(fileName: string): boolean {\n  return fileName.startsWith('.')\n}\n\nfunction fileHasExtensionInList(filePath: string, extensions: string[]): boolean {\n  try {\n    const fileExtension = path.extname(filePath).toLowerCase()\n    return extensions.includes(fileExtension)\n  } catch (error) {\n    return false\n  }\n}\n\nexport function GetFilesInfoTree(pathInput: string, parentRelativePath: string = ''): FileInfoTree {\n  const fileInfoTree: FileInfoTree = []\n\n  if (!fs.existsSync(pathInput)) {\n    return fileInfoTree\n  }\n\n  try {\n    const stats = fs.statSync(pathInput)\n    if (stats.isFile()) {\n      if (fileHasExtensionInList(pathInput, markdownExtensions) && !isHidden(path.basename(pathInput))) {\n        fileInfoTree.push({\n          name: path.basename(pathInput),\n          path: pathInput,\n          relativePath: parentRelativePath,\n          dateModified: stats.mtime,\n          dateCreated: stats.birthtime, // Add the birthtime property here\n        })\n      }\n    } else {\n      const itemsInDir = fs.readdirSync(pathInput).filter((item) => !isHidden(item))\n\n      const childNodes: FileInfoTree = itemsInDir\n        .map((item) => {\n          const itemPath = path.join(pathInput, item)\n          return GetFilesInfoTree(itemPath, path.join(parentRelativePath, item))\n        })\n        .flat()\n\n      if (parentRelativePath === '') {\n        return childNodes\n      }\n      if (!isHidden(path.basename(pathInput))) {\n        fileInfoTree.push({\n          name: path.basename(pathInput),\n          path: pathInput,\n          relativePath: parentRelativePath,\n          dateModified: stats.mtime,\n          dateCreated: stats.birthtime,\n          children: childNodes,\n        })\n      }\n    }\n  } catch (error) {\n    // no need to throw error\n  }\n\n  return fileInfoTree\n}\n\nexport function flattenFileInfoTree(tree: FileInfoTree): FileInfo[] {\n  return tree.reduce((flatList: FileInfo[], node) => {\n    if (!isFileNodeDirectory(node)) {\n      flatList.push({\n        name: node.name,\n        path: node.path,\n        relativePath: node.relativePath,\n        dateModified: node.dateModified,\n        dateCreated: node.dateCreated,\n      })\n    }\n    if (isFileNodeDirectory(node) && node.children) {\n      flatList.push(...flattenFileInfoTree(node.children))\n    }\n    return flatList\n  }, [])\n}\n\nexport function GetFilesInfoList(directory: string): FileInfo[] {\n  const fileInfoTree = GetFilesInfoTree(directory)\n  const fileInfoList = flattenFileInfoTree(fileInfoTree)\n  return fileInfoList\n}\n\nexport function GetFilesInfoListForListOfPaths(paths: string[]): FileInfo[] {\n  const fileInfoTree = paths.map((_path) => GetFilesInfoTree(_path)).flat()\n  const fileInfoList = flattenFileInfoTree(fileInfoTree)\n\n  const uniquePaths = new Set()\n  const fileInfoListWithoutDuplicates = fileInfoList.filter((fileInfo) => {\n    if (uniquePaths.has(fileInfo.path)) {\n      return false\n    }\n    uniquePaths.add(fileInfo.path)\n    return true\n  })\n  return fileInfoListWithoutDuplicates\n}\n\nexport function createFileRecursive(filePath: string, content: string, charset?: BufferEncoding): void {\n  const dirname = path.dirname(filePath)\n\n  if (!fs.existsSync(dirname)) {\n    fs.mkdirSync(dirname, { recursive: true })\n  }\n\n  if (fs.existsSync(filePath)) {\n    return\n  }\n  const filePathWithExtension = addExtensionToFilenameIfNoExtensionPresent(filePath, markdownExtensions, '.md')\n\n  fs.writeFileSync(filePathWithExtension, content, charset)\n}\n\nexport function updateFileListForRenderer(win: BrowserWindow, directory: string): void {\n  const files = GetFilesInfoTree(directory)\n  if (win) {\n    win.webContents.send('files-list', files)\n  }\n}\n\nexport function startWatchingDirectory(win: BrowserWindow, directoryToWatch: string): chokidar.FSWatcher | undefined {\n  try {\n    const watcher = chokidar.watch(directoryToWatch, {\n      ignoreInitial: true,\n    })\n\n    const handleFileEvent = (eventType: string, filePath: string) => {\n      if (fileHasExtensionInList(filePath, markdownExtensions) || eventType.includes('directory')) {\n        // TODO: add logic to update vector db\n        updateFileListForRenderer(win, directoryToWatch)\n      }\n    }\n\n    watcher\n      .on('add', (_path) => handleFileEvent('added', _path))\n      .on('change', (_path) => handleFileEvent('changed', _path))\n      .on('unlink', (_path) => handleFileEvent('removed', _path))\n      .on('addDir', (_path) => handleFileEvent('directory added', _path))\n      .on('unlinkDir', (_path) => handleFileEvent('directory removed', _path))\n\n    // No 'ready' event handler is needed here, as we're ignoring initial scan\n    return watcher\n  } catch (error) {\n    // no error\n    return undefined\n  }\n}\n\nexport function appendExtensionIfMissing(filename: string, extensions: string[]): string {\n  const hasExtension = extensions.some((ext) => filename.endsWith(ext))\n\n  if (hasExtension) {\n    return filename\n  }\n\n  return filename + extensions[0]\n}\n\nexport function readFile(filePath: string): string {\n  const data = fs.readFileSync(filePath, 'utf8')\n  return data\n}\n\nexport function splitDirectoryPathIntoBaseAndRepo(fullPath: string) {\n  const normalizedPath = path.normalize(fullPath)\n\n  const pathWithSeparator = normalizedPath.endsWith(path.sep) ? normalizedPath : `${normalizedPath}${path.sep}`\n\n  if (path.dirname(pathWithSeparator.slice(0, -1)) === pathWithSeparator.slice(0, -1)) {\n    return {\n      localModelPath: '', // No directory path before the root\n      repoName: path.basename(pathWithSeparator.slice(0, -1)), // Root directory name\n    }\n  }\n\n  const localModelPath = path.dirname(pathWithSeparator.slice(0, -1))\n  const repoName = path.basename(pathWithSeparator.slice(0, -1))\n\n  return { localModelPath, repoName }\n}\n","import { net } from 'electron'\nimport { ClientRequestConstructorOptions } from 'electron/main'\n\nconst customFetchUsingElectronNet = async (input: RequestInfo | URL, init?: RequestInit): Promise<Response> => {\n  const url = input instanceof URL ? input.href : input.toString()\n  const options = init || {}\n\n  return new Promise((resolve, reject) => {\n    const requestOptions: ClientRequestConstructorOptions = {\n      method: options.method || 'GET',\n      url,\n    }\n\n    const request = net.request(requestOptions)\n\n    // Set headers\n    if (options.headers) {\n      Object.entries(options.headers).forEach(([key, value]) => {\n        request.setHeader(key, value as string)\n      })\n    }\n\n    // Handle request body\n    if (options.body) {\n      let bodyData\n      if (options.body instanceof ArrayBuffer) {\n        bodyData = Buffer.from(options.body)\n      } else if (typeof options.body === 'string' || Buffer.isBuffer(options.body)) {\n        bodyData = options.body\n      } else if (typeof options.body === 'object') {\n        bodyData = JSON.stringify(options.body)\n        request.setHeader('Content-Type', 'application/json')\n      } else {\n        reject(new Error('Unsupported body type'))\n        return\n      }\n      request.write(bodyData)\n    }\n\n    request.on('response', (response) => {\n      const chunks: Buffer[] = []\n      response.on('data', (chunk) => chunks.push(chunk as Buffer))\n      response.on('end', () => {\n        const buffer = Buffer.concat(chunks)\n        resolve(\n          new Response(buffer, {\n            status: response.statusCode,\n            statusText: response.statusMessage,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            headers: new Headers(response.headers as any),\n          }),\n        )\n      })\n    })\n\n    request.on('error', (error) => reject(error))\n    request.end()\n  })\n}\n\nexport default customFetchUsingElectronNet\n","import fs from 'fs'\nimport * as path from 'path'\n\nimport { listFiles, downloadFile } from '@huggingface/hub'\n\nimport customFetchUsingElectronNet from '../common/network'\n\nasync function downloadAndSaveFile(repo: string, HFFilePath: string, systemFilePath: string): Promise<void> {\n  // Call the downloadFile function and await its result\n  const res = await downloadFile({\n    repo,\n    path: HFFilePath,\n    fetch: customFetchUsingElectronNet,\n  })\n\n  if (!res) {\n    throw new Error(`Failed to download file from ${repo}/${HFFilePath}`)\n  }\n\n  // Convert the Response object to an ArrayBuffer\n  const arrayBuffer = await res.arrayBuffer()\n\n  // Convert the ArrayBuffer to a Buffer\n  const buffer = Buffer.from(arrayBuffer)\n\n  // Join the systemFilePath and filePath to create the full path\n  const fullPath = path.join(systemFilePath, HFFilePath)\n  const directory = path.dirname(fullPath)\n  if (!fs.existsSync(directory)) {\n    fs.mkdirSync(directory, { recursive: true })\n  }\n  // Save the Buffer to the full path\n  fs.writeFileSync(fullPath, buffer)\n}\n\nconst DownloadModelFilesFromHFRepo = async (repo: string, saveDirectory: string, quantized = true) => {\n  // List the files:\n  const fileList = await listFiles({\n    repo,\n    recursive: true,\n    fetch: customFetchUsingElectronNet,\n  })\n\n  const files = []\n  for await (const file of fileList) {\n    if (file.type === 'file') {\n      if (file.path.endsWith('onnx')) {\n        const isQuantizedFile = file.path.includes('quantized')\n        if (quantized === isQuantizedFile) {\n          files.push(file)\n        }\n      } else {\n        files.push(file)\n      }\n    }\n  }\n\n  // Create an array of promises for each file download:\n  const downloadPromises = files.map((file) => downloadAndSaveFile(repo, file.path, path.join(saveDirectory, repo)))\n\n  // Execute all download promises in parallel:\n  await Promise.all(downloadPromises)\n}\n\nexport default DownloadModelFilesFromHFRepo\n","import path from 'path'\n\nimport { Pipeline, PreTrainedTokenizer } from '@xenova/transformers'\nimport { app } from 'electron'\nimport removeMd from 'remove-markdown'\nimport * as lancedb from 'vectordb'\n\nimport {\n  EmbeddingModelConfig,\n  EmbeddingModelWithLocalPath,\n  EmbeddingModelWithRepo,\n} from '../electron-store/storeConfig'\nimport { splitDirectoryPathIntoBaseAndRepo } from '../filesystem/filesystem'\n\nimport DownloadModelFilesFromHFRepo from './downloadModelsFromHF'\nimport { DBEntry } from './schema'\n\nexport const defaultEmbeddingModelRepos: Record<string, EmbeddingModelConfig> = {\n  'Xenova/UAE-Large-V1': {\n    type: 'repo',\n    repoName: 'Xenova/UAE-Large-V1',\n    readableName: 'UAE-Large-V1',\n    description: 'Recommended for English content',\n  },\n  'Xenova/bge-small-en-v1.5': {\n    type: 'repo',\n    repoName: 'Xenova/bge-small-en-v1.5',\n    readableName: 'bge-small-en-v1.5',\n    description: 'Recommended for low-power devices',\n  },\n  'Xenova/multilingual-e5-large': {\n    type: 'repo',\n    repoName: 'Xenova/multilingual-e5-large',\n    readableName: 'multilingual-e5-large',\n    description: 'Recommended for non-English content',\n  },\n  'Xenova/jina-embeddings-v2-base-zh': {\n    type: 'repo',\n    repoName: 'Xenova/jina-embeddings-v2-base-zh',\n    readableName: 'jina-embeddings-v2-base-zh',\n    description: 'Recommended for Chinese content',\n  },\n  'Xenova/jina-embeddings-v2-base-de': {\n    type: 'repo',\n    repoName: 'Xenova/jina-embeddings-v2-base-de',\n    readableName: 'jina-embeddings-v2-base-de',\n    description: 'Recommended for German content',\n  },\n}\n\nfunction setupTokenizeFunction(tokenizer: PreTrainedTokenizer): (data: (string | number[])[]) => string[] {\n  return (data: (string | number[])[]): string[] => {\n    if (!tokenizer) {\n      throw new Error('Tokenizer not initialized')\n    }\n\n    return data.map((text) => {\n      const res = tokenizer(text)\n      return res\n    })\n  }\n}\n\nasync function setupEmbedFunction(pipe: Pipeline): Promise<(batch: (string | number[])[]) => Promise<number[][]>> {\n  return async (batch: (string | number[])[]): Promise<number[][]> => {\n    if (batch.length === 0 || batch[0].length === 0) {\n      return []\n    }\n\n    if (typeof batch[0][0] === 'number') {\n      return batch as number[][]\n    }\n\n    if (!pipe) {\n      throw new Error('Pipeline not initialized')\n    }\n\n    const result: number[][] = await Promise.all(\n      batch.map(async (text) => {\n        const res = await pipe(removeMd(text as string), {\n          pooling: 'mean',\n          normalize: true,\n        })\n        return Array.from(res.data)\n      }),\n    )\n\n    return result\n  }\n}\n\nexport async function createEmbeddingFunctionForLocalModel(\n  embeddingModelConfig: EmbeddingModelWithLocalPath,\n  sourceColumn: string,\n): Promise<EnhancedEmbeddingFunction<string | number[]>> {\n  // let pipe: Pipeline\n  let repoName = ''\n  let functionName = ''\n  const { pipeline, env } = await import('@xenova/transformers')\n  env.cacheDir = path.join(app.getPath('userData'), 'models', 'embeddings') // set for all. Just to deal with library and remote inconsistencies\n\n  const pathParts = splitDirectoryPathIntoBaseAndRepo(embeddingModelConfig.localPath)\n\n  env.localModelPath = pathParts.localModelPath\n  repoName = pathParts.repoName\n  env.allowRemoteModels = false\n  functionName = embeddingModelConfig.localPath\n\n  const pipe: Pipeline = (await pipeline(\n    'feature-extraction',\n    repoName,\n    // {cache_dir: cacheDir,\n  )) as Pipeline\n\n  const tokenize = setupTokenizeFunction(pipe.tokenizer)\n  const embed = await setupEmbedFunction(pipe)\n\n  return {\n    name: functionName,\n    contextLength: pipe.model.config.hidden_size,\n    sourceColumn,\n    embed,\n    tokenize,\n  }\n}\n\nexport async function createEmbeddingFunctionForRepo(\n  embeddingModelConfig: EmbeddingModelWithRepo,\n  sourceColumn: string,\n): Promise<EnhancedEmbeddingFunction<string | number[]>> {\n  let pipe: Pipeline\n  let repoName = ''\n  let functionName = ''\n  const { pipeline, env } = await import('@xenova/transformers')\n  env.cacheDir = path.join(app.getPath('userData'), 'models', 'embeddings') // set for all. Just to deal with library and remote inconsistencies\n\n  repoName = embeddingModelConfig.repoName\n  env.allowRemoteModels = true\n  functionName = embeddingModelConfig.repoName\n\n  try {\n    pipe = (await pipeline('feature-extraction', repoName)) as Pipeline\n  } catch (error) {\n    await DownloadModelFilesFromHFRepo(repoName, env.cacheDir) // try to manual download to use system proxy\n    pipe = (await pipeline('feature-extraction', repoName)) as Pipeline\n  }\n\n  const tokenize = setupTokenizeFunction(pipe.tokenizer)\n  const embed = await setupEmbedFunction(pipe)\n\n  // sanitize the embedding text to remove markdown content\n\n  return {\n    name: functionName,\n    contextLength: pipe.model.config.hidden_size,\n    sourceColumn,\n    embed,\n    tokenize,\n  }\n}\n\nexport interface EnhancedEmbeddingFunction<T> extends lancedb.EmbeddingFunction<T> {\n  name: string\n  contextLength: number\n  tokenize: (data: T[]) => string[]\n}\nexport async function createEmbeddingFunction(\n  embeddingModelConfig: EmbeddingModelConfig,\n  sourceColumn: string,\n): Promise<EnhancedEmbeddingFunction<string | number[]>> {\n  if (embeddingModelConfig.type === 'local') {\n    return createEmbeddingFunctionForLocalModel(embeddingModelConfig, sourceColumn)\n  }\n  return createEmbeddingFunctionForRepo(embeddingModelConfig, sourceColumn)\n}\n\nexport const rerankSearchedEmbeddings = async (query: string, searchResults: DBEntry[]) => {\n  const { env, AutoModelForSequenceClassification, AutoTokenizer } = await import('@xenova/transformers')\n  env.cacheDir = path.join(app.getPath('userData'), 'models', 'reranker') // set for all. Just to deal with library and remote inconsistencies\n\n  const tokenizer = await AutoTokenizer.from_pretrained('Xenova/bge-reranker-base')\n  const model = await AutoModelForSequenceClassification.from_pretrained('Xenova/bge-reranker-base')\n\n  const queries = Array(searchResults.length).fill(query)\n\n  const inputs = tokenizer(queries, {\n    text_pair: searchResults.map((item) => item.content),\n    padding: true,\n    truncation: true,\n  })\n\n  const scores = await model(inputs)\n  // map logits to searchResults by index\n  const resultsWithIndex = searchResults.map((item, index) => ({\n    ...item,\n    score: scores.logits.data[index],\n  }))\n\n  // TODO: we should allow users to set threshold for sensitivity too.\n  return resultsWithIndex.sort((a, b) => b.score - a.score).filter((item) => item.score > 0)\n}\n","import { Schema, Field, Utf8, FixedSizeList, Float32, Float64, DateUnit, Date_ as ArrowDate } from 'apache-arrow'\n\nexport interface DBEntry {\n  notepath: string\n  content: string\n  subnoteindex: number\n  timeadded: Date\n  filemodified: Date\n  filecreated: Date\n}\nexport interface DBQueryResult extends DBEntry {\n  _distance: number\n}\n\nexport const chunksize = 500\n\nexport enum DatabaseFields {\n  NOTE_PATH = 'notepath',\n  VECTOR = 'vector',\n  CONTENT = 'content',\n  SUB_NOTE_INDEX = 'subnoteindex',\n  TIME_ADDED = 'timeadded',\n  FILE_MODIFIED = 'filemodified',\n  FILE_CREATED = 'filecreated',\n  DISTANCE = '_distance',\n}\n\nconst CreateDatabaseSchema = (vectorDim: number): Schema => {\n  const schemaFields = [\n    new Field(DatabaseFields.NOTE_PATH, new Utf8(), false),\n    new Field(DatabaseFields.VECTOR, new FixedSizeList(vectorDim, new Field('item', new Float32())), false),\n    new Field(DatabaseFields.CONTENT, new Utf8(), false),\n    new Field(DatabaseFields.SUB_NOTE_INDEX, new Float64(), false),\n    new Field(DatabaseFields.TIME_ADDED, new ArrowDate(DateUnit.MILLISECOND), false),\n    new Field(DatabaseFields.FILE_MODIFIED, new ArrowDate(DateUnit.MILLISECOND), false),\n    new Field(DatabaseFields.FILE_CREATED, new ArrowDate(DateUnit.MILLISECOND), false),\n  ]\n  const schema = new Schema(schemaFields)\n  return schema\n}\n\nconst serializeSchema = (schema: Schema): string =>\n  JSON.stringify(\n    schema.fields.map((field) => ({\n      name: field.name,\n      type: field.type.toString(),\n      nullable: field.nullable,\n    })),\n  )\n\nexport const isStringifiedSchemaEqual = (schema1: Schema, schema2: Schema): boolean => {\n  const serializedSchema1 = serializeSchema(schema1)\n  const serializedSchema2 = serializeSchema(schema2)\n\n  const areEqual = serializedSchema1 === serializedSchema2\n  return areEqual\n}\n\nexport default CreateDatabaseSchema\n","import * as lancedb from 'vectordb'\n\nimport { EnhancedEmbeddingFunction } from './embeddings'\nimport CreateDatabaseSchema, { isStringifiedSchemaEqual } from './schema'\n\nexport const generateTableName = (embeddingFuncName: string, userDirectory: string): string => {\n  const sanitizeForFileSystem = (str: string) => str.replace(/[<>:\"/\\\\|?*]/g, '_')\n\n  const directoryPathAlias = sanitizeForFileSystem(userDirectory)\n  const sanitizedEmbeddingFuncName = sanitizeForFileSystem(embeddingFuncName)\n\n  return `ragnote_table_${sanitizedEmbeddingFuncName}_${directoryPathAlias}`\n}\n\nconst GetOrCreateLanceTable = async (\n  db: lancedb.Connection,\n  embedFunc: EnhancedEmbeddingFunction<string>,\n  userDirectory: string,\n): Promise<lancedb.Table<string>> => {\n  const allTableNames = await db.tableNames()\n  const intendedSchema = CreateDatabaseSchema(embedFunc.contextLength)\n  const tableName = generateTableName(embedFunc.name, userDirectory)\n\n  if (allTableNames.includes(tableName)) {\n    const table = await db.openTable(tableName, embedFunc)\n    const schema = await table.schema\n    if (!isStringifiedSchemaEqual(schema, intendedSchema)) {\n      await db.dropTable(tableName)\n\n      const recreatedTable = await db.createTable({\n        name: tableName,\n        schema: intendedSchema,\n        embeddingFunction: embedFunc,\n      })\n      return recreatedTable\n    }\n\n    return table\n  }\n\n  const newTable = await db.createTable({\n    name: tableName,\n    schema: intendedSchema,\n    embeddingFunction: embedFunc,\n  })\n  return newTable\n}\n\nexport default GetOrCreateLanceTable\n","import { Connection, Table as LanceDBTable, MetricType, makeArrowTable } from 'vectordb'\n\nimport { EmbeddingModelConfig } from '../electron-store/storeConfig'\n\nimport { EnhancedEmbeddingFunction, createEmbeddingFunction } from './embeddings'\nimport GetOrCreateLanceTable from './lance'\nimport { DBEntry, DBQueryResult, DatabaseFields } from './schema'\n\nexport function unsanitizePathForFileSystem(dbPath: string): string {\n  return dbPath.replace(/''/g, \"'\")\n}\n\nexport function convertRecordToDBType<T extends DBEntry | DBQueryResult>(record: Record<string, unknown>): T | null {\n  const { vector, ...recordWithoutVector } = record\n  const recordWithType = recordWithoutVector as unknown as T\n  recordWithType.notepath = unsanitizePathForFileSystem(recordWithType.notepath)\n  return recordWithType\n}\n\nexport function sanitizePathForDatabase(filePath: string): string {\n  return filePath.replace(/'/g, \"''\")\n}\n\nclass LanceDBTableWrapper {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public lanceTable!: LanceDBTable<any>\n\n  private embedFun!: EnhancedEmbeddingFunction<string | number[]>\n\n  async initialize(dbConnection: Connection, userDirectory: string, embeddingModelConfig: EmbeddingModelConfig) {\n    this.embedFun = await createEmbeddingFunction(embeddingModelConfig, 'content')\n\n    this.lanceTable = await GetOrCreateLanceTable(dbConnection, this.embedFun, userDirectory)\n  }\n\n  async add(_data: DBEntry[], onProgress?: (progress: number) => void): Promise<void> {\n    const data = _data\n      .filter((x) => x.content !== '')\n      .map((_x) => {\n        const x = _x\n        x.notepath = sanitizePathForDatabase(x.notepath)\n        return x\n      })\n\n    // clean up previously indexed entries and reindex the whole file\n    await this.deleteDBItemsByFilePaths(data.map((x) => x.notepath))\n\n    const recordEntry: Record<string, unknown>[] = data as unknown as Record<string, unknown>[]\n    const numberOfChunksToIndexAtOnce = process.platform === 'darwin' ? 50 : 40\n    const chunks = []\n    for (let i = 0; i < recordEntry.length; i += numberOfChunksToIndexAtOnce) {\n      chunks.push(recordEntry.slice(i, i + numberOfChunksToIndexAtOnce))\n    }\n\n    if (chunks.length === 0) return\n\n    const totalChunks = chunks.length\n\n    await chunks.reduce(async (previousPromise, chunk, index) => {\n      await previousPromise\n      const arrowTableOfChunk = makeArrowTable(chunk)\n      await this.lanceTable.add(arrowTableOfChunk)\n      const progress = (index + 1) / totalChunks\n      if (onProgress) {\n        onProgress(progress)\n      }\n    }, Promise.resolve())\n  }\n\n  async deleteDBItemsByFilePaths(filePaths: string[]): Promise<void> {\n    const quotedFilePaths = filePaths\n      .map((filePath) => sanitizePathForDatabase(filePath))\n      .map((filePath) => `'${filePath}'`)\n      .join(', ')\n    if (quotedFilePaths === '') {\n      return\n    }\n    const filterString = `${DatabaseFields.NOTE_PATH} IN (${quotedFilePaths})`\n    try {\n      await this.lanceTable.delete(filterString)\n    } catch (error) {\n      //  no need to throw error\n    }\n  }\n\n  async updateDBItemsWithNewFilePath(oldFilePath: string, newFilePath: string): Promise<void> {\n    const sanitizedFilePath = sanitizePathForDatabase(oldFilePath)\n    if (sanitizedFilePath === '') {\n      return\n    }\n    const filterString = `${DatabaseFields.NOTE_PATH} = '${sanitizedFilePath}'`\n    try {\n      await this.lanceTable.update({\n        where: filterString,\n        values: {\n          [DatabaseFields.NOTE_PATH]: sanitizePathForDatabase(newFilePath),\n        },\n      })\n    } catch (error) {\n      // no need to throw error\n    }\n  }\n\n  async search(query: string, limit: number, filter?: string): Promise<DBQueryResult[]> {\n    const lanceQuery = await this.lanceTable.search(query).metricType(MetricType.Cosine).limit(limit)\n\n    if (filter) {\n      lanceQuery.prefilter(true)\n      lanceQuery.filter(filter)\n    }\n    const rawResults = await lanceQuery.execute()\n    const mapped = rawResults.map(convertRecordToDBType<DBQueryResult>)\n    return mapped as DBQueryResult[]\n  }\n\n  async filter(filterString: string, limit: number = 10): Promise<DBEntry[]> {\n    const rawResults = await this.lanceTable.filter(filterString).limit(limit).execute()\n    const mapped = rawResults.map(convertRecordToDBType<DBEntry>)\n    return mapped as DBEntry[]\n  }\n}\n\nexport default LanceDBTableWrapper\n","/* eslint-disable class-methods-use-this */\nimport chokidar from 'chokidar'\nimport { BrowserWindow, WebContents, screen, shell } from 'electron'\nimport Store from 'electron-store'\n\nimport { StoreSchema, StoreKeys } from '../electron-store/storeConfig'\nimport LanceDBTableWrapper from '../vector-database/lanceTableWrapper'\n\ntype WindowInfo = {\n  windowID: number\n  dbTableClient: LanceDBTableWrapper\n  vaultDirectoryForWindow: string\n}\n\nclass WindowsManager {\n  activeWindows: WindowInfo[] = []\n\n  private errorStringsToSendWindow: string[] = []\n\n  watcher: chokidar.FSWatcher | undefined\n\n  async createWindow(store: Store<StoreSchema>, preload: string, url: string | undefined, indexHtml: string) {\n    const { x, y } = this.getNextWindowPosition()\n    const { width, height } = this.getWindowSize()\n\n    const win = new BrowserWindow({\n      title: 'Reor',\n      x,\n      y,\n      webPreferences: {\n        preload,\n      },\n      frame: false,\n      titleBarStyle: 'hidden',\n      titleBarOverlay: {\n        color: '#303030',\n        symbolColor: '#fff',\n        height: 30,\n      },\n      width,\n      height,\n    })\n\n    if (url) {\n      // electron-vite-vue#298\n      win.loadURL(url)\n      // Open devTool if the app is not packaged\n      win.webContents.openDevTools()\n    } else {\n      win.loadFile(indexHtml)\n    }\n\n    // Make all links open with the browser, not with the application\n    win.webContents.setWindowOpenHandler(({ url: _url }) => {\n      if (_url.startsWith('https:')) shell.openExternal(_url)\n      return { action: 'deny' }\n    })\n\n    win.on('close', () => {\n      win.webContents.send('prepare-for-window-close')\n\n      this.prepareWindowForClose(store, win)\n    })\n\n    win.webContents.on('did-finish-load', () => {\n      const errorsToSendWindow = this.getAndClearErrorStrings()\n      errorsToSendWindow.forEach((errorStrToSendWindow) => {\n        win.webContents.send('error-to-display-in-window', errorStrToSendWindow)\n      })\n    })\n  }\n\n  getAndSetupDirectoryForWindowFromPreviousAppSession(\n    webContents: Electron.WebContents,\n    store: Store<StoreSchema>,\n  ): string {\n    const lastUsedVaultDirectory = store.get(StoreKeys.DirectoryFromPreviousSession) as string\n    if (!lastUsedVaultDirectory) {\n      return ''\n    }\n    const isUserDirectoryUsed = this.activeWindows.some((w) => w.vaultDirectoryForWindow === lastUsedVaultDirectory)\n    if (!isUserDirectoryUsed) {\n      this.setVaultDirectoryForContents(webContents, lastUsedVaultDirectory, store)\n      return lastUsedVaultDirectory\n    }\n    return ''\n  }\n\n  appendNewErrorToDisplayInWindow(errorString: string) {\n    let errorSent = false\n    const activeWindows = BrowserWindow.getAllWindows()\n    activeWindows.forEach((window) => {\n      if (!window.webContents.isLoading()) {\n        window.webContents.send('error-to-display-in-window', errorString)\n        errorSent = true\n      }\n    })\n\n    if (!errorSent) {\n      this.errorStringsToSendWindow.push(errorString)\n    }\n  }\n\n  getAndClearErrorStrings(): string[] {\n    const errorStrings = this.errorStringsToSendWindow\n    this.errorStringsToSendWindow = []\n    return errorStrings\n  }\n\n  getBrowserWindowId(webContents: WebContents): number | null {\n    const browserWindow = BrowserWindow.fromWebContents(webContents)\n    return browserWindow ? browserWindow.id : null\n  }\n\n  getWindowInfoForContents(webContents: WebContents): WindowInfo | null {\n    const windowID = this.getBrowserWindowId(webContents)\n\n    if (windowID === null) {\n      return null\n    }\n\n    const windowInfo = this.activeWindows.find((w) => w.windowID === windowID)\n    return windowInfo || null\n  }\n\n  getVaultDirectoryForWinContents(webContents: WebContents): string | null {\n    const windowID = this.getBrowserWindowId(webContents)\n    return windowID ? this.getVaultDirectoryForWindowID(windowID) : null\n  }\n\n  private getVaultDirectoryForWindowID(windowID: number): string | null {\n    const windowInfo = this.activeWindows.find((w) => w.windowID === windowID)\n    return windowInfo ? windowInfo.vaultDirectoryForWindow : null\n  }\n\n  setVaultDirectoryForContents(webContents: WebContents, directory: string, store: Store<StoreSchema>): void {\n    if (!webContents) {\n      throw new Error('Invalid webContents provided.')\n    }\n\n    const windowID = this.getBrowserWindowId(webContents)\n    if (!windowID) {\n      throw new Error('Unable to find the browser window ID.')\n    }\n\n    if (!directory || typeof directory !== 'string') {\n      throw new Error('Invalid directory provided.')\n    }\n\n    let windowInfo = this.activeWindows.find((w) => w.windowID === windowID)\n\n    if (!windowInfo) {\n      windowInfo = {\n        windowID,\n        dbTableClient: new LanceDBTableWrapper(), // Assuming default value as null, modify as needed\n        vaultDirectoryForWindow: directory,\n      }\n      this.activeWindows.push(windowInfo)\n    } else {\n      windowInfo.vaultDirectoryForWindow = directory\n    }\n\n    store.set(StoreKeys.DirectoryFromPreviousSession, directory)\n  }\n\n  prepareWindowForClose(store: Store<StoreSchema>, win: BrowserWindow) {\n    const directoryToSave = this.getVaultDirectoryForWinContents(win.webContents)\n\n    // Save the directory if found\n    if (directoryToSave) {\n      store.set(StoreKeys.DirectoryFromPreviousSession, directoryToSave)\n      this.removeActiveWindowByDirectory(directoryToSave)\n    }\n  }\n\n  removeActiveWindowByDirectory(directory: string): void {\n    this.activeWindows = this.activeWindows.filter((w) => w.vaultDirectoryForWindow !== directory)\n  }\n\n  getNextWindowPosition(): { x: number | undefined; y: number | undefined } {\n    const windowOffset = 30 // Offset for each new window\n    const focusedWin = BrowserWindow.getFocusedWindow()\n\n    if (focusedWin) {\n      const [x, y] = focusedWin.getPosition()\n      return { x: x + windowOffset, y: y + windowOffset }\n    }\n    return { x: undefined, y: undefined }\n  }\n\n  getWindowSize(): { width: number; height: number } {\n    const primaryDisplay = screen.getPrimaryDisplay()\n    const { width, height } = primaryDisplay.workAreaSize\n\n    const windowWidth = Math.min(1200, width * 0.8) // e.g., 80% of screen width or 1200px\n    const windowHeight = Math.min(800, height * 0.8) // e.g., 80% of screen height or 800px\n\n    return { width: windowWidth, height: windowHeight }\n  }\n}\n\nexport default WindowsManager\n","import { LLMConfig } from 'electron/main/electron-store/storeConfig'\n\nexport const openAIDefaultAPIName = 'OpenAI'\nexport const anthropicDefaultAPIName = 'Anthropic'\n\nexport const openAIDefaultLLMs: LLMConfig[] = [\n  {\n    contextLength: 128000,\n    modelName: 'gpt-4o',\n    apiName: openAIDefaultAPIName,\n  },\n  {\n    contextLength: 128000,\n    modelName: 'gpt-4o-mini',\n    apiName: openAIDefaultAPIName,\n  },\n  {\n    contextLength: 16385,\n    modelName: 'gpt-3.5-turbo',\n    apiName: openAIDefaultAPIName,\n  },\n  {\n    contextLength: 128000,\n    modelName: 'gpt-4-turbo',\n    apiName: openAIDefaultAPIName,\n  },\n]\n\nexport const anthropicDefaultLLMs: LLMConfig[] = [\n  {\n    contextLength: 180000,\n    modelName: 'claude-3-5-sonnet-latest',\n    apiName: anthropicDefaultAPIName,\n  },\n  {\n    contextLength: 180000,\n    modelName: 'claude-3-opus-latest',\n    apiName: anthropicDefaultAPIName,\n  },\n  {\n    contextLength: 180000,\n    modelName: 'claude-3-haiku-20240307',\n    apiName: anthropicDefaultAPIName,\n  },\n]\n","/* eslint-disable class-methods-use-this */\n/* eslint-disable prefer-promise-reject-errors */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { exec } from 'child_process'\nimport * as os from 'os'\nimport * as path from 'path'\n\nimport { app } from 'electron'\nimport { LLMConfig, LLMAPIConfig } from 'electron/main/electron-store/storeConfig'\nimport { Tiktoken, TiktokenModel, encodingForModel } from 'js-tiktoken'\nimport { ModelResponse, ProgressResponse, Ollama } from 'ollama'\n\nconst OllamaServeType = {\n  SYSTEM: 'system', // ollama is installed on the system\n  PACKAGED: 'packaged', // ollama is packaged with the app\n}\n\nexport const defaultOllamaAPI: LLMAPIConfig = {\n  name: 'Ollama',\n  apiInterface: 'ollama',\n  apiURL: 'http://localhost:11434/v1/',\n}\n\nclass OllamaService {\n  private client!: Ollama\n\n  private host = 'http://127.0.0.1:11434'\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private childProcess: any\n\n  public init = async () => {\n    // add ollama to store if it doesn't alreay exist: store.set(StoreKeys.LLMAPIs, [defaultOllamaAPI])\n    const currentAPIs = await this.serve()\n\n    const ollamaLib = await import('ollama')\n    this.client = new ollamaLib.Ollama()\n\n    // const models = await this.client.default.list();\n    // ;\n    // const lists = await this.client.\n    // ;\n  }\n\n  async ping() {\n    const response = await fetch(this.host, {\n      method: 'GET',\n      cache: 'no-store',\n    })\n\n    if (response.status !== 200) {\n      throw new Error(`failed to ping ollama server: ${response.status}`)\n    }\n\n    return true\n  }\n\n  async serve() {\n    try {\n      // see if ollama is already running\n      await this.ping()\n      return OllamaServeType.SYSTEM\n    } catch (err) {\n      // this is fine, we just need to start ollama\n    }\n\n    try {\n      // See if 'ollama serve' command is available on the system\n      await this.execServe('ollama')\n\n      return OllamaServeType.SYSTEM\n    } catch (err) {\n      // ollama is not installed, run the binary directly\n      // logInfo(`/ is not installed on the system: ${err}`);\n    }\n\n    let exeName = ''\n    let exeDir = ''\n    switch (process.platform) {\n      case 'win32':\n        exeName = 'ollama.exe'\n        exeDir = app.isPackaged\n          ? path.join(process.resourcesPath, 'binaries')\n          : path.join(app.getAppPath(), 'binaries', 'win32')\n\n        break\n      case 'darwin':\n        exeName = 'ollama-darwin'\n        exeDir = app.isPackaged\n          ? path.join(process.resourcesPath, 'binaries')\n          : path.join(app.getAppPath(), 'binaries', 'darwin')\n        break\n      case 'linux':\n        exeName = 'ollama'\n        exeDir = app.isPackaged\n          ? path.join(process.resourcesPath, 'binaries')\n          : path.join(app.getAppPath(), 'binaries', 'linux')\n\n        break\n      default:\n        throw new Error('Unsupported platform')\n    }\n    const exePath = path.join(exeDir, exeName)\n    await this.execServe(exePath)\n    return OllamaServeType.PACKAGED\n  }\n\n  async execServe(_path: string) {\n    return new Promise((resolve, reject) => {\n      const env = { ...process.env }\n      const command = `\"${_path}\" serve`\n\n      this.childProcess = exec(command, { env }, (err, stdout, stderr) => {\n        if (err) {\n          reject(`exec error: ${err}`)\n          return\n        }\n\n        if (stderr) {\n          reject(`ollama stderr: ${stderr}`)\n          return\n        }\n\n        reject(`ollama stdout: ${stdout}`)\n      })\n\n      // Once the process is started, try to ping Ollama server.\n      this.waitForPing()\n        .then(() => {\n          resolve(undefined)\n        })\n        .catch((pingError) => {\n          if (this.childProcess && !this.childProcess.killed) {\n            this.childProcess.kill()\n          }\n          reject(pingError)\n        })\n    })\n  }\n\n  async waitForPing(delay = 1000, retries = 20) {\n    for (let i = 0; i < retries; i += 1) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await this.ping()\n        return\n      } catch (err) {\n        // eslint-disable-next-line no-await-in-loop\n        await new Promise((resolve) => {\n          setTimeout(resolve, delay)\n        })\n      }\n    }\n    throw new Error(\"Max retries reached. Ollama server didn't respond.\")\n  }\n\n  stop() {\n    if (!this.childProcess) {\n      return\n    }\n\n    if (os.platform() === 'win32') {\n      exec(`taskkill /pid ${this.childProcess.pid} /f /t`)\n    } else {\n      this.childProcess.kill()\n    }\n\n    this.childProcess = null\n  }\n\n  public getAvailableModels = async (): Promise<LLMConfig[]> => {\n    const ollamaModelsResponse = await this.client.list()\n\n    const output = ollamaModelsResponse.models.map(\n      (model: ModelResponse): LLMConfig => ({\n        modelName: model.name,\n        contextLength: 4096,\n        apiName: defaultOllamaAPI.name,\n      }),\n    )\n    return output\n  }\n\n  public pullModel = async (modelName: string, handleProgress: (chunk: ProgressResponse) => void): Promise<void> => {\n    const stream = await this.client.pull({\n      model: modelName,\n      stream: true,\n    })\n    for await (const progress of stream) {\n      handleProgress(progress)\n    }\n  }\n\n  public deleteModel = async (modelName: string): Promise<void> => {\n    await this.client.delete({ model: modelName })\n  }\n\n  public getTokenizer = (llmName: string): ((text: string) => number[]) => {\n    let tokenEncoding: Tiktoken\n    try {\n      tokenEncoding = encodingForModel(llmName as TiktokenModel)\n    } catch (e) {\n      tokenEncoding = encodingForModel('gpt-3.5-turbo-1106') // hack while we think about what to do with custom remote models' tokenizers\n    }\n    const tokenize = (text: string): number[] => tokenEncoding.encode(text)\n    return tokenize\n  }\n\n  public abort(): void {\n    throw new Error('Abort not yet implemented.')\n  }\n}\n\nexport default OllamaService\n","import Store from 'electron-store'\n\nimport { LLMConfig, LLMAPIConfig, StoreKeys, StoreSchema } from '../electron-store/storeConfig'\n\nimport OllamaService from './models/ollama'\n\nexport async function addOrUpdateLLMAPIInStore(store: Store<StoreSchema>, newAPI: LLMAPIConfig): Promise<void> {\n  const existingAPIsInStore = await store.get(StoreKeys.LLMAPIs)\n\n  const foundAPI = existingAPIsInStore.find((api) => api.name === newAPI.name)\n\n  if (foundAPI) {\n    const updatedModels = existingAPIsInStore.map((api) => (api.name === newAPI.name ? newAPI : api))\n    store.set(StoreKeys.LLMAPIs, updatedModels)\n  } else {\n    const updatedModels = [...existingAPIsInStore, newAPI]\n    store.set(StoreKeys.LLMAPIs, updatedModels)\n  }\n}\n\nexport async function addOrUpdateLLMInStore(store: Store<StoreSchema>, newLLM: LLMConfig): Promise<void> {\n  const existingLLMs = store.get(StoreKeys.LLMs) || []\n\n  const foundLLM = existingLLMs.find((llm) => llm.modelName === newLLM.modelName)\n\n  if (foundLLM) {\n    const updatedLLMs = existingLLMs.map((llm) => (llm.modelName === newLLM.modelName ? newLLM : llm))\n    store.set(StoreKeys.LLMs, updatedLLMs)\n  } else {\n    const updatedLLMs = [...existingLLMs, newLLM]\n    store.set(StoreKeys.LLMs, updatedLLMs)\n  }\n}\n\nexport async function getLLMConfigs(store: Store<StoreSchema>, ollamaSession: OllamaService): Promise<LLMConfig[]> {\n  const llmConfigsFromStore = store.get(StoreKeys.LLMs) || []\n  const ollamaLLMConfigs = await ollamaSession.getAvailableModels()\n\n  return [...llmConfigsFromStore, ...ollamaLLMConfigs]\n}\n\nexport async function getLLMConfig(\n  store: Store<StoreSchema>,\n  ollamaSession: OllamaService,\n  modelName: string,\n): Promise<LLMConfig | undefined> {\n  const llmConfigs = await getLLMConfigs(store, ollamaSession)\n\n  if (llmConfigs) {\n    return llmConfigs.find((model: LLMConfig) => model.modelName === modelName)\n  }\n  return undefined\n}\n\nexport async function removeLLM(\n  store: Store<StoreSchema>,\n  ollamaService: OllamaService,\n  modelName: string,\n): Promise<void> {\n  const existingLLMs = store.get(StoreKeys.LLMs) || []\n\n  const foundLLM = await getLLMConfig(store, ollamaService, modelName)\n\n  if (!foundLLM) {\n    return\n  }\n\n  const updatedLLMs = existingLLMs.filter((llm) => llm.modelName !== modelName)\n  store.set(StoreKeys.LLMAPIs, updatedLLMs)\n\n  ollamaService.deleteModel(modelName)\n}\n","import Store from 'electron-store'\n\nimport {\n  anthropicDefaultAPIName,\n  anthropicDefaultLLMs,\n  openAIDefaultAPIName,\n  openAIDefaultLLMs,\n} from '../../../shared/defaultLLMs'\nimport { generateChatName } from '../../../shared/utils'\nimport { StoreKeys, StoreSchema } from './storeConfig'\nimport { defaultEmbeddingModelRepos } from '../vector-database/embeddings'\nimport { defaultOllamaAPI } from '../llm/models/ollama'\nimport { addOrUpdateLLMInStore } from '../llm/llmConfig'\n\nconst currentSchemaVersion = 2\n\nconst setupDefaultAnalyticsValue = (store: Store<StoreSchema>) => {\n  if (store.get(StoreKeys.Analytics) === undefined) {\n    store.set(StoreKeys.Analytics, true)\n  }\n}\n\nconst setupDefaultSpellCheckValue = (store: Store<StoreSchema>) => {\n  if (store.get(StoreKeys.SpellCheck) === undefined) {\n    store.set(StoreKeys.SpellCheck, 'false')\n  }\n}\n\nconst setupDefaultEmbeddingModels = (store: Store<StoreSchema>) => {\n  const embeddingModels = store.get(StoreKeys.EmbeddingModels)\n\n  if (!embeddingModels) {\n    store.set(StoreKeys.EmbeddingModels, defaultEmbeddingModelRepos)\n  }\n\n  const defaultModel = store.get(StoreKeys.DefaultEmbeddingModelAlias)\n  if (!defaultModel) {\n    const storedEmbeddingModels = store.get(StoreKeys.EmbeddingModels) || {}\n    if (Object.keys(storedEmbeddingModels).length === 0) {\n      throw new Error('No embedding models found')\n    }\n    store.set(StoreKeys.DefaultEmbeddingModelAlias, Object.keys(storedEmbeddingModels)[0])\n  }\n}\n\nconst setupDefaultLLMAPIs = (store: Store<StoreSchema>) => {\n  const llmAPIs = store.get(StoreKeys.LLMAPIs)\n\n  const existingOllamaAPI = llmAPIs?.find((api) => api.name === defaultOllamaAPI.name)\n  if (!existingOllamaAPI) {\n    store.set(StoreKeys.LLMAPIs, [defaultOllamaAPI])\n  } else if (existingOllamaAPI.apiInterface !== defaultOllamaAPI.name) {\n    const updatedLLMAPIs = llmAPIs.filter((api) => api.name !== defaultOllamaAPI.name)\n    store.set(StoreKeys.LLMAPIs, [...updatedLLMAPIs, defaultOllamaAPI])\n  }\n\n  const existingOpenAIAPI = llmAPIs?.find((api) => api.name === openAIDefaultAPIName)\n  if (existingOpenAIAPI) {\n    openAIDefaultLLMs.forEach((llm) => {\n      addOrUpdateLLMInStore(store, llm)\n    })\n  }\n\n  const existingAnthropicAPI = llmAPIs?.find((api) => api.name === anthropicDefaultAPIName)\n  if (existingAnthropicAPI) {\n    anthropicDefaultLLMs.forEach((llm) => {\n      addOrUpdateLLMInStore(store, llm)\n    })\n  }\n}\n\nexport function setupDefaultStoreValues(store: Store<StoreSchema>) {\n  if (!store.get(StoreKeys.MaxRAGExamples)) {\n    store.set(StoreKeys.MaxRAGExamples, 15)\n  }\n\n  if (!store.get(StoreKeys.ChunkSize)) {\n    store.set(StoreKeys.ChunkSize, 1000)\n  }\n\n  setupDefaultAnalyticsValue(store)\n\n  setupDefaultSpellCheckValue(store)\n\n  setupDefaultEmbeddingModels(store)\n\n  setupDefaultLLMAPIs(store)\n}\n\nfunction ensureChatsIsCorrectProperty(store: Store<StoreSchema>) {\n  const oldChatHistories = store.get('chatHistories' as keyof StoreSchema)\n  if (oldChatHistories) {\n    store.set(StoreKeys.Chats, oldChatHistories)\n    store.delete('chatHistories' as keyof StoreSchema)\n  }\n  const chats = store.get(StoreKeys.Chats)\n  if (!chats) {\n    return\n  }\n\n  Object.keys(chats).forEach((vaultDir) => {\n    const chatsForVault = chats[vaultDir]\n    chatsForVault.map((chat) => {\n      const outputChat = chat\n      if (chat.displayableChatHistory) {\n        outputChat.messages = chat.displayableChatHistory\n        delete outputChat.displayableChatHistory\n      }\n      return outputChat\n    })\n    chats[vaultDir] = chatsForVault\n  })\n\n  store.set(StoreKeys.Chats, chats)\n}\n\nfunction ensureChatsHasDisplayNameAndTimestamp(store: Store<StoreSchema>) {\n  const chatHistories = store.get(StoreKeys.Chats)\n  if (!chatHistories) {\n    return\n  }\n\n  Object.keys(chatHistories).forEach((vaultDir) => {\n    const chats = chatHistories[vaultDir]\n    chats.map((chat) => {\n      const outputChat = chat\n      if (!outputChat.displayName || outputChat.displayName === chat.id) {\n        outputChat.displayName = generateChatName(chat.messages)\n      }\n      if (!outputChat.timeOfLastMessage) {\n        outputChat.timeOfLastMessage = Date.now()\n      }\n      return outputChat\n    })\n  })\n\n  store.set(StoreKeys.Chats, chatHistories)\n}\n\nexport const initializeAndMaybeMigrateStore = (store: Store<StoreSchema>) => {\n  const storeSchemaVersion = store.get(StoreKeys.SchemaVersion)\n  if (storeSchemaVersion !== currentSchemaVersion) {\n    store.set(StoreKeys.SchemaVersion, currentSchemaVersion)\n    store.set(StoreKeys.LLMAPIs, [])\n    store.set(StoreKeys.DefaultLLM, '')\n  }\n\n  ensureChatsIsCorrectProperty(store)\n  ensureChatsHasDisplayNameAndTimestamp(store)\n  setupDefaultStoreValues(store)\n}\n","import path from 'path'\n\nimport { ipcMain } from 'electron'\nimport Store from 'electron-store'\nimport {\n  EmbeddingModelConfig,\n  EmbeddingModelWithLocalPath,\n  EmbeddingModelWithRepo,\n  StoreKeys,\n  StoreSchema,\n  TamaguiThemeTypes,\n} from './storeConfig'\n\nimport { SearchProps } from './types'\n\nimport WindowsManager from '../common/windowManager'\n\nimport { initializeAndMaybeMigrateStore } from './storeSchemaMigrator'\nimport { Chat, AgentConfig, ChatMetadata } from '@/lib/llm/types'\n\nexport const registerStoreHandlers = (store: Store<StoreSchema>, windowsManager: WindowsManager) => {\n  initializeAndMaybeMigrateStore(store)\n  ipcMain.handle('set-vault-directory-for-window', async (event, userDirectory: string): Promise<void> => {\n    windowsManager.setVaultDirectoryForContents(event.sender, userDirectory, store)\n  })\n\n  ipcMain.handle('get-vault-directory-for-window', (event) => {\n    let vaultPathForWindow = windowsManager.getVaultDirectoryForWinContents(event.sender)\n    if (!vaultPathForWindow) {\n      vaultPathForWindow = windowsManager.getAndSetupDirectoryForWindowFromPreviousAppSession(event.sender, store)\n    }\n    return vaultPathForWindow\n  })\n  ipcMain.handle('set-default-embedding-model', (event, repoName: string) => {\n    store.set(StoreKeys.DefaultEmbeddingModelAlias, repoName)\n  })\n\n  ipcMain.handle('add-new-local-embedding-model', (event, model: EmbeddingModelWithLocalPath) => {\n    const currentModels = store.get(StoreKeys.EmbeddingModels) || {}\n    const modelAlias = path.basename(model.localPath)\n    store.set(StoreKeys.EmbeddingModels, {\n      ...currentModels,\n      [modelAlias]: model,\n    })\n    store.set(StoreKeys.DefaultEmbeddingModelAlias, modelAlias)\n  })\n\n  ipcMain.handle('add-new-repo-embedding-model', (event, model: EmbeddingModelWithRepo) => {\n    const currentModels = store.get(StoreKeys.EmbeddingModels) || {}\n    store.set(StoreKeys.EmbeddingModels, {\n      ...currentModels,\n      [model.repoName]: model,\n    })\n    store.set(StoreKeys.DefaultEmbeddingModelAlias, model.repoName)\n  })\n\n  ipcMain.handle('get-embedding-models', () => store.get(StoreKeys.EmbeddingModels))\n\n  ipcMain.handle(\n    'update-embedding-model',\n    (event, modelName: string, updatedModel: EmbeddingModelWithLocalPath | EmbeddingModelWithRepo) => {\n      const currentModels = store.get(StoreKeys.EmbeddingModels) || {}\n      store.set(StoreKeys.EmbeddingModels, {\n        ...currentModels,\n        [modelName]: updatedModel,\n      })\n    },\n  )\n\n  ipcMain.handle('remove-embedding-model', (event, modelName: string) => {\n    const currentModels = store.get(StoreKeys.EmbeddingModels) || {}\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { [modelName]: unused, ...updatedModels } = currentModels\n\n    store.set(StoreKeys.EmbeddingModels, updatedModels)\n  })\n\n  ipcMain.handle('set-no-of-rag-examples', (event, noOfExamples: number) => {\n    store.set(StoreKeys.MaxRAGExamples, noOfExamples)\n  })\n\n  ipcMain.handle('get-no-of-rag-examples', () => store.get(StoreKeys.MaxRAGExamples))\n\n  ipcMain.handle('set-chunk-size', (event, chunkSize: number) => {\n    store.set(StoreKeys.ChunkSize, chunkSize)\n  })\n\n  ipcMain.handle('get-chunk-size', () => store.get(StoreKeys.ChunkSize))\n\n  ipcMain.handle('get-default-embedding-model', () => store.get(StoreKeys.DefaultEmbeddingModelAlias))\n\n  ipcMain.handle('set-llm-generation-params', (event, generationParams) => {\n    store.set(StoreKeys.LLMGenerationParameters, generationParams)\n  })\n\n  ipcMain.handle('get-llm-generation-params', () => {\n    return store.get(StoreKeys.LLMGenerationParameters)\n  })\n\n  ipcMain.handle('get-editor-flex-center', () => store.get(StoreKeys.EditorFlexCenter))\n\n  ipcMain.handle('set-editor-flex-center', (event, setEditorFlexCenter) => {\n    store.set(StoreKeys.EditorFlexCenter, setEditorFlexCenter)\n    event.sender.send('editor-flex-center-changed', setEditorFlexCenter)\n  })\n\n  ipcMain.handle('get-agent-configs', () => store.get(StoreKeys.AgentConfigs))\n\n  ipcMain.handle('set-agent-config', (event, agentConfig: AgentConfig) => {\n    const agentConfigs = store.get(StoreKeys.AgentConfigs) || []\n    const existingAgentIndex = agentConfigs.findIndex((config) => config.name === agentConfig.name)\n    if (existingAgentIndex !== -1) {\n      agentConfigs[existingAgentIndex] = agentConfig\n    } else {\n      agentConfigs.push(agentConfig)\n    }\n    store.set(StoreKeys.AgentConfigs, agentConfigs)\n  })\n\n  ipcMain.handle('set-analytics-mode', (event, isAnalytics) => {\n    store.set(StoreKeys.Analytics, isAnalytics)\n  })\n\n  ipcMain.handle('get-analytics-mode', () => {\n    return store.get(StoreKeys.Analytics)\n  })\n\n  ipcMain.handle('set-spellcheck-mode', (event, isSpellCheck) => {\n    store.set(StoreKeys.SpellCheck, isSpellCheck)\n  })\n\n  ipcMain.handle('get-spellcheck-mode', () => {\n    return store.get(StoreKeys.SpellCheck)\n  })\n\n  ipcMain.handle('set-document-stats', (event, showDocumentStats: boolean) => {\n    store.set(StoreKeys.showDocumentStats, showDocumentStats)\n    event.sender.send('show-doc-stats-changed', showDocumentStats)\n  })\n\n  ipcMain.handle('get-document-stats', () => {\n    return store.get(StoreKeys.showDocumentStats, false)\n  })\n\n  ipcMain.handle('has-user-opened-app-before', () => store.get(StoreKeys.hasUserOpenedAppBefore))\n\n  ipcMain.handle('set-user-has-opened-app-before', () => {\n    store.set(StoreKeys.hasUserOpenedAppBefore, true)\n  })\n\n  ipcMain.handle('get-all-chats-metadata', (event) => {\n    const vaultDir = windowsManager.getVaultDirectoryForWinContents(event.sender)\n\n    if (!vaultDir) {\n      return []\n    }\n\n    const allHistories = store.get(StoreKeys.Chats)\n    const chatHistoriesCorrespondingToVault = allHistories?.[vaultDir] ?? []\n    return chatHistoriesCorrespondingToVault.map(({ messages, ...rest }) => rest) as ChatMetadata[]\n  })\n\n  ipcMain.handle('save-chat', (event, newChat: Chat) => {\n    const vaultDir = windowsManager.getVaultDirectoryForWinContents(event.sender)\n    if (!vaultDir) {\n      return\n    }\n\n    const allChatHistories = store.get(StoreKeys.Chats)\n    const chatHistoriesCorrespondingToVault = allChatHistories?.[vaultDir] ?? []\n\n    const existingChatIndex = chatHistoriesCorrespondingToVault.findIndex((chat) => chat.id === newChat.id)\n    if (existingChatIndex !== -1) {\n      chatHistoriesCorrespondingToVault[existingChatIndex] = newChat\n    } else {\n      chatHistoriesCorrespondingToVault.push(newChat)\n    }\n    store.set(StoreKeys.Chats, {\n      ...allChatHistories,\n      [vaultDir]: chatHistoriesCorrespondingToVault,\n    })\n  })\n\n  ipcMain.handle('get-chat', (event, chatId: string | undefined) => {\n    if (!chatId) {\n      return undefined\n    }\n    const vaultDir = windowsManager.getVaultDirectoryForWinContents(event.sender)\n    if (!vaultDir) {\n      return null\n    }\n    const allChatHistories = store.get(StoreKeys.Chats)\n    const vaultChatHistories = allChatHistories[vaultDir] || []\n    return vaultChatHistories.find((chat) => chat.id === chatId)\n  })\n\n  ipcMain.handle('delete-chat', (event, chatID: string | undefined) => {\n    if (!chatID) return\n    const vaultDir = windowsManager.getVaultDirectoryForWinContents(event.sender)\n\n    if (!vaultDir) {\n      return\n    }\n\n    const chatHistoriesMap = store.get(StoreKeys.Chats)\n    const allChatHistories = chatHistoriesMap[vaultDir] || []\n    const filteredChatHistories = allChatHistories.filter((item) => item.id !== chatID)\n\n    chatHistoriesMap[vaultDir] = filteredChatHistories\n    store.set(StoreKeys.Chats, chatHistoriesMap)\n  })\n\n  ipcMain.handle('set-auto-context', (event, autoContext: boolean) => {\n    store.set(StoreKeys.AutoContext, autoContext)\n    event.sender.send('auto-context-changed', autoContext)\n  })\n\n  ipcMain.handle('get-auto-context', () => {\n    return store.get(StoreKeys.AutoContext, true) // Default to true\n  })\n\n  ipcMain.handle('set-tamagui-theme', (event, theme: TamaguiThemeTypes) => {\n    store.set(StoreKeys.TamaguiTheme, theme)\n    event.sender.send('tamagui-theme-changed', theme)\n  })\n\n  ipcMain.handle('get-tamagui-theme', () => {\n    return store.get(StoreKeys.TamaguiTheme, 'dark') // Default to dark\n  })\n\n  ipcMain.handle('get-search-params', () => {\n    return store.get(StoreKeys.SearchParams, { searchMode: 'vector', vectorWeight: 0.7 }) // Default to 'vector'\n  })\n\n  ipcMain.handle('set-search-params', (event, searchMode: SearchProps) => {\n    store.set(StoreKeys.SearchParams, searchMode)\n    event.sender.send('search-mode-changed', searchMode)\n  })\n}\n\nexport function getDefaultEmbeddingModelConfig(store: Store<StoreSchema>): EmbeddingModelConfig {\n  const defaultEmbeddingModelAlias = store.get(StoreKeys.DefaultEmbeddingModelAlias) as string | undefined\n\n  // Check if the default model alias is defined and not empty\n  if (!defaultEmbeddingModelAlias) {\n    throw new Error('No default embedding model is specified')\n  }\n\n  const embeddingModels = store.get(StoreKeys.EmbeddingModels) || {}\n\n  // Check if the model with the default alias exists\n  const model = embeddingModels[defaultEmbeddingModelAlias]\n  if (!model) {\n    throw new Error(`No embedding model found for alias '${defaultEmbeddingModelAlias}'`)\n  }\n\n  return model\n}\n","import { app, ipcMain, shell } from 'electron'\nimport Store from 'electron-store'\n\nimport WindowsManager from '../common/windowManager'\nimport { StoreSchema } from '../electron-store/storeConfig'\n\nconst registerElectronUtilsHandlers = (\n  store: Store<StoreSchema>,\n  windowsManager: WindowsManager,\n  preload: string,\n  url: string | undefined,\n  indexHtml: string,\n) => {\n  ipcMain.handle('open-external', (event, _url) => {\n    shell.openExternal(_url)\n  })\n\n  ipcMain.handle('get-platform', async () => process.platform)\n\n  ipcMain.handle('open-new-window', () => {\n    windowsManager.createWindow(store, preload, url, indexHtml)\n  })\n\n  ipcMain.handle('get-reor-app-version', async () => app.getVersion())\n\n  ipcMain.handle('get-user-data-path', () => {\n    return app.getPath('userData')\n  })\n}\n\nexport default registerElectronUtilsHandlers\n","/**\n * Interface for interacting with a document.\n */\nexport class Document {\n    constructor(fields) {\n        Object.defineProperty(this, \"pageContent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The ID field is optional at the moment.\n        // It will likely become required in a future major release after\n        // it has been adopted by enough vectorstore implementations.\n        /**\n         * An optional identifier for the document.\n         *\n         * Ideally this should be unique across the document collection and formatted\n         * as a UUID, but this will not be enforced.\n         */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pageContent =\n            fields.pageContent !== undefined ? fields.pageContent.toString() : \"\";\n        this.metadata = fields.metadata ?? {};\n        this.id = fields.id;\n    }\n}\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","module.exports = require('./lib/retry');","'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\nmodule.exports = (promise, onFinally) => {\n\tonFinally = onFinally || (() => {});\n\n\treturn promise.then(\n\t\tval => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => val),\n\t\terr => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => {\n\t\t\tthrow err;\n\t\t})\n\t);\n};\n","'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\n\t}\n\n\tif (milliseconds === Infinity) {\n\t\tresolve(promise);\n\t\treturn;\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(timeoutError);\n\t}, milliseconds);\n\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\n\tpFinally(\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports = pTimeout;\n// TODO: Remove this for the next major release\nmodule.exports.default = pTimeout;\n\nmodule.exports.TimeoutError = TimeoutError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = (count / 2) | 0;\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\nexports.default = lowerBound;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lower_bound_1 = require(\"./lower-bound\");\nclass PriorityQueue {\n    constructor() {\n        this._queue = [];\n    }\n    enqueue(run, options) {\n        options = Object.assign({ priority: 0 }, options);\n        const element = {\n            priority: options.priority,\n            run\n        };\n        if (this.size && this._queue[this.size - 1].priority >= options.priority) {\n            this._queue.push(element);\n            return;\n        }\n        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);\n        this._queue.splice(index, 0, element);\n    }\n    dequeue() {\n        const item = this._queue.shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this._queue.length;\n    }\n}\nexports.default = PriorityQueue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EventEmitter = require(\"eventemitter3\");\nconst p_timeout_1 = require(\"p-timeout\");\nconst priority_queue_1 = require(\"./priority-queue\");\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst empty = () => { };\nconst timeoutError = new p_timeout_1.TimeoutError();\n/**\nPromise queue with concurrency control.\n*/\nclass PQueue extends EventEmitter {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        this._intervalCount = 0;\n        this._intervalEnd = 0;\n        this._pendingCount = 0;\n        this._resolveEmpty = empty;\n        this._resolveIdle = empty;\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\n        this._intervalCap = options.intervalCap;\n        this._interval = options.interval;\n        this._queue = new options.queueClass();\n        this._queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this._timeout = options.timeout;\n        this._throwOnTimeout = options.throwOnTimeout === true;\n        this._isPaused = options.autoStart === false;\n    }\n    get _doesIntervalAllowAnother() {\n        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;\n    }\n    get _doesConcurrentAllowAnother() {\n        return this._pendingCount < this._concurrency;\n    }\n    _next() {\n        this._pendingCount--;\n        this._tryToStartAnother();\n        this.emit('next');\n    }\n    _resolvePromises() {\n        this._resolveEmpty();\n        this._resolveEmpty = empty;\n        if (this._pendingCount === 0) {\n            this._resolveIdle();\n            this._resolveIdle = empty;\n            this.emit('idle');\n        }\n    }\n    _onResumeInterval() {\n        this._onInterval();\n        this._initializeIntervalIfNeeded();\n        this._timeoutId = undefined;\n    }\n    _isIntervalPaused() {\n        const now = Date.now();\n        if (this._intervalId === undefined) {\n            const delay = this._intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this._timeoutId === undefined) {\n                    this._timeoutId = setTimeout(() => {\n                        this._onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _tryToStartAnother() {\n        if (this._queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this._intervalId) {\n                clearInterval(this._intervalId);\n            }\n            this._intervalId = undefined;\n            this._resolvePromises();\n            return false;\n        }\n        if (!this._isPaused) {\n            const canInitializeInterval = !this._isIntervalPaused();\n            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\n                const job = this._queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this._initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _initializeIntervalIfNeeded() {\n        if (this._isIntervalIgnored || this._intervalId !== undefined) {\n            return;\n        }\n        this._intervalId = setInterval(() => {\n            this._onInterval();\n        }, this._interval);\n        this._intervalEnd = Date.now() + this._interval;\n    }\n    _onInterval() {\n        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {\n            clearInterval(this._intervalId);\n            this._intervalId = undefined;\n        }\n        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;\n        this._processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    _processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this._tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this._concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this._concurrency = newConcurrency;\n        this._processQueue();\n    }\n    /**\n    Adds a sync or async task to the queue. Always returns a promise.\n    */\n    async add(fn, options = {}) {\n        return new Promise((resolve, reject) => {\n            const run = async () => {\n                this._pendingCount++;\n                this._intervalCount++;\n                try {\n                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {\n                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {\n                            reject(timeoutError);\n                        }\n                        return undefined;\n                    });\n                    resolve(await operation);\n                }\n                catch (error) {\n                    reject(error);\n                }\n                this._next();\n            };\n            this._queue.enqueue(run, options);\n            this._tryToStartAnother();\n            this.emit('add');\n        });\n    }\n    /**\n    Same as `.add()`, but accepts an array of sync or async functions.\n\n    @returns A promise that resolves when all functions are resolved.\n    */\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this._isPaused) {\n            return this;\n        }\n        this._isPaused = false;\n        this._processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this._isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this._queue = new this._queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveEmpty;\n            this._resolveEmpty = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this._pendingCount === 0 && this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveIdle;\n            this._resolveIdle = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    Size of the queue.\n    */\n    get size() {\n        return this._queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\n        return this._queue.filter(options).length;\n    }\n    /**\n    Number of pending promises.\n    */\n    get pending() {\n        return this._pendingCount;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this._isPaused;\n    }\n    get timeout() {\n        return this._timeout;\n    }\n    /**\n    Set the timeout for future operations.\n    */\n    set timeout(milliseconds) {\n        this._timeout = milliseconds;\n    }\n}\nexports.default = PQueue;\n","// Wrap the default fetch call due to issues with illegal invocations\n// in some environments:\n// https://stackoverflow.com/questions/69876859/why-does-bind-fix-failed-to-execute-fetch-on-window-illegal-invocation-err\n// @ts-expect-error Broad typing to support a range of fetch implementations\nconst DEFAULT_FETCH_IMPLEMENTATION = (...args) => fetch(...args);\nconst LANGSMITH_FETCH_IMPLEMENTATION_KEY = Symbol.for(\"ls:fetch_implementation\");\n/**\n * Overrides the fetch implementation used for LangSmith calls.\n * You should use this if you need to use an implementation of fetch\n * other than the default global (e.g. for dealing with proxies).\n * @param fetch The new fetch functino to use.\n */\nexport const overrideFetchImplementation = (fetch) => {\n    globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY] = fetch;\n};\n/**\n * @internal\n */\nexport const _getFetchImplementation = () => {\n    return (globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY] ??\n        DEFAULT_FETCH_IMPLEMENTATION);\n};\n","import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nimport { _getFetchImplementation } from \"../singletons/fetch.js\";\nconst STATUS_NO_RETRY = [\n    400, // Bad Request\n    401, // Unauthorized\n    403, // Forbidden\n    404, // Not Found\n    405, // Method Not Allowed\n    406, // Not Acceptable\n    407, // Proxy Authentication Required\n    408, // Request Timeout\n];\nconst STATUS_IGNORE = [\n    409, // Conflict\n];\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedResponseHook\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        if (\"default\" in PQueueMod) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.queue = new PQueueMod.default({\n                concurrency: this.maxConcurrency,\n            });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.queue = new PQueueMod({ concurrency: this.maxConcurrency });\n        }\n        this.onFailedResponseHook = params?.onFailedResponseHook;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        const onFailedResponseHook = this.onFailedResponseHook;\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            async onFailedAttempt(error) {\n                if (error.message.startsWith(\"Cancel\") ||\n                    error.message.startsWith(\"TimeoutError\") ||\n                    error.message.startsWith(\"AbortError\")) {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (error?.code === \"ECONNABORTED\") {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const response = error?.response;\n                const status = response?.status;\n                if (status) {\n                    if (STATUS_NO_RETRY.includes(+status)) {\n                        throw error;\n                    }\n                    else if (STATUS_IGNORE.includes(+status)) {\n                        return;\n                    }\n                    if (onFailedResponseHook) {\n                        await onFailedResponseHook(response);\n                    }\n                }\n            },\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n            retries: this.maxRetries,\n            randomize: true,\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => _getFetchImplementation()(...args).then((res) => res.ok ? res : Promise.reject(res)));\n    }\n}\n","export function isLangChainMessage(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmessage) {\n    return typeof message?._getType === \"function\";\n}\nexport function convertLangChainMessageToExample(message) {\n    const converted = {\n        type: message._getType(),\n        data: { content: message.content },\n    };\n    // Check for presence of keys in additional_kwargs\n    if (message?.additional_kwargs &&\n        Object.keys(message.additional_kwargs).length > 0) {\n        converted.data.additional_kwargs = { ...message.additional_kwargs };\n    }\n    return converted;\n}\n","import * as uuid from \"uuid\";\nexport function assertUuid(str, which) {\n    if (!uuid.validate(str)) {\n        const msg = which !== undefined\n            ? `Invalid UUID for ${which}: ${str}`\n            : `Invalid UUID: ${str}`;\n        throw new Error(msg);\n    }\n    return str;\n}\n","const warnedMessages = {};\nexport function warnOnce(message) {\n    if (!warnedMessages[message]) {\n        console.warn(message);\n        warnedMessages[message] = true;\n    }\n}\n","import { parse as parseVersion } from \"semver\";\nexport function isVersionGreaterOrEqual(current_version, target_version) {\n    const current = parseVersion(current_version);\n    const target = parseVersion(target_version);\n    if (!current || !target) {\n        throw new Error(\"Invalid version format.\");\n    }\n    return current.compare(target) >= 0;\n}\nexport function parsePromptIdentifier(identifier) {\n    if (!identifier ||\n        identifier.split(\"/\").length > 2 ||\n        identifier.startsWith(\"/\") ||\n        identifier.endsWith(\"/\") ||\n        identifier.split(\":\").length > 2) {\n        throw new Error(`Invalid identifier format: ${identifier}`);\n    }\n    const [ownerNamePart, commitPart] = identifier.split(\":\");\n    const commit = commitPart || \"latest\";\n    if (ownerNamePart.includes(\"/\")) {\n        const [owner, name] = ownerNamePart.split(\"/\", 2);\n        if (!owner || !name) {\n            throw new Error(`Invalid identifier format: ${identifier}`);\n        }\n        return [owner, name, commit];\n    }\n    else {\n        if (!ownerNamePart) {\n            throw new Error(`Invalid identifier format: ${identifier}`);\n        }\n        return [\"-\", ownerNamePart, commit];\n    }\n}\n","function getErrorStackTrace(e) {\n    if (typeof e !== \"object\" || e == null)\n        return undefined;\n    if (!(\"stack\" in e) || typeof e.stack !== \"string\")\n        return undefined;\n    let stack = e.stack;\n    const prevLine = `${e}`;\n    if (stack.startsWith(prevLine)) {\n        stack = stack.slice(prevLine.length);\n    }\n    if (stack.startsWith(\"\\n\")) {\n        stack = stack.slice(1);\n    }\n    return stack;\n}\nexport function printErrorStackTrace(e) {\n    const stack = getErrorStackTrace(e);\n    if (stack == null)\n        return;\n    console.error(stack);\n}\n/**\n * LangSmithConflictError\n *\n * Represents an error that occurs when there's a conflict during an operation,\n * typically corresponding to HTTP 409 status code responses.\n *\n * This error is thrown when an attempt to create or modify a resource conflicts\n * with the current state of the resource on the server. Common scenarios include:\n * - Attempting to create a resource that already exists\n * - Trying to update a resource that has been modified by another process\n * - Violating a uniqueness constraint in the data\n *\n * @extends Error\n *\n * @example\n * try {\n *   await createProject(\"existingProject\");\n * } catch (error) {\n *   if (error instanceof ConflictError) {\n *     console.log(\"A conflict occurred:\", error.message);\n *     // Handle the conflict, e.g., by suggesting a different project name\n *   } else {\n *     // Handle other types of errors\n *   }\n * }\n *\n * @property {string} name - Always set to 'ConflictError' for easy identification\n * @property {string} message - Detailed error message including server response\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409\n */\nexport class LangSmithConflictError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"LangSmithConflictError\";\n    }\n}\n/**\n * Throws an appropriate error based on the response status and body.\n *\n * @param response - The fetch Response object\n * @param context - Additional context to include in the error message (e.g., operation being performed)\n * @throws {LangSmithConflictError} When the response status is 409\n * @throws {Error} For all other non-ok responses\n */\nexport async function raiseForStatus(response, context, consume) {\n    // consume the response body to release the connection\n    // https://undici.nodejs.org/#/?id=garbage-collection\n    let errorBody;\n    if (response.ok) {\n        if (consume) {\n            errorBody = await response.text();\n        }\n        return;\n    }\n    errorBody = await response.text();\n    const fullMessage = `Failed to ${context}. Received status [${response.status}]: ${response.statusText}. Server response: ${errorBody}`;\n    if (response.status === 409) {\n        throw new LangSmithConflictError(fullMessage);\n    }\n    throw new Error(fullMessage);\n}\n","/* eslint-disable */\n// @ts-nocheck\nvar LIMIT_REPLACE_NODE = \"[...]\";\nvar CIRCULAR_REPLACE_NODE = { result: \"[Circular]\" };\nvar arr = [];\nvar replacerStack = [];\nfunction defaultOptions() {\n    return {\n        depthLimit: Number.MAX_SAFE_INTEGER,\n        edgesLimit: Number.MAX_SAFE_INTEGER,\n    };\n}\n// Regular stringify\nexport function stringify(obj, replacer, spacer, options) {\n    try {\n        return JSON.stringify(obj, replacer, spacer);\n    }\n    catch (e) {\n        // Fall back to more complex stringify if circular reference\n        if (!e.message?.includes(\"Converting circular structure to JSON\")) {\n            console.warn(\"[WARNING]: LangSmith received unserializable value.\");\n            return \"[Unserializable]\";\n        }\n        console.warn(\"[WARNING]: LangSmith received circular JSON. This will decrease tracer performance.\");\n        if (typeof options === \"undefined\") {\n            options = defaultOptions();\n        }\n        decirc(obj, \"\", 0, [], undefined, 0, options);\n        var res;\n        try {\n            if (replacerStack.length === 0) {\n                res = JSON.stringify(obj, replacer, spacer);\n            }\n            else {\n                res = JSON.stringify(obj, replaceGetterValues(replacer), spacer);\n            }\n        }\n        catch (_) {\n            return JSON.stringify(\"[unable to serialize, circular reference is too complex to analyze]\");\n        }\n        finally {\n            while (arr.length !== 0) {\n                var part = arr.pop();\n                if (part.length === 4) {\n                    Object.defineProperty(part[0], part[1], part[3]);\n                }\n                else {\n                    part[0][part[1]] = part[2];\n                }\n            }\n        }\n        return res;\n    }\n}\nfunction setReplace(replace, val, k, parent) {\n    var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k);\n    if (propertyDescriptor.get !== undefined) {\n        if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: replace });\n            arr.push([parent, k, val, propertyDescriptor]);\n        }\n        else {\n            replacerStack.push([val, k, replace]);\n        }\n    }\n    else {\n        parent[k] = replace;\n        arr.push([parent, k, val]);\n    }\n}\nfunction decirc(val, k, edgeIndex, stack, parent, depth, options) {\n    depth += 1;\n    var i;\n    if (typeof val === \"object\" && val !== null) {\n        for (i = 0; i < stack.length; i++) {\n            if (stack[i] === val) {\n                setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n                return;\n            }\n        }\n        if (typeof options.depthLimit !== \"undefined\" &&\n            depth > options.depthLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        if (typeof options.edgesLimit !== \"undefined\" &&\n            edgeIndex + 1 > options.edgesLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        stack.push(val);\n        // Optimize for Arrays. Big arrays could kill the performance otherwise!\n        if (Array.isArray(val)) {\n            for (i = 0; i < val.length; i++) {\n                decirc(val[i], i, i, stack, val, depth, options);\n            }\n        }\n        else {\n            var keys = Object.keys(val);\n            for (i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                decirc(val[key], key, i, stack, val, depth, options);\n            }\n        }\n        stack.pop();\n    }\n}\n// Stable-stringify\nfunction compareFunction(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nfunction deterministicStringify(obj, replacer, spacer, options) {\n    if (typeof options === \"undefined\") {\n        options = defaultOptions();\n    }\n    var tmp = deterministicDecirc(obj, \"\", 0, [], undefined, 0, options) || obj;\n    var res;\n    try {\n        if (replacerStack.length === 0) {\n            res = JSON.stringify(tmp, replacer, spacer);\n        }\n        else {\n            res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer);\n        }\n    }\n    catch (_) {\n        return JSON.stringify(\"[unable to serialize, circular reference is too complex to analyze]\");\n    }\n    finally {\n        // Ensure that we restore the object as it was.\n        while (arr.length !== 0) {\n            var part = arr.pop();\n            if (part.length === 4) {\n                Object.defineProperty(part[0], part[1], part[3]);\n            }\n            else {\n                part[0][part[1]] = part[2];\n            }\n        }\n    }\n    return res;\n}\nfunction deterministicDecirc(val, k, edgeIndex, stack, parent, depth, options) {\n    depth += 1;\n    var i;\n    if (typeof val === \"object\" && val !== null) {\n        for (i = 0; i < stack.length; i++) {\n            if (stack[i] === val) {\n                setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n                return;\n            }\n        }\n        try {\n            if (typeof val.toJSON === \"function\") {\n                return;\n            }\n        }\n        catch (_) {\n            return;\n        }\n        if (typeof options.depthLimit !== \"undefined\" &&\n            depth > options.depthLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        if (typeof options.edgesLimit !== \"undefined\" &&\n            edgeIndex + 1 > options.edgesLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        stack.push(val);\n        // Optimize for Arrays. Big arrays could kill the performance otherwise!\n        if (Array.isArray(val)) {\n            for (i = 0; i < val.length; i++) {\n                deterministicDecirc(val[i], i, i, stack, val, depth, options);\n            }\n        }\n        else {\n            // Create a temporary object in the required way\n            var tmp = {};\n            var keys = Object.keys(val).sort(compareFunction);\n            for (i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                deterministicDecirc(val[key], key, i, stack, val, depth, options);\n                tmp[key] = val[key];\n            }\n            if (typeof parent !== \"undefined\") {\n                arr.push([parent, k, val]);\n                parent[k] = tmp;\n            }\n            else {\n                return tmp;\n            }\n        }\n        stack.pop();\n    }\n}\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues(replacer) {\n    replacer =\n        typeof replacer !== \"undefined\"\n            ? replacer\n            : function (k, v) {\n                return v;\n            };\n    return function (key, val) {\n        if (replacerStack.length > 0) {\n            for (var i = 0; i < replacerStack.length; i++) {\n                var part = replacerStack[i];\n                if (part[1] === key && part[0] === val) {\n                    val = part[2];\n                    replacerStack.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        return replacer.call(this, key, val);\n    };\n}\n","import * as uuid from \"uuid\";\nimport { AsyncCaller } from \"./utils/async_caller.js\";\nimport { convertLangChainMessageToExample, isLangChainMessage, } from \"./utils/messages.js\";\nimport { getLangChainEnvVarsMetadata, getLangSmithEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { __version__ } from \"./index.js\";\nimport { assertUuid } from \"./utils/_uuid.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nimport { isVersionGreaterOrEqual, parsePromptIdentifier, } from \"./utils/prompts.js\";\nimport { raiseForStatus } from \"./utils/error.js\";\nimport { _getFetchImplementation } from \"./singletons/fetch.js\";\nimport { stringify as stringifyForTracing } from \"./utils/fast-safe-stringify/index.js\";\nexport function mergeRuntimeEnvIntoRunCreate(run) {\n    const runtimeEnv = getRuntimeEnvironment();\n    const envVars = getLangChainEnvVarsMetadata();\n    const extra = run.extra ?? {};\n    const metadata = extra.metadata;\n    run.extra = {\n        ...extra,\n        runtime: {\n            ...runtimeEnv,\n            ...extra?.runtime,\n        },\n        metadata: {\n            ...envVars,\n            ...(envVars.revision_id || run.revision_id\n                ? { revision_id: run.revision_id ?? envVars.revision_id }\n                : {}),\n            ...metadata,\n        },\n    };\n    return run;\n}\nconst getTracingSamplingRate = () => {\n    const samplingRateStr = getLangSmithEnvironmentVariable(\"TRACING_SAMPLING_RATE\");\n    if (samplingRateStr === undefined) {\n        return undefined;\n    }\n    const samplingRate = parseFloat(samplingRateStr);\n    if (samplingRate < 0 || samplingRate > 1) {\n        throw new Error(`LANGSMITH_TRACING_SAMPLING_RATE must be between 0 and 1 if set. Got: ${samplingRate}`);\n    }\n    return samplingRate;\n};\n// utility functions\nconst isLocalhost = (url) => {\n    const strippedUrl = url.replace(\"http://\", \"\").replace(\"https://\", \"\");\n    const hostname = strippedUrl.split(\"/\")[0].split(\":\")[0];\n    return (hostname === \"localhost\" || hostname === \"127.0.0.1\" || hostname === \"::1\");\n};\nasync function toArray(iterable) {\n    const result = [];\n    for await (const item of iterable) {\n        result.push(item);\n    }\n    return result;\n}\nfunction trimQuotes(str) {\n    if (str === undefined) {\n        return undefined;\n    }\n    return str\n        .trim()\n        .replace(/^\"(.*)\"$/, \"$1\")\n        .replace(/^'(.*)'$/, \"$1\");\n}\nconst handle429 = async (response) => {\n    if (response?.status === 429) {\n        const retryAfter = parseInt(response.headers.get(\"retry-after\") ?? \"30\", 10) * 1000;\n        if (retryAfter > 0) {\n            await new Promise((resolve) => setTimeout(resolve, retryAfter));\n            // Return directly after calling this check\n            return true;\n        }\n    }\n    // Fall back to existing status checks\n    return false;\n};\nexport class Queue {\n    constructor() {\n        Object.defineProperty(this, \"items\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"sizeBytes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n    }\n    peek() {\n        return this.items[0];\n    }\n    push(item) {\n        let itemPromiseResolve;\n        const itemPromise = new Promise((resolve) => {\n            // Setting itemPromiseResolve is synchronous with promise creation:\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/Promise\n            itemPromiseResolve = resolve;\n        });\n        const size = stringifyForTracing(item.item).length;\n        this.items.push({\n            action: item.action,\n            payload: item.item,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            itemPromiseResolve: itemPromiseResolve,\n            itemPromise,\n            size,\n        });\n        this.sizeBytes += size;\n        return itemPromise;\n    }\n    pop(upToSizeBytes) {\n        if (upToSizeBytes < 1) {\n            throw new Error(\"Number of bytes to pop off may not be less than 1.\");\n        }\n        const popped = [];\n        let poppedSizeBytes = 0;\n        // Pop items until we reach or exceed the size limit\n        while (poppedSizeBytes + (this.peek()?.size ?? 0) < upToSizeBytes &&\n            this.items.length > 0) {\n            const item = this.items.shift();\n            if (item) {\n                popped.push(item);\n                poppedSizeBytes += item.size;\n                this.sizeBytes -= item.size;\n            }\n        }\n        // If there is an item on the queue we were unable to pop,\n        // just return it as a single batch.\n        if (popped.length === 0 && this.items.length > 0) {\n            const item = this.items.shift();\n            popped.push(item);\n            poppedSizeBytes += item.size;\n            this.sizeBytes -= item.size;\n        }\n        return [\n            popped.map((it) => ({ action: it.action, item: it.payload })),\n            () => popped.forEach((it) => it.itemPromiseResolve()),\n        ];\n    }\n}\n// 20 MB\nexport const DEFAULT_BATCH_SIZE_LIMIT_BYTES = 20_971_520;\nconst SERVER_INFO_REQUEST_TIMEOUT = 1000;\nexport class Client {\n    constructor(config = {}) {\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"webUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"batchIngestCaller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout_ms\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tenantId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"hideInputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"hideOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingSampleRate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"filteredPostUuids\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Set()\n        });\n        Object.defineProperty(this, \"autoBatchTracing\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"autoBatchQueue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Queue()\n        });\n        Object.defineProperty(this, \"autoBatchTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"autoBatchInitialDelayMs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 250\n        });\n        Object.defineProperty(this, \"autoBatchAggregationDelayMs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 50\n        });\n        Object.defineProperty(this, \"batchSizeBytesLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fetchOptions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"settings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"blockOnRootRunFinalization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"_serverInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"_getServerInfoPromise\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const defaultConfig = Client.getDefaultClientConfig();\n        this.tracingSampleRate = getTracingSamplingRate();\n        this.apiUrl = trimQuotes(config.apiUrl ?? defaultConfig.apiUrl) ?? \"\";\n        if (this.apiUrl.endsWith(\"/\")) {\n            this.apiUrl = this.apiUrl.slice(0, -1);\n        }\n        this.apiKey = trimQuotes(config.apiKey ?? defaultConfig.apiKey);\n        this.webUrl = trimQuotes(config.webUrl ?? defaultConfig.webUrl);\n        if (this.webUrl?.endsWith(\"/\")) {\n            this.webUrl = this.webUrl.slice(0, -1);\n        }\n        this.timeout_ms = config.timeout_ms ?? 12_000;\n        this.caller = new AsyncCaller(config.callerOptions ?? {});\n        this.batchIngestCaller = new AsyncCaller({\n            ...(config.callerOptions ?? {}),\n            onFailedResponseHook: handle429,\n        });\n        this.hideInputs =\n            config.hideInputs ?? config.anonymizer ?? defaultConfig.hideInputs;\n        this.hideOutputs =\n            config.hideOutputs ?? config.anonymizer ?? defaultConfig.hideOutputs;\n        this.autoBatchTracing = config.autoBatchTracing ?? this.autoBatchTracing;\n        this.blockOnRootRunFinalization =\n            config.blockOnRootRunFinalization ?? this.blockOnRootRunFinalization;\n        this.batchSizeBytesLimit = config.batchSizeBytesLimit;\n        this.fetchOptions = config.fetchOptions || {};\n    }\n    static getDefaultClientConfig() {\n        const apiKey = getLangSmithEnvironmentVariable(\"API_KEY\");\n        const apiUrl = getLangSmithEnvironmentVariable(\"ENDPOINT\") ??\n            \"https://api.smith.langchain.com\";\n        const hideInputs = getLangSmithEnvironmentVariable(\"HIDE_INPUTS\") === \"true\";\n        const hideOutputs = getLangSmithEnvironmentVariable(\"HIDE_OUTPUTS\") === \"true\";\n        return {\n            apiUrl: apiUrl,\n            apiKey: apiKey,\n            webUrl: undefined,\n            hideInputs: hideInputs,\n            hideOutputs: hideOutputs,\n        };\n    }\n    getHostUrl() {\n        if (this.webUrl) {\n            return this.webUrl;\n        }\n        else if (isLocalhost(this.apiUrl)) {\n            this.webUrl = \"http://localhost:3000\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.includes(\"/api\") &&\n            !this.apiUrl.split(\".\", 1)[0].endsWith(\"api\")) {\n            this.webUrl = this.apiUrl.replace(\"/api\", \"\");\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"dev\")) {\n            this.webUrl = \"https://dev.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"eu\")) {\n            this.webUrl = \"https://eu.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else {\n            this.webUrl = \"https://smith.langchain.com\";\n            return this.webUrl;\n        }\n    }\n    get headers() {\n        const headers = {\n            \"User-Agent\": `langsmith-js/${__version__}`,\n        };\n        if (this.apiKey) {\n            headers[\"x-api-key\"] = `${this.apiKey}`;\n        }\n        return headers;\n    }\n    processInputs(inputs) {\n        if (this.hideInputs === false) {\n            return inputs;\n        }\n        if (this.hideInputs === true) {\n            return {};\n        }\n        if (typeof this.hideInputs === \"function\") {\n            return this.hideInputs(inputs);\n        }\n        return inputs;\n    }\n    processOutputs(outputs) {\n        if (this.hideOutputs === false) {\n            return outputs;\n        }\n        if (this.hideOutputs === true) {\n            return {};\n        }\n        if (typeof this.hideOutputs === \"function\") {\n            return this.hideOutputs(outputs);\n        }\n        return outputs;\n    }\n    prepareRunCreateOrUpdateInputs(run) {\n        const runParams = { ...run };\n        if (runParams.inputs !== undefined) {\n            runParams.inputs = this.processInputs(runParams.inputs);\n        }\n        if (runParams.outputs !== undefined) {\n            runParams.outputs = this.processOutputs(runParams.outputs);\n        }\n        return runParams;\n    }\n    async _getResponse(path, queryParams) {\n        const paramsString = queryParams?.toString() ?? \"\";\n        const url = `${this.apiUrl}${path}?${paramsString}`;\n        const response = await this.caller.call(_getFetchImplementation(), url, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `Failed to fetch ${path}`);\n        return response;\n    }\n    async _get(path, queryParams) {\n        const response = await this._getResponse(path, queryParams);\n        return response.json();\n    }\n    async *_getPaginated(path, queryParams = new URLSearchParams(), transform) {\n        let offset = Number(queryParams.get(\"offset\")) || 0;\n        const limit = Number(queryParams.get(\"limit\")) || 100;\n        while (true) {\n            queryParams.set(\"offset\", String(offset));\n            queryParams.set(\"limit\", String(limit));\n            const url = `${this.apiUrl}${path}?${queryParams}`;\n            const response = await this.caller.call(_getFetchImplementation(), url, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(response, `Failed to fetch ${path}`);\n            const items = transform\n                ? transform(await response.json())\n                : await response.json();\n            if (items.length === 0) {\n                break;\n            }\n            yield items;\n            if (items.length < limit) {\n                break;\n            }\n            offset += items.length;\n        }\n    }\n    async *_getCursorPaginatedList(path, body = null, requestMethod = \"POST\", dataKey = \"runs\") {\n        const bodyParams = body ? { ...body } : {};\n        while (true) {\n            const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}${path}`, {\n                method: requestMethod,\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: JSON.stringify(bodyParams),\n            });\n            const responseBody = await response.json();\n            if (!responseBody) {\n                break;\n            }\n            if (!responseBody[dataKey]) {\n                break;\n            }\n            yield responseBody[dataKey];\n            const cursors = responseBody.cursors;\n            if (!cursors) {\n                break;\n            }\n            if (!cursors.next) {\n                break;\n            }\n            bodyParams.cursor = cursors.next;\n        }\n    }\n    _filterForSampling(runs, patch = false) {\n        if (this.tracingSampleRate === undefined) {\n            return runs;\n        }\n        if (patch) {\n            const sampled = [];\n            for (const run of runs) {\n                if (!this.filteredPostUuids.has(run.id)) {\n                    sampled.push(run);\n                }\n                else {\n                    this.filteredPostUuids.delete(run.id);\n                }\n            }\n            return sampled;\n        }\n        else {\n            const sampled = [];\n            for (const run of runs) {\n                if ((run.id !== run.trace_id &&\n                    !this.filteredPostUuids.has(run.trace_id)) ||\n                    Math.random() < this.tracingSampleRate) {\n                    sampled.push(run);\n                }\n                else {\n                    this.filteredPostUuids.add(run.id);\n                }\n            }\n            return sampled;\n        }\n    }\n    async _getBatchSizeLimitBytes() {\n        const serverInfo = await this._ensureServerInfo();\n        return (this.batchSizeBytesLimit ??\n            serverInfo.batch_ingest_config?.size_limit_bytes ??\n            DEFAULT_BATCH_SIZE_LIMIT_BYTES);\n    }\n    async drainAutoBatchQueue() {\n        while (this.autoBatchQueue.items.length >= 0) {\n            const [batch, done] = this.autoBatchQueue.pop(await this._getBatchSizeLimitBytes());\n            if (!batch.length) {\n                done();\n                return;\n            }\n            try {\n                const ingestParams = {\n                    runCreates: batch\n                        .filter((item) => item.action === \"create\")\n                        .map((item) => item.item),\n                    runUpdates: batch\n                        .filter((item) => item.action === \"update\")\n                        .map((item) => item.item),\n                };\n                const serverInfo = await this._ensureServerInfo();\n                if (serverInfo?.batch_ingest_config?.use_multipart_endpoint) {\n                    await this.multipartIngestRuns(ingestParams);\n                }\n                else {\n                    await this.batchIngestRuns(ingestParams);\n                }\n            }\n            finally {\n                done();\n            }\n        }\n    }\n    async processRunOperation(item, immediatelyTriggerBatch) {\n        const oldTimeout = this.autoBatchTimeout;\n        clearTimeout(this.autoBatchTimeout);\n        this.autoBatchTimeout = undefined;\n        if (item.action === \"create\") {\n            item.item = mergeRuntimeEnvIntoRunCreate(item.item);\n        }\n        const itemPromise = this.autoBatchQueue.push(item);\n        const sizeLimitBytes = await this._getBatchSizeLimitBytes();\n        if (immediatelyTriggerBatch ||\n            this.autoBatchQueue.sizeBytes > sizeLimitBytes) {\n            await this.drainAutoBatchQueue().catch(console.error);\n        }\n        if (this.autoBatchQueue.items.length > 0) {\n            this.autoBatchTimeout = setTimeout(() => {\n                this.autoBatchTimeout = undefined;\n                // This error would happen in the background and is uncatchable\n                // from the outside. So just log instead.\n                void this.drainAutoBatchQueue().catch(console.error);\n            }, oldTimeout\n                ? this.autoBatchAggregationDelayMs\n                : this.autoBatchInitialDelayMs);\n        }\n        return itemPromise;\n    }\n    async _getServerInfo() {\n        const response = await _getFetchImplementation()(`${this.apiUrl}/info`, {\n            method: \"GET\",\n            headers: { Accept: \"application/json\" },\n            signal: AbortSignal.timeout(SERVER_INFO_REQUEST_TIMEOUT),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get server info\");\n        return response.json();\n    }\n    async _ensureServerInfo() {\n        if (this._getServerInfoPromise === undefined) {\n            this._getServerInfoPromise = (async () => {\n                if (this._serverInfo === undefined) {\n                    try {\n                        this._serverInfo = await this._getServerInfo();\n                    }\n                    catch (e) {\n                        console.warn(`[WARNING]: LangSmith failed to fetch info on supported operations. Falling back to single calls and default limits.`);\n                    }\n                }\n                return this._serverInfo ?? {};\n            })();\n        }\n        return this._getServerInfoPromise.then((serverInfo) => {\n            if (this._serverInfo === undefined) {\n                this._getServerInfoPromise = undefined;\n            }\n            return serverInfo;\n        });\n    }\n    async _getSettings() {\n        if (!this.settings) {\n            this.settings = this._get(\"/settings\");\n        }\n        return await this.settings;\n    }\n    async createRun(run) {\n        if (!this._filterForSampling([run]).length) {\n            return;\n        }\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const session_name = run.project_name;\n        delete run.project_name;\n        const runCreate = this.prepareRunCreateOrUpdateInputs({\n            session_name,\n            ...run,\n            start_time: run.start_time ?? Date.now(),\n        });\n        if (this.autoBatchTracing &&\n            runCreate.trace_id !== undefined &&\n            runCreate.dotted_order !== undefined) {\n            void this.processRunOperation({\n                action: \"create\",\n                item: runCreate,\n            }).catch(console.error);\n            return;\n        }\n        const mergedRunCreateParam = mergeRuntimeEnvIntoRunCreate(runCreate);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs`, {\n            method: \"POST\",\n            headers,\n            body: stringifyForTracing(mergedRunCreateParam),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create run\", true);\n    }\n    /**\n     * Batch ingest/upsert multiple runs in the Langsmith system.\n     * @param runs\n     */\n    async batchIngestRuns({ runCreates, runUpdates, }) {\n        if (runCreates === undefined && runUpdates === undefined) {\n            return;\n        }\n        let preparedCreateParams = runCreates?.map((create) => this.prepareRunCreateOrUpdateInputs(create)) ?? [];\n        let preparedUpdateParams = runUpdates?.map((update) => this.prepareRunCreateOrUpdateInputs(update)) ?? [];\n        if (preparedCreateParams.length > 0 && preparedUpdateParams.length > 0) {\n            const createById = preparedCreateParams.reduce((params, run) => {\n                if (!run.id) {\n                    return params;\n                }\n                params[run.id] = run;\n                return params;\n            }, {});\n            const standaloneUpdates = [];\n            for (const updateParam of preparedUpdateParams) {\n                if (updateParam.id !== undefined && createById[updateParam.id]) {\n                    createById[updateParam.id] = {\n                        ...createById[updateParam.id],\n                        ...updateParam,\n                    };\n                }\n                else {\n                    standaloneUpdates.push(updateParam);\n                }\n            }\n            preparedCreateParams = Object.values(createById);\n            preparedUpdateParams = standaloneUpdates;\n        }\n        const rawBatch = {\n            post: this._filterForSampling(preparedCreateParams),\n            patch: this._filterForSampling(preparedUpdateParams, true),\n        };\n        if (!rawBatch.post.length && !rawBatch.patch.length) {\n            return;\n        }\n        const serverInfo = await this._ensureServerInfo();\n        if (serverInfo.version === undefined) {\n            this.autoBatchTracing = false;\n            for (const preparedCreateParam of rawBatch.post) {\n                await this.createRun(preparedCreateParam);\n            }\n            for (const preparedUpdateParam of rawBatch.patch) {\n                if (preparedUpdateParam.id !== undefined) {\n                    await this.updateRun(preparedUpdateParam.id, preparedUpdateParam);\n                }\n            }\n            return;\n        }\n        const batchChunks = {\n            post: [],\n            patch: [],\n        };\n        for (const k of [\"post\", \"patch\"]) {\n            const key = k;\n            const batchItems = rawBatch[key].reverse();\n            let batchItem = batchItems.pop();\n            while (batchItem !== undefined) {\n                batchChunks[key].push(batchItem);\n                batchItem = batchItems.pop();\n            }\n        }\n        if (batchChunks.post.length > 0 || batchChunks.patch.length > 0) {\n            await this._postBatchIngestRuns(stringifyForTracing(batchChunks));\n        }\n    }\n    async _postBatchIngestRuns(body) {\n        const headers = {\n            ...this.headers,\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        };\n        const response = await this.batchIngestCaller.call(_getFetchImplementation(), `${this.apiUrl}/runs/batch`, {\n            method: \"POST\",\n            headers,\n            body: body,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"batch create run\", true);\n    }\n    /**\n     * Batch ingest/upsert multiple runs in the Langsmith system.\n     * @param runs\n     */\n    async multipartIngestRuns({ runCreates, runUpdates, }) {\n        if (runCreates === undefined && runUpdates === undefined) {\n            return;\n        }\n        // transform and convert to dicts\n        const allAttachments = {};\n        let preparedCreateParams = [];\n        for (const create of runCreates ?? []) {\n            const preparedCreate = this.prepareRunCreateOrUpdateInputs(create);\n            if (preparedCreate.id !== undefined &&\n                preparedCreate.attachments !== undefined) {\n                allAttachments[preparedCreate.id] = preparedCreate.attachments;\n            }\n            delete preparedCreate.attachments;\n            preparedCreateParams.push(preparedCreate);\n        }\n        let preparedUpdateParams = [];\n        for (const update of runUpdates ?? []) {\n            preparedUpdateParams.push(this.prepareRunCreateOrUpdateInputs(update));\n        }\n        // require trace_id and dotted_order\n        const invalidRunCreate = preparedCreateParams.find((runCreate) => {\n            return (runCreate.trace_id === undefined || runCreate.dotted_order === undefined);\n        });\n        if (invalidRunCreate !== undefined) {\n            throw new Error(`Multipart ingest requires \"trace_id\" and \"dotted_order\" to be set when creating a run`);\n        }\n        const invalidRunUpdate = preparedUpdateParams.find((runUpdate) => {\n            return (runUpdate.trace_id === undefined || runUpdate.dotted_order === undefined);\n        });\n        if (invalidRunUpdate !== undefined) {\n            throw new Error(`Multipart ingest requires \"trace_id\" and \"dotted_order\" to be set when updating a run`);\n        }\n        // combine post and patch dicts where possible\n        if (preparedCreateParams.length > 0 && preparedUpdateParams.length > 0) {\n            const createById = preparedCreateParams.reduce((params, run) => {\n                if (!run.id) {\n                    return params;\n                }\n                params[run.id] = run;\n                return params;\n            }, {});\n            const standaloneUpdates = [];\n            for (const updateParam of preparedUpdateParams) {\n                if (updateParam.id !== undefined && createById[updateParam.id]) {\n                    createById[updateParam.id] = {\n                        ...createById[updateParam.id],\n                        ...updateParam,\n                    };\n                }\n                else {\n                    standaloneUpdates.push(updateParam);\n                }\n            }\n            preparedCreateParams = Object.values(createById);\n            preparedUpdateParams = standaloneUpdates;\n        }\n        if (preparedCreateParams.length === 0 &&\n            preparedUpdateParams.length === 0) {\n            return;\n        }\n        // send the runs in multipart requests\n        const accumulatedContext = [];\n        const accumulatedParts = [];\n        for (const [method, payloads] of [\n            [\"post\", preparedCreateParams],\n            [\"patch\", preparedUpdateParams],\n        ]) {\n            for (const originalPayload of payloads) {\n                // collect fields to be sent as separate parts\n                const { inputs, outputs, events, ...payload } = originalPayload;\n                const fields = { inputs, outputs, events };\n                // encode the main run payload\n                const stringifiedPayload = stringifyForTracing(payload);\n                accumulatedParts.push({\n                    name: `${method}.${payload.id}`,\n                    payload: new Blob([stringifiedPayload], {\n                        type: `application/json; length=${stringifiedPayload.length}`, // encoding=gzip\n                    }),\n                });\n                // encode the fields we collected\n                for (const [key, value] of Object.entries(fields)) {\n                    if (value === undefined) {\n                        continue;\n                    }\n                    const stringifiedValue = stringifyForTracing(value);\n                    accumulatedParts.push({\n                        name: `${method}.${payload.id}.${key}`,\n                        payload: new Blob([stringifiedValue], {\n                            type: `application/json; length=${stringifiedValue.length}`,\n                        }),\n                    });\n                }\n                // encode the attachments\n                if (payload.id !== undefined) {\n                    const attachments = allAttachments[payload.id];\n                    if (attachments) {\n                        delete allAttachments[payload.id];\n                        for (const [name, [contentType, content]] of Object.entries(attachments)) {\n                            accumulatedParts.push({\n                                name: `attachment.${payload.id}.${name}`,\n                                payload: new Blob([content], {\n                                    type: `${contentType}; length=${content.length}`,\n                                }),\n                            });\n                        }\n                    }\n                }\n                // compute context\n                accumulatedContext.push(`trace=${payload.trace_id},id=${payload.id}`);\n            }\n        }\n        await this._sendMultipartRequest(accumulatedParts, accumulatedContext.join(\"; \"));\n    }\n    async _sendMultipartRequest(parts, context) {\n        try {\n            const formData = new FormData();\n            for (const part of parts) {\n                formData.append(part.name, part.payload);\n            }\n            await this.batchIngestCaller.call(_getFetchImplementation(), `${this.apiUrl}/runs/multipart`, {\n                method: \"POST\",\n                headers: {\n                    ...this.headers,\n                },\n                body: formData,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n        }\n        catch (e) {\n            let errorMessage = \"Failed to multipart ingest runs\";\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (e instanceof Error) {\n                errorMessage += `: ${e.stack || e.message}`;\n            }\n            else {\n                errorMessage += `: ${String(e)}`;\n            }\n            console.warn(`${errorMessage.trim()}\\n\\nContext: ${context}`);\n        }\n    }\n    async updateRun(runId, run) {\n        assertUuid(runId);\n        if (run.inputs) {\n            run.inputs = this.processInputs(run.inputs);\n        }\n        if (run.outputs) {\n            run.outputs = this.processOutputs(run.outputs);\n        }\n        // TODO: Untangle types\n        const data = { ...run, id: runId };\n        if (!this._filterForSampling([data], true).length) {\n            return;\n        }\n        if (this.autoBatchTracing &&\n            data.trace_id !== undefined &&\n            data.dotted_order !== undefined) {\n            if (run.end_time !== undefined &&\n                data.parent_run_id === undefined &&\n                this.blockOnRootRunFinalization) {\n                // Trigger a batch as soon as a root trace ends and block to ensure trace finishes\n                // in serverless environments.\n                await this.processRunOperation({ action: \"update\", item: data }, true);\n                return;\n            }\n            else {\n                void this.processRunOperation({ action: \"update\", item: data }).catch(console.error);\n            }\n            return;\n        }\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs/${runId}`, {\n            method: \"PATCH\",\n            headers,\n            body: stringifyForTracing(run),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update run\", true);\n    }\n    async readRun(runId, { loadChildRuns } = { loadChildRuns: false }) {\n        assertUuid(runId);\n        let run = await this._get(`/runs/${runId}`);\n        if (loadChildRuns && run.child_run_ids) {\n            run = await this._loadChildRuns(run);\n        }\n        return run;\n    }\n    async getRunUrl({ runId, run, projectOpts, }) {\n        if (run !== undefined) {\n            let sessionId;\n            if (run.session_id) {\n                sessionId = run.session_id;\n            }\n            else if (projectOpts?.projectName) {\n                sessionId = (await this.readProject({ projectName: projectOpts?.projectName })).id;\n            }\n            else if (projectOpts?.projectId) {\n                sessionId = projectOpts?.projectId;\n            }\n            else {\n                const project = await this.readProject({\n                    projectName: getLangSmithEnvironmentVariable(\"PROJECT\") || \"default\",\n                });\n                sessionId = project.id;\n            }\n            const tenantId = await this._getTenantId();\n            return `${this.getHostUrl()}/o/${tenantId}/projects/p/${sessionId}/r/${run.id}?poll=true`;\n        }\n        else if (runId !== undefined) {\n            const run_ = await this.readRun(runId);\n            if (!run_.app_path) {\n                throw new Error(`Run ${runId} has no app_path`);\n            }\n            const baseUrl = this.getHostUrl();\n            return `${baseUrl}${run_.app_path}`;\n        }\n        else {\n            throw new Error(\"Must provide either runId or run\");\n        }\n    }\n    async _loadChildRuns(run) {\n        const childRuns = await toArray(this.listRuns({ id: run.child_run_ids }));\n        const treemap = {};\n        const runs = {};\n        // TODO: make dotted order required when the migration finishes\n        childRuns.sort((a, b) => (a?.dotted_order ?? \"\").localeCompare(b?.dotted_order ?? \"\"));\n        for (const childRun of childRuns) {\n            if (childRun.parent_run_id === null ||\n                childRun.parent_run_id === undefined) {\n                throw new Error(`Child run ${childRun.id} has no parent`);\n            }\n            if (!(childRun.parent_run_id in treemap)) {\n                treemap[childRun.parent_run_id] = [];\n            }\n            treemap[childRun.parent_run_id].push(childRun);\n            runs[childRun.id] = childRun;\n        }\n        run.child_runs = treemap[run.id] || [];\n        for (const runId in treemap) {\n            if (runId !== run.id) {\n                runs[runId].child_runs = treemap[runId];\n            }\n        }\n        return run;\n    }\n    /**\n     * List runs from the LangSmith server.\n     * @param projectId - The ID of the project to filter by.\n     * @param projectName - The name of the project to filter by.\n     * @param parentRunId - The ID of the parent run to filter by.\n     * @param traceId - The ID of the trace to filter by.\n     * @param referenceExampleId - The ID of the reference example to filter by.\n     * @param startTime - The start time to filter by.\n     * @param isRoot - Indicates whether to only return root runs.\n     * @param runType - The run type to filter by.\n     * @param error - Indicates whether to filter by error runs.\n     * @param id - The ID of the run to filter by.\n     * @param query - The query string to filter by.\n     * @param filter - The filter string to apply to the run spans.\n     * @param traceFilter - The filter string to apply on the root run of the trace.\n     * @param limit - The maximum number of runs to retrieve.\n     * @returns {AsyncIterable<Run>} - The runs.\n     *\n     * @example\n     * // List all runs in a project\n     * const projectRuns = client.listRuns({ projectName: \"<your_project>\" });\n     *\n     * @example\n     * // List LLM and Chat runs in the last 24 hours\n     * const todaysLLMRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   start_time: new Date(Date.now() - 24 * 60 * 60 * 1000),\n     *   run_type: \"llm\",\n     * });\n     *\n     * @example\n     * // List traces in a project\n     * const rootRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   execution_order: 1,\n     * });\n     *\n     * @example\n     * // List runs without errors\n     * const correctRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   error: false,\n     * });\n     *\n     * @example\n     * // List runs by run ID\n     * const runIds = [\n     *   \"a36092d2-4ad5-4fb4-9c0d-0dba9a2ed836\",\n     *   \"9398e6be-964f-4aa4-8ae9-ad78cd4b7074\",\n     * ];\n     * const selectedRuns = client.listRuns({ run_ids: runIds });\n     *\n     * @example\n     * // List all \"chain\" type runs that took more than 10 seconds and had `total_tokens` greater than 5000\n     * const chainRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(eq(run_type, \"chain\"), gt(latency, 10), gt(total_tokens, 5000))',\n     * });\n     *\n     * @example\n     * // List all runs called \"extractor\" whose root of the trace was assigned feedback \"user_score\" score of 1\n     * const goodExtractorRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'eq(name, \"extractor\")',\n     *   traceFilter: 'and(eq(feedback_key, \"user_score\"), eq(feedback_score, 1))',\n     * });\n     *\n     * @example\n     * // List all runs that started after a specific timestamp and either have \"error\" not equal to null or a \"Correctness\" feedback score equal to 0\n     * const complexRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(gt(start_time, \"2023-07-15T12:34:56Z\"), or(neq(error, null), and(eq(feedback_key, \"Correctness\"), eq(feedback_score, 0.0))))',\n     * });\n     *\n     * @example\n     * // List all runs where `tags` include \"experimental\" or \"beta\" and `latency` is greater than 2 seconds\n     * const taggedRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(or(has(tags, \"experimental\"), has(tags, \"beta\")), gt(latency, 2))',\n     * });\n     */\n    async *listRuns(props) {\n        const { projectId, projectName, parentRunId, traceId, referenceExampleId, startTime, executionOrder, isRoot, runType, error, id, query, filter, traceFilter, treeFilter, limit, select, } = props;\n        let projectIds = [];\n        if (projectId) {\n            projectIds = Array.isArray(projectId) ? projectId : [projectId];\n        }\n        if (projectName) {\n            const projectNames = Array.isArray(projectName)\n                ? projectName\n                : [projectName];\n            const projectIds_ = await Promise.all(projectNames.map((name) => this.readProject({ projectName: name }).then((project) => project.id)));\n            projectIds.push(...projectIds_);\n        }\n        const default_select = [\n            \"app_path\",\n            \"child_run_ids\",\n            \"completion_cost\",\n            \"completion_tokens\",\n            \"dotted_order\",\n            \"end_time\",\n            \"error\",\n            \"events\",\n            \"extra\",\n            \"feedback_stats\",\n            \"first_token_time\",\n            \"id\",\n            \"inputs\",\n            \"name\",\n            \"outputs\",\n            \"parent_run_id\",\n            \"parent_run_ids\",\n            \"prompt_cost\",\n            \"prompt_tokens\",\n            \"reference_example_id\",\n            \"run_type\",\n            \"session_id\",\n            \"start_time\",\n            \"status\",\n            \"tags\",\n            \"total_cost\",\n            \"total_tokens\",\n            \"trace_id\",\n        ];\n        const body = {\n            session: projectIds.length ? projectIds : null,\n            run_type: runType,\n            reference_example: referenceExampleId,\n            query,\n            filter,\n            trace_filter: traceFilter,\n            tree_filter: treeFilter,\n            execution_order: executionOrder,\n            parent_run: parentRunId,\n            start_time: startTime ? startTime.toISOString() : null,\n            error,\n            id,\n            limit,\n            trace: traceId,\n            select: select ? select : default_select,\n            is_root: isRoot,\n        };\n        let runsYielded = 0;\n        for await (const runs of this._getCursorPaginatedList(\"/runs/query\", body)) {\n            if (limit) {\n                if (runsYielded >= limit) {\n                    break;\n                }\n                if (runs.length + runsYielded > limit) {\n                    const newRuns = runs.slice(0, limit - runsYielded);\n                    yield* newRuns;\n                    break;\n                }\n                runsYielded += runs.length;\n                yield* runs;\n            }\n            else {\n                yield* runs;\n            }\n        }\n    }\n    async getRunStats({ id, trace, parentRun, runType, projectNames, projectIds, referenceExampleIds, startTime, endTime, error, query, filter, traceFilter, treeFilter, isRoot, dataSourceType, }) {\n        let projectIds_ = projectIds || [];\n        if (projectNames) {\n            projectIds_ = [\n                ...(projectIds || []),\n                ...(await Promise.all(projectNames.map((name) => this.readProject({ projectName: name }).then((project) => project.id)))),\n            ];\n        }\n        const payload = {\n            id,\n            trace,\n            parent_run: parentRun,\n            run_type: runType,\n            session: projectIds_,\n            reference_example: referenceExampleIds,\n            start_time: startTime,\n            end_time: endTime,\n            error,\n            query,\n            filter,\n            trace_filter: traceFilter,\n            tree_filter: treeFilter,\n            is_root: isRoot,\n            data_source_type: dataSourceType,\n        };\n        // Remove undefined values from the payload\n        const filteredPayload = Object.fromEntries(Object.entries(payload).filter(([_, value]) => value !== undefined));\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs/stats`, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(filteredPayload),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        return result;\n    }\n    async shareRun(runId, { shareId } = {}) {\n        const data = {\n            run_id: runId,\n            share_token: shareId || uuid.v4(),\n        };\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"PUT\",\n            headers: this.headers,\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            throw new Error(\"Invalid response from server\");\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async unshareRun(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"unshare run\", true);\n    }\n    async readRunSharedLink(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            return undefined;\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async listSharedRuns(shareToken, { runIds, } = {}) {\n        const queryParams = new URLSearchParams({\n            share_token: shareToken,\n        });\n        if (runIds !== undefined) {\n            for (const runId of runIds) {\n                queryParams.append(\"id\", runId);\n            }\n        }\n        assertUuid(shareToken);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/public/${shareToken}/runs${queryParams}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const runs = await response.json();\n        return runs;\n    }\n    async readDatasetSharedSchema(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async shareDataset(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        const data = {\n            dataset_id: datasetId,\n        };\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"PUT\",\n            headers: this.headers,\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async unshareDataset(datasetId) {\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"unshare dataset\", true);\n    }\n    async readSharedDataset(shareToken) {\n        assertUuid(shareToken);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/public/${shareToken}/datasets`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const dataset = await response.json();\n        return dataset;\n    }\n    /**\n     * Get shared examples.\n     *\n     * @param {string} shareToken The share token to get examples for. A share token is the UUID (or LangSmith URL, including UUID) generated when explicitly marking an example as public.\n     * @param {Object} [options] Additional options for listing the examples.\n     * @param {string[] | undefined} [options.exampleIds] A list of example IDs to filter by.\n     * @returns {Promise<Example[]>} The shared examples.\n     */\n    async listSharedExamples(shareToken, options) {\n        const params = {};\n        if (options?.exampleIds) {\n            params.id = options.exampleIds;\n        }\n        const urlParams = new URLSearchParams();\n        Object.entries(params).forEach(([key, value]) => {\n            if (Array.isArray(value)) {\n                value.forEach((v) => urlParams.append(key, v));\n            }\n            else {\n                urlParams.append(key, value);\n            }\n        });\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/public/${shareToken}/examples?${urlParams.toString()}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (!response.ok) {\n            if (\"detail\" in result) {\n                throw new Error(`Failed to list shared examples.\\nStatus: ${response.status}\\nMessage: ${result.detail.join(\"\\n\")}`);\n            }\n            throw new Error(`Failed to list shared examples: ${response.status} ${response.statusText}`);\n        }\n        return result.map((example) => ({\n            ...example,\n            _hostUrl: this.getHostUrl(),\n        }));\n    }\n    async createProject({ projectName, description = null, metadata = null, upsert = false, projectExtra = null, referenceDatasetId = null, }) {\n        const upsert_ = upsert ? `?upsert=true` : \"\";\n        const endpoint = `${this.apiUrl}/sessions${upsert_}`;\n        const extra = projectExtra || {};\n        if (metadata) {\n            extra[\"metadata\"] = metadata;\n        }\n        const body = {\n            name: projectName,\n            extra,\n            description,\n        };\n        if (referenceDatasetId !== null) {\n            body[\"reference_dataset_id\"] = referenceDatasetId;\n        }\n        const response = await this.caller.call(_getFetchImplementation(), endpoint, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create project\");\n        const result = await response.json();\n        return result;\n    }\n    async updateProject(projectId, { name = null, description = null, metadata = null, projectExtra = null, endTime = null, }) {\n        const endpoint = `${this.apiUrl}/sessions/${projectId}`;\n        let extra = projectExtra;\n        if (metadata) {\n            extra = { ...(extra || {}), metadata };\n        }\n        const body = {\n            name,\n            extra,\n            description,\n            end_time: endTime ? new Date(endTime).toISOString() : null,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), endpoint, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update project\");\n        const result = await response.json();\n        return result;\n    }\n    async hasProject({ projectId, projectName, }) {\n        // TODO: Add a head request\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}${path}?${params}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        // consume the response body to release the connection\n        // https://undici.nodejs.org/#/?id=garbage-collection\n        try {\n            const result = await response.json();\n            if (!response.ok) {\n                return false;\n            }\n            // If it's OK and we're querying by name, need to check the list is not empty\n            if (Array.isArray(result)) {\n                return result.length > 0;\n            }\n            // projectId querying\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async readProject({ projectId, projectName, includeStats, }) {\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        if (includeStats !== undefined) {\n            params.append(\"include_stats\", includeStats.toString());\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Project[id=${projectId}, name=${projectName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async getProjectUrl({ projectId, projectName, }) {\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide either projectName or projectId\");\n        }\n        const project = await this.readProject({ projectId, projectName });\n        const tenantId = await this._getTenantId();\n        return `${this.getHostUrl()}/o/${tenantId}/projects/p/${project.id}`;\n    }\n    async getDatasetUrl({ datasetId, datasetName, }) {\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const dataset = await this.readDataset({ datasetId, datasetName });\n        const tenantId = await this._getTenantId();\n        return `${this.getHostUrl()}/o/${tenantId}/datasets/${dataset.id}`;\n    }\n    async _getTenantId() {\n        if (this._tenantId !== null) {\n            return this._tenantId;\n        }\n        const queryParams = new URLSearchParams({ limit: \"1\" });\n        for await (const projects of this._getPaginated(\"/sessions\", queryParams)) {\n            this._tenantId = projects[0].tenant_id;\n            return projects[0].tenant_id;\n        }\n        throw new Error(\"No projects found to resolve tenant.\");\n    }\n    async *listProjects({ projectIds, name, nameContains, referenceDatasetId, referenceDatasetName, referenceFree, metadata, } = {}) {\n        const params = new URLSearchParams();\n        if (projectIds !== undefined) {\n            for (const projectId of projectIds) {\n                params.append(\"id\", projectId);\n            }\n        }\n        if (name !== undefined) {\n            params.append(\"name\", name);\n        }\n        if (nameContains !== undefined) {\n            params.append(\"name_contains\", nameContains);\n        }\n        if (referenceDatasetId !== undefined) {\n            params.append(\"reference_dataset\", referenceDatasetId);\n        }\n        else if (referenceDatasetName !== undefined) {\n            const dataset = await this.readDataset({\n                datasetName: referenceDatasetName,\n            });\n            params.append(\"reference_dataset\", dataset.id);\n        }\n        if (referenceFree !== undefined) {\n            params.append(\"reference_free\", referenceFree.toString());\n        }\n        if (metadata !== undefined) {\n            params.append(\"metadata\", JSON.stringify(metadata));\n        }\n        for await (const projects of this._getPaginated(\"/sessions\", params)) {\n            yield* projects;\n        }\n    }\n    async deleteProject({ projectId, projectName, }) {\n        let projectId_;\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        else if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId === undefined) {\n            projectId_ = (await this.readProject({ projectName })).id;\n        }\n        else {\n            projectId_ = projectId;\n        }\n        assertUuid(projectId_);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/sessions/${projectId_}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete session ${projectId_} (${projectName})`, true);\n    }\n    async uploadCsv({ csvFile, fileName, inputKeys, outputKeys, description, dataType, name, }) {\n        const url = `${this.apiUrl}/datasets/upload`;\n        const formData = new FormData();\n        formData.append(\"file\", csvFile, fileName);\n        inputKeys.forEach((key) => {\n            formData.append(\"input_keys\", key);\n        });\n        outputKeys.forEach((key) => {\n            formData.append(\"output_keys\", key);\n        });\n        if (description) {\n            formData.append(\"description\", description);\n        }\n        if (dataType) {\n            formData.append(\"data_type\", dataType);\n        }\n        if (name) {\n            formData.append(\"name\", name);\n        }\n        const response = await this.caller.call(_getFetchImplementation(), url, {\n            method: \"POST\",\n            headers: this.headers,\n            body: formData,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"upload CSV\");\n        const result = await response.json();\n        return result;\n    }\n    async createDataset(name, { description, dataType, inputsSchema, outputsSchema, metadata, } = {}) {\n        const body = {\n            name,\n            description,\n            extra: metadata ? { metadata } : undefined,\n        };\n        if (dataType) {\n            body.data_type = dataType;\n        }\n        if (inputsSchema) {\n            body.inputs_schema_definition = inputsSchema;\n        }\n        if (outputsSchema) {\n            body.outputs_schema_definition = outputsSchema;\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create dataset\");\n        const result = await response.json();\n        return result;\n    }\n    async readDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        // limit to 1 result\n        const params = new URLSearchParams({ limit: \"1\" });\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            assertUuid(datasetId);\n            path += `/${datasetId}`;\n        }\n        else if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Dataset[id=${datasetId}, name=${datasetName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async hasDataset({ datasetId, datasetName, }) {\n        try {\n            await this.readDataset({ datasetId, datasetName });\n            return true;\n        }\n        catch (e) {\n            if (\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            e instanceof Error &&\n                e.message.toLocaleLowerCase().includes(\"not found\")) {\n                return false;\n            }\n            throw e;\n        }\n    }\n    async diffDatasetVersions({ datasetId, datasetName, fromVersion, toVersion, }) {\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const urlParams = new URLSearchParams({\n            from_version: typeof fromVersion === \"string\"\n                ? fromVersion\n                : fromVersion.toISOString(),\n            to_version: typeof toVersion === \"string\" ? toVersion : toVersion.toISOString(),\n        });\n        const response = await this._get(`/datasets/${datasetId_}/versions/diff`, urlParams);\n        return response;\n    }\n    async readDatasetOpenaiFinetuning({ datasetId, datasetName, }) {\n        const path = \"/datasets\";\n        if (datasetId !== undefined) {\n            // do nothing\n        }\n        else if (datasetName !== undefined) {\n            datasetId = (await this.readDataset({ datasetName })).id;\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this._getResponse(`${path}/${datasetId}/openai_ft`);\n        const datasetText = await response.text();\n        const dataset = datasetText\n            .trim()\n            .split(\"\\n\")\n            .map((line) => JSON.parse(line));\n        return dataset;\n    }\n    async *listDatasets({ limit = 100, offset = 0, datasetIds, datasetName, datasetNameContains, metadata, } = {}) {\n        const path = \"/datasets\";\n        const params = new URLSearchParams({\n            limit: limit.toString(),\n            offset: offset.toString(),\n        });\n        if (datasetIds !== undefined) {\n            for (const id_ of datasetIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        if (datasetNameContains !== undefined) {\n            params.append(\"name_contains\", datasetNameContains);\n        }\n        if (metadata !== undefined) {\n            params.append(\"metadata\", JSON.stringify(metadata));\n        }\n        for await (const datasets of this._getPaginated(path, params)) {\n            yield* datasets;\n        }\n    }\n    /**\n     * Update a dataset\n     * @param props The dataset details to update\n     * @returns The updated dataset\n     */\n    async updateDataset(props) {\n        const { datasetId, datasetName, ...update } = props;\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const _datasetId = datasetId ?? (await this.readDataset({ datasetName })).id;\n        assertUuid(_datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${_datasetId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(update),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset\");\n        return (await response.json());\n    }\n    async deleteDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        let datasetId_ = datasetId;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        if (datasetId_ !== undefined) {\n            assertUuid(datasetId_);\n            path += `/${datasetId_}`;\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async indexDataset({ datasetId, datasetName, tag, }) {\n        let datasetId_ = datasetId;\n        if (!datasetId_ && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ && datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (!datasetId_) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        assertUuid(datasetId_);\n        const data = {\n            tag: tag,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId_}/index`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"index dataset\");\n        await response.json();\n    }\n    /**\n     * Lets you run a similarity search query on a dataset.\n     *\n     * Requires the dataset to be indexed. Please see the `indexDataset` method to set up indexing.\n     *\n     * @param inputs      The input on which to run the similarity search. Must have the\n     *                    same schema as the dataset.\n     *\n     * @param datasetId   The dataset to search for similar examples.\n     *\n     * @param limit       The maximum number of examples to return. Will return the top `limit` most\n     *                    similar examples in order of most similar to least similar. If no similar\n     *                    examples are found, random examples will be returned.\n     *\n     * @param filter      A filter string to apply to the search. Only examples will be returned that\n     *                    match the filter string. Some examples of filters\n     *\n     *                    - eq(metadata.mykey, \"value\")\n     *                    - and(neq(metadata.my.nested.key, \"value\"), neq(metadata.mykey, \"value\"))\n     *                    - or(eq(metadata.mykey, \"value\"), eq(metadata.mykey, \"othervalue\"))\n     *\n     * @returns           A list of similar examples.\n     *\n     *\n     * @example\n     * dataset_id = \"123e4567-e89b-12d3-a456-426614174000\"\n     * inputs = {\"text\": \"How many people live in Berlin?\"}\n     * limit = 5\n     * examples = await client.similarExamples(inputs, dataset_id, limit)\n     */\n    async similarExamples(inputs, datasetId, limit, { filter, } = {}) {\n        const data = {\n            limit: limit,\n            inputs: inputs,\n        };\n        if (filter !== undefined) {\n            data[\"filter\"] = filter;\n        }\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId}/search`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"fetch similar examples\");\n        const result = await response.json();\n        return result[\"examples\"];\n    }\n    async createExample(inputs, outputs, { datasetId, datasetName, createdAt, exampleId, metadata, split, sourceRunId, }) {\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const createdAt_ = createdAt || new Date();\n        const data = {\n            dataset_id: datasetId_,\n            inputs,\n            outputs,\n            created_at: createdAt_?.toISOString(),\n            id: exampleId,\n            metadata,\n            split,\n            source_run_id: sourceRunId,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/examples`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create example\");\n        const result = await response.json();\n        return result;\n    }\n    async createExamples(props) {\n        const { inputs, outputs, metadata, sourceRunIds, exampleIds, datasetId, datasetName, } = props;\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const formattedExamples = inputs.map((input, idx) => {\n            return {\n                dataset_id: datasetId_,\n                inputs: input,\n                outputs: outputs ? outputs[idx] : undefined,\n                metadata: metadata ? metadata[idx] : undefined,\n                split: props.splits ? props.splits[idx] : undefined,\n                id: exampleIds ? exampleIds[idx] : undefined,\n                source_run_id: sourceRunIds ? sourceRunIds[idx] : undefined,\n            };\n        });\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/examples/bulk`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(formattedExamples),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create examples\");\n        const result = await response.json();\n        return result;\n    }\n    async createLLMExample(input, generation, options) {\n        return this.createExample({ input }, { output: generation }, options);\n    }\n    async createChatExample(input, generations, options) {\n        const finalInput = input.map((message) => {\n            if (isLangChainMessage(message)) {\n                return convertLangChainMessageToExample(message);\n            }\n            return message;\n        });\n        const finalOutput = isLangChainMessage(generations)\n            ? convertLangChainMessageToExample(generations)\n            : generations;\n        return this.createExample({ input: finalInput }, { output: finalOutput }, options);\n    }\n    async readExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        return await this._get(path);\n    }\n    async *listExamples({ datasetId, datasetName, exampleIds, asOf, splits, inlineS3Urls, metadata, limit, offset, filter, } = {}) {\n        let datasetId_;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            datasetId_ = datasetId;\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            throw new Error(\"Must provide a datasetName or datasetId\");\n        }\n        const params = new URLSearchParams({ dataset: datasetId_ });\n        const dataset_version = asOf\n            ? typeof asOf === \"string\"\n                ? asOf\n                : asOf?.toISOString()\n            : undefined;\n        if (dataset_version) {\n            params.append(\"as_of\", dataset_version);\n        }\n        const inlineS3Urls_ = inlineS3Urls ?? true;\n        params.append(\"inline_s3_urls\", inlineS3Urls_.toString());\n        if (exampleIds !== undefined) {\n            for (const id_ of exampleIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (splits !== undefined) {\n            for (const split of splits) {\n                params.append(\"splits\", split);\n            }\n        }\n        if (metadata !== undefined) {\n            const serializedMetadata = JSON.stringify(metadata);\n            params.append(\"metadata\", serializedMetadata);\n        }\n        if (limit !== undefined) {\n            params.append(\"limit\", limit.toString());\n        }\n        if (offset !== undefined) {\n            params.append(\"offset\", offset.toString());\n        }\n        if (filter !== undefined) {\n            params.append(\"filter\", filter);\n        }\n        let i = 0;\n        for await (const examples of this._getPaginated(\"/examples\", params)) {\n            for (const example of examples) {\n                yield example;\n                i++;\n            }\n            if (limit !== undefined && i >= limit) {\n                break;\n            }\n        }\n    }\n    async deleteExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        const response = await this.caller.call(_getFetchImplementation(), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async updateExample(exampleId, update) {\n        assertUuid(exampleId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/examples/${exampleId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(update),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update example\");\n        const result = await response.json();\n        return result;\n    }\n    async updateExamples(update) {\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/examples/bulk`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(update),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update examples\");\n        const result = await response.json();\n        return result;\n    }\n    async listDatasetSplits({ datasetId, datasetName, asOf, }) {\n        let datasetId_;\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide dataset name or ID\");\n        }\n        else if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            datasetId_ = datasetId;\n        }\n        assertUuid(datasetId_);\n        const params = new URLSearchParams();\n        const dataset_version = asOf\n            ? typeof asOf === \"string\"\n                ? asOf\n                : asOf?.toISOString()\n            : undefined;\n        if (dataset_version) {\n            params.append(\"as_of\", dataset_version);\n        }\n        const response = await this._get(`/datasets/${datasetId_}/splits`, params);\n        return response;\n    }\n    async updateDatasetSplits({ datasetId, datasetName, splitName, exampleIds, remove = false, }) {\n        let datasetId_;\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide dataset name or ID\");\n        }\n        else if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            datasetId_ = datasetId;\n        }\n        assertUuid(datasetId_);\n        const data = {\n            split_name: splitName,\n            examples: exampleIds.map((id) => {\n                assertUuid(id);\n                return id;\n            }),\n            remove,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId_}/splits`, {\n            method: \"PUT\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset splits\", true);\n    }\n    /**\n     * @deprecated This method is deprecated and will be removed in future LangSmith versions, use `evaluate` from `langsmith/evaluation` instead.\n     */\n    async evaluateRun(run, evaluator, { sourceInfo, loadChildRuns, referenceExample, } = { loadChildRuns: false }) {\n        warnOnce(\"This method is deprecated and will be removed in future LangSmith versions, use `evaluate` from `langsmith/evaluation` instead.\");\n        let run_;\n        if (typeof run === \"string\") {\n            run_ = await this.readRun(run, { loadChildRuns });\n        }\n        else if (typeof run === \"object\" && \"id\" in run) {\n            run_ = run;\n        }\n        else {\n            throw new Error(`Invalid run type: ${typeof run}`);\n        }\n        if (run_.reference_example_id !== null &&\n            run_.reference_example_id !== undefined) {\n            referenceExample = await this.readExample(run_.reference_example_id);\n        }\n        const feedbackResult = await evaluator.evaluateRun(run_, referenceExample);\n        const [_, feedbacks] = await this._logEvaluationFeedback(feedbackResult, run_, sourceInfo);\n        return feedbacks[0];\n    }\n    async createFeedback(runId, key, { score, value, correction, comment, sourceInfo, feedbackSourceType = \"api\", sourceRunId, feedbackId, feedbackConfig, projectId, comparativeExperimentId, }) {\n        if (!runId && !projectId) {\n            throw new Error(\"One of runId or projectId must be provided\");\n        }\n        if (runId && projectId) {\n            throw new Error(\"Only one of runId or projectId can be provided\");\n        }\n        const feedback_source = {\n            type: feedbackSourceType ?? \"api\",\n            metadata: sourceInfo ?? {},\n        };\n        if (sourceRunId !== undefined &&\n            feedback_source?.metadata !== undefined &&\n            !feedback_source.metadata[\"__run\"]) {\n            feedback_source.metadata[\"__run\"] = { run_id: sourceRunId };\n        }\n        if (feedback_source?.metadata !== undefined &&\n            feedback_source.metadata[\"__run\"]?.run_id !== undefined) {\n            assertUuid(feedback_source.metadata[\"__run\"].run_id);\n        }\n        const feedback = {\n            id: feedbackId ?? uuid.v4(),\n            run_id: runId,\n            key,\n            score,\n            value,\n            correction,\n            comment,\n            feedback_source: feedback_source,\n            comparative_experiment_id: comparativeExperimentId,\n            feedbackConfig,\n            session_id: projectId,\n        };\n        const url = `${this.apiUrl}/feedback`;\n        const response = await this.caller.call(_getFetchImplementation(), url, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedback),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create feedback\", true);\n        return feedback;\n    }\n    async updateFeedback(feedbackId, { score, value, correction, comment, }) {\n        const feedbackUpdate = {};\n        if (score !== undefined && score !== null) {\n            feedbackUpdate[\"score\"] = score;\n        }\n        if (value !== undefined && value !== null) {\n            feedbackUpdate[\"value\"] = value;\n        }\n        if (correction !== undefined && correction !== null) {\n            feedbackUpdate[\"correction\"] = correction;\n        }\n        if (comment !== undefined && comment !== null) {\n            feedbackUpdate[\"comment\"] = comment;\n        }\n        assertUuid(feedbackId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/feedback/${feedbackId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedbackUpdate),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update feedback\", true);\n    }\n    async readFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this._get(path);\n        return response;\n    }\n    async deleteFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this.caller.call(_getFetchImplementation(), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async *listFeedback({ runIds, feedbackKeys, feedbackSourceTypes, } = {}) {\n        const queryParams = new URLSearchParams();\n        if (runIds) {\n            queryParams.append(\"run\", runIds.join(\",\"));\n        }\n        if (feedbackKeys) {\n            for (const key of feedbackKeys) {\n                queryParams.append(\"key\", key);\n            }\n        }\n        if (feedbackSourceTypes) {\n            for (const type of feedbackSourceTypes) {\n                queryParams.append(\"source\", type);\n            }\n        }\n        for await (const feedbacks of this._getPaginated(\"/feedback\", queryParams)) {\n            yield* feedbacks;\n        }\n    }\n    /**\n     * Creates a presigned feedback token and URL.\n     *\n     * The token can be used to authorize feedback metrics without\n     * needing an API key. This is useful for giving browser-based\n     * applications the ability to submit feedback without needing\n     * to expose an API key.\n     *\n     * @param runId - The ID of the run.\n     * @param feedbackKey - The feedback key.\n     * @param options - Additional options for the token.\n     * @param options.expiration - The expiration time for the token.\n     *\n     * @returns A promise that resolves to a FeedbackIngestToken.\n     */\n    async createPresignedFeedbackToken(runId, feedbackKey, { expiration, feedbackConfig, } = {}) {\n        const body = {\n            run_id: runId,\n            feedback_key: feedbackKey,\n            feedback_config: feedbackConfig,\n        };\n        if (expiration) {\n            if (typeof expiration === \"string\") {\n                body[\"expires_at\"] = expiration;\n            }\n            else if (expiration?.hours || expiration?.minutes || expiration?.days) {\n                body[\"expires_in\"] = expiration;\n            }\n        }\n        else {\n            body[\"expires_in\"] = {\n                hours: 3,\n            };\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/feedback/tokens`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        return result;\n    }\n    async createComparativeExperiment({ name, experimentIds, referenceDatasetId, createdAt, description, metadata, id, }) {\n        if (experimentIds.length === 0) {\n            throw new Error(\"At least one experiment is required\");\n        }\n        if (!referenceDatasetId) {\n            referenceDatasetId = (await this.readProject({\n                projectId: experimentIds[0],\n            })).reference_dataset_id;\n        }\n        if (!referenceDatasetId == null) {\n            throw new Error(\"A reference dataset is required\");\n        }\n        const body = {\n            id,\n            name,\n            experiment_ids: experimentIds,\n            reference_dataset_id: referenceDatasetId,\n            description,\n            created_at: (createdAt ?? new Date())?.toISOString(),\n            extra: {},\n        };\n        if (metadata)\n            body.extra[\"metadata\"] = metadata;\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/comparative`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        return await response.json();\n    }\n    /**\n     * Retrieves a list of presigned feedback tokens for a given run ID.\n     * @param runId The ID of the run.\n     * @returns An async iterable of FeedbackIngestToken objects.\n     */\n    async *listPresignedFeedbackTokens(runId) {\n        assertUuid(runId);\n        const params = new URLSearchParams({ run_id: runId });\n        for await (const tokens of this._getPaginated(\"/feedback/tokens\", params)) {\n            yield* tokens;\n        }\n    }\n    _selectEvalResults(results) {\n        let results_;\n        if (\"results\" in results) {\n            results_ = results.results;\n        }\n        else {\n            results_ = [results];\n        }\n        return results_;\n    }\n    async _logEvaluationFeedback(evaluatorResponse, run, sourceInfo) {\n        const evalResults = this._selectEvalResults(evaluatorResponse);\n        const feedbacks = [];\n        for (const res of evalResults) {\n            let sourceInfo_ = sourceInfo || {};\n            if (res.evaluatorInfo) {\n                sourceInfo_ = { ...res.evaluatorInfo, ...sourceInfo_ };\n            }\n            let runId_ = null;\n            if (res.targetRunId) {\n                runId_ = res.targetRunId;\n            }\n            else if (run) {\n                runId_ = run.id;\n            }\n            feedbacks.push(await this.createFeedback(runId_, res.key, {\n                score: res.score,\n                value: res.value,\n                comment: res.comment,\n                correction: res.correction,\n                sourceInfo: sourceInfo_,\n                sourceRunId: res.sourceRunId,\n                feedbackConfig: res.feedbackConfig,\n                feedbackSourceType: \"model\",\n            }));\n        }\n        return [evalResults, feedbacks];\n    }\n    async logEvaluationFeedback(evaluatorResponse, run, sourceInfo) {\n        const [results] = await this._logEvaluationFeedback(evaluatorResponse, run, sourceInfo);\n        return results;\n    }\n    /**\n     * API for managing annotation queues\n     */\n    /**\n     * List the annotation queues on the LangSmith API.\n     * @param options - The options for listing annotation queues\n     * @param options.queueIds - The IDs of the queues to filter by\n     * @param options.name - The name of the queue to filter by\n     * @param options.nameContains - The substring that the queue name should contain\n     * @param options.limit - The maximum number of queues to return\n     * @returns An iterator of AnnotationQueue objects\n     */\n    async *listAnnotationQueues(options = {}) {\n        const { queueIds, name, nameContains, limit } = options;\n        const params = new URLSearchParams();\n        if (queueIds) {\n            queueIds.forEach((id, i) => {\n                assertUuid(id, `queueIds[${i}]`);\n                params.append(\"ids\", id);\n            });\n        }\n        if (name)\n            params.append(\"name\", name);\n        if (nameContains)\n            params.append(\"name_contains\", nameContains);\n        params.append(\"limit\", (limit !== undefined ? Math.min(limit, 100) : 100).toString());\n        let count = 0;\n        for await (const queues of this._getPaginated(\"/annotation-queues\", params)) {\n            yield* queues;\n            count++;\n            if (limit !== undefined && count >= limit)\n                break;\n        }\n    }\n    /**\n     * Create an annotation queue on the LangSmith API.\n     * @param options - The options for creating an annotation queue\n     * @param options.name - The name of the annotation queue\n     * @param options.description - The description of the annotation queue\n     * @param options.queueId - The ID of the annotation queue\n     * @returns The created AnnotationQueue object\n     */\n    async createAnnotationQueue(options) {\n        const { name, description, queueId } = options;\n        const body = {\n            name,\n            description,\n            id: queueId || uuid.v4(),\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/annotation-queues`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(Object.fromEntries(Object.entries(body).filter(([_, v]) => v !== undefined))),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create annotation queue\");\n        const data = await response.json();\n        return data;\n    }\n    /**\n     * Read an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to read\n     * @returns The AnnotationQueue object\n     */\n    async readAnnotationQueue(queueId) {\n        // TODO: Replace when actual endpoint is added\n        const queueIteratorResult = await this.listAnnotationQueues({\n            queueIds: [queueId],\n        }).next();\n        if (queueIteratorResult.done) {\n            throw new Error(`Annotation queue with ID ${queueId} not found`);\n        }\n        return queueIteratorResult.value;\n    }\n    /**\n     * Update an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to update\n     * @param options - The options for updating the annotation queue\n     * @param options.name - The new name for the annotation queue\n     * @param options.description - The new description for the annotation queue\n     */\n    async updateAnnotationQueue(queueId, options) {\n        const { name, description } = options;\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ name, description }),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update annotation queue\");\n    }\n    /**\n     * Delete an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to delete\n     */\n    async deleteAnnotationQueue(queueId) {\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n            method: \"DELETE\",\n            headers: { ...this.headers, Accept: \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"delete annotation queue\");\n    }\n    /**\n     * Add runs to an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue\n     * @param runIds - The IDs of the runs to be added to the annotation queue\n     */\n    async addRunsToAnnotationQueue(queueId, runIds) {\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/runs`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(runIds.map((id, i) => assertUuid(id, `runIds[${i}]`).toString())),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"add runs to annotation queue\");\n    }\n    /**\n     * Get a run from an annotation queue at the specified index.\n     * @param queueId - The ID of the annotation queue\n     * @param index - The index of the run to retrieve\n     * @returns A Promise that resolves to a RunWithAnnotationQueueInfo object\n     * @throws {Error} If the run is not found at the given index or for other API-related errors\n     */\n    async getRunFromAnnotationQueue(queueId, index) {\n        const baseUrl = `/annotation-queues/${assertUuid(queueId, \"queueId\")}/run`;\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}${baseUrl}/${index}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get run from annotation queue\");\n        return await response.json();\n    }\n    async _currentTenantIsOwner(owner) {\n        const settings = await this._getSettings();\n        return owner == \"-\" || settings.tenant_handle === owner;\n    }\n    async _ownerConflictError(action, owner) {\n        const settings = await this._getSettings();\n        return new Error(`Cannot ${action} for another tenant.\\n\n      Current tenant: ${settings.tenant_handle}\\n\n      Requested tenant: ${owner}`);\n    }\n    async _getLatestCommitHash(promptOwnerAndName) {\n        const res = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/commits/${promptOwnerAndName}/?limit=${1}&offset=${0}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const json = await res.json();\n        if (!res.ok) {\n            const detail = typeof json.detail === \"string\"\n                ? json.detail\n                : JSON.stringify(json.detail);\n            const error = new Error(`Error ${res.status}: ${res.statusText}\\n${detail}`);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            error.statusCode = res.status;\n            throw error;\n        }\n        if (json.commits.length === 0) {\n            return undefined;\n        }\n        return json.commits[0].commit_hash;\n    }\n    async _likeOrUnlikePrompt(promptIdentifier, like) {\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/likes/${owner}/${promptName}`, {\n            method: \"POST\",\n            body: JSON.stringify({ like: like }),\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `${like ? \"like\" : \"unlike\"} prompt`);\n        return await response.json();\n    }\n    async _getPromptUrl(promptIdentifier) {\n        const [owner, promptName, commitHash] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            if (commitHash !== \"latest\") {\n                return `${this.getHostUrl()}/hub/${owner}/${promptName}/${commitHash.substring(0, 8)}`;\n            }\n            else {\n                return `${this.getHostUrl()}/hub/${owner}/${promptName}`;\n            }\n        }\n        else {\n            const settings = await this._getSettings();\n            if (commitHash !== \"latest\") {\n                return `${this.getHostUrl()}/prompts/${promptName}/${commitHash.substring(0, 8)}?organizationId=${settings.id}`;\n            }\n            else {\n                return `${this.getHostUrl()}/prompts/${promptName}?organizationId=${settings.id}`;\n            }\n        }\n    }\n    async promptExists(promptIdentifier) {\n        const prompt = await this.getPrompt(promptIdentifier);\n        return !!prompt;\n    }\n    async likePrompt(promptIdentifier) {\n        return this._likeOrUnlikePrompt(promptIdentifier, true);\n    }\n    async unlikePrompt(promptIdentifier) {\n        return this._likeOrUnlikePrompt(promptIdentifier, false);\n    }\n    async *listCommits(promptOwnerAndName) {\n        for await (const commits of this._getPaginated(`/commits/${promptOwnerAndName}/`, new URLSearchParams(), (res) => res.commits)) {\n            yield* commits;\n        }\n    }\n    async *listPrompts(options) {\n        const params = new URLSearchParams();\n        params.append(\"sort_field\", options?.sortField ?? \"updated_at\");\n        params.append(\"sort_direction\", \"desc\");\n        params.append(\"is_archived\", (!!options?.isArchived).toString());\n        if (options?.isPublic !== undefined) {\n            params.append(\"is_public\", options.isPublic.toString());\n        }\n        if (options?.query) {\n            params.append(\"query\", options.query);\n        }\n        for await (const prompts of this._getPaginated(\"/repos\", params, (res) => res.repos)) {\n            yield* prompts;\n        }\n    }\n    async getPrompt(promptIdentifier) {\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        if (response.status === 404) {\n            return null;\n        }\n        await raiseForStatus(response, \"get prompt\");\n        const result = await response.json();\n        if (result.repo) {\n            return result.repo;\n        }\n        else {\n            return null;\n        }\n    }\n    async createPrompt(promptIdentifier, options) {\n        const settings = await this._getSettings();\n        if (options?.isPublic && !settings.tenant_handle) {\n            throw new Error(`Cannot create a public prompt without first\\n\n        creating a LangChain Hub handle. \n        You can add a handle by creating a public prompt at:\\n\n        https://smith.langchain.com/prompts`);\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"create a prompt\", owner);\n        }\n        const data = {\n            repo_handle: promptName,\n            ...(options?.description && { description: options.description }),\n            ...(options?.readme && { readme: options.readme }),\n            ...(options?.tags && { tags: options.tags }),\n            is_public: !!options?.isPublic,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/repos/`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create prompt\");\n        const { repo } = await response.json();\n        return repo;\n    }\n    async createCommit(promptIdentifier, object, options) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const resolvedParentCommitHash = options?.parentCommitHash === \"latest\" || !options?.parentCommitHash\n            ? await this._getLatestCommitHash(`${owner}/${promptName}`)\n            : options?.parentCommitHash;\n        const payload = {\n            manifest: JSON.parse(JSON.stringify(object)),\n            parent_commit: resolvedParentCommitHash,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/commits/${owner}/${promptName}`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(payload),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create commit\");\n        const result = await response.json();\n        return this._getPromptUrl(`${owner}/${promptName}${result.commit_hash ? `:${result.commit_hash}` : \"\"}`);\n    }\n    async updatePrompt(promptIdentifier, options) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"update a prompt\", owner);\n        }\n        const payload = {};\n        if (options?.description !== undefined)\n            payload.description = options.description;\n        if (options?.readme !== undefined)\n            payload.readme = options.readme;\n        if (options?.tags !== undefined)\n            payload.tags = options.tags;\n        if (options?.isPublic !== undefined)\n            payload.is_public = options.isPublic;\n        if (options?.isArchived !== undefined)\n            payload.is_archived = options.isArchived;\n        // Check if payload is empty\n        if (Object.keys(payload).length === 0) {\n            throw new Error(\"No valid update options provided\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"PATCH\",\n            body: JSON.stringify(payload),\n            headers: {\n                ...this.headers,\n                \"Content-Type\": \"application/json\",\n            },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update prompt\");\n        return response.json();\n    }\n    async deletePrompt(promptIdentifier) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"delete a prompt\", owner);\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        return await response.json();\n    }\n    async pullPromptCommit(promptIdentifier, options) {\n        const [owner, promptName, commitHash] = parsePromptIdentifier(promptIdentifier);\n        const serverInfo = await this._getServerInfo();\n        const useOptimization = isVersionGreaterOrEqual(serverInfo.version, \"0.5.23\");\n        let passedCommitHash = commitHash;\n        if (!useOptimization && commitHash === \"latest\") {\n            const latestCommitHash = await this._getLatestCommitHash(`${owner}/${promptName}`);\n            if (!latestCommitHash) {\n                throw new Error(\"No commits found\");\n            }\n            else {\n                passedCommitHash = latestCommitHash;\n            }\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/commits/${owner}/${promptName}/${passedCommitHash}${options?.includeModel ? \"?include_model=true\" : \"\"}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"pull prompt commit\");\n        const result = await response.json();\n        return {\n            owner,\n            repo: promptName,\n            commit_hash: result.commit_hash,\n            manifest: result.manifest,\n            examples: result.examples,\n        };\n    }\n    /**\n     * This method should not be used directly, use `import { pull } from \"langchain/hub\"` instead.\n     * Using this method directly returns the JSON string of the prompt rather than a LangChain object.\n     * @private\n     */\n    async _pullPrompt(promptIdentifier, options) {\n        const promptObject = await this.pullPromptCommit(promptIdentifier, {\n            includeModel: options?.includeModel,\n        });\n        const prompt = JSON.stringify(promptObject.manifest);\n        return prompt;\n    }\n    async pushPrompt(promptIdentifier, options) {\n        // Create or update prompt metadata\n        if (await this.promptExists(promptIdentifier)) {\n            if (options && Object.keys(options).some((key) => key !== \"object\")) {\n                await this.updatePrompt(promptIdentifier, {\n                    description: options?.description,\n                    readme: options?.readme,\n                    tags: options?.tags,\n                    isPublic: options?.isPublic,\n                });\n            }\n        }\n        else {\n            await this.createPrompt(promptIdentifier, {\n                description: options?.description,\n                readme: options?.readme,\n                tags: options?.tags,\n                isPublic: options?.isPublic,\n            });\n        }\n        if (!options?.object) {\n            return await this._getPromptUrl(promptIdentifier);\n        }\n        // Create a commit with the new manifest\n        const url = await this.createCommit(promptIdentifier, options?.object, {\n            parentCommitHash: options?.parentCommitHash,\n        });\n        return url;\n    }\n    /**\n     * Clone a public dataset to your own langsmith tenant.\n     * This operation is idempotent. If you already have a dataset with the given name,\n     * this function will do nothing.\n  \n     * @param {string} tokenOrUrl The token of the public dataset to clone.\n     * @param {Object} [options] Additional options for cloning the dataset.\n     * @param {string} [options.sourceApiUrl] The URL of the langsmith server where the data is hosted. Defaults to the API URL of your current client.\n     * @param {string} [options.datasetName] The name of the dataset to create in your tenant. Defaults to the name of the public dataset.\n     * @returns {Promise<void>}\n     */\n    async clonePublicDataset(tokenOrUrl, options = {}) {\n        const { sourceApiUrl = this.apiUrl, datasetName } = options;\n        const [parsedApiUrl, tokenUuid] = this.parseTokenOrUrl(tokenOrUrl, sourceApiUrl);\n        const sourceClient = new Client({\n            apiUrl: parsedApiUrl,\n            // Placeholder API key not needed anymore in most cases, but\n            // some private deployments may have API key-based rate limiting\n            // that would cause this to fail if we provide no value.\n            apiKey: \"placeholder\",\n        });\n        const ds = await sourceClient.readSharedDataset(tokenUuid);\n        const finalDatasetName = datasetName || ds.name;\n        try {\n            if (await this.hasDataset({ datasetId: finalDatasetName })) {\n                console.log(`Dataset ${finalDatasetName} already exists in your tenant. Skipping.`);\n                return;\n            }\n        }\n        catch (_) {\n            // `.hasDataset` will throw an error if the dataset does not exist.\n            // no-op in that case\n        }\n        // Fetch examples first, then create the dataset\n        const examples = await sourceClient.listSharedExamples(tokenUuid);\n        const dataset = await this.createDataset(finalDatasetName, {\n            description: ds.description,\n            dataType: ds.data_type || \"kv\",\n            inputsSchema: ds.inputs_schema_definition ?? undefined,\n            outputsSchema: ds.outputs_schema_definition ?? undefined,\n        });\n        try {\n            await this.createExamples({\n                inputs: examples.map((e) => e.inputs),\n                outputs: examples.flatMap((e) => (e.outputs ? [e.outputs] : [])),\n                datasetId: dataset.id,\n            });\n        }\n        catch (e) {\n            console.error(`An error occurred while creating dataset ${finalDatasetName}. ` +\n                \"You should delete it manually.\");\n            throw e;\n        }\n    }\n    parseTokenOrUrl(urlOrToken, apiUrl, numParts = 2, kind = \"dataset\") {\n        // Try parsing as UUID\n        try {\n            assertUuid(urlOrToken); // Will throw if it's not a UUID.\n            return [apiUrl, urlOrToken];\n        }\n        catch (_) {\n            // no-op if it's not a uuid\n        }\n        // Parse as URL\n        try {\n            const parsedUrl = new URL(urlOrToken);\n            const pathParts = parsedUrl.pathname\n                .split(\"/\")\n                .filter((part) => part !== \"\");\n            if (pathParts.length >= numParts) {\n                const tokenUuid = pathParts[pathParts.length - numParts];\n                return [apiUrl, tokenUuid];\n            }\n            else {\n                throw new Error(`Invalid public ${kind} URL: ${urlOrToken}`);\n            }\n        }\n        catch (error) {\n            throw new Error(`Invalid public ${kind} URL or token: ${urlOrToken}`);\n        }\n    }\n    /**\n     * Awaits all pending trace batches. Useful for environments where\n     * you need to be sure that all tracing requests finish before execution ends,\n     * such as serverless environments.\n     *\n     * @example\n     * ```\n     * import { Client } from \"langsmith\";\n     *\n     * const client = new Client();\n     *\n     * try {\n     *   // Tracing happens here\n     *   ...\n     * } finally {\n     *   await client.awaitPendingTraceBatches();\n     * }\n     * ```\n     *\n     * @returns A promise that resolves once all currently pending traces have sent.\n     */\n    awaitPendingTraceBatches() {\n        return Promise.all(this.autoBatchQueue.items.map(({ itemPromise }) => itemPromise));\n    }\n}\n","export { Client } from \"./client.js\";\nexport { RunTree } from \"./run_trees.js\";\nexport { overrideFetchImplementation } from \"./singletons/fetch.js\";\n// Update using yarn bump-version\nexport const __version__ = \"0.1.68\";\n","// Inlined from https://github.com/flexdinesh/browser-or-node\nimport { __version__ } from \"../index.js\";\nlet globalEnv;\nexport const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    if (globalEnv) {\n        return globalEnv;\n    }\n    if (isBrowser()) {\n        globalEnv = \"browser\";\n    }\n    else if (isNode()) {\n        globalEnv = \"node\";\n    }\n    else if (isWebWorker()) {\n        globalEnv = \"webworker\";\n    }\n    else if (isJsDom()) {\n        globalEnv = \"jsdom\";\n    }\n    else if (isDeno()) {\n        globalEnv = \"deno\";\n    }\n    else {\n        globalEnv = \"other\";\n    }\n    return globalEnv;\n};\nlet runtimeEnvironment;\nexport function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        const releaseEnv = getShas();\n        runtimeEnvironment = {\n            library: \"langsmith\",\n            runtime: env,\n            sdk: \"langsmith-js\",\n            sdk_version: __version__,\n            ...releaseEnv,\n        };\n    }\n    return runtimeEnvironment;\n}\n/**\n * Retrieves the LangChain-specific environment variables from the current runtime environment.\n * Sensitive keys (containing the word \"key\", \"token\", or \"secret\") have their values redacted for security.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific environment variables.\n */\nexport function getLangChainEnvVars() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if (key.startsWith(\"LANGCHAIN_\") && typeof value === \"string\") {\n            envVars[key] = value;\n        }\n    }\n    for (const key in envVars) {\n        if ((key.toLowerCase().includes(\"key\") ||\n            key.toLowerCase().includes(\"secret\") ||\n            key.toLowerCase().includes(\"token\")) &&\n            typeof envVars[key] === \"string\") {\n            const value = envVars[key];\n            envVars[key] =\n                value.slice(0, 2) + \"*\".repeat(value.length - 4) + value.slice(-2);\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the LangChain-specific metadata from the current runtime environment.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific metadata environment variables.\n */\nexport function getLangChainEnvVarsMetadata() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    const excluded = [\n        \"LANGCHAIN_API_KEY\",\n        \"LANGCHAIN_ENDPOINT\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGCHAIN_PROJECT\",\n        \"LANGCHAIN_SESSION\",\n    ];\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if (key.startsWith(\"LANGCHAIN_\") &&\n            typeof value === \"string\" &&\n            !excluded.includes(key) &&\n            !key.toLowerCase().includes(\"key\") &&\n            !key.toLowerCase().includes(\"secret\") &&\n            !key.toLowerCase().includes(\"token\")) {\n            if (key === \"LANGCHAIN_REVISION_ID\") {\n                envVars[\"revision_id\"] = value;\n            }\n            else {\n                envVars[key] = value;\n            }\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the environment variables from the current runtime environment.\n *\n * This function is designed to operate in a variety of JS environments,\n * including Node.js, Deno, browsers, etc.\n *\n * @returns {Record<string, string> | undefined}\n *  - A record of environment variables if available.\n *  - `undefined` if the environment does not support or allows access to environment variables.\n */\nexport function getEnvironmentVariables() {\n    try {\n        // Check for Node.js environment\n        // eslint-disable-next-line no-process-env\n        if (typeof process !== \"undefined\" && process.env) {\n            // eslint-disable-next-line no-process-env\n            return Object.entries(process.env).reduce((acc, [key, value]) => {\n                acc[key] = String(value);\n                return acc;\n            }, {});\n        }\n        // For browsers and other environments, we may not have direct access to env variables\n        // Return undefined or any other fallback as required.\n        return undefined;\n    }\n    catch (e) {\n        // Catch any errors that might occur while trying to access environment variables\n        return undefined;\n    }\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/hwchase17/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nexport function getLangSmithEnvironmentVariable(name) {\n    return (getEnvironmentVariable(`LANGSMITH_${name}`) ||\n        getEnvironmentVariable(`LANGCHAIN_${name}`));\n}\nexport function setEnvironmentVariable(name, value) {\n    if (typeof process !== \"undefined\") {\n        // eslint-disable-next-line no-process-env\n        process.env[name] = value;\n    }\n}\nlet cachedCommitSHAs;\n/**\n * Get the Git commit SHA from common environment variables\n * used by different CI/CD platforms.\n * @returns {string | undefined} The Git commit SHA or undefined if not found.\n */\nexport function getShas() {\n    if (cachedCommitSHAs !== undefined) {\n        return cachedCommitSHAs;\n    }\n    const common_release_envs = [\n        \"VERCEL_GIT_COMMIT_SHA\",\n        \"NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA\",\n        \"COMMIT_REF\",\n        \"RENDER_GIT_COMMIT\",\n        \"CI_COMMIT_SHA\",\n        \"CIRCLE_SHA1\",\n        \"CF_PAGES_COMMIT_SHA\",\n        \"REACT_APP_GIT_SHA\",\n        \"SOURCE_VERSION\",\n        \"GITHUB_SHA\",\n        \"TRAVIS_COMMIT\",\n        \"GIT_COMMIT\",\n        \"BUILD_VCS_NUMBER\",\n        \"bamboo_planRepository_revision\",\n        \"Build.SourceVersion\",\n        \"BITBUCKET_COMMIT\",\n        \"DRONE_COMMIT_SHA\",\n        \"SEMAPHORE_GIT_SHA\",\n        \"BUILDKITE_COMMIT\",\n    ];\n    const shas = {};\n    for (const env of common_release_envs) {\n        const envVar = getEnvironmentVariable(env);\n        if (envVar !== undefined) {\n            shas[env] = envVar;\n        }\n    }\n    cachedCommitSHAs = shas;\n    return shas;\n}\n","import { getLangSmithEnvironmentVariable } from \"./utils/env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\"TRACING_V2\", \"TRACING\"];\n    return !!envVars.find((envVar) => getLangSmithEnvironmentVariable(envVar) === \"true\");\n};\n","export const _LC_CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\n","import * as uuid from \"uuid\";\nimport { getEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { Client } from \"./client.js\";\nimport { isTracingEnabled } from \"./env.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nimport { _LC_CONTEXT_VARIABLES_KEY } from \"./singletons/constants.js\";\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nexport function convertToDottedOrderFormat(epoch, runId, executionOrder = 1) {\n    // Date only has millisecond precision, so we use the microseconds to break\n    // possible ties, avoiding incorrect run order\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\n/**\n * Baggage header information\n */\nclass Baggage {\n    constructor(metadata, tags) {\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.metadata = metadata;\n        this.tags = tags;\n    }\n    static fromHeader(value) {\n        const items = value.split(\",\");\n        let metadata = {};\n        let tags = [];\n        for (const item of items) {\n            const [key, uriValue] = item.split(\"=\");\n            const value = decodeURIComponent(uriValue);\n            if (key === \"langsmith-metadata\") {\n                metadata = JSON.parse(value);\n            }\n            else if (key === \"langsmith-tags\") {\n                tags = value.split(\",\");\n            }\n        }\n        return new Baggage(metadata, tags);\n    }\n    toHeader() {\n        const items = [];\n        if (this.metadata && Object.keys(this.metadata).length > 0) {\n            items.push(`langsmith-metadata=${encodeURIComponent(JSON.stringify(this.metadata))}`);\n        }\n        if (this.tags && this.tags.length > 0) {\n            items.push(`langsmith-tags=${encodeURIComponent(this.tags.join(\",\"))}`);\n        }\n        return items.join(\",\");\n    }\n}\nexport class RunTree {\n    constructor(originalConfig) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"run_type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parent_run\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_runs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"start_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"end_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"extra\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"error\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serialized\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reference_example_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"trace_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dotted_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // If you pass in a run tree directly, return a shallow clone\n        if (isRunTree(originalConfig)) {\n            Object.assign(this, { ...originalConfig });\n            return;\n        }\n        const defaultConfig = RunTree.getDefaultConfig();\n        const { metadata, ...config } = originalConfig;\n        const client = config.client ?? RunTree.getSharedClient();\n        const dedupedMetadata = {\n            ...metadata,\n            ...config?.extra?.metadata,\n        };\n        config.extra = { ...config.extra, metadata: dedupedMetadata };\n        Object.assign(this, { ...defaultConfig, ...config, client });\n        if (!this.trace_id) {\n            if (this.parent_run) {\n                this.trace_id = this.parent_run.trace_id ?? this.id;\n            }\n            else {\n                this.trace_id = this.id;\n            }\n        }\n        this.execution_order ??= 1;\n        this.child_execution_order ??= 1;\n        if (!this.dotted_order) {\n            const currentDottedOrder = convertToDottedOrderFormat(this.start_time, this.id, this.execution_order);\n            if (this.parent_run) {\n                this.dotted_order =\n                    this.parent_run.dotted_order + \".\" + currentDottedOrder;\n            }\n            else {\n                this.dotted_order = currentDottedOrder;\n            }\n        }\n    }\n    static getDefaultConfig() {\n        return {\n            id: uuid.v4(),\n            run_type: \"chain\",\n            project_name: getEnvironmentVariable(\"LANGCHAIN_PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\") ?? // TODO: Deprecate\n                \"default\",\n            child_runs: [],\n            api_url: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ?? \"http://localhost:1984\",\n            api_key: getEnvironmentVariable(\"LANGCHAIN_API_KEY\"),\n            caller_options: {},\n            start_time: Date.now(),\n            serialized: {},\n            inputs: {},\n            extra: {},\n        };\n    }\n    static getSharedClient() {\n        if (!RunTree.sharedClient) {\n            RunTree.sharedClient = new Client();\n        }\n        return RunTree.sharedClient;\n    }\n    createChild(config) {\n        const child_execution_order = this.child_execution_order + 1;\n        const child = new RunTree({\n            ...config,\n            parent_run: this,\n            project_name: this.project_name,\n            client: this.client,\n            tracingEnabled: this.tracingEnabled,\n            execution_order: child_execution_order,\n            child_execution_order: child_execution_order,\n        });\n        // Copy context vars over into the new run tree.\n        if (_LC_CONTEXT_VARIABLES_KEY in this) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            child[_LC_CONTEXT_VARIABLES_KEY] =\n                this[_LC_CONTEXT_VARIABLES_KEY];\n        }\n        const LC_CHILD = Symbol.for(\"lc:child_config\");\n        const presentConfig = config.extra?.[LC_CHILD] ??\n            this.extra[LC_CHILD];\n        // tracing for LangChain is defined by the _parentRunId and runMap of the tracer\n        if (isRunnableConfigLike(presentConfig)) {\n            const newConfig = { ...presentConfig };\n            const callbacks = isCallbackManagerLike(newConfig.callbacks)\n                ? newConfig.callbacks.copy?.()\n                : undefined;\n            if (callbacks) {\n                // update the parent run id\n                Object.assign(callbacks, { _parentRunId: child.id });\n                // only populate if we're in a newer LC.JS version\n                callbacks.handlers\n                    ?.find(isLangChainTracerLike)\n                    ?.updateFromRunTree?.(child);\n                newConfig.callbacks = callbacks;\n            }\n            child.extra[LC_CHILD] = newConfig;\n        }\n        // propagate child_execution_order upwards\n        const visited = new Set();\n        let current = this;\n        while (current != null && !visited.has(current.id)) {\n            visited.add(current.id);\n            current.child_execution_order = Math.max(current.child_execution_order, child_execution_order);\n            current = current.parent_run;\n        }\n        this.child_runs.push(child);\n        return child;\n    }\n    async end(outputs, error, endTime = Date.now(), metadata) {\n        this.outputs = this.outputs ?? outputs;\n        this.error = this.error ?? error;\n        this.end_time = this.end_time ?? endTime;\n        if (metadata && Object.keys(metadata).length > 0) {\n            this.extra = this.extra\n                ? { ...this.extra, metadata: { ...this.extra.metadata, ...metadata } }\n                : { metadata };\n        }\n    }\n    _convertToCreate(run, runtimeEnv, excludeChildRuns = true) {\n        const runExtra = run.extra ?? {};\n        if (!runExtra.runtime) {\n            runExtra.runtime = {};\n        }\n        if (runtimeEnv) {\n            for (const [k, v] of Object.entries(runtimeEnv)) {\n                if (!runExtra.runtime[k]) {\n                    runExtra.runtime[k] = v;\n                }\n            }\n        }\n        let child_runs;\n        let parent_run_id;\n        if (!excludeChildRuns) {\n            child_runs = run.child_runs.map((child_run) => this._convertToCreate(child_run, runtimeEnv, excludeChildRuns));\n            parent_run_id = undefined;\n        }\n        else {\n            parent_run_id = run.parent_run?.id;\n            child_runs = [];\n        }\n        const persistedRun = {\n            id: run.id,\n            name: run.name,\n            start_time: run.start_time,\n            end_time: run.end_time,\n            run_type: run.run_type,\n            reference_example_id: run.reference_example_id,\n            extra: runExtra,\n            serialized: run.serialized,\n            error: run.error,\n            inputs: run.inputs,\n            outputs: run.outputs,\n            session_name: run.project_name,\n            child_runs: child_runs,\n            parent_run_id: parent_run_id,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            tags: run.tags,\n        };\n        return persistedRun;\n    }\n    async postRun(excludeChildRuns = true) {\n        try {\n            const runtimeEnv = getRuntimeEnvironment();\n            const runCreate = await this._convertToCreate(this, runtimeEnv, true);\n            await this.client.createRun(runCreate);\n            if (!excludeChildRuns) {\n                warnOnce(\"Posting with excludeChildRuns=false is deprecated and will be removed in a future version.\");\n                for (const childRun of this.child_runs) {\n                    await childRun.postRun(false);\n                }\n            }\n        }\n        catch (error) {\n            console.error(`Error in postRun for run ${this.id}:`, error);\n        }\n    }\n    async patchRun() {\n        try {\n            const runUpdate = {\n                end_time: this.end_time,\n                error: this.error,\n                inputs: this.inputs,\n                outputs: this.outputs,\n                parent_run_id: this.parent_run?.id,\n                reference_example_id: this.reference_example_id,\n                extra: this.extra,\n                events: this.events,\n                dotted_order: this.dotted_order,\n                trace_id: this.trace_id,\n                tags: this.tags,\n            };\n            await this.client.updateRun(this.id, runUpdate);\n        }\n        catch (error) {\n            console.error(`Error in patchRun for run ${this.id}`, error);\n        }\n    }\n    toJSON() {\n        return this._convertToCreate(this, undefined, false);\n    }\n    static fromRunnableConfig(parentConfig, props) {\n        // We only handle the callback manager case for now\n        const callbackManager = parentConfig?.callbacks;\n        let parentRun;\n        let projectName;\n        let client;\n        let tracingEnabled = isTracingEnabled();\n        if (callbackManager) {\n            const parentRunId = callbackManager?.getParentRunId?.() ?? \"\";\n            const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name == \"langchain_tracer\");\n            parentRun = langChainTracer?.getRun?.(parentRunId);\n            projectName = langChainTracer?.projectName;\n            client = langChainTracer?.client;\n            tracingEnabled = tracingEnabled || !!langChainTracer;\n        }\n        if (!parentRun) {\n            return new RunTree({\n                ...props,\n                client,\n                tracingEnabled,\n                project_name: projectName,\n            });\n        }\n        const parentRunTree = new RunTree({\n            name: parentRun.name,\n            id: parentRun.id,\n            trace_id: parentRun.trace_id,\n            dotted_order: parentRun.dotted_order,\n            client,\n            tracingEnabled,\n            project_name: projectName,\n            tags: [\n                ...new Set((parentRun?.tags ?? []).concat(parentConfig?.tags ?? [])),\n            ],\n            extra: {\n                metadata: {\n                    ...parentRun?.extra?.metadata,\n                    ...parentConfig?.metadata,\n                },\n            },\n        });\n        return parentRunTree.createChild(props);\n    }\n    static fromDottedOrder(dottedOrder) {\n        return this.fromHeaders({ \"langsmith-trace\": dottedOrder });\n    }\n    static fromHeaders(headers, inheritArgs) {\n        const rawHeaders = \"get\" in headers && typeof headers.get === \"function\"\n            ? {\n                \"langsmith-trace\": headers.get(\"langsmith-trace\"),\n                baggage: headers.get(\"baggage\"),\n            }\n            : headers;\n        const headerTrace = rawHeaders[\"langsmith-trace\"];\n        if (!headerTrace || typeof headerTrace !== \"string\")\n            return undefined;\n        const parentDottedOrder = headerTrace.trim();\n        const parsedDottedOrder = parentDottedOrder.split(\".\").map((part) => {\n            const [strTime, uuid] = part.split(\"Z\");\n            return { strTime, time: Date.parse(strTime + \"Z\"), uuid };\n        });\n        const traceId = parsedDottedOrder[0].uuid;\n        const config = {\n            ...inheritArgs,\n            name: inheritArgs?.[\"name\"] ?? \"parent\",\n            run_type: inheritArgs?.[\"run_type\"] ?? \"chain\",\n            start_time: inheritArgs?.[\"start_time\"] ?? Date.now(),\n            id: parsedDottedOrder.at(-1)?.uuid,\n            trace_id: traceId,\n            dotted_order: parentDottedOrder,\n        };\n        if (rawHeaders[\"baggage\"] && typeof rawHeaders[\"baggage\"] === \"string\") {\n            const baggage = Baggage.fromHeader(rawHeaders[\"baggage\"]);\n            config.metadata = baggage.metadata;\n            config.tags = baggage.tags;\n        }\n        return new RunTree(config);\n    }\n    toHeaders(headers) {\n        const result = {\n            \"langsmith-trace\": this.dotted_order,\n            baggage: new Baggage(this.extra?.metadata, this.tags).toHeader(),\n        };\n        if (headers) {\n            for (const [key, value] of Object.entries(result)) {\n                headers.set(key, value);\n            }\n        }\n        return result;\n    }\n}\nObject.defineProperty(RunTree, \"sharedClient\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: null\n});\nexport function isRunTree(x) {\n    return (x !== undefined &&\n        typeof x.createChild === \"function\" &&\n        typeof x.postRun === \"function\");\n}\nfunction isLangChainTracerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        typeof x.name === \"string\" &&\n        x.name === \"langchain_tracer\");\n}\nfunction containsLangChainTracerLike(x) {\n    return (Array.isArray(x) && x.some((callback) => isLangChainTracerLike(callback)));\n}\nfunction isCallbackManagerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        Array.isArray(x.handlers));\n}\nexport function isRunnableConfigLike(x) {\n    // Check that it's an object with a callbacks arg\n    // that has either a CallbackManagerLike object with a langchain tracer within it\n    // or an array with a LangChainTracerLike object within it\n    return (x !== undefined &&\n        typeof x.callbacks === \"object\" &&\n        // Callback manager with a langchain tracer\n        (containsLangChainTracerLike(x.callbacks?.handlers) ||\n            // Or it's an array with a LangChainTracerLike object within it\n            containsLangChainTracerLike(x.callbacks)));\n}\n","import { isRunTree } from \"../run_trees.js\";\nclass MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_, callback) {\n        return callback();\n    }\n}\nconst TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return globalThis[TRACING_ALS_KEY] ?? mockAsyncLocalStorage;\n    }\n    initializeGlobalInstance(instance) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (globalThis[TRACING_ALS_KEY] === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            globalThis[TRACING_ALS_KEY] = instance;\n        }\n    }\n}\nexport const AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\n/**\n * Return the current run tree from within a traceable-wrapped function.\n * Will throw an error if called outside of a traceable function.\n *\n * @returns The run tree for the given context.\n */\nexport const getCurrentRunTree = () => {\n    const runTree = AsyncLocalStorageProviderSingleton.getInstance().getStore();\n    if (!isRunTree(runTree)) {\n        throw new Error([\n            \"Could not get the current run tree.\",\n            \"\",\n            \"Please make sure you are calling this method within a traceable function or the tracing is enabled.\",\n        ].join(\"\\n\"));\n    }\n    return runTree;\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withRunTree(runTree, fn) {\n    const storage = AsyncLocalStorageProviderSingleton.getInstance();\n    return new Promise((resolve, reject) => {\n        storage.run(runTree, () => void Promise.resolve(fn()).then(resolve).catch(reject));\n    });\n}\nexport const ROOT = Symbol.for(\"langsmith:traceable:root\");\nexport function isTraceableFunction(x\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    return typeof x === \"function\" && \"langsmith:traceable\" in x;\n}\n","// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n    return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        const keys = new Array(obj.length);\n        for (let k = 0; k < keys.length; k++) {\n            keys[k] = \"\" + k;\n        }\n        return keys;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    let keys = [];\n    for (let i in obj) {\n        if (hasOwnProperty(obj, i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nexport function _deepClone(obj) {\n    switch (typeof obj) {\n        case \"object\":\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        case \"undefined\":\n            return null; //this is how JSON.stringify behaves for array items\n        default:\n            return obj; //no need to clone primitives\n    }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str) {\n    let i = 0;\n    const len = str.length;\n    let charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nexport function escapePathComponent(path) {\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexport function _getPathRecursive(root, obj) {\n    let found;\n    for (let key in root) {\n        if (hasOwnProperty(root, key)) {\n            if (root[key] === obj) {\n                return escapePathComponent(key) + \"/\";\n            }\n            else if (typeof root[key] === \"object\") {\n                found = _getPathRecursive(root[key], obj);\n                if (found != \"\") {\n                    return escapePathComponent(key) + \"/\" + found;\n                }\n            }\n        }\n    }\n    return \"\";\n}\nexport function getPath(root, obj) {\n    if (root === obj) {\n        return \"/\";\n    }\n    const path = _getPathRecursive(root, obj);\n    if (path === \"\") {\n        throw new Error(\"Object not found in root\");\n    }\n    return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nexport function hasUndefined(obj) {\n    if (obj === undefined) {\n        return true;\n    }\n    if (obj) {\n        if (Array.isArray(obj)) {\n            for (let i = 0, len = obj.length; i < len; i++) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        else if (typeof obj === \"object\") {\n            const objKeys = _objectKeys(obj);\n            const objKeysLength = objKeys.length;\n            for (var i = 0; i < objKeysLength; i++) {\n                if (hasUndefined(obj[objKeys[i]])) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n    const messageParts = [message];\n    for (const key in args) {\n        const value = typeof args[key] === \"object\"\n            ? JSON.stringify(args[key], null, 2)\n            : args[key]; // pretty print\n        if (typeof value !== \"undefined\") {\n            messageParts.push(`${key}: ${value}`);\n        }\n    }\n    return messageParts.join(\"\\n\");\n}\nexport class PatchError extends Error {\n    constructor(message, name, index, operation, tree) {\n        super(patchErrorMessageFormatter(message, { name, index, operation, tree }));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: name\n        });\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: index\n        });\n        Object.defineProperty(this, \"operation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: operation\n        });\n        Object.defineProperty(this, \"tree\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tree\n        });\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n        this.message = patchErrorMessageFormatter(message, {\n            name,\n            index,\n            operation,\n            tree,\n        });\n    }\n}\n","// @ts-nocheck\nimport { PatchError, _deepClone, isInteger, unescapePathComponent, hasUndefined, } from \"./helpers.js\";\nexport const JsonPatchError = PatchError;\nexport const deepClone = _deepClone;\n/* We use a Javascript hash to store each\n function. Each hash entry (property) uses\n the operation identifiers specified in rfc6902.\n In this way, we can map each patch operation\n to its dedicated function in efficient way.\n */\n/* The operations applicable to an object */\nconst objOps = {\n    add: function (obj, key, document) {\n        obj[key] = this.value;\n        return { newDocument: document };\n    },\n    remove: function (obj, key, document) {\n        var removed = obj[key];\n        delete obj[key];\n        return { newDocument: document, removed };\n    },\n    replace: function (obj, key, document) {\n        var removed = obj[key];\n        obj[key] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: function (obj, key, document) {\n        /* in case move target overwrites an existing value,\n        return the removed value, this can be taxing performance-wise,\n        and is potentially unneeded */\n        let removed = getValueByPointer(document, this.path);\n        if (removed) {\n            removed = _deepClone(removed);\n        }\n        const originalValue = applyOperation(document, {\n            op: \"remove\",\n            path: this.from,\n        }).removed;\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: originalValue,\n        });\n        return { newDocument: document, removed };\n    },\n    copy: function (obj, key, document) {\n        const valueToCopy = getValueByPointer(document, this.from);\n        // enforce copy by value so further operations don't affect source (see issue #177)\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: _deepClone(valueToCopy),\n        });\n        return { newDocument: document };\n    },\n    test: function (obj, key, document) {\n        return { newDocument: document, test: _areEquals(obj[key], this.value) };\n    },\n    _get: function (obj, key, document) {\n        this.value = obj[key];\n        return { newDocument: document };\n    },\n};\n/* The operations applicable to an array. Many are the same as for the object */\nvar arrOps = {\n    add: function (arr, i, document) {\n        if (isInteger(i)) {\n            arr.splice(i, 0, this.value);\n        }\n        else {\n            // array props\n            arr[i] = this.value;\n        }\n        // this may be needed when using '-' in an array\n        return { newDocument: document, index: i };\n    },\n    remove: function (arr, i, document) {\n        var removedList = arr.splice(i, 1);\n        return { newDocument: document, removed: removedList[0] };\n    },\n    replace: function (arr, i, document) {\n        var removed = arr[i];\n        arr[i] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: objOps.move,\n    copy: objOps.copy,\n    test: objOps.test,\n    _get: objOps._get,\n};\n/**\n * Retrieves a value from a JSON document by a JSON pointer.\n * Returns the value.\n *\n * @param document The document to get the value from\n * @param pointer an escaped JSON pointer\n * @return The retrieved value\n */\nexport function getValueByPointer(document, pointer) {\n    if (pointer == \"\") {\n        return document;\n    }\n    var getOriginalDestination = { op: \"_get\", path: pointer };\n    applyOperation(document, getOriginalDestination);\n    return getOriginalDestination.value;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the {newDocument, result} of the operation.\n * It modifies the `document` and `operation` objects - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return `{newDocument, result}` after the operation\n */\nexport function applyOperation(document, operation, validateOperation = false, mutateDocument = true, banPrototypeModifications = true, index = 0) {\n    if (validateOperation) {\n        if (typeof validateOperation == \"function\") {\n            validateOperation(operation, 0, document, operation.path);\n        }\n        else {\n            validator(operation, 0);\n        }\n    }\n    /* ROOT OPERATIONS */\n    if (operation.path === \"\") {\n        let returnValue = { newDocument: document };\n        if (operation.op === \"add\") {\n            returnValue.newDocument = operation.value;\n            return returnValue;\n        }\n        else if (operation.op === \"replace\") {\n            returnValue.newDocument = operation.value;\n            returnValue.removed = document; //document we removed\n            return returnValue;\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            // it's a move or copy to root\n            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\n            if (operation.op === \"move\") {\n                // report removed item\n                returnValue.removed = document;\n            }\n            return returnValue;\n        }\n        else if (operation.op === \"test\") {\n            returnValue.test = _areEquals(document, operation.value);\n            if (returnValue.test === false) {\n                throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n            }\n            returnValue.newDocument = document;\n            return returnValue;\n        }\n        else if (operation.op === \"remove\") {\n            // a remove on root\n            returnValue.removed = document;\n            returnValue.newDocument = null;\n            return returnValue;\n        }\n        else if (operation.op === \"_get\") {\n            operation.value = document;\n            return returnValue;\n        }\n        else {\n            /* bad operation */\n            if (validateOperation) {\n                throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n            }\n            else {\n                return returnValue;\n            }\n        }\n    } /* END ROOT OPERATIONS */\n    else {\n        if (!mutateDocument) {\n            document = _deepClone(document);\n        }\n        const path = operation.path || \"\";\n        const keys = path.split(\"/\");\n        let obj = document;\n        let t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n        let len = keys.length;\n        let existingPathFragment = undefined;\n        let key;\n        let validateFunction;\n        if (typeof validateOperation == \"function\") {\n            validateFunction = validateOperation;\n        }\n        else {\n            validateFunction = validator;\n        }\n        while (true) {\n            key = keys[t];\n            if (key && key.indexOf(\"~\") != -1) {\n                key = unescapePathComponent(key);\n            }\n            if (banPrototypeModifications &&\n                (key == \"__proto__\" ||\n                    (key == \"prototype\" && t > 0 && keys[t - 1] == \"constructor\"))) {\n                throw new TypeError(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\");\n            }\n            if (validateOperation) {\n                if (existingPathFragment === undefined) {\n                    if (obj[key] === undefined) {\n                        existingPathFragment = keys.slice(0, t).join(\"/\");\n                    }\n                    else if (t == len - 1) {\n                        existingPathFragment = operation.path;\n                    }\n                    if (existingPathFragment !== undefined) {\n                        validateFunction(operation, 0, document, existingPathFragment);\n                    }\n                }\n            }\n            t++;\n            if (Array.isArray(obj)) {\n                if (key === \"-\") {\n                    key = obj.length;\n                }\n                else {\n                    if (validateOperation && !isInteger(key)) {\n                        throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", index, operation, document);\n                    } // only parse key when it's an integer for `arr.prop` to work\n                    else if (isInteger(key)) {\n                        key = ~~key;\n                    }\n                }\n                if (t >= len) {\n                    if (validateOperation && operation.op === \"add\" && key > obj.length) {\n                        throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", index, operation, document);\n                    }\n                    const returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            else {\n                if (t >= len) {\n                    const returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            obj = obj[key];\n            // If we have more keys in the path, but the next value isn't a non-null object,\n            // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\n            if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\n                throw new JsonPatchError(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Apply a full JSON Patch array on a JSON document.\n * Returns the {newDocument, result} of the patch.\n * It modifies the `document` object and `patch` - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\n *\n * @param document The document to patch\n * @param patch The patch to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return An array of `{newDocument, result}` after the patch\n */\nexport function applyPatch(document, patch, validateOperation, mutateDocument = true, banPrototypeModifications = true) {\n    if (validateOperation) {\n        if (!Array.isArray(patch)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n    }\n    if (!mutateDocument) {\n        document = _deepClone(document);\n    }\n    const results = new Array(patch.length);\n    for (let i = 0, length = patch.length; i < length; i++) {\n        // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\n        results[i] = applyOperation(document, patch[i], validateOperation, true, banPrototypeModifications, i);\n        document = results[i].newDocument; // in case root was replaced\n    }\n    results.newDocument = document;\n    return results;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the updated document.\n * Suitable as a reducer.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @return The updated document\n */\nexport function applyReducer(document, operation, index) {\n    const operationResult = applyOperation(document, operation);\n    if (operationResult.test === false) {\n        // failed test\n        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n    }\n    return operationResult.newDocument;\n}\n/**\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n * @param {object} operation - operation object (patch)\n * @param {number} index - index of operation in the sequence\n * @param {object} [document] - object where the operation is supposed to be applied\n * @param {string} [existingPathFragment] - comes along with `document`\n */\nexport function validator(operation, index, document, existingPathFragment) {\n    if (typeof operation !== \"object\" ||\n        operation === null ||\n        Array.isArray(operation)) {\n        throw new JsonPatchError(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\", index, operation, document);\n    }\n    else if (!objOps[operation.op]) {\n        throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n    }\n    else if (typeof operation.path !== \"string\") {\n        throw new JsonPatchError(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if (operation.path.indexOf(\"/\") !== 0 && operation.path.length > 0) {\n        // paths that aren't empty string should start with \"/\"\n        throw new JsonPatchError('Operation `path` property must start with \"/\"', \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if ((operation.op === \"move\" || operation.op === \"copy\") &&\n        typeof operation.from !== \"string\") {\n        throw new JsonPatchError(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        operation.value === undefined) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        hasUndefined(operation.value)) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\", index, operation, document);\n    }\n    else if (document) {\n        if (operation.op == \"add\") {\n            var pathLen = operation.path.split(\"/\").length;\n            var existingPathLen = existingPathFragment.split(\"/\").length;\n            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                throw new JsonPatchError(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"replace\" ||\n            operation.op === \"remove\" ||\n            operation.op === \"_get\") {\n            if (operation.path !== existingPathFragment) {\n                throw new JsonPatchError(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            var existingValue = {\n                op: \"_get\",\n                path: operation.from,\n                value: undefined,\n            };\n            var error = validate([existingValue], document);\n            if (error && error.name === \"OPERATION_PATH_UNRESOLVABLE\") {\n                throw new JsonPatchError(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\n * If error is encountered, returns a JsonPatchError object\n * @param sequence\n * @param document\n * @returns {JsonPatchError|undefined}\n */\nexport function validate(sequence, document, externalValidator) {\n    try {\n        if (!Array.isArray(sequence)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n        if (document) {\n            //clone document and sequence so that we can safely try applying operations\n            applyPatch(_deepClone(document), _deepClone(sequence), externalValidator || true);\n        }\n        else {\n            externalValidator = externalValidator || validator;\n            for (var i = 0; i < sequence.length; i++) {\n                externalValidator(sequence[i], i, document, undefined);\n            }\n        }\n    }\n    catch (e) {\n        if (e instanceof JsonPatchError) {\n            return e;\n        }\n        else {\n            throw e;\n        }\n    }\n}\n// based on https://github.com/epoberezkin/fast-deep-equal\n// MIT License\n// Copyright (c) 2017 Evgeny Poberezkin\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nexport function _areEquals(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!_areEquals(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (arrA != arrB)\n            return false;\n        var keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!b.hasOwnProperty(keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!_areEquals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n","'use strict';\nmodule.exports = function (str, sep) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tsep = typeof sep === 'undefined' ? '_' : sep;\n\n\treturn str\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n\t\t.toLowerCase();\n};\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import snakeCase from \"decamelize\";\nimport camelCase from \"camelcase\";\nexport function keyToJson(key, map) {\n    return map?.[key] || snakeCase(key);\n}\nexport function keyFromJson(key, map) {\n    return map?.[key] || camelCase(key);\n}\nexport function mapKeys(fields, mapper, map) {\n    const mapped = {};\n    for (const key in fields) {\n        if (Object.hasOwn(fields, key)) {\n            mapped[mapper(key, map)] = fields[key];\n        }\n    }\n    return mapped;\n}\n","import { keyToJson, mapKeys } from \"./map_keys.js\";\nfunction shallowCopy(obj) {\n    return Array.isArray(obj) ? [...obj] : { ...obj };\n}\nfunction replaceSecrets(root, secretsMap) {\n    const result = shallowCopy(root);\n    for (const [path, secretId] of Object.entries(secretsMap)) {\n        const [last, ...partsReverse] = path.split(\".\").reverse();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let current = result;\n        for (const part of partsReverse.reverse()) {\n            if (current[part] === undefined) {\n                break;\n            }\n            current[part] = shallowCopy(current[part]);\n            current = current[part];\n        }\n        if (current[last] !== undefined) {\n            current[last] = {\n                lc: 1,\n                type: \"secret\",\n                id: [secretId],\n            };\n        }\n    }\n    return result;\n}\n/**\n * Get a unique name for the module, rather than parent class implementations.\n * Should not be subclassed, subclass lc_name above instead.\n */\nexport function get_lc_unique_name(\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nserializableClass) {\n    // \"super\" here would refer to the parent class of Serializable,\n    // when we want the parent class of the module actually calling this method.\n    const parentClass = Object.getPrototypeOf(serializableClass);\n    const lcNameIsSubclassed = typeof serializableClass.lc_name === \"function\" &&\n        (typeof parentClass.lc_name !== \"function\" ||\n            serializableClass.lc_name() !== parentClass.lc_name());\n    if (lcNameIsSubclassed) {\n        return serializableClass.lc_name();\n    }\n    else {\n        return serializableClass.name;\n    }\n}\nexport class Serializable {\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    /**\n     * A map of secrets, which will be omitted from serialization.\n     * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\n     * Values are the secret ids, which will be used when deserializing.\n     */\n    get lc_secrets() {\n        return undefined;\n    }\n    /**\n     * A map of additional attributes to merge with constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the attribute values, which will be serialized.\n     * These attributes need to be accepted by the constructor as arguments.\n     */\n    get lc_attributes() {\n        return undefined;\n    }\n    /**\n     * A map of aliases for constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the alias that will replace the key in serialization.\n     * This is used to eg. make argument names match Python.\n     */\n    get lc_aliases() {\n        return undefined;\n    }\n    constructor(kwargs, ..._args) {\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lc_kwargs = kwargs || {};\n    }\n    toJSON() {\n        if (!this.lc_serializable) {\n            return this.toJSONNotImplemented();\n        }\n        if (\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        this.lc_kwargs instanceof Serializable ||\n            typeof this.lc_kwargs !== \"object\" ||\n            Array.isArray(this.lc_kwargs)) {\n            // We do not support serialization of classes with arg not a POJO\n            // I'm aware the check above isn't as strict as it could be\n            return this.toJSONNotImplemented();\n        }\n        const aliases = {};\n        const secrets = {};\n        const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\n            acc[key] = key in this ? this[key] : this.lc_kwargs[key];\n            return acc;\n        }, {});\n        // get secrets, attributes and aliases from all superclasses\n        for (\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let current = Object.getPrototypeOf(this); current; current = Object.getPrototypeOf(current)) {\n            Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\n            Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\n            Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\n        }\n        // include all secrets used, even if not in kwargs,\n        // will be replaced with sentinel value in replaceSecrets\n        Object.keys(secrets).forEach((keyPath) => {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\n            let read = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let write = kwargs;\n            const [last, ...partsReverse] = keyPath.split(\".\").reverse();\n            for (const key of partsReverse.reverse()) {\n                if (!(key in read) || read[key] === undefined)\n                    return;\n                if (!(key in write) || write[key] === undefined) {\n                    if (typeof read[key] === \"object\" && read[key] != null) {\n                        write[key] = {};\n                    }\n                    else if (Array.isArray(read[key])) {\n                        write[key] = [];\n                    }\n                }\n                read = read[key];\n                write = write[key];\n            }\n            if (last in read && read[last] !== undefined) {\n                write[last] = write[last] || read[last];\n            }\n        });\n        return {\n            lc: 1,\n            type: \"constructor\",\n            id: this.lc_id,\n            kwargs: mapKeys(Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs, keyToJson, aliases),\n        };\n    }\n    toJSONNotImplemented() {\n        return {\n            lc: 1,\n            type: \"not_implemented\",\n            id: this.lc_id,\n        };\n    }\n}\n","export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langchain-js\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/langchain-ai/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n","import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name, } from \"../load/serializable.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain_core\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreCustomEvent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"raiseError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") !== \"true\"\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n            this.ignoreCustomEvent =\n                input.ignoreCustomEvent ?? this.ignoreCustomEvent;\n            this.raiseError = input.raiseError ?? this.raiseError;\n            this.awaitHandlers =\n                this.raiseError || (input._awaitHandler ?? this.awaitHandlers);\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid.v4()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\n","import { BaseCallbackHandler, } from \"../callbacks/base.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nfunction convertToDottedOrderFormat(epoch, runId, executionOrder) {\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\nexport function isBaseTracer(x) {\n    return typeof x._addRunToRunMap === \"function\";\n}\nexport class BaseTracer extends BaseCallbackHandler {\n    constructor(_fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"runMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n    }\n    copy() {\n        return this;\n    }\n    stringifyError(error) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (error instanceof Error) {\n            return error.message + (error?.stack ? `\\n\\n${error.stack}` : \"\");\n        }\n        if (typeof error === \"string\") {\n            return error;\n        }\n        return `${error}`;\n    }\n    _addChildRun(parentRun, childRun) {\n        parentRun.child_runs.push(childRun);\n    }\n    _addRunToRunMap(run) {\n        const currentDottedOrder = convertToDottedOrderFormat(run.start_time, run.id, run.execution_order);\n        const storedRun = { ...run };\n        if (storedRun.parent_run_id !== undefined) {\n            const parentRun = this.runMap.get(storedRun.parent_run_id);\n            if (parentRun) {\n                this._addChildRun(parentRun, storedRun);\n                parentRun.child_execution_order = Math.max(parentRun.child_execution_order, storedRun.child_execution_order);\n                storedRun.trace_id = parentRun.trace_id;\n                if (parentRun.dotted_order !== undefined) {\n                    storedRun.dotted_order = [\n                        parentRun.dotted_order,\n                        currentDottedOrder,\n                    ].join(\".\");\n                }\n                else {\n                    // This can happen naturally for callbacks added within a run\n                    // console.debug(`Parent run with UUID ${storedRun.parent_run_id} has no dotted order.`);\n                }\n            }\n            else {\n                // This can happen naturally for callbacks added within a run\n                // console.debug(\n                //   `Parent run with UUID ${storedRun.parent_run_id} not found.`\n                // );\n            }\n        }\n        else {\n            storedRun.trace_id = storedRun.id;\n            storedRun.dotted_order = currentDottedOrder;\n        }\n        this.runMap.set(storedRun.id, storedRun);\n        return storedRun;\n    }\n    async _endTrace(run) {\n        const parentRun = run.parent_run_id !== undefined && this.runMap.get(run.parent_run_id);\n        if (parentRun) {\n            parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\n        }\n        else {\n            await this.persistRun(run);\n        }\n        this.runMap.delete(run.id);\n        await this.onRunUpdate?.(run);\n    }\n    _getExecutionOrder(parentRunId) {\n        const parentRun = parentRunId !== undefined && this.runMap.get(parentRunId);\n        // If a run has no parent then execution order is 1\n        if (!parentRun) {\n            return 1;\n        }\n        return parentRun.child_execution_order + 1;\n    }\n    /**\n     * Create and add a run to the run map for LLM start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { prompts },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chat model start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { messages },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    async handleLLMEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = output;\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onLLMEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleLLMError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onLLMError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chain start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? chain.id[chain.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: chain,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs,\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: runType ?? \"chain\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name);\n        await this.onRunCreate?.(run);\n        await this.onChainStart?.(run);\n        return run;\n    }\n    async handleChainEnd(outputs, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = _coerceToDict(outputs, \"output\");\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleChainError(error, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for tool start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? tool.id[tool.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: tool,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { input },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"tool\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onToolStart?.(run);\n        return run;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { output };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleToolError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleAgentAction(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        const agentRun = run;\n        agentRun.actions = agentRun.actions || [];\n        agentRun.actions.push(action);\n        agentRun.events.push({\n            name: \"agent_action\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentAction?.(run);\n    }\n    async handleAgentEnd(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"agent_end\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentEnd?.(run);\n    }\n    /**\n     * Create and add a run to the run map for retriever start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? retriever.id[retriever.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: retriever,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { query },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"retriever\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onRetrieverStart?.(run);\n        return run;\n    }\n    async handleRetrieverEnd(documents, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { documents };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleRetrieverError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleText(text, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"text\",\n            time: new Date().toISOString(),\n            kwargs: { text },\n        });\n        await this.onText?.(run);\n    }\n    async handleLLMNewToken(token, idx, runId, _parentRunId, _tags, fields) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`);\n        }\n        run.events.push({\n            name: \"new_token\",\n            time: new Date().toISOString(),\n            kwargs: { token, idx, chunk: fields?.chunk },\n        });\n        await this.onLLMNewToken?.(run, token, { chunk: fields?.chunk });\n        return run;\n    }\n}\n","'use strict';\n\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16 +\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\n\t\t\t\t\tMath.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false\n\t\t}\n\t});\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","import styles from \"ansi-styles\";\nimport { BaseTracer } from \"./base.js\";\nfunction wrap(style, text) {\n    return `${style.open}${text}${style.close}`;\n}\nfunction tryJsonStringify(obj, fallback) {\n    try {\n        return JSON.stringify(obj, null, 2);\n    }\n    catch (err) {\n        return fallback;\n    }\n}\nfunction formatKVMapItem(value) {\n    if (typeof value === \"string\") {\n        return value.trim();\n    }\n    if (value === null || value === undefined) {\n        return value;\n    }\n    return tryJsonStringify(value, value.toString());\n}\nfunction elapsed(run) {\n    if (!run.end_time)\n        return \"\";\n    const elapsed = run.end_time - run.start_time;\n    if (elapsed < 1000) {\n        return `${elapsed}ms`;\n    }\n    return `${(elapsed / 1000).toFixed(2)}s`;\n}\nconst { color } = styles;\n/**\n * A tracer that logs all events to the console. It extends from the\n * `BaseTracer` class and overrides its methods to provide custom logging\n * functionality.\n * @example\n * ```typescript\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n *   tags: [\"example\", \"callbacks\", \"constructor\"],\n *   callbacks: [new ConsoleCallbackHandler()],\n * });\n *\n * ```\n */\nexport class ConsoleCallbackHandler extends BaseTracer {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"console_callback_handler\"\n        });\n    }\n    /**\n     * Method used to persist the run. In this case, it simply returns a\n     * resolved promise as there's no persistence logic.\n     * @param _run The run to persist.\n     * @returns A resolved promise.\n     */\n    persistRun(_run) {\n        return Promise.resolve();\n    }\n    // utility methods\n    /**\n     * Method used to get all the parent runs of a given run.\n     * @param run The run whose parents are to be retrieved.\n     * @returns An array of parent runs.\n     */\n    getParents(run) {\n        const parents = [];\n        let currentRun = run;\n        while (currentRun.parent_run_id) {\n            const parent = this.runMap.get(currentRun.parent_run_id);\n            if (parent) {\n                parents.push(parent);\n                currentRun = parent;\n            }\n            else {\n                break;\n            }\n        }\n        return parents;\n    }\n    /**\n     * Method used to get a string representation of the run's lineage, which\n     * is used in logging.\n     * @param run The run whose lineage is to be retrieved.\n     * @returns A string representation of the run's lineage.\n     */\n    getBreadcrumbs(run) {\n        const parents = this.getParents(run).reverse();\n        const string = [...parents, run]\n            .map((parent, i, arr) => {\n            const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\n            return i === arr.length - 1 ? wrap(styles.bold, name) : name;\n        })\n            .join(\" > \");\n        return wrap(color.grey, string);\n    }\n    // logging methods\n    /**\n     * Method used to log the start of a chain run.\n     * @param run The chain run that has started.\n     * @returns void\n     */\n    onChainStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[chain/start]\")} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a chain run.\n     * @param run The chain run that has ended.\n     * @returns void\n     */\n    onChainEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Chain run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a chain run.\n     * @param run The chain run that has errored.\n     * @returns void\n     */\n    onChainError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(run)}] Chain run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of an LLM run.\n     * @param run The LLM run that has started.\n     * @returns void\n     */\n    onLLMStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        const inputs = \"prompts\" in run.inputs\n            ? { prompts: run.inputs.prompts.map((p) => p.trim()) }\n            : run.inputs;\n        console.log(`${wrap(color.green, \"[llm/start]\")} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of an LLM run.\n     * @param run The LLM run that has ended.\n     * @returns void\n     */\n    onLLMEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(run)}] Exiting LLM run with output: ${tryJsonStringify(run.outputs, \"[response]\")}`);\n    }\n    /**\n     * Method used to log any errors of an LLM run.\n     * @param run The LLM run that has errored.\n     * @returns void\n     */\n    onLLMError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(run)}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a tool run.\n     * @param run The tool run that has started.\n     * @returns void\n     */\n    onToolStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[tool/start]\")} [${crumbs}] Entering Tool run with input: \"${formatKVMapItem(run.inputs.input)}\"`);\n    }\n    /**\n     * Method used to log the end of a tool run.\n     * @param run The tool run that has ended.\n     * @returns void\n     */\n    onToolEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Tool run with output: \"${formatKVMapItem(run.outputs?.output)}\"`);\n    }\n    /**\n     * Method used to log any errors of a tool run.\n     * @param run The tool run that has errored.\n     * @returns void\n     */\n    onToolError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(run)}] Tool run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a retriever run.\n     * @param run The retriever run that has started.\n     * @returns void\n     */\n    onRetrieverStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[retriever/start]\")} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a retriever run.\n     * @param run The retriever run that has ended.\n     * @returns void\n     */\n    onRetrieverEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Retriever run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a retriever run.\n     * @param run The retriever run that has errored.\n     * @returns void\n     */\n    onRetrieverError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(run)}] Retriever run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the action selected by the agent.\n     * @param run The run in which the agent action occurred.\n     * @returns void\n     */\n    onAgentAction(run) {\n        const agentRun = run;\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.blue, \"[agent/action]\")} [${crumbs}] Agent selected action: ${tryJsonStringify(agentRun.actions[agentRun.actions.length - 1], \"[action]\")}`);\n    }\n}\n","export function _isToolCall(toolCall) {\n    return !!(toolCall &&\n        typeof toolCall === \"object\" &&\n        \"type\" in toolCall &&\n        toolCall.type === \"tool_call\");\n}\n/**\n * Custom error class used to handle exceptions related to tool input parsing.\n * It extends the built-in `Error` class and adds an optional `output`\n * property that can hold the output that caused the exception.\n */\nexport class ToolInputParsingException extends Error {\n    constructor(message, output) {\n        super(message);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\n","export function parseJsonMarkdown(s, parser = parsePartialJson) {\n    // eslint-disable-next-line no-param-reassign\n    s = s.trim();\n    const match = /```(json)?(.*)```/s.exec(s);\n    if (!match) {\n        return parser(s);\n    }\n    else {\n        return parser(match[2]);\n    }\n}\n// Adapted from https://github.com/KillianLucas/open-interpreter/blob/main/interpreter/core/llm/utils/parse_partial_json.py\n// MIT License\nexport function parsePartialJson(s) {\n    // If the input is undefined, return null to indicate failure.\n    if (typeof s === \"undefined\") {\n        return null;\n    }\n    // Attempt to parse the string as-is.\n    try {\n        return JSON.parse(s);\n    }\n    catch (error) {\n        // Pass\n    }\n    // Initialize variables.\n    let new_s = \"\";\n    const stack = [];\n    let isInsideString = false;\n    let escaped = false;\n    // Process each character in the string one at a time.\n    for (let char of s) {\n        if (isInsideString) {\n            if (char === '\"' && !escaped) {\n                isInsideString = false;\n            }\n            else if (char === \"\\n\" && !escaped) {\n                char = \"\\\\n\"; // Replace the newline character with the escape sequence.\n            }\n            else if (char === \"\\\\\") {\n                escaped = !escaped;\n            }\n            else {\n                escaped = false;\n            }\n        }\n        else {\n            if (char === '\"') {\n                isInsideString = true;\n                escaped = false;\n            }\n            else if (char === \"{\") {\n                stack.push(\"}\");\n            }\n            else if (char === \"[\") {\n                stack.push(\"]\");\n            }\n            else if (char === \"}\" || char === \"]\") {\n                if (stack && stack[stack.length - 1] === char) {\n                    stack.pop();\n                }\n                else {\n                    // Mismatched closing character; the input is malformed.\n                    return null;\n                }\n            }\n        }\n        // Append the processed character to the new string.\n        new_s += char;\n    }\n    // If we're still inside a string at the end of processing,\n    // we need to close the string.\n    if (isInsideString) {\n        new_s += '\"';\n    }\n    // Close any remaining open structures in the reverse order that they were opened.\n    for (let i = stack.length - 1; i >= 0; i -= 1) {\n        new_s += stack[i];\n    }\n    // Attempt to parse the modified string as JSON.\n    try {\n        return JSON.parse(new_s);\n    }\n    catch (error) {\n        // If we still can't parse the string as JSON, return null to indicate failure.\n        return null;\n    }\n}\n","import { Serializable } from \"../load/serializable.js\";\nexport function mergeContent(firstContent, secondContent) {\n    // If first content is a string\n    if (typeof firstContent === \"string\") {\n        if (typeof secondContent === \"string\") {\n            return firstContent + secondContent;\n        }\n        else {\n            return [{ type: \"text\", text: firstContent }, ...secondContent];\n        }\n        // If both are arrays\n    }\n    else if (Array.isArray(secondContent)) {\n        return (_mergeLists(firstContent, secondContent) ?? [\n            ...firstContent,\n            ...secondContent,\n        ]);\n    }\n    else {\n        // Otherwise, add the second content as a new element of the list\n        return [...firstContent, { type: \"text\", text: secondContent }];\n    }\n}\n/**\n * 'Merge' two statuses. If either value passed is 'error', it will return 'error'. Else\n * it will return 'success'.\n *\n * @param {\"success\" | \"error\" | undefined} left The existing value to 'merge' with the new value.\n * @param {\"success\" | \"error\" | undefined} right The new value to 'merge' with the existing value\n * @returns {\"success\" | \"error\"} The 'merged' value.\n */\nexport function _mergeStatus(left, right) {\n    if (left === \"error\" || right === \"error\") {\n        return \"error\";\n    }\n    return \"success\";\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction stringifyWithDepthLimit(obj, depthLimit) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function helper(obj, currentDepth) {\n        if (typeof obj !== \"object\" || obj === null || obj === undefined) {\n            return obj;\n        }\n        if (currentDepth >= depthLimit) {\n            if (Array.isArray(obj)) {\n                return \"[Array]\";\n            }\n            return \"[Object]\";\n        }\n        if (Array.isArray(obj)) {\n            return obj.map((item) => helper(item, currentDepth + 1));\n        }\n        const result = {};\n        for (const key of Object.keys(obj)) {\n            result[key] = helper(obj[key], currentDepth + 1);\n        }\n        return result;\n    }\n    return JSON.stringify(helper(obj, 0), null, 2);\n}\n/**\n * Base class for all types of messages in a conversation. It includes\n * properties like `content`, `name`, and `additional_kwargs`. It also\n * includes methods like `toDict()` and `_getType()`.\n */\nexport class BaseMessage extends Serializable {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            additional_kwargs: \"additional_kwargs\",\n            response_metadata: \"response_metadata\",\n        };\n    }\n    /**\n     * @deprecated\n     * Use {@link BaseMessage.content} instead.\n     */\n    get text() {\n        return typeof this.content === \"string\" ? this.content : \"\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = {\n                content: fields,\n                additional_kwargs: kwargs,\n                response_metadata: {},\n            };\n        }\n        // Make sure the default value for additional_kwargs is passed into super() for serialization\n        if (!fields.additional_kwargs) {\n            // eslint-disable-next-line no-param-reassign\n            fields.additional_kwargs = {};\n        }\n        if (!fields.response_metadata) {\n            // eslint-disable-next-line no-param-reassign\n            fields.response_metadata = {};\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"messages\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /** The content of the message. */\n        Object.defineProperty(this, \"content\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** The name of the message sender in a multi-user chat. */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Additional keyword arguments */\n        Object.defineProperty(this, \"additional_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Response metadata. For example: response headers, logprobs, token counts. */\n        Object.defineProperty(this, \"response_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * An optional unique identifier for the message. This should ideally be\n         * provided by the provider/model which created the message.\n         */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.content = fields.content;\n        this.additional_kwargs = fields.additional_kwargs;\n        this.response_metadata = fields.response_metadata;\n        this.id = fields.id;\n    }\n    toDict() {\n        return {\n            type: this._getType(),\n            data: this.toJSON()\n                .kwargs,\n        };\n    }\n    static lc_name() {\n        return \"BaseMessage\";\n    }\n    // Can't be protected for silly reasons\n    get _printableFields() {\n        return {\n            id: this.id,\n            content: this.content,\n            name: this.name,\n            additional_kwargs: this.additional_kwargs,\n            response_metadata: this.response_metadata,\n        };\n    }\n    // this private method is used to update the ID for the runtime\n    // value as well as in lc_kwargs for serialisation\n    _updateId(value) {\n        this.id = value;\n        // lc_attributes wouldn't work here, because jest compares the\n        // whole object\n        this.lc_kwargs.id = value;\n    }\n    get [Symbol.toStringTag]() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this.constructor.lc_name();\n    }\n    // Override the default behavior of console.log\n    [Symbol.for(\"nodejs.util.inspect.custom\")](depth) {\n        if (depth === null) {\n            return this;\n        }\n        const printable = stringifyWithDepthLimit(this._printableFields, Math.max(4, depth));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return `${this.constructor.lc_name()} ${printable}`;\n    }\n}\nexport function isOpenAIToolCallArray(value) {\n    return (Array.isArray(value) &&\n        value.every((v) => typeof v.index === \"number\"));\n}\nexport function _mergeDicts(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nleft, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nright\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    const merged = { ...left };\n    for (const [key, value] of Object.entries(right)) {\n        if (merged[key] == null) {\n            merged[key] = value;\n        }\n        else if (value == null) {\n            continue;\n        }\n        else if (typeof merged[key] !== typeof value ||\n            Array.isArray(merged[key]) !== Array.isArray(value)) {\n            throw new Error(`field[${key}] already exists in the message chunk, but with a different type.`);\n        }\n        else if (typeof merged[key] === \"string\") {\n            if (key === \"type\") {\n                // Do not merge 'type' fields\n                continue;\n            }\n            merged[key] += value;\n        }\n        else if (typeof merged[key] === \"object\" && !Array.isArray(merged[key])) {\n            merged[key] = _mergeDicts(merged[key], value);\n        }\n        else if (Array.isArray(merged[key])) {\n            merged[key] = _mergeLists(merged[key], value);\n        }\n        else if (merged[key] === value) {\n            continue;\n        }\n        else {\n            console.warn(`field[${key}] already exists in this message chunk and value has unsupported type.`);\n        }\n    }\n    return merged;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeLists(left, right) {\n    if (left === undefined && right === undefined) {\n        return undefined;\n    }\n    else if (left === undefined || right === undefined) {\n        return left || right;\n    }\n    else {\n        const merged = [...left];\n        for (const item of right) {\n            if (typeof item === \"object\" &&\n                \"index\" in item &&\n                typeof item.index === \"number\") {\n                const toMerge = merged.findIndex((leftItem) => leftItem.index === item.index);\n                if (toMerge !== -1) {\n                    merged[toMerge] = _mergeDicts(merged[toMerge], item);\n                }\n                else {\n                    merged.push(item);\n                }\n            }\n            else if (typeof item === \"object\" &&\n                \"text\" in item &&\n                item.text === \"\") {\n                // No-op - skip empty text blocks\n                continue;\n            }\n            else {\n                merged.push(item);\n            }\n        }\n        return merged;\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeObj(left, right) {\n    if (!left && !right) {\n        throw new Error(\"Cannot merge two undefined objects.\");\n    }\n    if (!left || !right) {\n        return left || right;\n    }\n    else if (typeof left !== typeof right) {\n        throw new Error(`Cannot merge objects of different types.\\nLeft ${typeof left}\\nRight ${typeof right}`);\n    }\n    else if (typeof left === \"string\" && typeof right === \"string\") {\n        return (left + right);\n    }\n    else if (Array.isArray(left) && Array.isArray(right)) {\n        return _mergeLists(left, right);\n    }\n    else if (typeof left === \"object\" && typeof right === \"object\") {\n        return _mergeDicts(left, right);\n    }\n    else if (left === right) {\n        return left;\n    }\n    else {\n        throw new Error(`Can not merge objects of different types.\\nLeft ${left}\\nRight ${right}`);\n    }\n}\n/**\n * Represents a chunk of a message, which can be concatenated with other\n * message chunks. It includes a method `_merge_kwargs_dict()` for merging\n * additional keyword arguments from another `BaseMessageChunk` into this\n * one. It also overrides the `__add__()` method to support concatenation\n * of `BaseMessageChunk` instances.\n */\nexport class BaseMessageChunk extends BaseMessage {\n}\nexport function _isMessageFieldWithRole(x) {\n    return typeof x.role === \"string\";\n}\nexport function isBaseMessage(messageLike) {\n    return typeof messageLike?._getType === \"function\";\n}\nexport function isBaseMessageChunk(messageLike) {\n    return (isBaseMessage(messageLike) &&\n        typeof messageLike.concat === \"function\");\n}\n","import { parsePartialJson } from \"../utils/json.js\";\nimport { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, _mergeLists, } from \"./base.js\";\nimport { defaultToolCallParser, } from \"./tool.js\";\n/**\n * Represents an AI message in a conversation.\n */\nexport class AIMessage extends BaseMessage {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n        };\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                additional_kwargs: kwargs ?? {},\n            };\n        }\n        else {\n            initParams = fields;\n            const rawToolCalls = initParams.additional_kwargs?.tool_calls;\n            const toolCalls = initParams.tool_calls;\n            if (!(rawToolCalls == null) &&\n                rawToolCalls.length > 0 &&\n                (toolCalls === undefined || toolCalls.length === 0)) {\n                console.warn([\n                    \"New LangChain packages are available that more efficiently handle\",\n                    \"tool calling.\\n\\nPlease upgrade your packages to versions that set\",\n                    \"message tool calls. e.g., `yarn add @langchain/anthropic`,\",\n                    \"yarn add @langchain/openai`, etc.\",\n                ].join(\" \"));\n            }\n            try {\n                if (!(rawToolCalls == null) && toolCalls === undefined) {\n                    const [toolCalls, invalidToolCalls] = defaultToolCallParser(rawToolCalls);\n                    initParams.tool_calls = toolCalls ?? [];\n                    initParams.invalid_tool_calls = invalidToolCalls ?? [];\n                }\n                else {\n                    initParams.tool_calls = initParams.tool_calls ?? [];\n                    initParams.invalid_tool_calls = initParams.invalid_tool_calls ?? [];\n                }\n            }\n            catch (e) {\n                // Do nothing if parsing fails\n                initParams.tool_calls = [];\n                initParams.invalid_tool_calls = [];\n            }\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\n         * If provided, token usage information associated with the message.\n         */\n        Object.defineProperty(this, \"usage_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof initParams !== \"string\") {\n            this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n            this.invalid_tool_calls =\n                initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        }\n        this.usage_metadata = initParams.usage_metadata;\n    }\n    static lc_name() {\n        return \"AIMessage\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_calls: this.tool_calls,\n            invalid_tool_calls: this.invalid_tool_calls,\n            usage_metadata: this.usage_metadata,\n        };\n    }\n}\nexport function isAIMessage(x) {\n    return x._getType() === \"ai\";\n}\nexport function isAIMessageChunk(x) {\n    return x._getType() === \"ai\";\n}\n/**\n * Represents a chunk of an AI message, which can be concatenated with\n * other AI message chunks.\n */\nexport class AIMessageChunk extends BaseMessageChunk {\n    constructor(fields) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n            };\n        }\n        else if (fields.tool_call_chunks === undefined) {\n            initParams = {\n                ...fields,\n                tool_calls: fields.tool_calls ?? [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n            };\n        }\n        else {\n            const toolCalls = [];\n            const invalidToolCalls = [];\n            for (const toolCallChunk of fields.tool_call_chunks) {\n                let parsedArgs = {};\n                try {\n                    parsedArgs = parsePartialJson(toolCallChunk.args || \"{}\");\n                    if (parsedArgs === null ||\n                        typeof parsedArgs !== \"object\" ||\n                        Array.isArray(parsedArgs)) {\n                        throw new Error(\"Malformed tool call chunk args.\");\n                    }\n                    toolCalls.push({\n                        name: toolCallChunk.name ?? \"\",\n                        args: parsedArgs,\n                        id: toolCallChunk.id,\n                        type: \"tool_call\",\n                    });\n                }\n                catch (e) {\n                    invalidToolCalls.push({\n                        name: toolCallChunk.name,\n                        args: toolCallChunk.args,\n                        id: toolCallChunk.id,\n                        error: \"Malformed args.\",\n                        type: \"invalid_tool_call\",\n                    });\n                }\n            }\n            initParams = {\n                ...fields,\n                tool_calls: toolCalls,\n                invalid_tool_calls: invalidToolCalls,\n            };\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // Must redeclare tool call fields since there is no multiple inheritance in JS.\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tool_call_chunks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\n         * If provided, token usage information associated with the message.\n         */\n        Object.defineProperty(this, \"usage_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_chunks =\n            initParams.tool_call_chunks ?? this.tool_call_chunks;\n        this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n        this.invalid_tool_calls =\n            initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        this.usage_metadata = initParams.usage_metadata;\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n            tool_call_chunks: \"tool_call_chunks\",\n        };\n    }\n    static lc_name() {\n        return \"AIMessageChunk\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_calls: this.tool_calls,\n            tool_call_chunks: this.tool_call_chunks,\n            invalid_tool_calls: this.invalid_tool_calls,\n            usage_metadata: this.usage_metadata,\n        };\n    }\n    concat(chunk) {\n        const combinedFields = {\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            tool_call_chunks: [],\n            id: this.id ?? chunk.id,\n        };\n        if (this.tool_call_chunks !== undefined ||\n            chunk.tool_call_chunks !== undefined) {\n            const rawToolCalls = _mergeLists(this.tool_call_chunks, chunk.tool_call_chunks);\n            if (rawToolCalls !== undefined && rawToolCalls.length > 0) {\n                combinedFields.tool_call_chunks = rawToolCalls;\n            }\n        }\n        if (this.usage_metadata !== undefined ||\n            chunk.usage_metadata !== undefined) {\n            const left = this.usage_metadata ?? {\n                input_tokens: 0,\n                output_tokens: 0,\n                total_tokens: 0,\n            };\n            const right = chunk.usage_metadata ?? {\n                input_tokens: 0,\n                output_tokens: 0,\n                total_tokens: 0,\n            };\n            const usage_metadata = {\n                input_tokens: left.input_tokens + right.input_tokens,\n                output_tokens: left.output_tokens + right.output_tokens,\n                total_tokens: left.total_tokens + right.total_tokens,\n            };\n            combinedFields.usage_metadata = usage_metadata;\n        }\n        return new AIMessageChunk(combinedFields);\n    }\n}\n","import { _isToolCall } from \"../tools/utils.js\";\nimport { AIMessage, AIMessageChunk } from \"./ai.js\";\nimport { isBaseMessage, _isMessageFieldWithRole, } from \"./base.js\";\nimport { ChatMessage, ChatMessageChunk, } from \"./chat.js\";\nimport { FunctionMessage, FunctionMessageChunk, } from \"./function.js\";\nimport { HumanMessage, HumanMessageChunk } from \"./human.js\";\nimport { SystemMessage, SystemMessageChunk } from \"./system.js\";\nimport { ToolMessage, } from \"./tool.js\";\nfunction _coerceToolCall(toolCall) {\n    if (_isToolCall(toolCall)) {\n        return toolCall;\n    }\n    else if (typeof toolCall.id === \"string\" &&\n        toolCall.type === \"function\" &&\n        typeof toolCall.function === \"object\" &&\n        toolCall.function !== null &&\n        \"arguments\" in toolCall.function &&\n        typeof toolCall.function.arguments === \"string\" &&\n        \"name\" in toolCall.function &&\n        typeof toolCall.function.name === \"string\") {\n        // Handle OpenAI tool call format\n        return {\n            id: toolCall.id,\n            args: JSON.parse(toolCall.function.arguments),\n            name: toolCall.function.name,\n            type: \"tool_call\",\n        };\n    }\n    else {\n        // TODO: Throw an error?\n        return toolCall;\n    }\n}\nfunction _constructMessageFromParams(params) {\n    const { type, ...rest } = params;\n    if (type === \"human\" || type === \"user\") {\n        return new HumanMessage(rest);\n    }\n    else if (type === \"ai\" || type === \"assistant\") {\n        const { tool_calls: rawToolCalls, ...other } = rest;\n        if (!Array.isArray(rawToolCalls)) {\n            return new AIMessage(rest);\n        }\n        const tool_calls = rawToolCalls.map(_coerceToolCall);\n        return new AIMessage({ ...other, tool_calls });\n    }\n    else if (type === \"system\") {\n        return new SystemMessage(rest);\n    }\n    else if (type === \"tool\" && \"tool_call_id\" in rest) {\n        return new ToolMessage({\n            ...rest,\n            content: rest.content,\n            tool_call_id: rest.tool_call_id,\n            name: rest.name,\n        });\n    }\n    else {\n        throw new Error(`Unable to coerce message from array: only human, AI, or system message coercion is currently supported.`);\n    }\n}\nexport function coerceMessageLikeToMessage(messageLike) {\n    if (typeof messageLike === \"string\") {\n        return new HumanMessage(messageLike);\n    }\n    else if (isBaseMessage(messageLike)) {\n        return messageLike;\n    }\n    if (Array.isArray(messageLike)) {\n        const [type, content] = messageLike;\n        return _constructMessageFromParams({ type, content });\n    }\n    else if (_isMessageFieldWithRole(messageLike)) {\n        const { role: type, ...rest } = messageLike;\n        return _constructMessageFromParams({ ...rest, type });\n    }\n    else {\n        return _constructMessageFromParams(messageLike);\n    }\n}\n/**\n * This function is used by memory classes to get a string representation\n * of the chat message history, based on the message content and role.\n */\nexport function getBufferString(messages, humanPrefix = \"Human\", aiPrefix = \"AI\") {\n    const string_messages = [];\n    for (const m of messages) {\n        let role;\n        if (m._getType() === \"human\") {\n            role = humanPrefix;\n        }\n        else if (m._getType() === \"ai\") {\n            role = aiPrefix;\n        }\n        else if (m._getType() === \"system\") {\n            role = \"System\";\n        }\n        else if (m._getType() === \"function\") {\n            role = \"Function\";\n        }\n        else if (m._getType() === \"tool\") {\n            role = \"Tool\";\n        }\n        else if (m._getType() === \"generic\") {\n            role = m.role;\n        }\n        else {\n            throw new Error(`Got unsupported message type: ${m._getType()}`);\n        }\n        const nameStr = m.name ? `${m.name}, ` : \"\";\n        const readableContent = typeof m.content === \"string\"\n            ? m.content\n            : JSON.stringify(m.content, null, 2);\n        string_messages.push(`${role}: ${nameStr}${readableContent}`);\n    }\n    return string_messages.join(\"\\n\");\n}\n/**\n * Maps messages from an older format (V1) to the current `StoredMessage`\n * format. If the message is already in the `StoredMessage` format, it is\n * returned as is. Otherwise, it transforms the V1 message into a\n * `StoredMessage`. This function is important for maintaining\n * compatibility with older message formats.\n */\nfunction mapV1MessageToStoredMessage(message) {\n    // TODO: Remove this mapper when we deprecate the old message format.\n    if (message.data !== undefined) {\n        return message;\n    }\n    else {\n        const v1Message = message;\n        return {\n            type: v1Message.type,\n            data: {\n                content: v1Message.text,\n                role: v1Message.role,\n                name: undefined,\n                tool_call_id: undefined,\n            },\n        };\n    }\n}\nexport function mapStoredMessageToChatMessage(message) {\n    const storedMessage = mapV1MessageToStoredMessage(message);\n    switch (storedMessage.type) {\n        case \"human\":\n            return new HumanMessage(storedMessage.data);\n        case \"ai\":\n            return new AIMessage(storedMessage.data);\n        case \"system\":\n            return new SystemMessage(storedMessage.data);\n        case \"function\":\n            if (storedMessage.data.name === undefined) {\n                throw new Error(\"Name must be defined for function messages\");\n            }\n            return new FunctionMessage(storedMessage.data);\n        case \"tool\":\n            if (storedMessage.data.tool_call_id === undefined) {\n                throw new Error(\"Tool call ID must be defined for tool messages\");\n            }\n            return new ToolMessage(storedMessage.data);\n        case \"generic\": {\n            if (storedMessage.data.role === undefined) {\n                throw new Error(\"Role must be defined for chat messages\");\n            }\n            return new ChatMessage(storedMessage.data);\n        }\n        default:\n            throw new Error(`Got unexpected type: ${storedMessage.type}`);\n    }\n}\n/**\n * Transforms an array of `StoredMessage` instances into an array of\n * `BaseMessage` instances. It uses the `mapV1MessageToStoredMessage`\n * function to ensure all messages are in the `StoredMessage` format, then\n * creates new instances of the appropriate `BaseMessage` subclass based\n * on the type of each message. This function is used to prepare stored\n * messages for use in a chat context.\n */\nexport function mapStoredMessagesToChatMessages(messages) {\n    return messages.map(mapStoredMessageToChatMessage);\n}\n/**\n * Transforms an array of `BaseMessage` instances into an array of\n * `StoredMessage` instances. It does this by calling the `toDict` method\n * on each `BaseMessage`, which returns a `StoredMessage`. This function\n * is used to prepare chat messages for storage.\n */\nexport function mapChatMessagesToStoredMessages(messages) {\n    return messages.map((message) => message.toDict());\n}\nexport function convertToChunk(message) {\n    const type = message._getType();\n    if (type === \"human\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new HumanMessageChunk({ ...message });\n    }\n    else if (type === \"ai\") {\n        let aiChunkFields = {\n            ...message,\n        };\n        if (\"tool_calls\" in aiChunkFields) {\n            aiChunkFields = {\n                ...aiChunkFields,\n                tool_call_chunks: aiChunkFields.tool_calls?.map((tc) => ({\n                    ...tc,\n                    type: \"tool_call_chunk\",\n                    index: undefined,\n                    args: JSON.stringify(tc.args),\n                })),\n            };\n        }\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new AIMessageChunk({ ...aiChunkFields });\n    }\n    else if (type === \"system\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new SystemMessageChunk({ ...message });\n    }\n    else if (type === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new FunctionMessageChunk({ ...message });\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    }\n    else if (ChatMessage.isInstance(message)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new ChatMessageChunk({ ...message });\n    }\n    else {\n        throw new Error(\"Unknown message type.\");\n    }\n}\n","import { Client } from \"langsmith\";\nimport { RunTree } from \"langsmith/run_trees\";\nimport { getCurrentRunTree } from \"langsmith/singletons/traceable\";\nimport { getEnvironmentVariable, getRuntimeEnvironment } from \"../utils/env.js\";\nimport { BaseTracer } from \"./base.js\";\nexport class LangChainTracer extends BaseTracer {\n    constructor(fields = {}) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"projectName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { exampleId, projectName, client } = fields;\n        this.projectName =\n            projectName ??\n                getEnvironmentVariable(\"LANGCHAIN_PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n        this.exampleId = exampleId;\n        this.client = client ?? new Client({});\n        const traceableTree = LangChainTracer.getTraceableRunTree();\n        if (traceableTree) {\n            this.updateFromRunTree(traceableTree);\n        }\n    }\n    async _convertToCreate(run, example_id = undefined) {\n        return {\n            ...run,\n            extra: {\n                ...run.extra,\n                runtime: await getRuntimeEnvironment(),\n            },\n            child_runs: undefined,\n            session_name: this.projectName,\n            reference_example_id: run.parent_run_id ? undefined : example_id,\n        };\n    }\n    async persistRun(_run) { }\n    async onRunCreate(run) {\n        const persistedRun = await this._convertToCreate(run, this.exampleId);\n        await this.client.createRun(persistedRun);\n    }\n    async onRunUpdate(run) {\n        const runUpdate = {\n            end_time: run.end_time,\n            error: run.error,\n            outputs: run.outputs,\n            events: run.events,\n            inputs: run.inputs,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            parent_run_id: run.parent_run_id,\n        };\n        await this.client.updateRun(run.id, runUpdate);\n    }\n    getRun(id) {\n        return this.runMap.get(id);\n    }\n    updateFromRunTree(runTree) {\n        let rootRun = runTree;\n        const visited = new Set();\n        while (rootRun.parent_run) {\n            if (visited.has(rootRun.id))\n                break;\n            visited.add(rootRun.id);\n            if (!rootRun.parent_run)\n                break;\n            rootRun = rootRun.parent_run;\n        }\n        visited.clear();\n        const queue = [rootRun];\n        while (queue.length > 0) {\n            const current = queue.shift();\n            if (!current || visited.has(current.id))\n                continue;\n            visited.add(current.id);\n            // @ts-expect-error Types of property 'events' are incompatible.\n            this.runMap.set(current.id, current);\n            if (current.child_runs) {\n                queue.push(...current.child_runs);\n            }\n        }\n        this.client = runTree.client ?? this.client;\n        this.projectName = runTree.project_name ?? this.projectName;\n        this.exampleId = runTree.reference_example_id ?? this.exampleId;\n    }\n    convertToRunTree(id) {\n        const runTreeMap = {};\n        const runTreeList = [];\n        for (const [id, run] of this.runMap) {\n            // by converting the run map to a run tree, we are doing a copy\n            // thus, any mutation performed on the run tree will not be reflected\n            // back in the run map\n            // TODO: Stop using `this.runMap` in favour of LangSmith's `RunTree`\n            const runTree = new RunTree({\n                ...run,\n                child_runs: [],\n                parent_run: undefined,\n                // inherited properties\n                client: this.client,\n                project_name: this.projectName,\n                reference_example_id: this.exampleId,\n                tracingEnabled: true,\n            });\n            runTreeMap[id] = runTree;\n            runTreeList.push([id, run.dotted_order]);\n        }\n        runTreeList.sort((a, b) => {\n            if (!a[1] || !b[1])\n                return 0;\n            return a[1].localeCompare(b[1]);\n        });\n        for (const [id] of runTreeList) {\n            const run = this.runMap.get(id);\n            const runTree = runTreeMap[id];\n            if (!run || !runTree)\n                continue;\n            if (run.parent_run_id) {\n                const parentRunTree = runTreeMap[run.parent_run_id];\n                if (parentRunTree) {\n                    parentRunTree.child_runs.push(runTree);\n                    runTree.parent_run = parentRunTree;\n                }\n            }\n        }\n        return runTreeMap[id];\n    }\n    static getTraceableRunTree() {\n        try {\n            return getCurrentRunTree();\n        }\n        catch {\n            return undefined;\n        }\n    }\n}\n","import PQueueMod from \"p-queue\";\nlet queue;\n/**\n * Creates a queue using the p-queue library. The queue is configured to\n * auto-start and has a concurrency of 1, meaning it will process tasks\n * one at a time.\n */\nfunction createQueue() {\n    const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n    return new PQueue({\n        autoStart: true,\n        concurrency: 1,\n    });\n}\n/**\n * Consume a promise, either adding it to the queue or waiting for it to resolve\n * @param promiseFn Promise to consume\n * @param wait Whether to wait for the promise to resolve or resolve immediately\n */\nexport async function consumeCallback(promiseFn, wait) {\n    if (wait === true) {\n        await promiseFn();\n    }\n    else {\n        if (typeof queue === \"undefined\") {\n            queue = createQueue();\n        }\n        void queue.add(promiseFn);\n    }\n}\n/**\n * Waits for all promises in the queue to resolve. If the queue is\n * undefined, it immediately resolves a promise.\n */\nexport function awaitAllCallbacks() {\n    return typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve();\n}\n","import { getEnvironmentVariable } from \"./env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\n        \"LANGSMITH_TRACING_V2\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGSMITH_TRACING\",\n        \"LANGCHAIN_TRACING\",\n    ];\n    return !!envVars.find((envVar) => getEnvironmentVariable(envVar) === \"true\");\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler, } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"../tracers/console.js\";\nimport { getBufferString } from \"../messages/utils.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nimport { LangChainTracer, } from \"../tracers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nimport { isTracingEnabled } from \"../utils/callbacks.js\";\nimport { isBaseTracer } from \"../tracers/base.js\";\nif (\n/* #__PURE__ */ isTracingEnabled() &&\n    /* #__PURE__ */ getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") !==\n        \"true\") {\n    /* #__PURE__ */ console.warn([\n        \"[WARN]: You have enabled LangSmith tracing without backgrounding callbacks.\",\n        \"[WARN]: If you are not using a serverless environment where you must wait for tracing calls to finish,\",\n        `[WARN]: we suggest setting \"process.env.LANGCHAIN_CALLBACKS_BACKGROUND=true\" to avoid additional latency.`,\n    ].join(\"\\n\"));\n}\nexport function parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport class BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\n/**\n * Base class for run manager in LangChain.\n */\nexport class BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    get parentRunId() {\n        return this._parentRunId;\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, _runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleCustomEvent?.(eventName, data, this.runId, this.tags, this.metadata);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * Manages callbacks for retriever runs.\n */\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx ?? { prompt: 0, completion: 0 }, this.runId, this._parentRunId, this.tags, fields);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(\"What is the answer to {question}?\");\n *\n * // Example of using LLMChain with OpenAI and a simple prompt\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Running the chain with a single question\n * const result = await chain.call({\n *   question: \"What is the airspeed velocity of an unladen swallow?\",\n * });\n * console.log(\"The answer is:\", result);\n * ```\n */\nexport class CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId, options) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = options?.handlers ?? this.handlers;\n        this.inheritableHandlers =\n            options?.inheritableHandlers ?? this.inheritableHandlers;\n        this.tags = options?.tags ?? this.tags;\n        this.inheritableTags = options?.inheritableTags ?? this.inheritableTags;\n        this.metadata = options?.metadata ?? this.metadata;\n        this.inheritableMetadata =\n            options?.inheritableMetadata ?? this.inheritableMetadata;\n        this._parentRunId = parentRunId;\n    }\n    /**\n     * Gets the parent run ID, if any.\n     *\n     * @returns The parent run ID.\n     */\n    getParentRunId() {\n        return this._parentRunId;\n    }\n    async handleLLMStart(llm, prompts, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(prompts.map(async (prompt, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForLLMStart(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(messages.map(async (messageGroup, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForChatModelStart(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        if (handler.handleChatModelStart) {\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                        else if (handler.handleLLMStart) {\n                            const messageString = getBufferString(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreChain) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForChainStart(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreAgent) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForToolStart(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreRetriever) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForRetrieverStart(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreCustomEvent) {\n                try {\n                    await handler.handleCustomEvent?.(eventName, data, runId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuidv4()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static async configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        return this._configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options);\n    }\n    // TODO: Deprecate async method in favor of this one.\n    static _configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") === \"true\" ||\n            options?.verbose;\n        const tracingV2Enabled = LangChainTracer.getTraceableRunTree()?.tracingEnabled ||\n            isTracingEnabled();\n        const tracingEnabled = tracingV2Enabled ||\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    const tracerV2 = new LangChainTracer();\n                    callbackManager.addHandler(tracerV2, true);\n                    // handoff between langchain and langsmith/traceable\n                    // override the parent run ID\n                    callbackManager._parentRunId =\n                        LangChainTracer.getTraceableRunTree()?.id ??\n                            callbackManager._parentRunId;\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nexport function ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return BaseCallbackHandler.fromMethods(handler);\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(`What is the answer to {question}?`);\n *\n * // Example of using LLMChain to process a series of questions\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Process questions using the chain\n * const processQuestions = async (questions) => {\n *   for (const question of questions) {\n *     const result = await chain.call({ question });\n *     console.log(result);\n *   }\n * };\n *\n * // Example questions\n * const questions = [\n *   \"What is your name?\",\n *   \"What is your quest?\",\n *   \"What is your favorite color?\",\n * ];\n *\n * // Run the example\nconst logFunction = handler.raiseError ? console.error : console.warn;\n* processQuestions(questions).catch(consolelogFunction;\n *\n * ```\n */\nexport class TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, inputs, options) {\n        const cb = new LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, inputs ?? {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start(inputs) {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async error(err) {\n        if (this.runManager) {\n            await this.runManager.handleChainError(err);\n            this.runManager = undefined;\n        }\n    }\n    async end(output) {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd(output ?? {});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start({ ...args });\n    try {\n        const result = await enclosedCode(callbackManager, ...args);\n        await traceGroup.end(_coerceToDict(result, \"output\"));\n        return result;\n    }\n    catch (err) {\n        await traceGroup.error(err);\n        throw err;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RunTree } from \"langsmith\";\nimport { CallbackManager } from \"../callbacks/manager.js\";\nexport class MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_store, callback) {\n        return callback();\n    }\n}\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nconst TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nconst LC_CHILD_KEY = Symbol.for(\"lc:child_config\");\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        return globalThis[TRACING_ALS_KEY] ?? mockAsyncLocalStorage;\n    }\n    getRunnableConfig() {\n        const storage = this.getInstance();\n        // this has the runnable config\n        // which means that we should also have an instance of a LangChainTracer\n        // with the run map prepopulated\n        return storage.getStore()?.extra?.[LC_CHILD_KEY];\n    }\n    runWithConfig(config, callback, avoidCreatingRootRunTree) {\n        const callbackManager = CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n        const storage = this.getInstance();\n        const parentRunId = callbackManager?.getParentRunId();\n        const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name === \"langchain_tracer\");\n        let runTree;\n        if (langChainTracer && parentRunId) {\n            runTree = langChainTracer.convertToRunTree(parentRunId);\n        }\n        else if (!avoidCreatingRootRunTree) {\n            runTree = new RunTree({\n                name: \"<runnable_lambda>\",\n                tracingEnabled: false,\n            });\n        }\n        if (runTree) {\n            runTree.extra = { ...runTree.extra, [LC_CHILD_KEY]: config };\n        }\n        return storage.run(runTree, callback);\n    }\n    initializeGlobalInstance(instance) {\n        if (globalThis[TRACING_ALS_KEY] === undefined) {\n            globalThis[TRACING_ALS_KEY] = instance;\n        }\n    }\n}\nconst AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\nexport { AsyncLocalStorageProviderSingleton };\n","export async function raceWithSignal(promise, signal) {\n    if (signal === undefined) {\n        return promise;\n    }\n    let listener;\n    return Promise.race([\n        promise.catch((err) => {\n            if (!signal?.aborted) {\n                throw err;\n            }\n            else {\n                return undefined;\n            }\n        }),\n        new Promise((_, reject) => {\n            listener = () => {\n                reject(new Error(\"Aborted\"));\n            };\n            signal.addEventListener(\"abort\", listener);\n            // Must be here inside the promise to avoid a race condition\n            if (signal.aborted) {\n                reject(new Error(\"Aborted\"));\n            }\n        }),\n    ]).finally(() => signal.removeEventListener(\"abort\", listener));\n}\n","import { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { raceWithSignal } from \"./signal.js\";\n/*\n * Support async iterator syntax for ReadableStreams in all environments.\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport class IterableReadableStream extends ReadableStream {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"reader\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    ensureReader() {\n        if (!this.reader) {\n            this.reader = this.getReader();\n        }\n    }\n    async next() {\n        this.ensureReader();\n        try {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.reader.releaseLock(); // release lock when stream becomes closed\n                return {\n                    done: true,\n                    value: undefined,\n                };\n            }\n            else {\n                return {\n                    done: false,\n                    value: result.value,\n                };\n            }\n        }\n        catch (e) {\n            this.reader.releaseLock(); // release lock when stream becomes errored\n            throw e;\n        }\n    }\n    async return() {\n        this.ensureReader();\n        // If wrapped in a Node stream, cancel is already called.\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        return { done: true, value: undefined };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async throw(e) {\n        this.ensureReader();\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        throw e;\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not present in Node 18 types, required in latest Node 22\n    async [Symbol.asyncDispose]() {\n        await this.return();\n    }\n    static fromReadableStream(stream) {\n        // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\n        const reader = stream.getReader();\n        return new IterableReadableStream({\n            start(controller) {\n                return pump();\n                function pump() {\n                    return reader.read().then(({ done, value }) => {\n                        // When no more data needs to be consumed, close the stream\n                        if (done) {\n                            controller.close();\n                            return;\n                        }\n                        // Enqueue the next data chunk into our target stream\n                        controller.enqueue(value);\n                        return pump();\n                    });\n                }\n            },\n            cancel() {\n                reader.releaseLock();\n            },\n        });\n    }\n    static fromAsyncGenerator(generator) {\n        return new IterableReadableStream({\n            async pull(controller) {\n                const { value, done } = await generator.next();\n                // When no more data needs to be consumed, close the stream\n                if (done) {\n                    controller.close();\n                }\n                // Fix: `else if (value)` will hang the streaming when nullish value (e.g. empty string) is pulled\n                controller.enqueue(value);\n            },\n            async cancel(reason) {\n                await generator.return(reason);\n            },\n        });\n    }\n}\nexport function atee(iter, length = 2) {\n    const buffers = Array.from({ length }, () => []);\n    return buffers.map(async function* makeIter(buffer) {\n        while (true) {\n            if (buffer.length === 0) {\n                const result = await iter.next();\n                for (const buffer of buffers) {\n                    buffer.push(result);\n                }\n            }\n            else if (buffer[0].done) {\n                return;\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                yield buffer.shift().value;\n            }\n        }\n    });\n}\nexport function concat(first, second) {\n    if (Array.isArray(first) && Array.isArray(second)) {\n        return first.concat(second);\n    }\n    else if (typeof first === \"string\" && typeof second === \"string\") {\n        return (first + second);\n    }\n    else if (typeof first === \"number\" && typeof second === \"number\") {\n        return (first + second);\n    }\n    else if (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"concat\" in first &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof first.concat === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return first.concat(second);\n    }\n    else if (typeof first === \"object\" && typeof second === \"object\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const chunk = { ...first };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        for (const [key, value] of Object.entries(second)) {\n            if (key in chunk && !Array.isArray(chunk[key])) {\n                chunk[key] = concat(chunk[key], value);\n            }\n            else {\n                chunk[key] = value;\n            }\n        }\n        return chunk;\n    }\n    else {\n        throw new Error(`Cannot concat ${typeof first} and ${typeof second}`);\n    }\n}\nexport class AsyncGeneratorWithSetup {\n    constructor(params) {\n        Object.defineProperty(this, \"generator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"setup\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signal\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResult\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResultUsed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.generator = params.generator;\n        this.config = params.config;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.signal = params.signal ?? this.config?.signal;\n        // setup is a promise that resolves only after the first iterator value\n        // is available. this is useful when setup of several piped generators\n        // needs to happen in logical order, ie. in the order in which input to\n        // to each generator is available.\n        this.setup = new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(params.config, async () => {\n                this.firstResult = params.generator.next();\n                if (params.startSetup) {\n                    this.firstResult.then(params.startSetup).then(resolve, reject);\n                }\n                else {\n                    this.firstResult.then((_result) => resolve(undefined), reject);\n                }\n            }, true);\n        });\n    }\n    async next(...args) {\n        this.signal?.throwIfAborted();\n        if (!this.firstResultUsed) {\n            this.firstResultUsed = true;\n            return this.firstResult;\n        }\n        return AsyncLocalStorageProviderSingleton.runWithConfig(this.config, this.signal\n            ? async () => {\n                return raceWithSignal(this.generator.next(...args), this.signal);\n            }\n            : async () => {\n                return this.generator.next(...args);\n            }, true);\n    }\n    async return(value) {\n        return this.generator.return(value);\n    }\n    async throw(e) {\n        return this.generator.throw(e);\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not present in Node 18 types, required in latest Node 22\n    async [Symbol.asyncDispose]() {\n        await this.return();\n    }\n}\nexport async function pipeGeneratorWithSetup(to, generator, startSetup, signal, ...args) {\n    const gen = new AsyncGeneratorWithSetup({\n        generator,\n        startSetup,\n        signal,\n    });\n    const setup = await gen.setup;\n    return { output: to(gen, setup, ...args), setup };\n}\n","import { applyPatch, } from \"../utils/fast-json-patch/index.js\";\nimport { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\n/**\n * List of jsonpatch JSONPatchOperations, which describe how to create the run state\n * from an empty dict. This is the minimal representation of the log, designed to\n * be serialized as JSON and sent over the wire to reconstruct the log on the other\n * side. Reconstruction of the state can be done with any jsonpatch-compliant library,\n * see https://jsonpatch.com for more information.\n */\nexport class RunLogPatch {\n    constructor(fields) {\n        Object.defineProperty(this, \"ops\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.ops = fields.ops ?? [];\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch({}, ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport class RunLog extends RunLogPatch {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.state = fields.state;\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch(this.state, other.ops);\n        return new RunLog({ ops, state: states[states.length - 1].newDocument });\n    }\n    static fromRunLogPatch(patch) {\n        const states = applyPatch({}, patch.ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops: patch.ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport const isLogStreamHandler = (handler) => handler.name === \"log_stream_tracer\";\n/**\n * Extract standardized inputs from a run.\n *\n * Standardizes the inputs based on the type of the runnable used.\n *\n * @param run - Run object\n * @param schemaFormat - The schema format to use.\n *\n * @returns Valid inputs are only dict. By conventions, inputs always represented\n * invocation using named arguments.\n * A null means that the input is not yet known!\n */\nasync function _getStandardizedInputs(run, schemaFormat) {\n    if (schemaFormat === \"original\") {\n        throw new Error(\"Do not assign inputs with original schema drop the key for now. \" +\n            \"When inputs are added to streamLog they should be added with \" +\n            \"standardized schema for streaming events.\");\n    }\n    const { inputs } = run;\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return inputs;\n    }\n    if (Object.keys(inputs).length === 1 && inputs?.input === \"\") {\n        return undefined;\n    }\n    // new style chains\n    // These nest an additional 'input' key inside the 'inputs' to make sure\n    // the input is always a dict. We need to unpack and user the inner value.\n    // We should try to fix this in Runnables and callbacks/tracers\n    // Runnables should be using a null type here not a placeholder\n    // dict.\n    return inputs.input;\n}\nasync function _getStandardizedOutputs(run, schemaFormat) {\n    const { outputs } = run;\n    if (schemaFormat === \"original\") {\n        // Return the old schema, without standardizing anything\n        return outputs;\n    }\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return outputs;\n    }\n    // TODO: Remove this hacky check\n    if (outputs !== undefined &&\n        Object.keys(outputs).length === 1 &&\n        outputs?.output !== undefined) {\n        return outputs.output;\n    }\n    return outputs;\n}\nfunction isChatGenerationChunk(x) {\n    return x !== undefined && x.message !== undefined;\n}\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class LogStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_schemaFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"original\"\n        });\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"keyMapByRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"counterMapByRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"log_stream_tracer\"\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this._schemaFormat = fields?._schemaFormat ?? this._schemaFormat;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        if (run.id === this.rootId) {\n            return false;\n        }\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.run_type);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.run_type);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, output) {\n        // Tap an output async iterator to stream its values to the log.\n        for await (const chunk of output) {\n            // root run is handled in .streamLog()\n            if (runId !== this.rootId) {\n                // if we can't find the run silently ignore\n                // eg. because this run wasn't included in the log\n                const key = this.keyMapByRunId[runId];\n                if (key) {\n                    await this.writer.write(new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: `/logs/${key}/streamed_output/-`,\n                                value: chunk,\n                            },\n                        ],\n                    }));\n                }\n            }\n            yield chunk;\n        }\n    }\n    async onRunCreate(run) {\n        if (this.rootId === undefined) {\n            this.rootId = run.id;\n            await this.writer.write(new RunLogPatch({\n                ops: [\n                    {\n                        op: \"replace\",\n                        path: \"\",\n                        value: {\n                            id: run.id,\n                            name: run.name,\n                            type: run.run_type,\n                            streamed_output: [],\n                            final_output: undefined,\n                            logs: {},\n                        },\n                    },\n                ],\n            }));\n        }\n        if (!this._includeRun(run)) {\n            return;\n        }\n        if (this.counterMapByRunName[run.name] === undefined) {\n            this.counterMapByRunName[run.name] = 0;\n        }\n        this.counterMapByRunName[run.name] += 1;\n        const count = this.counterMapByRunName[run.name];\n        this.keyMapByRunId[run.id] =\n            count === 1 ? run.name : `${run.name}:${count}`;\n        const logEntry = {\n            id: run.id,\n            name: run.name,\n            type: run.run_type,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            start_time: new Date(run.start_time).toISOString(),\n            streamed_output: [],\n            streamed_output_str: [],\n            final_output: undefined,\n            end_time: undefined,\n        };\n        if (this._schemaFormat === \"streaming_events\") {\n            logEntry.inputs = await _getStandardizedInputs(run, this._schemaFormat);\n        }\n        await this.writer.write(new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${this.keyMapByRunId[run.id]}`,\n                    value: logEntry,\n                },\n            ],\n        }));\n    }\n    async onRunUpdate(run) {\n        try {\n            const runName = this.keyMapByRunId[run.id];\n            if (runName === undefined) {\n                return;\n            }\n            const ops = [];\n            if (this._schemaFormat === \"streaming_events\") {\n                ops.push({\n                    op: \"replace\",\n                    path: `/logs/${runName}/inputs`,\n                    value: await _getStandardizedInputs(run, this._schemaFormat),\n                });\n            }\n            ops.push({\n                op: \"add\",\n                path: `/logs/${runName}/final_output`,\n                value: await _getStandardizedOutputs(run, this._schemaFormat),\n            });\n            if (run.end_time !== undefined) {\n                ops.push({\n                    op: \"add\",\n                    path: `/logs/${runName}/end_time`,\n                    value: new Date(run.end_time).toISOString(),\n                });\n            }\n            const patch = new RunLogPatch({ ops });\n            await this.writer.write(patch);\n        }\n        finally {\n            if (run.id === this.rootId) {\n                const patch = new RunLogPatch({\n                    ops: [\n                        {\n                            op: \"replace\",\n                            path: \"/final_output\",\n                            value: await _getStandardizedOutputs(run, this._schemaFormat),\n                        },\n                    ],\n                });\n                await this.writer.write(patch);\n                if (this.autoClose) {\n                    await this.writer.close();\n                }\n            }\n        }\n    }\n    async onLLMNewToken(run, token, kwargs) {\n        const runName = this.keyMapByRunId[run.id];\n        if (runName === undefined) {\n            return;\n        }\n        // TODO: Remove hack\n        const isChatModel = run.inputs.messages !== undefined;\n        let streamedOutputValue;\n        if (isChatModel) {\n            if (isChatGenerationChunk(kwargs?.chunk)) {\n                streamedOutputValue = kwargs?.chunk;\n            }\n            else {\n                streamedOutputValue = new AIMessageChunk({\n                    id: `run-${run.id}`,\n                    content: token,\n                });\n            }\n        }\n        else {\n            streamedOutputValue = token;\n        }\n        const patch = new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output_str/-`,\n                    value: token,\n                },\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output/-`,\n                    value: streamedOutputValue,\n                },\n            ],\n        });\n        await this.writer.write(patch);\n    }\n}\n","export const RUN_KEY = \"__run\";\n/**\n * Chunk of a single generation. Used for streaming.\n */\nexport class GenerationChunk {\n    constructor(fields) {\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"generationInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.text = fields.text;\n        this.generationInfo = fields.generationInfo;\n    }\n    concat(chunk) {\n        return new GenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n        });\n    }\n}\nexport class ChatGenerationChunk extends GenerationChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.message = fields.message;\n    }\n    concat(chunk) {\n        return new ChatGenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n            message: this.message.concat(chunk.message),\n        });\n    }\n}\n","import { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\nimport { GenerationChunk } from \"../outputs.js\";\nfunction assignName({ name, serialized, }) {\n    if (name !== undefined) {\n        return name;\n    }\n    if (serialized?.name !== undefined) {\n        return serialized.name;\n    }\n    else if (serialized?.id !== undefined && Array.isArray(serialized?.id)) {\n        return serialized.id[serialized.id.length - 1];\n    }\n    return \"Unnamed\";\n}\nexport const isStreamEventsHandler = (handler) => handler.name === \"event_stream_tracer\";\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class EventStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"runInfoMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"tappedPromises\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"event_stream_tracer\"\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.runType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.runType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, outputStream) {\n        const firstChunk = await outputStream.next();\n        if (firstChunk.done) {\n            return;\n        }\n        const runInfo = this.runInfoMap.get(runId);\n        // Run has finished, don't issue any stream events.\n        // An example of this is for runnables that use the default\n        // implementation of .stream(), which delegates to .invoke()\n        // and calls .onChainEnd() before passing it to the iterator.\n        if (runInfo === undefined) {\n            yield firstChunk.value;\n            return;\n        }\n        // Match format from handlers below\n        function _formatOutputChunk(eventType, data) {\n            if (eventType === \"llm\" && typeof data === \"string\") {\n                return new GenerationChunk({ text: data });\n            }\n            return data;\n        }\n        let tappedPromise = this.tappedPromises.get(runId);\n        // if we are the first to tap, issue stream events\n        if (tappedPromise === undefined) {\n            let tappedPromiseResolver;\n            tappedPromise = new Promise((resolve) => {\n                tappedPromiseResolver = resolve;\n            });\n            this.tappedPromises.set(runId, tappedPromise);\n            try {\n                const event = {\n                    event: `on_${runInfo.runType}_stream`,\n                    run_id: runId,\n                    name: runInfo.name,\n                    tags: runInfo.tags,\n                    metadata: runInfo.metadata,\n                    data: {},\n                };\n                await this.send({\n                    ...event,\n                    data: {\n                        chunk: _formatOutputChunk(runInfo.runType, firstChunk.value),\n                    },\n                }, runInfo);\n                yield firstChunk.value;\n                for await (const chunk of outputStream) {\n                    // Don't yield tool and retriever stream events\n                    if (runInfo.runType !== \"tool\" && runInfo.runType !== \"retriever\") {\n                        await this.send({\n                            ...event,\n                            data: {\n                                chunk: _formatOutputChunk(runInfo.runType, chunk),\n                            },\n                        }, runInfo);\n                    }\n                    yield chunk;\n                }\n            }\n            finally {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tappedPromiseResolver();\n                // Don't delete from the promises map to keep track of which runs have been tapped.\n            }\n        }\n        else {\n            // otherwise just pass through\n            yield firstChunk.value;\n            for await (const chunk of outputStream) {\n                yield chunk;\n            }\n        }\n    }\n    async send(payload, run) {\n        if (this._includeRun(run)) {\n            await this.writer.write(payload);\n        }\n    }\n    async sendEndEvent(payload, run) {\n        const tappedPromise = this.tappedPromises.get(payload.run_id);\n        if (tappedPromise !== undefined) {\n            void tappedPromise.then(() => {\n                void this.send(payload, run);\n            });\n        }\n        else {\n            await this.send(payload, run);\n        }\n    }\n    async onLLMStart(run) {\n        const runName = assignName(run);\n        const runType = run.inputs.messages !== undefined ? \"chat_model\" : \"llm\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType,\n            inputs: run.inputs,\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        const eventName = `on_${runType}_start`;\n        await this.send({\n            event: eventName,\n            data: {\n                input: run.inputs,\n            },\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onLLMNewToken(run, token, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    kwargs) {\n        const runInfo = this.runInfoMap.get(run.id);\n        let chunk;\n        let eventName;\n        if (runInfo === undefined) {\n            throw new Error(`onLLMNewToken: Run ID ${run.id} not found in run map.`);\n        }\n        // Top-level streaming events are covered by tapOutputIterable\n        if (this.runInfoMap.size === 1) {\n            return;\n        }\n        if (runInfo.runType === \"chat_model\") {\n            eventName = \"on_chat_model_stream\";\n            if (kwargs?.chunk === undefined) {\n                chunk = new AIMessageChunk({ content: token, id: `run-${run.id}` });\n            }\n            else {\n                chunk = kwargs.chunk.message;\n            }\n        }\n        else if (runInfo.runType === \"llm\") {\n            eventName = \"on_llm_stream\";\n            if (kwargs?.chunk === undefined) {\n                chunk = new GenerationChunk({ text: token });\n            }\n            else {\n                chunk = kwargs.chunk;\n            }\n        }\n        else {\n            throw new Error(`Unexpected run type ${runInfo.runType}`);\n        }\n        await this.send({\n            event: eventName,\n            data: {\n                chunk,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onLLMEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        let eventName;\n        if (runInfo === undefined) {\n            throw new Error(`onLLMEnd: Run ID ${run.id} not found in run map.`);\n        }\n        const generations = run.outputs?.generations;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let output;\n        if (runInfo.runType === \"chat_model\") {\n            for (const generation of generations ?? []) {\n                if (output !== undefined) {\n                    break;\n                }\n                output = generation[0]?.message;\n            }\n            eventName = \"on_chat_model_end\";\n        }\n        else if (runInfo.runType === \"llm\") {\n            output = {\n                generations: generations?.map((generation) => {\n                    return generation.map((chunk) => {\n                        return {\n                            text: chunk.text,\n                            generationInfo: chunk.generationInfo,\n                        };\n                    });\n                }),\n                llmOutput: run.outputs?.llmOutput ?? {},\n            };\n            eventName = \"on_llm_end\";\n        }\n        else {\n            throw new Error(`onLLMEnd: Unexpected run type: ${runInfo.runType}`);\n        }\n        await this.sendEndEvent({\n            event: eventName,\n            data: {\n                output,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onChainStart(run) {\n        const runName = assignName(run);\n        const runType = run.run_type ?? \"chain\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType: run.run_type,\n        };\n        let eventData = {};\n        // Workaround Runnable core code not sending input when transform streaming.\n        if (run.inputs.input === \"\" && Object.keys(run.inputs).length === 1) {\n            eventData = {};\n            runInfo.inputs = {};\n        }\n        else if (run.inputs.input !== undefined) {\n            eventData.input = run.inputs.input;\n            runInfo.inputs = run.inputs.input;\n        }\n        else {\n            eventData.input = run.inputs;\n            runInfo.inputs = run.inputs;\n        }\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: `on_${runType}_start`,\n            data: eventData,\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onChainEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onChainEnd: Run ID ${run.id} not found in run map.`);\n        }\n        const eventName = `on_${run.run_type}_end`;\n        const inputs = run.inputs ?? runInfo.inputs ?? {};\n        const outputs = run.outputs?.output ?? run.outputs;\n        const data = {\n            output: outputs,\n            input: inputs,\n        };\n        if (inputs.input && Object.keys(inputs).length === 1) {\n            data.input = inputs.input;\n            runInfo.inputs = inputs.input;\n        }\n        await this.sendEndEvent({\n            event: eventName,\n            data,\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata ?? {},\n        }, runInfo);\n    }\n    async onToolStart(run) {\n        const runName = assignName(run);\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType: \"tool\",\n            inputs: run.inputs ?? {},\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: \"on_tool_start\",\n            data: {\n                input: run.inputs ?? {},\n            },\n            name: runName,\n            run_id: run.id,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onToolEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onToolEnd: Run ID ${run.id} not found in run map.`);\n        }\n        if (runInfo.inputs === undefined) {\n            throw new Error(`onToolEnd: Run ID ${run.id} is a tool call, and is expected to have traced inputs.`);\n        }\n        const output = run.outputs?.output === undefined ? run.outputs : run.outputs.output;\n        await this.sendEndEvent({\n            event: \"on_tool_end\",\n            data: {\n                output,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onRetrieverStart(run) {\n        const runName = assignName(run);\n        const runType = \"retriever\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType,\n            inputs: {\n                query: run.inputs.query,\n            },\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: \"on_retriever_start\",\n            data: {\n                input: {\n                    query: run.inputs.query,\n                },\n            },\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onRetrieverEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onRetrieverEnd: Run ID ${run.id} not found in run map.`);\n        }\n        await this.sendEndEvent({\n            event: \"on_retriever_end\",\n            data: {\n                output: run.outputs?.documents ?? run.outputs,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleCustomEvent(eventName, data, runId) {\n        const runInfo = this.runInfoMap.get(runId);\n        if (runInfo === undefined) {\n            throw new Error(`handleCustomEvent: Run ID ${runId} not found in run map.`);\n        }\n        await this.send({\n            event: \"on_custom_event\",\n            run_id: runId,\n            name: eventName,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n            data,\n        }, runInfo);\n    }\n    async finish() {\n        const pendingPromises = [...this.tappedPromises.values()];\n        void Promise.all(pendingPromises).finally(() => {\n            void this.writer.close();\n        });\n    }\n}\n","import { CallbackManager, ensureHandler } from \"../callbacks/manager.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nexport const DEFAULT_RECURSION_LIMIT = 25;\nexport async function getCallbackManagerForConfig(config) {\n    return CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n}\nexport function mergeConfigs(...configs) {\n    // We do not want to call ensureConfig on the empty state here as this may cause\n    // double loading of callbacks if async local storage is being used.\n    const copy = {};\n    for (const options of configs.filter((c) => !!c)) {\n        for (const key of Object.keys(options)) {\n            if (key === \"metadata\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"tags\") {\n                const baseKeys = copy[key] ?? [];\n                copy[key] = [...new Set(baseKeys.concat(options[key] ?? []))];\n            }\n            else if (key === \"configurable\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"timeout\") {\n                if (copy.timeout === undefined) {\n                    copy.timeout = options.timeout;\n                }\n                else if (options.timeout !== undefined) {\n                    copy.timeout = Math.min(copy.timeout, options.timeout);\n                }\n            }\n            else if (key === \"signal\") {\n                if (copy.signal === undefined) {\n                    copy.signal = options.signal;\n                }\n                else if (options.signal !== undefined) {\n                    if (\"any\" in AbortSignal) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        copy.signal = AbortSignal.any([\n                            copy.signal,\n                            options.signal,\n                        ]);\n                    }\n                    else {\n                        copy.signal = options.signal;\n                    }\n                }\n            }\n            else if (key === \"callbacks\") {\n                const baseCallbacks = copy.callbacks;\n                const providedCallbacks = options.callbacks;\n                // callbacks can be either undefined, Array<handler> or manager\n                // so merging two callbacks values has 6 cases\n                if (Array.isArray(providedCallbacks)) {\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        copy.callbacks = baseCallbacks.concat(providedCallbacks);\n                    }\n                    else {\n                        // baseCallbacks is a manager\n                        const manager = baseCallbacks.copy();\n                        for (const callback of providedCallbacks) {\n                            manager.addHandler(ensureHandler(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                }\n                else if (providedCallbacks) {\n                    // providedCallbacks is a manager\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        const manager = providedCallbacks.copy();\n                        for (const callback of baseCallbacks) {\n                            manager.addHandler(ensureHandler(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                    else {\n                        // baseCallbacks is also a manager\n                        copy.callbacks = new CallbackManager(providedCallbacks._parentRunId, {\n                            handlers: baseCallbacks.handlers.concat(providedCallbacks.handlers),\n                            inheritableHandlers: baseCallbacks.inheritableHandlers.concat(providedCallbacks.inheritableHandlers),\n                            tags: Array.from(new Set(baseCallbacks.tags.concat(providedCallbacks.tags))),\n                            inheritableTags: Array.from(new Set(baseCallbacks.inheritableTags.concat(providedCallbacks.inheritableTags))),\n                            metadata: {\n                                ...baseCallbacks.metadata,\n                                ...providedCallbacks.metadata,\n                            },\n                        });\n                    }\n                }\n            }\n            else {\n                const typedKey = key;\n                copy[typedKey] = options[typedKey] ?? copy[typedKey];\n            }\n        }\n    }\n    return copy;\n}\nconst PRIMITIVES = new Set([\"string\", \"number\", \"boolean\"]);\n/**\n * Ensure that a passed config is an object with all required keys present.\n */\nexport function ensureConfig(config) {\n    const implicitConfig = AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    let empty = {\n        tags: [],\n        metadata: {},\n        recursionLimit: 25,\n        runId: undefined,\n    };\n    if (implicitConfig) {\n        // Don't allow runId and runName to be loaded implicitly, as this can cause\n        // child runs to improperly inherit their parents' run ids.\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { runId, runName, ...rest } = implicitConfig;\n        empty = Object.entries(rest).reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (currentConfig, [key, value]) => {\n            if (value !== undefined) {\n                // eslint-disable-next-line no-param-reassign\n                currentConfig[key] = value;\n            }\n            return currentConfig;\n        }, empty);\n    }\n    if (config) {\n        empty = Object.entries(config).reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (currentConfig, [key, value]) => {\n            if (value !== undefined) {\n                // eslint-disable-next-line no-param-reassign\n                currentConfig[key] = value;\n            }\n            return currentConfig;\n        }, empty);\n    }\n    if (empty?.configurable) {\n        for (const key of Object.keys(empty.configurable)) {\n            if (PRIMITIVES.has(typeof empty.configurable[key]) &&\n                !empty.metadata?.[key]) {\n                if (!empty.metadata) {\n                    empty.metadata = {};\n                }\n                empty.metadata[key] = empty.configurable[key];\n            }\n        }\n    }\n    if (empty.timeout !== undefined) {\n        if (empty.timeout <= 0) {\n            throw new Error(\"Timeout must be a positive number\");\n        }\n        const timeoutSignal = AbortSignal.timeout(empty.timeout);\n        if (empty.signal !== undefined) {\n            if (\"any\" in AbortSignal) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                empty.signal = AbortSignal.any([empty.signal, timeoutSignal]);\n            }\n        }\n        else {\n            empty.signal = timeoutSignal;\n        }\n        delete empty.timeout;\n    }\n    return empty;\n}\n/**\n * Helper function that patches runnable configs with updated properties.\n */\nexport function patchConfig(config = {}, { callbacks, maxConcurrency, recursionLimit, runName, configurable, runId, } = {}) {\n    const newConfig = ensureConfig(config);\n    if (callbacks !== undefined) {\n        /**\n         * If we're replacing callbacks we need to unset runName\n         * since that should apply only to the same run as the original callbacks\n         */\n        delete newConfig.runName;\n        newConfig.callbacks = callbacks;\n    }\n    if (recursionLimit !== undefined) {\n        newConfig.recursionLimit = recursionLimit;\n    }\n    if (maxConcurrency !== undefined) {\n        newConfig.maxConcurrency = maxConcurrency;\n    }\n    if (runName !== undefined) {\n        newConfig.runName = runName;\n    }\n    if (configurable !== undefined) {\n        newConfig.configurable = { ...newConfig.configurable, ...configurable };\n    }\n    if (runId !== undefined) {\n        delete newConfig.runId;\n    }\n    return newConfig;\n}\n","import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_NO_RETRY = [\n    400,\n    401,\n    402,\n    403,\n    404,\n    405,\n    406,\n    407,\n    409, // Conflict\n];\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultFailedAttemptHandler = (error) => {\n    if (error.message.startsWith(\"Cancel\") ||\n        error.message.startsWith(\"AbortError\") ||\n        error.name === \"AbortError\") {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.code === \"ECONNABORTED\") {\n        throw error;\n    }\n    const status = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error?.response?.status ?? error?.status;\n    if (status && STATUS_NO_RETRY.includes(+status)) {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.error?.code === \"insufficient_quota\") {\n        const err = new Error(error?.message);\n        err.name = \"InsufficientQuotaError\";\n        throw err;\n    }\n};\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        this.onFailedAttempt =\n            params.onFailedAttempt ?? defaultFailedAttemptHandler;\n        const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt: this.onFailedAttempt,\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n","import { BaseTracer } from \"./base.js\";\nexport class RootListenersTracer extends BaseTracer {\n    constructor({ config, onStart, onEnd, onError, }) {\n        super({ _awaitHandler: true });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RootListenersTracer\"\n        });\n        /** The Run's ID. Type UUID */\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnStart\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnEnd\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.config = config;\n        this.argOnStart = onStart;\n        this.argOnEnd = onEnd;\n        this.argOnError = onError;\n    }\n    /**\n     * This is a legacy method only called once for an entire run tree\n     * therefore not useful here\n     * @param {Run} _ Not used\n     */\n    persistRun(_) {\n        return Promise.resolve();\n    }\n    async onRunCreate(run) {\n        if (this.rootId) {\n            return;\n        }\n        this.rootId = run.id;\n        if (this.argOnStart) {\n            if (this.argOnStart.length === 1) {\n                await this.argOnStart(run);\n            }\n            else if (this.argOnStart.length === 2) {\n                await this.argOnStart(run, this.config);\n            }\n        }\n    }\n    async onRunUpdate(run) {\n        if (run.id !== this.rootId) {\n            return;\n        }\n        if (!run.error) {\n            if (this.argOnEnd) {\n                if (this.argOnEnd.length === 1) {\n                    await this.argOnEnd(run);\n                }\n                else if (this.argOnEnd.length === 2) {\n                    await this.argOnEnd(run, this.config);\n                }\n            }\n        }\n        else if (this.argOnError) {\n            if (this.argOnError.length === 1) {\n                await this.argOnError(run);\n            }\n            else if (this.argOnError.length === 2) {\n                await this.argOnError(run, this.config);\n            }\n        }\n    }\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isRunnableInterface(thing) {\n    return thing ? thing.lc_runnable : false;\n}\n/**\n * Utility to filter the root event in the streamEvents implementation.\n * This is simply binding the arguments to the namespace to make save on\n * a bit of typing in the streamEvents implementation.\n *\n * TODO: Refactor and remove.\n */\nexport class _RootEventFilter {\n    constructor(fields) {\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.includeNames = fields.includeNames;\n        this.includeTypes = fields.includeTypes;\n        this.includeTags = fields.includeTags;\n        this.excludeNames = fields.excludeNames;\n        this.excludeTypes = fields.excludeTypes;\n        this.excludeTags = fields.excludeTags;\n    }\n    includeEvent(event, rootType) {\n        let include = this.includeNames === undefined &&\n            this.includeTypes === undefined &&\n            this.includeTags === undefined;\n        const eventTags = event.tags ?? [];\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(event.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(rootType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include || eventTags.some((tag) => this.includeTags?.includes(tag));\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(event.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(rootType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && eventTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n}\n","export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const jsonDescription = (jsonSchema, def) => {\n    if (def.description) {\n        try {\n            return {\n                ...jsonSchema,\n                ...JSON.parse(def.description),\n            };\n        }\n        catch { }\n    }\n    return jsonSchema;\n};\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    allowedAdditionalProperties: true,\n    rejectedAdditionalProperties: false,\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n","import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n","export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n","export function parseAnyDef() {\n    return {};\n}\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n","export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n","import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? parseDef(_def.schema._def, refs)\n        : {};\n}\n","export function parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: Array.from(def.values),\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n","export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n","import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: refs.rejectedAdditionalProperties,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? refs.allowedAdditionalProperties,\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n","export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n","export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n","export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n","import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n","import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                addErrorMessage(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n","import { ZodOptional } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        properties: {},\n    };\n    const required = [];\n    const shape = def.shape();\n    for (const propName in shape) {\n        let propDef = shape[propName];\n        if (propDef === undefined || propDef._def === undefined) {\n            continue;\n        }\n        let propOptional = safeIsOptional(propDef);\n        if (propOptional && forceOptionalIntoNullable) {\n            if (propDef instanceof ZodOptional) {\n                propDef = propDef._def.innerType;\n            }\n            if (!propDef.isNullable()) {\n                propDef = propDef.nullable();\n            }\n            propOptional = false;\n        }\n        const parsedDef = parseDef(propDef._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", propName],\n            propertyPath: [...refs.currentPath, \"properties\", propName],\n        });\n        if (parsedDef === undefined) {\n            continue;\n        }\n        result.properties[propName] = parsedDef;\n        if (!propOptional) {\n            required.push(propName);\n        }\n    }\n    if (required.length) {\n        result.required = required;\n    }\n    const additionalProperties = decideAdditionalProperties(def, refs);\n    if (additionalProperties !== undefined) {\n        result.additionalProperties = additionalProperties;\n    }\n    return result;\n}\nfunction decideAdditionalProperties(def, refs) {\n    if (def.catchall._def.typeName !== \"ZodNever\") {\n        return parseDef(def.catchall._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        });\n    }\n    switch (def.unknownKeys) {\n        case \"passthrough\":\n            return refs.allowedAdditionalProperties;\n        case \"strict\":\n            return refs.rejectedAdditionalProperties;\n        case \"strip\":\n            return refs.removeAdditionalStrategy === \"strict\"\n                ? refs.allowedAdditionalProperties\n                : refs.rejectedAdditionalProperties;\n    }\n}\nfunction safeIsOptional(schema) {\n    try {\n        return schema.isOptional();\n    }\n    catch {\n        return true;\n    }\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n","import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n","import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n","export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n","export function parseUnknownDef() {\n    return {};\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nexport const selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return () => def.getter()._def;\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\n","import { ignoreOverride } from \"./Options.js\";\nimport { selectParser } from \"./selectParser.js\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchemaOrGetter = selectParser(def, def.typeName, refs);\n    // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n    const jsonSchema = typeof jsonSchemaOrGetter === \"function\"\n        ? parseDef(jsonSchemaOrGetter(), refs)\n        : jsonSchemaOrGetter;\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    if (refs.postProcess) {\n        const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n        newItem.jsonSchema = jsonSchema;\n        return postProcessResult;\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n","import { parseDef } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n","function _escapeNodeLabel(nodeLabel) {\n    // Escapes the node label for Mermaid syntax.\n    return nodeLabel.replace(/[^a-zA-Z-_0-9]/g, \"_\");\n}\n// Adjusts Mermaid edge to map conditional nodes to pure nodes.\nfunction _adjustMermaidEdge(edge, nodes) {\n    const sourceNodeLabel = nodes[edge.source] ?? edge.source;\n    const targetNodeLabel = nodes[edge.target] ?? edge.target;\n    return [sourceNodeLabel, targetNodeLabel];\n}\nfunction _generateMermaidGraphStyles(nodeColors) {\n    let styles = \"\";\n    for (const [className, color] of Object.entries(nodeColors)) {\n        styles += `\\tclassDef ${className}class fill:${color};\\n`;\n    }\n    return styles;\n}\n/**\n * Draws a Mermaid graph using the provided graph data\n */\nexport function drawMermaid(nodes, edges, config) {\n    const { firstNodeLabel, lastNodeLabel, nodeColors, withStyles = true, curveStyle = \"linear\", wrapLabelNWords = 9, } = config ?? {};\n    // Initialize Mermaid graph configuration\n    let mermaidGraph = withStyles\n        ? `%%{init: {'flowchart': {'curve': '${curveStyle}'}}}%%\\ngraph TD;\\n`\n        : \"graph TD;\\n\";\n    if (withStyles) {\n        // Node formatting templates\n        const defaultClassLabel = \"default\";\n        const formatDict = {\n            [defaultClassLabel]: \"{0}([{1}]):::otherclass\",\n        };\n        if (firstNodeLabel !== undefined) {\n            formatDict[firstNodeLabel] = \"{0}[{0}]:::startclass\";\n        }\n        if (lastNodeLabel !== undefined) {\n            formatDict[lastNodeLabel] = \"{0}[{0}]:::endclass\";\n        }\n        // Add nodes to the graph\n        for (const node of Object.values(nodes)) {\n            const nodeLabel = formatDict[node] ?? formatDict[defaultClassLabel];\n            const escapedNodeLabel = _escapeNodeLabel(node);\n            const nodeParts = node.split(\":\");\n            const nodeSplit = nodeParts[nodeParts.length - 1];\n            mermaidGraph += `\\t${nodeLabel\n                .replace(/\\{0\\}/g, escapedNodeLabel)\n                .replace(/\\{1\\}/g, nodeSplit)};\\n`;\n        }\n    }\n    let subgraph = \"\";\n    // Add edges to the graph\n    for (const edge of edges) {\n        const sourcePrefix = edge.source.includes(\":\")\n            ? edge.source.split(\":\")[0]\n            : undefined;\n        const targetPrefix = edge.target.includes(\":\")\n            ? edge.target.split(\":\")[0]\n            : undefined;\n        // Exit subgraph if source or target is not in the same subgraph\n        if (subgraph !== \"\" &&\n            (subgraph !== sourcePrefix || subgraph !== targetPrefix)) {\n            mermaidGraph += \"\\tend\\n\";\n            subgraph = \"\";\n        }\n        // Enter subgraph if source and target are in the same subgraph\n        if (subgraph === \"\" &&\n            sourcePrefix !== undefined &&\n            sourcePrefix === targetPrefix) {\n            mermaidGraph = `\\tsubgraph ${sourcePrefix}\\n`;\n            subgraph = sourcePrefix;\n        }\n        const [source, target] = _adjustMermaidEdge(edge, nodes);\n        let edgeLabel = \"\";\n        // Add BR every wrapLabelNWords words\n        if (edge.data !== undefined) {\n            let edgeData = edge.data;\n            const words = edgeData.split(\" \");\n            // Group words into chunks of wrapLabelNWords size\n            if (words.length > wrapLabelNWords) {\n                edgeData = words\n                    .reduce((acc, word, i) => {\n                    if (i % wrapLabelNWords === 0)\n                        acc.push(\"\");\n                    acc[acc.length - 1] += ` ${word}`;\n                    return acc;\n                }, [])\n                    .join(\"<br>\");\n            }\n            if (edge.conditional) {\n                edgeLabel = ` -. ${edgeData} .-> `;\n            }\n            else {\n                edgeLabel = ` -- ${edgeData} --> `;\n            }\n        }\n        else {\n            if (edge.conditional) {\n                edgeLabel = ` -.-> `;\n            }\n            else {\n                edgeLabel = ` --> `;\n            }\n        }\n        mermaidGraph += `\\t${_escapeNodeLabel(source)}${edgeLabel}${_escapeNodeLabel(target)};\\n`;\n    }\n    if (subgraph !== \"\") {\n        mermaidGraph += \"end\\n\";\n    }\n    // Add custom styles for nodes\n    if (withStyles && nodeColors !== undefined) {\n        mermaidGraph += _generateMermaidGraphStyles(nodeColors);\n    }\n    return mermaidGraph;\n}\n/**\n * Renders Mermaid graph using the Mermaid.INK API.\n */\nexport async function drawMermaidPng(mermaidSyntax, config) {\n    let { backgroundColor = \"white\" } = config ?? {};\n    // Use btoa for compatibility, assume ASCII\n    const mermaidSyntaxEncoded = btoa(mermaidSyntax);\n    // Check if the background color is a hexadecimal color code using regex\n    if (backgroundColor !== undefined) {\n        const hexColorPattern = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\n        if (!hexColorPattern.test(backgroundColor)) {\n            backgroundColor = `!${backgroundColor}`;\n        }\n    }\n    const imageUrl = `https://mermaid.ink/img/${mermaidSyntaxEncoded}?bgColor=${backgroundColor}`;\n    const res = await fetch(imageUrl);\n    if (!res.ok) {\n        throw new Error([\n            `Failed to render the graph using the Mermaid.INK API.`,\n            `Status code: ${res.status}`,\n            `Status text: ${res.statusText}`,\n        ].join(\"\\n\"));\n    }\n    const content = await res.blob();\n    return content;\n}\n","import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { v4 as uuidv4, validate as isUuid } from \"uuid\";\nimport { isRunnableInterface } from \"./utils.js\";\nimport { drawMermaid, drawMermaidPng } from \"./graph_mermaid.js\";\nconst MAX_DATA_DISPLAY_NAME_LENGTH = 42;\nfunction nodeDataStr(node) {\n    if (!isUuid(node.id)) {\n        return node.id;\n    }\n    else if (isRunnableInterface(node.data)) {\n        try {\n            let data = node.data.getName();\n            data = data.startsWith(\"Runnable\") ? data.slice(\"Runnable\".length) : data;\n            if (data.length > MAX_DATA_DISPLAY_NAME_LENGTH) {\n                data = `${data.substring(0, MAX_DATA_DISPLAY_NAME_LENGTH)}...`;\n            }\n            return data;\n        }\n        catch (error) {\n            return node.data.getName();\n        }\n    }\n    else {\n        return node.data.name ?? \"UnknownSchema\";\n    }\n}\nfunction nodeDataJson(node) {\n    // if node.data is implements Runnable\n    if (isRunnableInterface(node.data)) {\n        return {\n            type: \"runnable\",\n            data: {\n                id: node.data.lc_id,\n                name: node.data.getName(),\n            },\n        };\n    }\n    else {\n        return {\n            type: \"schema\",\n            data: { ...zodToJsonSchema(node.data.schema), title: node.data.name },\n        };\n    }\n}\nexport class Graph {\n    constructor() {\n        Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"edges\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    // Convert the graph to a JSON-serializable format.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON() {\n        const stableNodeIds = {};\n        Object.values(this.nodes).forEach((node, i) => {\n            stableNodeIds[node.id] = isUuid(node.id) ? i : node.id;\n        });\n        return {\n            nodes: Object.values(this.nodes).map((node) => ({\n                id: stableNodeIds[node.id],\n                ...nodeDataJson(node),\n            })),\n            edges: this.edges.map((edge) => {\n                const item = {\n                    source: stableNodeIds[edge.source],\n                    target: stableNodeIds[edge.target],\n                };\n                if (typeof edge.data !== \"undefined\") {\n                    item.data = edge.data;\n                }\n                if (typeof edge.conditional !== \"undefined\") {\n                    item.conditional = edge.conditional;\n                }\n                return item;\n            }),\n        };\n    }\n    addNode(data, id) {\n        if (id !== undefined && this.nodes[id] !== undefined) {\n            throw new Error(`Node with id ${id} already exists`);\n        }\n        const nodeId = id || uuidv4();\n        const node = { id: nodeId, data };\n        this.nodes[nodeId] = node;\n        return node;\n    }\n    removeNode(node) {\n        // Remove the node from the nodes map\n        delete this.nodes[node.id];\n        // Filter out edges connected to the node\n        this.edges = this.edges.filter((edge) => edge.source !== node.id && edge.target !== node.id);\n    }\n    addEdge(source, target, data, conditional) {\n        if (this.nodes[source.id] === undefined) {\n            throw new Error(`Source node ${source.id} not in graph`);\n        }\n        if (this.nodes[target.id] === undefined) {\n            throw new Error(`Target node ${target.id} not in graph`);\n        }\n        const edge = {\n            source: source.id,\n            target: target.id,\n            data,\n            conditional,\n        };\n        this.edges.push(edge);\n        return edge;\n    }\n    firstNode() {\n        const targets = new Set(this.edges.map((edge) => edge.target));\n        const found = [];\n        Object.values(this.nodes).forEach((node) => {\n            if (!targets.has(node.id)) {\n                found.push(node);\n            }\n        });\n        return found[0];\n    }\n    lastNode() {\n        const sources = new Set(this.edges.map((edge) => edge.source));\n        const found = [];\n        Object.values(this.nodes).forEach((node) => {\n            if (!sources.has(node.id)) {\n                found.push(node);\n            }\n        });\n        return found[0];\n    }\n    /**\n     * Add all nodes and edges from another graph.\n     * Note this doesn't check for duplicates, nor does it connect the graphs.\n     */\n    extend(graph, prefix = \"\") {\n        let finalPrefix = prefix;\n        const nodeIds = Object.values(graph.nodes).map((node) => node.id);\n        if (nodeIds.every(isUuid)) {\n            finalPrefix = \"\";\n        }\n        const prefixed = (id) => {\n            return finalPrefix ? `${finalPrefix}:${id}` : id;\n        };\n        Object.entries(graph.nodes).forEach(([key, value]) => {\n            this.nodes[prefixed(key)] = { ...value, id: prefixed(key) };\n        });\n        const newEdges = graph.edges.map((edge) => {\n            return {\n                ...edge,\n                source: prefixed(edge.source),\n                target: prefixed(edge.target),\n            };\n        });\n        // Add all edges from the other graph\n        this.edges = [...this.edges, ...newEdges];\n        const first = graph.firstNode();\n        const last = graph.lastNode();\n        return [\n            first ? { id: prefixed(first.id), data: first.data } : undefined,\n            last ? { id: prefixed(last.id), data: last.data } : undefined,\n        ];\n    }\n    trimFirstNode() {\n        const firstNode = this.firstNode();\n        if (firstNode) {\n            const outgoingEdges = this.edges.filter((edge) => edge.source === firstNode.id);\n            if (Object.keys(this.nodes).length === 1 || outgoingEdges.length === 1) {\n                this.removeNode(firstNode);\n            }\n        }\n    }\n    trimLastNode() {\n        const lastNode = this.lastNode();\n        if (lastNode) {\n            const incomingEdges = this.edges.filter((edge) => edge.target === lastNode.id);\n            if (Object.keys(this.nodes).length === 1 || incomingEdges.length === 1) {\n                this.removeNode(lastNode);\n            }\n        }\n    }\n    drawMermaid(params) {\n        const { withStyles, curveStyle, nodeColors = { start: \"#ffdfba\", end: \"#baffc9\", other: \"#fad7de\" }, wrapLabelNWords, } = params ?? {};\n        const nodes = {};\n        for (const node of Object.values(this.nodes)) {\n            nodes[node.id] = nodeDataStr(node);\n        }\n        const firstNode = this.firstNode();\n        const firstNodeLabel = firstNode ? nodeDataStr(firstNode) : undefined;\n        const lastNode = this.lastNode();\n        const lastNodeLabel = lastNode ? nodeDataStr(lastNode) : undefined;\n        return drawMermaid(nodes, this.edges, {\n            firstNodeLabel,\n            lastNodeLabel,\n            withStyles,\n            curveStyle,\n            nodeColors,\n            wrapLabelNWords,\n        });\n    }\n    async drawMermaidPng(params) {\n        const mermaidSyntax = this.drawMermaid(params);\n        return drawMermaidPng(mermaidSyntax, {\n            backgroundColor: params?.backgroundColor,\n        });\n    }\n}\n","import { IterableReadableStream } from \"../utils/stream.js\";\nexport function convertToHttpEventStream(stream) {\n    const encoder = new TextEncoder();\n    const finalStream = new ReadableStream({\n        async start(controller) {\n            for await (const chunk of stream) {\n                controller.enqueue(encoder.encode(`event: data\\ndata: ${JSON.stringify(chunk)}\\n\\n`));\n            }\n            controller.enqueue(encoder.encode(\"event: end\\n\\n\"));\n            controller.close();\n        },\n    });\n    return IterableReadableStream.fromReadableStream(finalStream);\n}\n","import { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nexport function isIterableIterator(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.iterator] === \"function\" &&\n        // avoid detecting array/set as iterator\n        typeof thing.next === \"function\");\n}\nexport const isIterator = (x) => x != null &&\n    typeof x === \"object\" &&\n    \"next\" in x &&\n    typeof x.next === \"function\";\nexport function isAsyncIterable(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.asyncIterator] ===\n            \"function\");\n}\nexport function* consumeIteratorInContext(context, iter) {\n    while (true) {\n        const { value, done } = AsyncLocalStorageProviderSingleton.runWithConfig(context, iter.next.bind(iter), true);\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\nexport async function* consumeAsyncIterableInContext(context, iter) {\n    const iterator = iter[Symbol.asyncIterator]();\n    while (true) {\n        const { value, done } = await AsyncLocalStorageProviderSingleton.runWithConfig(context, iterator.next.bind(iter), true);\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\n","import { z } from \"zod\";\nimport pRetry from \"p-retry\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { isTraceableFunction, } from \"langsmith/singletons/traceable\";\nimport { LogStreamCallbackHandler, RunLog, RunLogPatch, isLogStreamHandler, } from \"../tracers/log_stream.js\";\nimport { EventStreamCallbackHandler, isStreamEventsHandler, } from \"../tracers/event_stream.js\";\nimport { Serializable } from \"../load/serializable.js\";\nimport { IterableReadableStream, concat, atee, pipeGeneratorWithSetup, AsyncGeneratorWithSetup, } from \"../utils/stream.js\";\nimport { raceWithSignal } from \"../utils/signal.js\";\nimport { DEFAULT_RECURSION_LIMIT, ensureConfig, getCallbackManagerForConfig, mergeConfigs, patchConfig, } from \"./config.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { RootListenersTracer } from \"../tracers/root_listener.js\";\nimport { _RootEventFilter, isRunnableInterface } from \"./utils.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { Graph } from \"./graph.js\";\nimport { convertToHttpEventStream } from \"./wrappers.js\";\nimport { consumeAsyncIterableInContext, consumeIteratorInContext, isAsyncIterable, isIterableIterator, isIterator, } from \"./iter.js\";\nimport { _isToolCall, ToolInputParsingException } from \"../tools/utils.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _coerceToDict(value, defaultKey) {\n    return value &&\n        !Array.isArray(value) &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        !(value instanceof Date) &&\n        typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n/**\n * A Runnable is a generic unit of work that can be invoked, batched, streamed, and/or\n * transformed.\n */\nexport class Runnable extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    getName(suffix) {\n        const name = \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.name ?? this.constructor.lc_name() ?? this.constructor.name;\n        return suffix ? `${name}${suffix}` : name;\n    }\n    /**\n     * Bind arguments to a Runnable, returning a new Runnable.\n     * @param kwargs\n     * @returns A new RunnableBinding that, when invoked, will apply the bound args.\n     */\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({ bound: this, kwargs, config: {} });\n    }\n    /**\n     * Return a new Runnable that maps a list of inputs to a list of outputs,\n     * by calling invoke() with each input.\n     */\n    map() {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableEach({ bound: this });\n    }\n    /**\n     * Add retry logic to an existing runnable.\n     * @param kwargs\n     * @returns A new RunnableRetry that, when invoked, will retry according to the parameters.\n     */\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this,\n            kwargs: {},\n            config: {},\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    /**\n     * Bind config to a Runnable, returning a new Runnable.\n     * @param config New configuration parameters to attach to the new runnable.\n     * @returns A new RunnableBinding with a config matching what's passed.\n     */\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config,\n            kwargs: {},\n        });\n    }\n    /**\n     * Create a new runnable from the current one that will try invoking\n     * other passed fallback runnables if the initial invocation fails.\n     * @param fields.fallbacks Other runnables to call if the runnable errors.\n     * @returns A new RunnableWithFallbacks.\n     */\n    withFallbacks(fields) {\n        const fallbacks = Array.isArray(fields) ? fields : fields.fallbacks;\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableWithFallbacks({\n            runnable: this,\n            fallbacks,\n        });\n    }\n    _getOptionsList(options, length = 0) {\n        if (Array.isArray(options) && options.length !== length) {\n            throw new Error(`Passed \"options\" must be an array with the same length as the inputs, but got ${options.length} options for ${length} inputs`);\n        }\n        if (Array.isArray(options)) {\n            return options.map(ensureConfig);\n        }\n        if (length > 1 && !Array.isArray(options) && options.runId) {\n            console.warn(\"Provided runId will be used only for the first element of the batch.\");\n            const subsequent = Object.fromEntries(Object.entries(options).filter(([key]) => key !== \"runId\"));\n            return Array.from({ length }, (_, i) => ensureConfig(i === 0 ? options : subsequent));\n        }\n        return Array.from({ length }, () => ensureConfig(options));\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const maxConcurrency = configList[0]?.maxConcurrency ?? batchOptions?.maxConcurrency;\n        const caller = new AsyncCaller({\n            maxConcurrency,\n            onFailedAttempt: (e) => {\n                throw e;\n            },\n        });\n        const batchCalls = inputs.map((input, i) => caller.call(async () => {\n            try {\n                const result = await this.invoke(input, configList[i]);\n                return result;\n            }\n            catch (e) {\n                if (batchOptions?.returnExceptions) {\n                    return e;\n                }\n                throw e;\n            }\n        }));\n        return Promise.all(batchCalls);\n    }\n    /**\n     * Default streaming implementation.\n     * Subclasses should override this method if they support streaming output.\n     * @param input\n     * @param options\n     */\n    async *_streamIterator(input, options) {\n        yield this.invoke(input, options);\n    }\n    /**\n     * Stream output in chunks.\n     * @param input\n     * @param options\n     * @returns A readable stream that is also an iterable.\n     */\n    async stream(input, options) {\n        // Buffer the first streamed chunk to allow for initial errors\n        // to surface immediately.\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this._streamIterator(input, config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n    _separateRunnableConfigFromCallOptions(options) {\n        let runnableConfig;\n        if (options === undefined) {\n            runnableConfig = ensureConfig(options);\n        }\n        else {\n            runnableConfig = ensureConfig({\n                callbacks: options.callbacks,\n                tags: options.tags,\n                metadata: options.metadata,\n                runName: options.runName,\n                configurable: options.configurable,\n                recursionLimit: options.recursionLimit,\n                maxConcurrency: options.maxConcurrency,\n                runId: options.runId,\n                timeout: options.timeout,\n                signal: options.signal,\n            });\n        }\n        const callOptions = { ...options };\n        delete callOptions.callbacks;\n        delete callOptions.tags;\n        delete callOptions.metadata;\n        delete callOptions.runName;\n        delete callOptions.configurable;\n        delete callOptions.recursionLimit;\n        delete callOptions.maxConcurrency;\n        delete callOptions.runId;\n        delete callOptions.timeout;\n        delete callOptions.signal;\n        return [runnableConfig, callOptions];\n    }\n    async _callWithConfig(func, input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, config?.runType, undefined, undefined, config?.runName ?? this.getName());\n        delete config.runId;\n        let output;\n        try {\n            const promise = func.call(this, input, config, runManager);\n            output = await raceWithSignal(promise, options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n        return output;\n    }\n    /**\n     * Internal method that handles batching and configuration for a runnable\n     * It takes a function, input values, and optional configuration, and\n     * returns a promise that resolves to the output values.\n     * @param func The function to be executed for each input value.\n     * @param input The input values to be processed.\n     * @param config Optional configuration for the function execution.\n     * @returns A promise that resolves to the output values.\n     */\n    async _batchWithConfig(func, inputs, options, batchOptions) {\n        const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(optionsList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), optionsList[i].runId, optionsList[i].runType, undefined, undefined, optionsList[i].runName ?? this.getName());\n            delete optionsList[i].runId;\n            return handleStartRes;\n        }));\n        let outputs;\n        try {\n            const promise = func.call(this, inputs, optionsList, runManagers, batchOptions);\n            outputs = await raceWithSignal(promise, optionsList?.[0]?.signal);\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(outputs, \"output\"))));\n        return outputs;\n    }\n    /**\n     * Helper method to transform an Iterator of Input values into an Iterator of\n     * Output values, with callbacks.\n     * Use this to implement `stream()` or `transform()` in Runnable subclasses.\n     */\n    async *_transformStreamWithConfig(inputGenerator, transformer, options) {\n        let finalInput;\n        let finalInputSupported = true;\n        let finalOutput;\n        let finalOutputSupported = true;\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        async function* wrapInputForTracing() {\n            for await (const chunk of inputGenerator) {\n                if (finalInputSupported) {\n                    if (finalInput === undefined) {\n                        finalInput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalInput = concat(finalInput, chunk);\n                        }\n                        catch {\n                            finalInput = undefined;\n                            finalInputSupported = false;\n                        }\n                    }\n                }\n                yield chunk;\n            }\n        }\n        let runManager;\n        try {\n            const pipe = await pipeGeneratorWithSetup(transformer.bind(this), wrapInputForTracing(), async () => callbackManager_?.handleChainStart(this.toJSON(), { input: \"\" }, config.runId, config.runType, undefined, undefined, config.runName ?? this.getName()), options?.signal, config);\n            delete config.runId;\n            runManager = pipe.setup;\n            const streamEventsHandler = runManager?.handlers.find(isStreamEventsHandler);\n            let iterator = pipe.output;\n            if (streamEventsHandler !== undefined && runManager !== undefined) {\n                iterator = streamEventsHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            const streamLogHandler = runManager?.handlers.find(isLogStreamHandler);\n            if (streamLogHandler !== undefined && runManager !== undefined) {\n                iterator = streamLogHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            for await (const chunk of iterator) {\n                yield chunk;\n                if (finalOutputSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch {\n                            finalOutput = undefined;\n                            finalOutputSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e, undefined, undefined, undefined, {\n                inputs: _coerceToDict(finalInput, \"input\"),\n            });\n            throw e;\n        }\n        await runManager?.handleChainEnd(finalOutput ?? {}, undefined, undefined, undefined, { inputs: _coerceToDict(finalInput, \"input\") });\n    }\n    getGraph(_) {\n        const graph = new Graph();\n        // TODO: Add input schema for runnables\n        const inputNode = graph.addNode({\n            name: `${this.getName()}Input`,\n            schema: z.any(),\n        });\n        const runnableNode = graph.addNode(this);\n        // TODO: Add output schemas for runnables\n        const outputNode = graph.addNode({\n            name: `${this.getName()}Output`,\n            schema: z.any(),\n        });\n        graph.addEdge(inputNode, runnableNode);\n        graph.addEdge(runnableNode, outputNode);\n        return graph;\n    }\n    /**\n     * Create a new runnable sequence that runs each individual runnable in series,\n     * piping the output of one runnable into another runnable or runnable-like.\n     * @param coerceable A runnable, function, or object whose values are functions or runnables.\n     * @returns A new runnable sequence.\n     */\n    pipe(coerceable) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableSequence({\n            first: this,\n            last: _coerceToRunnable(coerceable),\n        });\n    }\n    /**\n     * Pick keys from the dict output of this runnable. Returns a new runnable.\n     */\n    pick(keys) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return this.pipe(new RunnablePick(keys));\n    }\n    /**\n     * Assigns new fields to the dict output of this runnable. Returns a new runnable.\n     */\n    assign(mapping) {\n        return this.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableAssign(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableMap({ steps: mapping })));\n    }\n    /**\n     * Default implementation of transform, which buffers input and then calls stream.\n     * Subclasses should override this method if they can start producing output while\n     * input is still being generated.\n     * @param generator\n     * @param options\n     */\n    async *transform(generator, options) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                // This method should throw an error if gathering fails.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                finalChunk = concat(finalChunk, chunk);\n            }\n        }\n        yield* this._streamIterator(finalChunk, ensureConfig(options));\n    }\n    /**\n     * Stream all output from a runnable, as reported to the callback system.\n     * This includes all inner runs of LLMs, Retrievers, Tools, etc.\n     * Output is streamed as Log objects, which include a list of\n     * jsonpatch ops that describe how the state of the run has changed in each\n     * step, and the final state of the run.\n     * The jsonpatch ops can be applied in order to construct state.\n     * @param input\n     * @param options\n     * @param streamOptions\n     */\n    async *streamLog(input, options, streamOptions) {\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"original\",\n        });\n        const config = ensureConfig(options);\n        yield* this._streamLog(input, logStreamCallbackHandler, config);\n    }\n    async *_streamLog(input, logStreamCallbackHandler, config) {\n        const { callbacks } = config;\n        if (callbacks === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = [logStreamCallbackHandler];\n        }\n        else if (Array.isArray(callbacks)) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = callbacks.concat([logStreamCallbackHandler]);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(logStreamCallbackHandler, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const runnableStreamPromise = this.stream(input, config);\n        async function consumeRunnableStream() {\n            try {\n                const runnableStream = await runnableStreamPromise;\n                for await (const chunk of runnableStream) {\n                    const patch = new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: \"/streamed_output/-\",\n                                value: chunk,\n                            },\n                        ],\n                    });\n                    await logStreamCallbackHandler.writer.write(patch);\n                }\n            }\n            finally {\n                await logStreamCallbackHandler.writer.close();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        try {\n            for await (const log of logStreamCallbackHandler) {\n                yield log;\n            }\n        }\n        finally {\n            await runnableStreamConsumePromise;\n        }\n    }\n    streamEvents(input, options, streamOptions) {\n        let stream;\n        if (options.version === \"v1\") {\n            stream = this._streamEventsV1(input, options, streamOptions);\n        }\n        else if (options.version === \"v2\") {\n            stream = this._streamEventsV2(input, options, streamOptions);\n        }\n        else {\n            throw new Error(`Only versions \"v1\" and \"v2\" of the schema are currently supported.`);\n        }\n        if (options.encoding === \"text/event-stream\") {\n            return convertToHttpEventStream(stream);\n        }\n        else {\n            return IterableReadableStream.fromAsyncGenerator(stream);\n        }\n    }\n    async *_streamEventsV2(input, options, streamOptions) {\n        const eventStreamer = new EventStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n        });\n        const config = ensureConfig(options);\n        const runId = config.runId ?? uuidv4();\n        config.runId = runId;\n        const callbacks = config.callbacks;\n        if (callbacks === undefined) {\n            config.callbacks = [eventStreamer];\n        }\n        else if (Array.isArray(callbacks)) {\n            config.callbacks = callbacks.concat(eventStreamer);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(eventStreamer, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        // Call the runnable in streaming mode,\n        // add each chunk to the output stream\n        const outerThis = this;\n        async function consumeRunnableStream() {\n            try {\n                const runnableStream = await outerThis.stream(input, config);\n                const tappedStream = eventStreamer.tapOutputIterable(runId, runnableStream);\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                for await (const _ of tappedStream) {\n                    // Just iterate so that the callback handler picks up events\n                }\n            }\n            finally {\n                await eventStreamer.finish();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        let firstEventSent = false;\n        let firstEventRunId;\n        try {\n            for await (const event of eventStreamer) {\n                // This is a work-around an issue where the inputs into the\n                // chain are not available until the entire input is consumed.\n                // As a temporary solution, we'll modify the input to be the input\n                // that was passed into the chain.\n                if (!firstEventSent) {\n                    event.data.input = input;\n                    firstEventSent = true;\n                    firstEventRunId = event.run_id;\n                    yield event;\n                    continue;\n                }\n                if (event.run_id === firstEventRunId && event.event.endsWith(\"_end\")) {\n                    // If it's the end event corresponding to the root runnable\n                    // we dont include the input in the event since it's guaranteed\n                    // to be included in the first event.\n                    if (event.data?.input) {\n                        delete event.data.input;\n                    }\n                }\n                yield event;\n            }\n        }\n        finally {\n            await runnableStreamConsumePromise;\n        }\n    }\n    async *_streamEventsV1(input, options, streamOptions) {\n        let runLog;\n        let hasEncounteredStartEvent = false;\n        const config = ensureConfig(options);\n        const rootTags = config.tags ?? [];\n        const rootMetadata = config.metadata ?? {};\n        const rootName = config.runName ?? this.getName();\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"streaming_events\",\n        });\n        const rootEventFilter = new _RootEventFilter({\n            ...streamOptions,\n        });\n        const logStream = this._streamLog(input, logStreamCallbackHandler, config);\n        for await (const log of logStream) {\n            if (!runLog) {\n                runLog = RunLog.fromRunLogPatch(log);\n            }\n            else {\n                runLog = runLog.concat(log);\n            }\n            if (runLog.state === undefined) {\n                throw new Error(`Internal error: \"streamEvents\" state is missing. Please open a bug report.`);\n            }\n            // Yield the start event for the root runnable if it hasn't been seen.\n            // The root run is never filtered out\n            if (!hasEncounteredStartEvent) {\n                hasEncounteredStartEvent = true;\n                const state = { ...runLog.state };\n                const event = {\n                    run_id: state.id,\n                    event: `on_${state.type}_start`,\n                    name: rootName,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    data: {\n                        input,\n                    },\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n            const paths = log.ops\n                .filter((op) => op.path.startsWith(\"/logs/\"))\n                .map((op) => op.path.split(\"/\")[2]);\n            const dedupedPaths = [...new Set(paths)];\n            for (const path of dedupedPaths) {\n                let eventType;\n                let data = {};\n                const logEntry = runLog.state.logs[path];\n                if (logEntry.end_time === undefined) {\n                    if (logEntry.streamed_output.length > 0) {\n                        eventType = \"stream\";\n                    }\n                    else {\n                        eventType = \"start\";\n                    }\n                }\n                else {\n                    eventType = \"end\";\n                }\n                if (eventType === \"start\") {\n                    // Include the inputs with the start event if they are available.\n                    // Usually they will NOT be available for components that operate\n                    // on streams, since those components stream the input and\n                    // don't know its final value until the end of the stream.\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                }\n                else if (eventType === \"end\") {\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                    data.output = logEntry.final_output;\n                }\n                else if (eventType === \"stream\") {\n                    const chunkCount = logEntry.streamed_output.length;\n                    if (chunkCount !== 1) {\n                        throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${logEntry.name}\"`);\n                    }\n                    data = { chunk: logEntry.streamed_output[0] };\n                    // Clean up the stream, we don't need it anymore.\n                    // And this avoids duplicates as well!\n                    logEntry.streamed_output = [];\n                }\n                yield {\n                    event: `on_${logEntry.type}_${eventType}`,\n                    name: logEntry.name,\n                    run_id: logEntry.id,\n                    tags: logEntry.tags,\n                    metadata: logEntry.metadata,\n                    data,\n                };\n            }\n            // Finally, we take care of the streaming output from the root chain\n            // if there is any.\n            const { state } = runLog;\n            if (state.streamed_output.length > 0) {\n                const chunkCount = state.streamed_output.length;\n                if (chunkCount !== 1) {\n                    throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${state.name}\"`);\n                }\n                const data = { chunk: state.streamed_output[0] };\n                // Clean up the stream, we don't need it anymore.\n                state.streamed_output = [];\n                const event = {\n                    event: `on_${state.type}_stream`,\n                    run_id: state.id,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    name: rootName,\n                    data,\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n        }\n        const state = runLog?.state;\n        if (state !== undefined) {\n            // Finally, yield the end event for the root runnable.\n            const event = {\n                event: `on_${state.type}_end`,\n                name: rootName,\n                run_id: state.id,\n                tags: rootTags,\n                metadata: rootMetadata,\n                data: {\n                    output: state.final_output,\n                },\n            };\n            if (rootEventFilter.includeEvent(event, state.type))\n                yield event;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnable(thing) {\n        return isRunnableInterface(thing);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config: {},\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n    /**\n     * Convert a runnable to a tool. Return a new instance of `RunnableToolLike`\n     * which contains the runnable, name, description and schema.\n     *\n     * @template {T extends RunInput = RunInput} RunInput - The input type of the runnable. Should be the same as the `RunInput` type of the runnable.\n     *\n     * @param fields\n     * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n     * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n     * @param {z.ZodType<T>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n     * @returns {RunnableToolLike<z.ZodType<T>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n     */\n    asTool(fields) {\n        return convertRunnableToTool(this, fields);\n    }\n}\n/**\n * A runnable that delegates calls to another runnable with a set of kwargs.\n */\nexport class RunnableBinding extends Runnable {\n    static lc_name() {\n        return \"RunnableBinding\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"configFactories\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n        this.kwargs = fields.kwargs;\n        this.config = fields.config;\n        this.configFactories = fields.configFactories;\n    }\n    getName(suffix) {\n        return this.bound.getName(suffix);\n    }\n    async _mergeConfig(...options) {\n        const config = mergeConfigs(this.config, ...options);\n        return mergeConfigs(config, ...(this.configFactories\n            ? await Promise.all(this.configFactories.map(async (configFactory) => await configFactory(config)))\n            : []));\n    }\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: { ...this.kwargs, ...kwargs },\n            config: this.config,\n        });\n    }\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: { ...this.config, ...config },\n        });\n    }\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound.withRetry(fields),\n            kwargs: this.kwargs,\n            config: this.config,\n        });\n    }\n    async invoke(input, options) {\n        return this.bound.invoke(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async batch(inputs, options, batchOptions) {\n        const mergedOptions = Array.isArray(options)\n            ? await Promise.all(options.map(async (individualOption) => this._mergeConfig(ensureConfig(individualOption), this.kwargs)))\n            : await this._mergeConfig(ensureConfig(options), this.kwargs);\n        return this.bound.batch(inputs, mergedOptions, batchOptions);\n    }\n    async *_streamIterator(input, options) {\n        yield* this.bound._streamIterator(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async stream(input, options) {\n        return this.bound.stream(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async *transform(generator, options) {\n        yield* this.bound.transform(generator, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    streamEvents(input, options, streamOptions) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const outerThis = this;\n        const generator = async function* () {\n            yield* outerThis.bound.streamEvents(input, {\n                ...(await outerThis._mergeConfig(ensureConfig(options), outerThis.kwargs)),\n                version: options.version,\n            }, streamOptions);\n        };\n        return IterableReadableStream.fromAsyncGenerator(generator());\n    }\n    static isRunnableBinding(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    thing\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        return thing.bound && Runnable.isRunnable(thing.bound);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableBinding({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n}\n/**\n * A runnable that delegates calls to another runnable\n * with each element of the input sequence.\n */\nexport class RunnableEach extends Runnable {\n    static lc_name() {\n        return \"RunnableEach\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param kwargs The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableEach` class that is bound with the specified arguments.\n     */\n    bind(kwargs) {\n        return new RunnableEach({\n            bound: this.bound.bind(kwargs),\n        });\n    }\n    /**\n     * Invokes the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(inputs, config) {\n        return this._callWithConfig(this._invoke, inputs, config);\n    }\n    /**\n     * A helper method that is used to invoke the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async _invoke(inputs, config, runManager) {\n        return this.bound.batch(inputs, patchConfig(config, { callbacks: runManager?.getChild() }));\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableEach({\n            bound: this.bound.withListeners({ onStart, onEnd, onError }),\n        });\n    }\n}\n/**\n * Base class for runnables that can be retried a\n * specified number of times.\n */\nexport class RunnableRetry extends RunnableBinding {\n    static lc_name() {\n        return \"RunnableRetry\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"maxAttemptNumber\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: () => { }\n        });\n        this.maxAttemptNumber = fields.maxAttemptNumber ?? this.maxAttemptNumber;\n        this.onFailedAttempt = fields.onFailedAttempt ?? this.onFailedAttempt;\n    }\n    _patchConfigForRetry(attempt, config, runManager) {\n        const tag = attempt > 1 ? `retry:attempt:${attempt}` : undefined;\n        return patchConfig(config, { callbacks: runManager?.getChild(tag) });\n    }\n    async _invoke(input, config, runManager) {\n        return pRetry((attemptNumber) => super.invoke(input, this._patchConfigForRetry(attemptNumber, config, runManager)), {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onFailedAttempt: (error) => this.onFailedAttempt(error, input),\n            retries: Math.max(this.maxAttemptNumber - 1, 0),\n            randomize: true,\n        });\n    }\n    /**\n     * Method that invokes the runnable with the specified input, run manager,\n     * and config. It handles the retry logic by catching any errors and\n     * recursively invoking itself with the updated config for the next retry\n     * attempt.\n     * @param input The input for the runnable.\n     * @param runManager The run manager for the runnable.\n     * @param config The config for the runnable.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(input, config) {\n        return this._callWithConfig(this._invoke, input, config);\n    }\n    async _batch(inputs, configs, runManagers, batchOptions) {\n        const resultsMap = {};\n        try {\n            await pRetry(async (attemptNumber) => {\n                const remainingIndexes = inputs\n                    .map((_, i) => i)\n                    .filter((i) => resultsMap[i.toString()] === undefined ||\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    resultsMap[i.toString()] instanceof Error);\n                const remainingInputs = remainingIndexes.map((i) => inputs[i]);\n                const patchedConfigs = remainingIndexes.map((i) => this._patchConfigForRetry(attemptNumber, configs?.[i], runManagers?.[i]));\n                const results = await super.batch(remainingInputs, patchedConfigs, {\n                    ...batchOptions,\n                    returnExceptions: true,\n                });\n                let firstException;\n                for (let i = 0; i < results.length; i += 1) {\n                    const result = results[i];\n                    const resultMapIndex = remainingIndexes[i];\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (result instanceof Error) {\n                        if (firstException === undefined) {\n                            firstException = result;\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            firstException.input = remainingInputs[i];\n                        }\n                    }\n                    resultsMap[resultMapIndex.toString()] = result;\n                }\n                if (firstException) {\n                    throw firstException;\n                }\n                return results;\n            }, {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onFailedAttempt: (error) => this.onFailedAttempt(error, error.input),\n                retries: Math.max(this.maxAttemptNumber - 1, 0),\n                randomize: true,\n            });\n        }\n        catch (e) {\n            if (batchOptions?.returnExceptions !== true) {\n                throw e;\n            }\n        }\n        return Object.keys(resultsMap)\n            .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\n            .map((key) => resultsMap[parseInt(key, 10)]);\n    }\n    async batch(inputs, options, batchOptions) {\n        return this._batchWithConfig(this._batch.bind(this), inputs, options, batchOptions);\n    }\n}\n/**\n * A sequence of runnables, where the output of each is the input of the next.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n * const chain = RunnableSequence.from([promptTemplate, new ChatOpenAI({})]);\n * const result = await chain.invoke({ topic: \"bears\" });\n * ```\n */\nexport class RunnableSequence extends Runnable {\n    static lc_name() {\n        return \"RunnableSequence\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"first\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"middle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"last\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        this.first = fields.first;\n        this.middle = fields.middle ?? this.middle;\n        this.last = fields.last;\n        this.name = fields.name;\n    }\n    get steps() {\n        return [this.first, ...this.middle, this.last];\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        let nextStepInput = input;\n        let finalOutput;\n        try {\n            const initialSteps = [this.first, ...this.middle];\n            for (let i = 0; i < initialSteps.length; i += 1) {\n                const step = initialSteps[i];\n                const promise = step.invoke(nextStepInput, patchConfig(config, {\n                    callbacks: runManager?.getChild(`seq:step:${i + 1}`),\n                }));\n                nextStepInput = await raceWithSignal(promise, options?.signal);\n            }\n            // TypeScript can't detect that the last output of the sequence returns RunOutput, so call it out of the loop here\n            if (options?.signal?.aborted) {\n                throw new Error(\"Aborted\");\n            }\n            finalOutput = await this.last.invoke(nextStepInput, patchConfig(config, {\n                callbacks: runManager?.getChild(`seq:step:${this.steps.length}`),\n            }));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n        return finalOutput;\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let nextStepInputs = inputs;\n        try {\n            for (let i = 0; i < this.steps.length; i += 1) {\n                const step = this.steps[i];\n                const promise = step.batch(nextStepInputs, runManagers.map((runManager, j) => {\n                    const childRunManager = runManager?.getChild(`seq:step:${i + 1}`);\n                    return patchConfig(configList[j], { callbacks: childRunManager });\n                }), batchOptions);\n                nextStepInputs = await raceWithSignal(promise, configList[0]?.signal);\n            }\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(nextStepInputs, \"output\"))));\n        return nextStepInputs;\n    }\n    async *_streamIterator(input, options) {\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const { runId, ...otherOptions } = options ?? {};\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherOptions?.runName);\n        const steps = [this.first, ...this.middle, this.last];\n        let concatSupported = true;\n        let finalOutput;\n        async function* inputGenerator() {\n            yield input;\n        }\n        try {\n            let finalGenerator = steps[0].transform(inputGenerator(), patchConfig(otherOptions, {\n                callbacks: runManager?.getChild(`seq:step:1`),\n            }));\n            for (let i = 1; i < steps.length; i += 1) {\n                const step = steps[i];\n                finalGenerator = await step.transform(finalGenerator, patchConfig(otherOptions, {\n                    callbacks: runManager?.getChild(`seq:step:${i + 1}`),\n                }));\n            }\n            for await (const chunk of finalGenerator) {\n                options?.signal?.throwIfAborted();\n                yield chunk;\n                if (concatSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch (e) {\n                            finalOutput = undefined;\n                            concatSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n    }\n    getGraph(config) {\n        const graph = new Graph();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let currentLastNode = null;\n        this.steps.forEach((step, index) => {\n            const stepGraph = step.getGraph(config);\n            if (index !== 0) {\n                stepGraph.trimFirstNode();\n            }\n            if (index !== this.steps.length - 1) {\n                stepGraph.trimLastNode();\n            }\n            graph.extend(stepGraph);\n            const stepFirstNode = stepGraph.firstNode();\n            if (!stepFirstNode) {\n                throw new Error(`Runnable ${step} has no first node`);\n            }\n            if (currentLastNode) {\n                graph.addEdge(currentLastNode, stepFirstNode);\n            }\n            currentLastNode = stepGraph.lastNode();\n        });\n        return graph;\n    }\n    pipe(coerceable) {\n        if (RunnableSequence.isRunnableSequence(coerceable)) {\n            return new RunnableSequence({\n                first: this.first,\n                middle: this.middle.concat([\n                    this.last,\n                    coerceable.first,\n                    ...coerceable.middle,\n                ]),\n                last: coerceable.last,\n                name: this.name ?? coerceable.name,\n            });\n        }\n        else {\n            return new RunnableSequence({\n                first: this.first,\n                middle: [...this.middle, this.last],\n                last: _coerceToRunnable(coerceable),\n                name: this.name,\n            });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnableSequence(thing) {\n        return Array.isArray(thing.middle) && Runnable.isRunnable(thing);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from([first, ...runnables], name) {\n        return new RunnableSequence({\n            first: _coerceToRunnable(first),\n            middle: runnables.slice(0, -1).map(_coerceToRunnable),\n            last: _coerceToRunnable(runnables[runnables.length - 1]),\n            name,\n        });\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * const mapChain = RunnableMap.from({\n *   joke: PromptTemplate.fromTemplate(\"Tell me a joke about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n *   poem: PromptTemplate.fromTemplate(\"write a 2-line poem about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n * });\n * const result = await mapChain.invoke({ topic: \"bear\" });\n * ```\n */\nexport class RunnableMap extends Runnable {\n    static lc_name() {\n        return \"RunnableMap\";\n    }\n    getStepsKeys() {\n        return Object.keys(this.steps);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"steps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.steps = {};\n        for (const [key, value] of Object.entries(fields.steps)) {\n            this.steps[key] = _coerceToRunnable(value);\n        }\n    }\n    static from(steps) {\n        return new RunnableMap({ steps });\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), {\n            input,\n        }, config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const output = {};\n        try {\n            const promises = Object.entries(this.steps).map(async ([key, runnable]) => {\n                output[key] = await runnable.invoke(input, patchConfig(config, {\n                    callbacks: runManager?.getChild(`map:key:${key}`),\n                }));\n            });\n            await raceWithSignal(Promise.all(promises), options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(output);\n        return output;\n    }\n    async *_transform(generator, runManager, options) {\n        // shallow copy steps to ignore changes while iterating\n        const steps = { ...this.steps };\n        // each step gets a copy of the input iterator\n        const inputCopies = atee(generator, Object.keys(steps).length);\n        // start the first iteration of each output iterator\n        const tasks = new Map(Object.entries(steps).map(([key, runnable], i) => {\n            const gen = runnable.transform(inputCopies[i], patchConfig(options, {\n                callbacks: runManager?.getChild(`map:key:${key}`),\n            }));\n            return [key, gen.next().then((result) => ({ key, gen, result }))];\n        }));\n        // yield chunks as they become available,\n        // starting new iterations as needed,\n        // until all iterators are done\n        while (tasks.size) {\n            const promise = Promise.race(tasks.values());\n            const { key, result, gen } = await raceWithSignal(promise, options?.signal);\n            tasks.delete(key);\n            if (!result.done) {\n                yield { [key]: result.value };\n                tasks.set(key, gen.next().then((result) => ({ key, gen, result })));\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that wraps a traced LangSmith function.\n */\nexport class RunnableTraceable extends Runnable {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!isTraceableFunction(fields.func)) {\n            throw new Error(\"RunnableTraceable requires a function that is wrapped in traceable higher-order function\");\n        }\n        this.func = fields.func;\n    }\n    async invoke(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const callbacks = await getCallbackManagerForConfig(config);\n        const promise = this.func(patchConfig(config, { callbacks }), input);\n        return raceWithSignal(promise, config?.signal);\n    }\n    async *_streamIterator(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const result = await this.invoke(input, options);\n        if (isAsyncIterable(result)) {\n            for await (const item of result) {\n                config?.signal?.throwIfAborted();\n                yield item;\n            }\n            return;\n        }\n        if (isIterator(result)) {\n            while (true) {\n                config?.signal?.throwIfAborted();\n                const state = result.next();\n                if (state.done)\n                    break;\n                yield state.value;\n            }\n            return;\n        }\n        yield result;\n    }\n    static from(func) {\n        return new RunnableTraceable({ func });\n    }\n}\nfunction assertNonTraceableFunction(func) {\n    if (isTraceableFunction(func)) {\n        throw new Error(\"RunnableLambda requires a function that is not wrapped in traceable higher-order function. This shouldn't happen.\");\n    }\n}\n/**\n * A runnable that runs a callable.\n */\nexport class RunnableLambda extends Runnable {\n    static lc_name() {\n        return \"RunnableLambda\";\n    }\n    constructor(fields) {\n        if (isTraceableFunction(fields.func)) {\n            // eslint-disable-next-line no-constructor-return\n            return RunnableTraceable.from(fields.func);\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        assertNonTraceableFunction(fields.func);\n        this.func = fields.func;\n    }\n    static from(func) {\n        return new RunnableLambda({\n            func,\n        });\n    }\n    async _invoke(input, config, runManager) {\n        return new Promise((resolve, reject) => {\n            const childConfig = patchConfig(config, {\n                callbacks: runManager?.getChild(),\n                recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n            });\n            void AsyncLocalStorageProviderSingleton.runWithConfig(childConfig, async () => {\n                try {\n                    let output = await this.func(input, {\n                        ...childConfig,\n                        config: childConfig,\n                    });\n                    if (output && Runnable.isRunnable(output)) {\n                        if (config?.recursionLimit === 0) {\n                            throw new Error(\"Recursion limit reached.\");\n                        }\n                        output = await output.invoke(input, {\n                            ...childConfig,\n                            recursionLimit: (childConfig.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n                        });\n                    }\n                    else if (isAsyncIterable(output)) {\n                        let finalOutput;\n                        for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    else if (isIterableIterator(output)) {\n                        let finalOutput;\n                        for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    resolve(output);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._invoke, input, options);\n    }\n    async *_transform(generator, runManager, config) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    finalChunk = concat(finalChunk, chunk);\n                }\n                catch (e) {\n                    finalChunk = chunk;\n                }\n            }\n        }\n        const childConfig = patchConfig(config, {\n            callbacks: runManager?.getChild(),\n            recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n        });\n        const output = await new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(childConfig, async () => {\n                try {\n                    const res = await this.func(finalChunk, {\n                        ...childConfig,\n                        config: childConfig,\n                    });\n                    resolve(res);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n        if (output && Runnable.isRunnable(output)) {\n            if (config?.recursionLimit === 0) {\n                throw new Error(\"Recursion limit reached.\");\n            }\n            const stream = await output.stream(finalChunk, childConfig);\n            for await (const chunk of stream) {\n                yield chunk;\n            }\n        }\n        else if (isAsyncIterable(output)) {\n            for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else if (isIterableIterator(output)) {\n            for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else {\n            yield output;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\nexport class RunnableParallel extends RunnableMap {\n}\n/**\n * A Runnable that can fallback to other Runnables if it fails.\n * External APIs (e.g., APIs for a language model) may at times experience\n * degraded performance or even downtime.\n *\n * In these cases, it can be useful to have a fallback Runnable that can be\n * used in place of the original Runnable (e.g., fallback to another LLM provider).\n *\n * Fallbacks can be defined at the level of a single Runnable, or at the level\n * of a chain of Runnables. Fallbacks are tried in order until one succeeds or\n * all fail.\n *\n * While you can instantiate a `RunnableWithFallbacks` directly, it is usually\n * more convenient to use the `withFallbacks` method on an existing Runnable.\n *\n * When streaming, fallbacks will only be called on failures during the initial\n * stream creation. Errors that occur after a stream starts will not fallback\n * to the next Runnable.\n */\nexport class RunnableWithFallbacks extends Runnable {\n    static lc_name() {\n        return \"RunnableWithFallbacks\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fallbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnable = fields.runnable;\n        this.fallbacks = fields.fallbacks;\n    }\n    *runnables() {\n        yield this.runnable;\n        for (const fallback of this.fallbacks) {\n            yield fallback;\n        }\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        let firstError;\n        for (const runnable of this.runnables()) {\n            config?.signal?.throwIfAborted();\n            try {\n                const output = await runnable.invoke(input, patchConfig(otherConfigFields, { callbacks: runManager?.getChild() }));\n                await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n                return output;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (firstError === undefined) {\n            throw new Error(\"No error stored at end of fallback.\");\n        }\n        await runManager?.handleChainError(firstError);\n        throw firstError;\n    }\n    async *_streamIterator(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        let firstError;\n        let stream;\n        for (const runnable of this.runnables()) {\n            config?.signal?.throwIfAborted();\n            const childConfig = patchConfig(otherConfigFields, {\n                callbacks: runManager?.getChild(),\n            });\n            try {\n                stream = await runnable.stream(input, childConfig);\n                break;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (stream === undefined) {\n            const error = firstError ?? new Error(\"No error stored at end of fallback.\");\n            await runManager?.handleChainError(error);\n            throw error;\n        }\n        let output;\n        try {\n            for await (const chunk of stream) {\n                yield chunk;\n                try {\n                    output = output === undefined ? output : concat(output, chunk);\n                }\n                catch (e) {\n                    output = undefined;\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n    }\n    async batch(inputs, options, batchOptions) {\n        if (batchOptions?.returnExceptions) {\n            throw new Error(\"Not implemented.\");\n        }\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map((config) => getCallbackManagerForConfig(config)));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let firstError;\n        for (const runnable of this.runnables()) {\n            configList[0].signal?.throwIfAborted();\n            try {\n                const outputs = await runnable.batch(inputs, runManagers.map((runManager, j) => patchConfig(configList[j], {\n                    callbacks: runManager?.getChild(),\n                })), batchOptions);\n                await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(outputs[i], \"output\"))));\n                return outputs;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (!firstError) {\n            throw new Error(\"No error stored at end of fallbacks.\");\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(firstError)));\n        throw firstError;\n    }\n}\n// TODO: Figure out why the compiler needs help eliminating Error as a RunOutput type\nexport function _coerceToRunnable(coerceable) {\n    if (typeof coerceable === \"function\") {\n        return new RunnableLambda({ func: coerceable });\n    }\n    else if (Runnable.isRunnable(coerceable)) {\n        return coerceable;\n    }\n    else if (!Array.isArray(coerceable) && typeof coerceable === \"object\") {\n        const runnables = {};\n        for (const [key, value] of Object.entries(coerceable)) {\n            runnables[key] = _coerceToRunnable(value);\n        }\n        return new RunnableMap({\n            steps: runnables,\n        });\n    }\n    else {\n        throw new Error(`Expected a Runnable, function or object.\\nInstead got an unsupported type.`);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n */\nexport class RunnableAssign extends Runnable {\n    static lc_name() {\n        return \"RunnableAssign\";\n    }\n    constructor(fields) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (fields instanceof RunnableMap) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { mapper: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"mapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.mapper = fields.mapper;\n    }\n    async invoke(input, options) {\n        const mapperResult = await this.mapper.invoke(input, options);\n        return {\n            ...input,\n            ...mapperResult,\n        };\n    }\n    async *_transform(generator, runManager, options) {\n        // collect mapper keys\n        const mapperKeys = this.mapper.getStepsKeys();\n        // create two input gens, one for the mapper, one for the input\n        const [forPassthrough, forMapper] = atee(generator);\n        // create mapper output gen\n        const mapperOutput = this.mapper.transform(forMapper, patchConfig(options, { callbacks: runManager?.getChild() }));\n        // start the mapper\n        const firstMapperChunkPromise = mapperOutput.next();\n        // yield the passthrough\n        for await (const chunk of forPassthrough) {\n            if (typeof chunk !== \"object\" || Array.isArray(chunk)) {\n                throw new Error(`RunnableAssign can only be used with objects as input, got ${typeof chunk}`);\n            }\n            const filtered = Object.fromEntries(Object.entries(chunk).filter(([key]) => !mapperKeys.includes(key)));\n            if (Object.keys(filtered).length > 0) {\n                yield filtered;\n            }\n        }\n        // yield the mapper output\n        yield (await firstMapperChunkPromise).value;\n        for await (const chunk of mapperOutput) {\n            yield chunk;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n */\nexport class RunnablePick extends Runnable {\n    static lc_name() {\n        return \"RunnablePick\";\n    }\n    constructor(fields) {\n        if (typeof fields === \"string\" || Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { keys: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"keys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keys = fields.keys;\n    }\n    async _pick(input) {\n        if (typeof this.keys === \"string\") {\n            return input[this.keys];\n        }\n        else {\n            const picked = this.keys\n                .map((key) => [key, input[key]])\n                .filter((v) => v[1] !== undefined);\n            return picked.length === 0 ? undefined : Object.fromEntries(picked);\n        }\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._pick.bind(this), input, options);\n    }\n    async *_transform(generator) {\n        for await (const chunk of generator) {\n            const picked = await this._pick(chunk);\n            if (picked !== undefined) {\n                yield picked;\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\nexport class RunnableToolLike extends RunnableBinding {\n    constructor(fields) {\n        const sequence = RunnableSequence.from([\n            RunnableLambda.from(async (input) => {\n                let toolInput;\n                if (_isToolCall(input)) {\n                    try {\n                        toolInput = await this.schema.parseAsync(input.args);\n                    }\n                    catch (e) {\n                        throw new ToolInputParsingException(`Received tool input did not match expected schema`, JSON.stringify(input.args));\n                    }\n                }\n                else {\n                    toolInput = input;\n                }\n                return toolInput;\n            }).withConfig({ runName: `${fields.name}:parse_input` }),\n            fields.bound,\n        ]).withConfig({ runName: fields.name });\n        super({\n            bound: sequence,\n            config: fields.config ?? {},\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.schema = fields.schema;\n    }\n    static lc_name() {\n        return \"RunnableToolLike\";\n    }\n}\n/**\n * Given a runnable and a Zod schema, convert the runnable to a tool.\n *\n * @template RunInput The input type for the runnable.\n * @template RunOutput The output type for the runnable.\n *\n * @param {Runnable<RunInput, RunOutput>} runnable The runnable to convert to a tool.\n * @param fields\n * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n * @param {z.ZodType<RunInput>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n * @returns {RunnableToolLike<z.ZodType<RunInput>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n */\nexport function convertRunnableToTool(runnable, fields) {\n    const name = fields.name ?? runnable.getName();\n    const description = fields.description ?? fields.schema?.description;\n    if (fields.schema.constructor === z.ZodString) {\n        return new RunnableToolLike({\n            name,\n            description,\n            schema: z\n                .object({\n                input: z.string(),\n            })\n                .transform((input) => input.input),\n            bound: runnable,\n        });\n    }\n    return new RunnableToolLike({\n        name,\n        description,\n        schema: fields.schema,\n        bound: runnable,\n    });\n}\n","import { Runnable } from \"../runnables/base.js\";\n/**\n * Abstract base class for document transformation systems.\n *\n * A document transformation system takes an array of Documents and returns an\n * array of transformed Documents. These arrays do not necessarily have to have\n * the same length.\n *\n * One example of this is a text splitter that splits a large document into\n * many smaller documents.\n */\nexport class BaseDocumentTransformer extends Runnable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"documents\", \"transformers\"]\n        });\n    }\n    /**\n     * Method to invoke the document transformation. This method calls the\n     * transformDocuments method with the provided input.\n     * @param input The input documents to be transformed.\n     * @param _options Optional configuration object to customize the behavior of callbacks.\n     * @returns A Promise that resolves to the transformed documents.\n     */\n    invoke(input, _options) {\n        return this.transformDocuments(input);\n    }\n}\n/**\n * Class for document transformers that return exactly one transformed document\n * for each input document.\n */\nexport class MappingDocumentTransformer extends BaseDocumentTransformer {\n    async transformDocuments(documents) {\n        const newDocuments = [];\n        for (const document of documents) {\n            const transformedDocument = await this._transformDocument(document);\n            newDocuments.push(transformedDocument);\n        }\n        return newDocuments;\n    }\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import base64 from 'base64-js';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/utils.ts\nfunction never(_) {\n}\nfunction bytePairMerge(piece, ranks) {\n  let parts = Array.from(\n    { length: piece.length },\n    (_, i) => ({ start: i, end: i + 1 })\n  );\n  while (parts.length > 1) {\n    let minRank = null;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const slice = piece.slice(parts[i].start, parts[i + 1].end);\n      const rank = ranks.get(slice.join(\",\"));\n      if (rank == null)\n        continue;\n      if (minRank == null || rank < minRank[0]) {\n        minRank = [rank, i];\n      }\n    }\n    if (minRank != null) {\n      const i = minRank[1];\n      parts[i] = { start: parts[i].start, end: parts[i + 1].end };\n      parts.splice(i + 1, 1);\n    } else {\n      break;\n    }\n  }\n  return parts;\n}\nfunction bytePairEncode(piece, ranks) {\n  if (piece.length === 1)\n    return [ranks.get(piece.join(\",\"))];\n  return bytePairMerge(piece, ranks).map((p) => ranks.get(piece.slice(p.start, p.end).join(\",\"))).filter((x) => x != null);\n}\nfunction escapeRegex(str) {\n  return str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nvar _Tiktoken = class {\n  /** @internal */\n  specialTokens;\n  /** @internal */\n  inverseSpecialTokens;\n  /** @internal */\n  patStr;\n  /** @internal */\n  textEncoder = new TextEncoder();\n  /** @internal */\n  textDecoder = new TextDecoder(\"utf-8\");\n  /** @internal */\n  rankMap = /* @__PURE__ */ new Map();\n  /** @internal */\n  textMap = /* @__PURE__ */ new Map();\n  constructor(ranks, extendedSpecialTokens) {\n    this.patStr = ranks.pat_str;\n    const uncompressed = ranks.bpe_ranks.split(\"\\n\").filter(Boolean).reduce((memo, x) => {\n      const [_, offsetStr, ...tokens] = x.split(\" \");\n      const offset = Number.parseInt(offsetStr, 10);\n      tokens.forEach((token, i) => memo[token] = offset + i);\n      return memo;\n    }, {});\n    for (const [token, rank] of Object.entries(uncompressed)) {\n      const bytes = base64.toByteArray(token);\n      this.rankMap.set(bytes.join(\",\"), rank);\n      this.textMap.set(rank, bytes);\n    }\n    this.specialTokens = { ...ranks.special_tokens, ...extendedSpecialTokens };\n    this.inverseSpecialTokens = Object.entries(this.specialTokens).reduce((memo, [text, rank]) => {\n      memo[rank] = this.textEncoder.encode(text);\n      return memo;\n    }, {});\n  }\n  encode(text, allowedSpecial = [], disallowedSpecial = \"all\") {\n    const regexes = new RegExp(this.patStr, \"ug\");\n    const specialRegex = _Tiktoken.specialTokenRegex(\n      Object.keys(this.specialTokens)\n    );\n    const ret = [];\n    const allowedSpecialSet = new Set(\n      allowedSpecial === \"all\" ? Object.keys(this.specialTokens) : allowedSpecial\n    );\n    const disallowedSpecialSet = new Set(\n      disallowedSpecial === \"all\" ? Object.keys(this.specialTokens).filter(\n        (x) => !allowedSpecialSet.has(x)\n      ) : disallowedSpecial\n    );\n    if (disallowedSpecialSet.size > 0) {\n      const disallowedSpecialRegex = _Tiktoken.specialTokenRegex([\n        ...disallowedSpecialSet\n      ]);\n      const specialMatch = text.match(disallowedSpecialRegex);\n      if (specialMatch != null) {\n        throw new Error(\n          `The text contains a special token that is not allowed: ${specialMatch[0]}`\n        );\n      }\n    }\n    let start = 0;\n    while (true) {\n      let nextSpecial = null;\n      let startFind = start;\n      while (true) {\n        specialRegex.lastIndex = startFind;\n        nextSpecial = specialRegex.exec(text);\n        if (nextSpecial == null || allowedSpecialSet.has(nextSpecial[0]))\n          break;\n        startFind = nextSpecial.index + 1;\n      }\n      const end = nextSpecial?.index ?? text.length;\n      for (const match of text.substring(start, end).matchAll(regexes)) {\n        const piece = this.textEncoder.encode(match[0]);\n        const token2 = this.rankMap.get(piece.join(\",\"));\n        if (token2 != null) {\n          ret.push(token2);\n          continue;\n        }\n        ret.push(...bytePairEncode(piece, this.rankMap));\n      }\n      if (nextSpecial == null)\n        break;\n      let token = this.specialTokens[nextSpecial[0]];\n      ret.push(token);\n      start = nextSpecial.index + nextSpecial[0].length;\n    }\n    return ret;\n  }\n  decode(tokens) {\n    const res = [];\n    let length = 0;\n    for (let i2 = 0; i2 < tokens.length; ++i2) {\n      const token = tokens[i2];\n      const bytes = this.textMap.get(token) ?? this.inverseSpecialTokens[token];\n      if (bytes != null) {\n        res.push(bytes);\n        length += bytes.length;\n      }\n    }\n    const mergedArray = new Uint8Array(length);\n    let i = 0;\n    for (const bytes of res) {\n      mergedArray.set(bytes, i);\n      i += bytes.length;\n    }\n    return this.textDecoder.decode(mergedArray);\n  }\n};\nvar Tiktoken = _Tiktoken;\n__publicField(Tiktoken, \"specialTokenRegex\", (tokens) => {\n  return new RegExp(tokens.map((i) => escapeRegex(i)).join(\"|\"), \"g\");\n});\nfunction getEncodingNameForModel(model) {\n  switch (model) {\n    case \"gpt2\": {\n      return \"gpt2\";\n    }\n    case \"code-cushman-001\":\n    case \"code-cushman-002\":\n    case \"code-davinci-001\":\n    case \"code-davinci-002\":\n    case \"cushman-codex\":\n    case \"davinci-codex\":\n    case \"davinci-002\":\n    case \"text-davinci-002\":\n    case \"text-davinci-003\": {\n      return \"p50k_base\";\n    }\n    case \"code-davinci-edit-001\":\n    case \"text-davinci-edit-001\": {\n      return \"p50k_edit\";\n    }\n    case \"ada\":\n    case \"babbage\":\n    case \"babbage-002\":\n    case \"code-search-ada-code-001\":\n    case \"code-search-babbage-code-001\":\n    case \"curie\":\n    case \"davinci\":\n    case \"text-ada-001\":\n    case \"text-babbage-001\":\n    case \"text-curie-001\":\n    case \"text-davinci-001\":\n    case \"text-search-ada-doc-001\":\n    case \"text-search-babbage-doc-001\":\n    case \"text-search-curie-doc-001\":\n    case \"text-search-davinci-doc-001\":\n    case \"text-similarity-ada-001\":\n    case \"text-similarity-babbage-001\":\n    case \"text-similarity-curie-001\":\n    case \"text-similarity-davinci-001\": {\n      return \"r50k_base\";\n    }\n    case \"gpt-3.5-turbo-instruct-0914\":\n    case \"gpt-3.5-turbo-instruct\":\n    case \"gpt-3.5-turbo-16k-0613\":\n    case \"gpt-3.5-turbo-16k\":\n    case \"gpt-3.5-turbo-0613\":\n    case \"gpt-3.5-turbo-0301\":\n    case \"gpt-3.5-turbo\":\n    case \"gpt-4-32k-0613\":\n    case \"gpt-4-32k-0314\":\n    case \"gpt-4-32k\":\n    case \"gpt-4-0613\":\n    case \"gpt-4-0314\":\n    case \"gpt-4\":\n    case \"gpt-3.5-turbo-1106\":\n    case \"gpt-35-turbo\":\n    case \"gpt-4-1106-preview\":\n    case \"gpt-4-vision-preview\":\n    case \"gpt-3.5-turbo-0125\":\n    case \"gpt-4-turbo\":\n    case \"gpt-4-turbo-2024-04-09\":\n    case \"gpt-4-turbo-preview\":\n    case \"gpt-4-0125-preview\":\n    case \"text-embedding-ada-002\":\n    case \"text-embedding-3-small\":\n    case \"text-embedding-3-large\": {\n      return \"cl100k_base\";\n    }\n    case \"gpt-4o\":\n    case \"gpt-4o-2024-05-13\":\n    case \"gpt-4o-2024-08-06\":\n    case \"gpt-4o-2024-11-20\":\n    case \"gpt-4o-mini-2024-07-18\":\n    case \"gpt-4o-mini\":\n    case \"o1\":\n    case \"o1-2024-12-17\":\n    case \"o1-mini\":\n    case \"o1-preview\":\n    case \"o1-preview-2024-09-12\":\n    case \"o1-mini-2024-09-12\":\n    case \"o3-mini\":\n    case \"o3-mini-2025-01-31\":\n    case \"chatgpt-4o-latest\":\n    case \"gpt-4o-realtime\":\n    case \"gpt-4o-realtime-preview-2024-10-01\": {\n      return \"o200k_base\";\n    }\n    default:\n      throw new Error(\"Unknown model\");\n  }\n}\n\nexport { Tiktoken, getEncodingNameForModel, never };\n","import { Document, BaseDocumentTransformer } from \"@langchain/core/documents\";\nimport { getEncoding } from \"@langchain/core/utils/tiktoken\";\nexport class TextSplitter extends BaseDocumentTransformer {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"document_transformers\", \"text_splitters\"]\n        });\n        Object.defineProperty(this, \"chunkSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1000\n        });\n        Object.defineProperty(this, \"chunkOverlap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 200\n        });\n        Object.defineProperty(this, \"keepSeparator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lengthFunction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chunkSize = fields?.chunkSize ?? this.chunkSize;\n        this.chunkOverlap = fields?.chunkOverlap ?? this.chunkOverlap;\n        this.keepSeparator = fields?.keepSeparator ?? this.keepSeparator;\n        this.lengthFunction =\n            fields?.lengthFunction ?? ((text) => text.length);\n        if (this.chunkOverlap >= this.chunkSize) {\n            throw new Error(\"Cannot have chunkOverlap >= chunkSize\");\n        }\n    }\n    async transformDocuments(documents, chunkHeaderOptions = {}) {\n        return this.splitDocuments(documents, chunkHeaderOptions);\n    }\n    splitOnSeparator(text, separator) {\n        let splits;\n        if (separator) {\n            if (this.keepSeparator) {\n                const regexEscapedSeparator = separator.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n                splits = text.split(new RegExp(`(?=${regexEscapedSeparator})`));\n            }\n            else {\n                splits = text.split(separator);\n            }\n        }\n        else {\n            splits = text.split(\"\");\n        }\n        return splits.filter((s) => s !== \"\");\n    }\n    async createDocuments(texts, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadatas = [], chunkHeaderOptions = {}) {\n        // if no metadata is provided, we create an empty one for each text\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const _metadatas = metadatas.length > 0\n            ? metadatas\n            : [...Array(texts.length)].map(() => ({}));\n        const { chunkHeader = \"\", chunkOverlapHeader = \"(cont'd) \", appendChunkOverlapHeader = false, } = chunkHeaderOptions;\n        const documents = new Array();\n        for (let i = 0; i < texts.length; i += 1) {\n            const text = texts[i];\n            let lineCounterIndex = 1;\n            let prevChunk = null;\n            let indexPrevChunk = -1;\n            for (const chunk of await this.splitText(text)) {\n                let pageContent = chunkHeader;\n                // we need to count the \\n that are in the text before getting removed by the splitting\n                const indexChunk = text.indexOf(chunk, indexPrevChunk + 1);\n                if (prevChunk === null) {\n                    const newLinesBeforeFirstChunk = this.numberOfNewLines(text, 0, indexChunk);\n                    lineCounterIndex += newLinesBeforeFirstChunk;\n                }\n                else {\n                    const indexEndPrevChunk = indexPrevChunk + (await this.lengthFunction(prevChunk));\n                    if (indexEndPrevChunk < indexChunk) {\n                        const numberOfIntermediateNewLines = this.numberOfNewLines(text, indexEndPrevChunk, indexChunk);\n                        lineCounterIndex += numberOfIntermediateNewLines;\n                    }\n                    else if (indexEndPrevChunk > indexChunk) {\n                        const numberOfIntermediateNewLines = this.numberOfNewLines(text, indexChunk, indexEndPrevChunk);\n                        lineCounterIndex -= numberOfIntermediateNewLines;\n                    }\n                    if (appendChunkOverlapHeader) {\n                        pageContent += chunkOverlapHeader;\n                    }\n                }\n                const newLinesCount = this.numberOfNewLines(chunk);\n                const loc = _metadatas[i].loc && typeof _metadatas[i].loc === \"object\"\n                    ? { ..._metadatas[i].loc }\n                    : {};\n                loc.lines = {\n                    from: lineCounterIndex,\n                    to: lineCounterIndex + newLinesCount,\n                };\n                const metadataWithLinesNumber = {\n                    ..._metadatas[i],\n                    loc,\n                };\n                pageContent += chunk;\n                documents.push(new Document({\n                    pageContent,\n                    metadata: metadataWithLinesNumber,\n                }));\n                lineCounterIndex += newLinesCount;\n                prevChunk = chunk;\n                indexPrevChunk = indexChunk;\n            }\n        }\n        return documents;\n    }\n    numberOfNewLines(text, start, end) {\n        const textSection = text.slice(start, end);\n        return (textSection.match(/\\n/g) || []).length;\n    }\n    async splitDocuments(documents, chunkHeaderOptions = {}) {\n        const selectedDocuments = documents.filter((doc) => doc.pageContent !== undefined);\n        const texts = selectedDocuments.map((doc) => doc.pageContent);\n        const metadatas = selectedDocuments.map((doc) => doc.metadata);\n        return this.createDocuments(texts, metadatas, chunkHeaderOptions);\n    }\n    joinDocs(docs, separator) {\n        const text = docs.join(separator).trim();\n        return text === \"\" ? null : text;\n    }\n    async mergeSplits(splits, separator) {\n        const docs = [];\n        const currentDoc = [];\n        let total = 0;\n        for (const d of splits) {\n            const _len = await this.lengthFunction(d);\n            if (total + _len + currentDoc.length * separator.length >\n                this.chunkSize) {\n                if (total > this.chunkSize) {\n                    console.warn(`Created a chunk of size ${total}, +\nwhich is longer than the specified ${this.chunkSize}`);\n                }\n                if (currentDoc.length > 0) {\n                    const doc = this.joinDocs(currentDoc, separator);\n                    if (doc !== null) {\n                        docs.push(doc);\n                    }\n                    // Keep on popping if:\n                    // - we have a larger chunk than in the chunk overlap\n                    // - or if we still have any chunks and the length is long\n                    while (total > this.chunkOverlap ||\n                        (total + _len + currentDoc.length * separator.length >\n                            this.chunkSize &&\n                            total > 0)) {\n                        total -= await this.lengthFunction(currentDoc[0]);\n                        currentDoc.shift();\n                    }\n                }\n            }\n            currentDoc.push(d);\n            total += _len;\n        }\n        const doc = this.joinDocs(currentDoc, separator);\n        if (doc !== null) {\n            docs.push(doc);\n        }\n        return docs;\n    }\n}\nexport class CharacterTextSplitter extends TextSplitter {\n    static lc_name() {\n        return \"CharacterTextSplitter\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"separator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\\n\\n\"\n        });\n        this.separator = fields?.separator ?? this.separator;\n    }\n    async splitText(text) {\n        // First we naively split the large input into a bunch of smaller ones.\n        const splits = this.splitOnSeparator(text, this.separator);\n        return this.mergeSplits(splits, this.keepSeparator ? \"\" : this.separator);\n    }\n}\nexport const SupportedTextSplitterLanguages = [\n    \"cpp\",\n    \"go\",\n    \"java\",\n    \"js\",\n    \"php\",\n    \"proto\",\n    \"python\",\n    \"rst\",\n    \"ruby\",\n    \"rust\",\n    \"scala\",\n    \"swift\",\n    \"markdown\",\n    \"latex\",\n    \"html\",\n    \"sol\",\n];\nexport class RecursiveCharacterTextSplitter extends TextSplitter {\n    static lc_name() {\n        return \"RecursiveCharacterTextSplitter\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"separators\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"\\n\\n\", \"\\n\", \" \", \"\"]\n        });\n        this.separators = fields?.separators ?? this.separators;\n        this.keepSeparator = fields?.keepSeparator ?? true;\n    }\n    async _splitText(text, separators) {\n        const finalChunks = [];\n        // Get appropriate separator to use\n        let separator = separators[separators.length - 1];\n        let newSeparators;\n        for (let i = 0; i < separators.length; i += 1) {\n            const s = separators[i];\n            if (s === \"\") {\n                separator = s;\n                break;\n            }\n            if (text.includes(s)) {\n                separator = s;\n                newSeparators = separators.slice(i + 1);\n                break;\n            }\n        }\n        // Now that we have the separator, split the text\n        const splits = this.splitOnSeparator(text, separator);\n        // Now go merging things, recursively splitting longer texts.\n        let goodSplits = [];\n        const _separator = this.keepSeparator ? \"\" : separator;\n        for (const s of splits) {\n            if ((await this.lengthFunction(s)) < this.chunkSize) {\n                goodSplits.push(s);\n            }\n            else {\n                if (goodSplits.length) {\n                    const mergedText = await this.mergeSplits(goodSplits, _separator);\n                    finalChunks.push(...mergedText);\n                    goodSplits = [];\n                }\n                if (!newSeparators) {\n                    finalChunks.push(s);\n                }\n                else {\n                    const otherInfo = await this._splitText(s, newSeparators);\n                    finalChunks.push(...otherInfo);\n                }\n            }\n        }\n        if (goodSplits.length) {\n            const mergedText = await this.mergeSplits(goodSplits, _separator);\n            finalChunks.push(...mergedText);\n        }\n        return finalChunks;\n    }\n    async splitText(text) {\n        return this._splitText(text, this.separators);\n    }\n    static fromLanguage(language, options) {\n        return new RecursiveCharacterTextSplitter({\n            ...options,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(language),\n        });\n    }\n    static getSeparatorsForLanguage(language) {\n        if (language === \"cpp\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along function definitions\n                \"\\nvoid \",\n                \"\\nint \",\n                \"\\nfloat \",\n                \"\\ndouble \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"go\") {\n            return [\n                // Split along function definitions\n                \"\\nfunc \",\n                \"\\nvar \",\n                \"\\nconst \",\n                \"\\ntype \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"java\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along method definitions\n                \"\\npublic \",\n                \"\\nprotected \",\n                \"\\nprivate \",\n                \"\\nstatic \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"js\") {\n            return [\n                // Split along function definitions\n                \"\\nfunction \",\n                \"\\nconst \",\n                \"\\nlet \",\n                \"\\nvar \",\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                \"\\ndefault \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"php\") {\n            return [\n                // Split along function definitions\n                \"\\nfunction \",\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nforeach \",\n                \"\\nwhile \",\n                \"\\ndo \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"proto\") {\n            return [\n                // Split along message definitions\n                \"\\nmessage \",\n                // Split along service definitions\n                \"\\nservice \",\n                // Split along enum definitions\n                \"\\nenum \",\n                // Split along option definitions\n                \"\\noption \",\n                // Split along import statements\n                \"\\nimport \",\n                // Split along syntax declarations\n                \"\\nsyntax \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"python\") {\n            return [\n                // First, try to split along class definitions\n                \"\\nclass \",\n                \"\\ndef \",\n                \"\\n\\tdef \",\n                // Now split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"rst\") {\n            return [\n                // Split along section titles\n                \"\\n===\\n\",\n                \"\\n---\\n\",\n                \"\\n***\\n\",\n                // Split along directive markers\n                \"\\n.. \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"ruby\") {\n            return [\n                // Split along method definitions\n                \"\\ndef \",\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nunless \",\n                \"\\nwhile \",\n                \"\\nfor \",\n                \"\\ndo \",\n                \"\\nbegin \",\n                \"\\nrescue \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"rust\") {\n            return [\n                // Split along function definitions\n                \"\\nfn \",\n                \"\\nconst \",\n                \"\\nlet \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nwhile \",\n                \"\\nfor \",\n                \"\\nloop \",\n                \"\\nmatch \",\n                \"\\nconst \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"scala\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                \"\\nobject \",\n                // Split along method definitions\n                \"\\ndef \",\n                \"\\nval \",\n                \"\\nvar \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nmatch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"swift\") {\n            return [\n                // Split along function definitions\n                \"\\nfunc \",\n                // Split along class definitions\n                \"\\nclass \",\n                \"\\nstruct \",\n                \"\\nenum \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\ndo \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"markdown\") {\n            return [\n                // First, try to split along Markdown headings (starting with level 2)\n                \"\\n## \",\n                \"\\n### \",\n                \"\\n#### \",\n                \"\\n##### \",\n                \"\\n###### \",\n                // Note the alternative syntax for headings (below) is not handled here\n                // Heading level 2\n                // ---------------\n                // End of code block\n                \"```\\n\\n\",\n                // Horizontal lines\n                \"\\n\\n***\\n\\n\",\n                \"\\n\\n---\\n\\n\",\n                \"\\n\\n___\\n\\n\",\n                // Note that this splitter doesn't handle horizontal lines defined\n                // by *three or more* of ***, ---, or ___, but this is not handled\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"latex\") {\n            return [\n                // First, try to split along Latex sections\n                \"\\n\\\\chapter{\",\n                \"\\n\\\\section{\",\n                \"\\n\\\\subsection{\",\n                \"\\n\\\\subsubsection{\",\n                // Now split by environments\n                \"\\n\\\\begin{enumerate}\",\n                \"\\n\\\\begin{itemize}\",\n                \"\\n\\\\begin{description}\",\n                \"\\n\\\\begin{list}\",\n                \"\\n\\\\begin{quote}\",\n                \"\\n\\\\begin{quotation}\",\n                \"\\n\\\\begin{verse}\",\n                \"\\n\\\\begin{verbatim}\",\n                // Now split by math environments\n                \"\\n\\\\begin{align}\",\n                \"$$\",\n                \"$\",\n                // Now split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"html\") {\n            return [\n                // First, try to split along HTML tags\n                \"<body>\",\n                \"<div>\",\n                \"<p>\",\n                \"<br>\",\n                \"<li>\",\n                \"<h1>\",\n                \"<h2>\",\n                \"<h3>\",\n                \"<h4>\",\n                \"<h5>\",\n                \"<h6>\",\n                \"<span>\",\n                \"<table>\",\n                \"<tr>\",\n                \"<td>\",\n                \"<th>\",\n                \"<ul>\",\n                \"<ol>\",\n                \"<header>\",\n                \"<footer>\",\n                \"<nav>\",\n                // Head\n                \"<head>\",\n                \"<style>\",\n                \"<script>\",\n                \"<meta>\",\n                \"<title>\",\n                // Normal type of lines\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"sol\") {\n            return [\n                // Split along compiler informations definitions\n                \"\\npragma \",\n                \"\\nusing \",\n                // Split along contract definitions\n                \"\\ncontract \",\n                \"\\ninterface \",\n                \"\\nlibrary \",\n                // Split along method definitions\n                \"\\nconstructor \",\n                \"\\ntype \",\n                \"\\nfunction \",\n                \"\\nevent \",\n                \"\\nmodifier \",\n                \"\\nerror \",\n                \"\\nstruct \",\n                \"\\nenum \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\ndo while \",\n                \"\\nassembly \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else {\n            throw new Error(`Language ${language} is not supported.`);\n        }\n    }\n}\n/**\n * Implementation of splitter which looks at tokens.\n */\nexport class TokenTextSplitter extends TextSplitter {\n    static lc_name() {\n        return \"TokenTextSplitter\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"encodingName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"allowedSpecial\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"disallowedSpecial\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tokenizer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.encodingName = fields?.encodingName ?? \"gpt2\";\n        this.allowedSpecial = fields?.allowedSpecial ?? [];\n        this.disallowedSpecial = fields?.disallowedSpecial ?? \"all\";\n    }\n    async splitText(text) {\n        if (!this.tokenizer) {\n            this.tokenizer = await getEncoding(this.encodingName);\n        }\n        const splits = [];\n        const input_ids = this.tokenizer.encode(text, this.allowedSpecial, this.disallowedSpecial);\n        let start_idx = 0;\n        while (start_idx < input_ids.length) {\n            if (start_idx > 0) {\n                start_idx -= this.chunkOverlap;\n            }\n            const end_idx = Math.min(start_idx + this.chunkSize, input_ids.length);\n            const chunk_ids = input_ids.slice(start_idx, end_idx);\n            splits.push(this.tokenizer.decode(chunk_ids));\n            start_idx = end_idx;\n        }\n        return splits;\n    }\n}\nexport class MarkdownTextSplitter extends RecursiveCharacterTextSplitter {\n    constructor(fields) {\n        super({\n            ...fields,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(\"markdown\"),\n        });\n    }\n}\nexport class LatexTextSplitter extends RecursiveCharacterTextSplitter {\n    constructor(fields) {\n        super({\n            ...fields,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(\"latex\"),\n        });\n    }\n}\n","import Store from 'electron-store'\nimport { RecursiveCharacterTextSplitter } from 'langchain/text_splitter'\n\nimport { StoreKeys, StoreSchema } from '../electron-store/storeConfig'\n\n// Chunk by markdown headings and then use Langchain chunker if the heading chunk is too big:\nconst store = new Store<StoreSchema>()\n\nconst chunkSize = store.get(StoreKeys.ChunkSize)\n\nexport function chunkMarkdownByHeadings(markdownContent: string): string[] {\n  const lines = markdownContent.split('\\n')\n  const chunks: string[] = []\n  let currentChunk: string[] = []\n\n  lines.forEach((line) => {\n    if (line.startsWith('#')) {\n      if (currentChunk.length) {\n        chunks.push(currentChunk.join('\\n'))\n        currentChunk = []\n      }\n    }\n    currentChunk.push(line)\n  })\n\n  if (currentChunk.length) {\n    chunks.push(currentChunk.join('\\n'))\n  }\n  return chunks\n}\n\nexport const chunkStringsRecursively = async (\n  strings: string[],\n  _chunkSize: number,\n  chunkOverlap: number,\n): Promise<string[]> => {\n  const splitter = new RecursiveCharacterTextSplitter({\n    chunkSize: _chunkSize,\n    chunkOverlap,\n  })\n\n  const chunks = await splitter.createDocuments(strings)\n  const mappedChunks = chunks.map((chunk) => chunk.pageContent)\n  return mappedChunks\n}\n\nexport const chunkMarkdownByHeadingsAndByCharsIfBig = async (markdownContent: string): Promise<string[]> => {\n  const chunkOverlap = 20\n  const chunksByHeading = chunkMarkdownByHeadings(markdownContent)\n\n  const chunksWithBigChunksSplit: string[] = []\n  const chunksWithSmallChunksSplit: string[] = []\n  chunksByHeading.forEach((chunk) => {\n    if (chunk.length > chunkSize) {\n      chunksWithBigChunksSplit.push(chunk)\n    } else {\n      chunksWithSmallChunksSplit.push(chunk)\n    }\n  })\n\n  const chunkedRecursively = await chunkStringsRecursively(chunksWithBigChunksSplit, chunkSize, chunkOverlap)\n\n  return chunksWithSmallChunksSplit.concat(chunkedRecursively)\n}\n","import * as fs from 'fs'\nimport * as fsPromises from 'fs/promises'\n\nimport { BrowserWindow } from 'electron'\nimport { chunkMarkdownByHeadingsAndByCharsIfBig } from '../common/chunking'\nimport {\n  GetFilesInfoList,\n  flattenFileInfoTree,\n  readFile,\n  updateFileListForRenderer,\n  startWatchingDirectory,\n} from '../filesystem/filesystem'\nimport { FileInfo, FileInfoTree, RenameFileProps } from '../filesystem/types'\n\nimport LanceDBTableWrapper, { convertRecordToDBType } from './lanceTableWrapper'\nimport { DBEntry, DatabaseFields } from './schema'\nimport WindowsManager from '../common/windowManager'\n\nconst convertFileTypeToDBType = async (file: FileInfo): Promise<DBEntry[]> => {\n  const fileContent = readFile(file.path)\n  const chunks = await chunkMarkdownByHeadingsAndByCharsIfBig(fileContent)\n  const entries = chunks.map((content, index) => ({\n    notepath: file.path,\n    content,\n    subnoteindex: index,\n    timeadded: new Date(),\n    filemodified: file.dateModified,\n    filecreated: file.dateCreated,\n  }))\n  return entries\n}\n\nexport const handleFileRename = async (\n  windowsManager: WindowsManager,\n  windowInfo: { vaultDirectoryForWindow: string; dbTableClient: any },\n  renameFileProps: RenameFileProps,\n  sender: Electron.WebContents,\n): Promise<void> => {\n  windowsManager.watcher?.unwatch(windowInfo.vaultDirectoryForWindow)\n\n  try {\n    await fsPromises.access(renameFileProps.newFilePath)\n    throw new Error(`A file already exists at destination: ${renameFileProps.newFilePath}`)\n  } catch (error) {\n    // If error is ENOENT (file doesn't exist), proceed with rename\n    if ((error as NodeJS.ErrnoException).code !== 'ENOENT') {\n      throw error\n    }\n  }\n\n  if (process.platform === 'win32') {\n    await windowsManager.watcher?.close()\n    await new Promise<void>((resolve, reject) => {\n      fs.rename(renameFileProps.oldFilePath, renameFileProps.newFilePath, (err) => {\n        if (err) {\n          reject(err)\n          return\n        }\n\n        const win = BrowserWindow.fromWebContents(sender)\n        if (win) {\n          // eslint-disable-next-line no-param-reassign\n          windowsManager.watcher = startWatchingDirectory(win, windowInfo.vaultDirectoryForWindow)\n          updateFileListForRenderer(win, windowInfo.vaultDirectoryForWindow)\n        }\n        resolve()\n      })\n    })\n  } else {\n    await new Promise<void>((resolve, reject) => {\n      fs.rename(renameFileProps.oldFilePath, renameFileProps.newFilePath, (err) => {\n        if (err) {\n          reject(err)\n          return\n        }\n        windowsManager.watcher?.add(windowInfo.vaultDirectoryForWindow)\n        resolve()\n      })\n    })\n  }\n\n  await windowInfo.dbTableClient.updateDBItemsWithNewFilePath(renameFileProps.oldFilePath, renameFileProps.newFilePath)\n}\n\nexport const convertFileInfoListToDBItems = async (filesInfoList: FileInfo[]): Promise<DBEntry[][]> => {\n  const promises = filesInfoList.map(convertFileTypeToDBType)\n  const filesAsChunksToAddToDB = await Promise.all(promises)\n  return filesAsChunksToAddToDB\n}\n\nconst getTableAsArray = async (table: LanceDBTableWrapper): Promise<{ notepath: string; filemodified: Date }[]> => {\n  const nonEmptyResults = await table.lanceTable\n    .filter(`${DatabaseFields.NOTE_PATH} != ''`)\n    .select([DatabaseFields.NOTE_PATH, DatabaseFields.FILE_MODIFIED])\n    .execute()\n\n  const mapped = nonEmptyResults.map(convertRecordToDBType<DBEntry>)\n\n  return mapped as { notepath: string; filemodified: Date }[]\n}\n\nconst areChunksMissingFromTable = (\n  chunksToCheck: DBEntry[],\n  tableArray: { notepath: string; filemodified: Date }[],\n): boolean => {\n  // checking whether th\n  if (chunksToCheck.length === 0) {\n    // if there are no chunks and we are checking whether the table\n    return false\n  }\n\n  if (chunksToCheck[0].content === '') {\n    return false\n  }\n  // then we'd check if the filepaths are not present in the table at all:\n  const { notepath } = chunksToCheck[0]\n  const itemsAlreadyInTable = tableArray.filter((item) => item.notepath === notepath)\n  if (itemsAlreadyInTable.length === 0) {\n    // if we find no items in the table with the same notepath, then we should add the chunks to the table\n    return true\n  }\n\n  return chunksToCheck[0].filemodified > itemsAlreadyInTable[0].filemodified\n}\n\nconst computeDbItemsToAddOrUpdate = async (\n  filesInfoList: FileInfo[],\n  tableArray: { notepath: string; filemodified: Date }[],\n): Promise<DBEntry[][]> => {\n  const filesAsChunks = await convertFileInfoListToDBItems(filesInfoList)\n\n  const fileChunksMissingFromTable = filesAsChunks.filter((chunksBelongingToFile) =>\n    areChunksMissingFromTable(chunksBelongingToFile, tableArray),\n  )\n\n  return fileChunksMissingFromTable\n}\n\nconst computeDBItemsToRemoveFromTable = async (\n  filesInfoList: FileInfo[],\n  tableArray: { notepath: string; filemodified: Date }[],\n): Promise<{ notepath: string; filemodified: Date }[]> => {\n  const itemsInTableAndNotInFilesInfoList = tableArray.filter(\n    (item) => !filesInfoList.some((file) => file.path === item.notepath),\n  )\n  return itemsInTableAndNotInFilesInfoList\n}\n\nconst convertFileTreeToDBEntries = async (tree: FileInfoTree): Promise<DBEntry[]> => {\n  const flattened = flattenFileInfoTree(tree)\n\n  const promises = flattened.map(convertFileTypeToDBType)\n\n  const entries = await Promise.all(promises)\n\n  return entries.flat()\n}\n\nexport const removeFileTreeFromDBTable = async (\n  dbTable: LanceDBTableWrapper,\n  fileTree: FileInfoTree,\n): Promise<void> => {\n  const flattened = flattenFileInfoTree(fileTree)\n  const filePaths = flattened.map((x) => x.path)\n  await dbTable.deleteDBItemsByFilePaths(filePaths)\n}\n\nexport const updateFileInTable = async (dbTable: LanceDBTableWrapper, filePath: string): Promise<void> => {\n  await dbTable.deleteDBItemsByFilePaths([filePath])\n  const content = readFile(filePath)\n  const chunkedContentList = await chunkMarkdownByHeadingsAndByCharsIfBig(content)\n  const stats = fs.statSync(filePath)\n  const dbEntries = chunkedContentList.map((_content, index) => ({\n    notepath: filePath,\n    content: _content,\n    subnoteindex: index,\n    timeadded: new Date(), // time now\n    filemodified: stats.mtime,\n    filecreated: stats.birthtime,\n  }))\n  await dbTable.add(dbEntries)\n}\n\nexport const RepopulateTableWithMissingItems = async (\n  table: LanceDBTableWrapper,\n  directoryPath: string,\n  onProgress?: (progress: number) => void,\n) => {\n  const filesInfoTree = GetFilesInfoList(directoryPath)\n\n  const tableArray = await getTableAsArray(table)\n  const itemsToRemove = await computeDBItemsToRemoveFromTable(filesInfoTree, tableArray)\n\n  const filePathsToRemove = itemsToRemove.map((x) => x.notepath)\n  await table.deleteDBItemsByFilePaths(filePathsToRemove)\n\n  const dbItemsToAdd = await computeDbItemsToAddOrUpdate(filesInfoTree, tableArray)\n\n  if (dbItemsToAdd.length === 0) {\n    if (onProgress) onProgress(1)\n    return\n  }\n\n  const flattenedItemsToAdd = dbItemsToAdd.flat()\n  await table.add(flattenedItemsToAdd, onProgress)\n\n  if (onProgress) onProgress(1)\n}\n\nexport const addFileTreeToDBTable = async (dbTable: LanceDBTableWrapper, fileTree: FileInfoTree): Promise<void> => {\n  const dbEntries = await convertFileTreeToDBEntries(fileTree)\n  await dbTable.add(dbEntries)\n}\n\nexport function formatTimestampForLanceDB(date: Date): string {\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1 // getMonth() is zero-based\n  const day = date.getDate()\n  const hours = date.getHours()\n  const minutes = date.getMinutes()\n  const seconds = date.getSeconds()\n\n  // Pad single digits with leading zeros\n  const monthPadded = month.toString().padStart(2, '0')\n  const dayPadded = day.toString().padStart(2, '0')\n  const hoursPadded = hours.toString().padStart(2, '0')\n  const minutesPadded = minutes.toString().padStart(2, '0')\n  const secondsPadded = seconds.toString().padStart(2, '0')\n\n  return `timestamp '${year}-${monthPadded}-${dayPadded} ${hoursPadded}:${minutesPadded}:${secondsPadded}'`\n}\n","/**\n * MediaStore.ts\n * ---------------\n *\n * Generic class to store media in the appData directory in electron.\n * This application requires an ImageStore and a VideoStore which calls\n * the appropriate methods.\n */\nimport * as path from 'path'\nimport * as fs from 'fs'\nimport * as crypto from 'crypto'\n\ninterface FileType {\n  ext: string\n  mime: string\n}\n\ninterface MediaMetadata {\n  id: string\n  fileName: string\n  originalName: string\n  mimeType: string\n  createdAt: string\n  fileSize: number\n}\n\nclass MediaStore {\n  protected storageDir: string\n\n  protected metadataFile: string\n\n  protected mediaType: string\n\n  constructor(appDataPath: string, mediaType: string) {\n    this.storageDir = path.join(appDataPath, mediaType)\n    this.metadataFile = path.join(appDataPath, `${mediaType}Metadata.json`)\n    this.mediaType = mediaType\n    this.initStorage()\n  }\n\n  protected initStorage(): void {\n    if (!fs.existsSync(this.storageDir)) {\n      fs.mkdirSync(this.storageDir, { recursive: true })\n    }\n    if (!fs.existsSync(this.metadataFile)) {\n      fs.writeFileSync(this.metadataFile, JSON.stringify({}))\n    }\n  }\n\n  protected getMetadata(): Record<string, MediaMetadata> {\n    const data = fs.readFileSync(this.metadataFile, 'utf8')\n    return JSON.parse(data)\n  }\n\n  protected saveMetadata(metadata: Record<string, MediaMetadata>): void {\n    fs.writeFileSync(this.metadataFile, JSON.stringify(metadata))\n  }\n\n  static generateFileName(originalName: string): string {\n    const timestamp = Date.now()\n    const hash = crypto.createHash('md5').update(`${originalName}${timestamp}`).digest('hex')\n    return hash\n  }\n\n  static async checkFileType(buffer: Buffer): Promise<FileType | undefined> {\n    const { fileTypeFromBuffer } = await import('file-type')\n    const type = await fileTypeFromBuffer(buffer)\n    return type\n  }\n\n  protected validateFileType(mimeType: string): boolean {\n    return this.mediaType === 'images'\n      ? ['image/png', 'image/jpeg', 'image/gif', 'image/svg+xml'].includes(mimeType)\n      : ['video/mp4', 'video/webm', 'video/quicktime'].includes(mimeType)\n  }\n\n  public async storeMedia(mediaData: string, originalName: string, blockId: string): Promise<string> {\n    const base64Data = mediaData.replace(/^data:[^;]+;base64,/, '')\n    const buffer: Buffer = Buffer.from(base64Data, 'base64')\n\n    const type = await MediaStore.checkFileType(buffer)\n    if (!type || !this.validateFileType(type.mime)) {\n      throw new Error(`Invalid ${this.mediaType.slice(0, -1)} file type`)\n    }\n\n    const fileName = `${MediaStore.generateFileName(originalName)}.${type.ext}`\n    const filePath = path.join(this.storageDir, fileName)\n\n    await fs.promises.writeFile(filePath, buffer)\n\n    const metadata = this.getMetadata()\n    metadata[blockId] = {\n      id: blockId,\n      fileName,\n      originalName,\n      mimeType: type.mime,\n      createdAt: new Date().toISOString(),\n      fileSize: buffer.length,\n    }\n    this.saveMetadata(metadata)\n    return `local://${fileName}`\n  }\n\n  // Removes the media file from the storage and updates the metadata\n  public async deleteMedia(fileName: string): Promise<void> {\n    const url = fileName.replace('local://', '')\n    const filePath = path.join(this.storageDir, url)\n    if (fs.existsSync(filePath)) {\n      await fs.promises.unlink(filePath)\n    } else {\n      throw new Error(`File not found: ${filePath}`)\n    }\n  }\n\n  public async getMedia(fileName: string): Promise<string | null> {\n    try {\n      const updatedFileName = fileName.replace('local://', '')\n      const filePath = path.join(this.storageDir, updatedFileName)\n      if (!fs.existsSync(filePath)) return null\n\n      const buffer = await fs.promises.readFile(filePath)\n      const type = await MediaStore.checkFileType(buffer)\n\n      if (!type || !this.validateFileType(type.mime))\n        throw new Error(`Invalid ${this.mediaType.slice(0, -1)} file type`)\n\n      return `data:${type.mime};base64,${buffer.toString('base64')}`\n    } catch (error) {\n      return null\n    }\n  }\n}\n\nexport default MediaStore\n","/**\n * ImageStore.ts\n * ---------------\n *\n * We want to store images in the appData directory in electron. We also want to ensure\n * that each image is only stored once, and that we can reference the same image in multiple\n * places without duplicating the image.\n *\n * We maintain metadata about each image including the original filename and creation date. Since this app is locally\n *  ran, each image path will exist on the user's disk (upload) or on the cloud (embed).\n */\nimport MediaStore from './MediaStore'\n\nclass ImageStore extends MediaStore {\n  constructor(appDataPath: string) {\n    super(appDataPath, 'images')\n  }\n}\n\nexport default ImageStore\n","/**\n * VideoStore.ts\n * ---------------\n *\n * We want to store videos in the appData directory in electron. We also want to ensure\n * that each video is only stored once, and that we can reference the same video in multiple\n * places without duplicating it.\n *\n * We maintain metadata about each video including the original filename and creation date. Since this app is locally\n *  ran, each video path will exist on the user's disk (upload).\n */\nimport MediaStore from './MediaStore'\n\nclass VideoStore extends MediaStore {\n  constructor(appDataPath: string) {\n    super(appDataPath, 'videos')\n  }\n}\n\nexport default VideoStore\n","import * as fs from 'fs'\nimport * as path from 'path'\n\nimport { ipcMain, dialog, app } from 'electron'\nimport Store from 'electron-store'\n\nimport WindowsManager from '../common/windowManager'\nimport { StoreSchema } from '../electron-store/storeConfig'\nimport { handleFileRename, updateFileInTable } from '../vector-database/tableHelperFunctions'\n\nimport { GetFilesInfoTree, createFileRecursive, isHidden, GetFilesInfoListForListOfPaths } from './filesystem'\nimport { FileInfoTree, WriteFileProps, RenameFileProps, FileInfoWithContent } from './types'\nimport ImageStorage from './storage/ImageStore'\nimport VideoStorage from './storage/VideoStore'\n\nconst imageStorage = new ImageStorage(app.getPath('userData'))\nconst videoStorage = new VideoStorage(app.getPath('userData'))\n\nconst registerFileHandlers = (store: Store<StoreSchema>, _windowsManager: WindowsManager) => {\n  const windowsManager = _windowsManager\n  ipcMain.handle('get-files-tree-for-window', async (event): Promise<FileInfoTree> => {\n    const directoryPath = windowsManager.getVaultDirectoryForWinContents(event.sender)\n    if (!directoryPath) return []\n\n    const files: FileInfoTree = GetFilesInfoTree(directoryPath)\n    return files\n  })\n\n  ipcMain.handle('read-file', async (event, filePath, encoding = 'utf-8') => {\n    const data = await fs.promises.readFile(filePath, encoding)\n    return data\n  })\n\n  ipcMain.handle('check-file-exists', async (event, filePath) => {\n    try {\n      await fs.promises.access(filePath, fs.constants.F_OK)\n      return true\n    } catch (error) {\n      return false\n    }\n  })\n\n  ipcMain.handle('delete-file', async (event, filePath: string): Promise<void> => {\n    fs.stat(filePath, async (err, stats) => {\n      if (err) {\n        return\n      }\n\n      if (stats.isDirectory()) {\n        // For directories (Node.js v14.14.0 and later)\n        fs.rm(filePath, { recursive: true }, () => {\n          // hi\n        })\n\n        const windowInfo = windowsManager.getWindowInfoForContents(event.sender)\n        if (!windowInfo) {\n          throw new Error('Window info not found.')\n        }\n        await windowInfo.dbTableClient.deleteDBItemsByFilePaths([filePath])\n      } else {\n        fs.unlink(filePath, () => {\n          // hi\n        })\n\n        const windowInfo = windowsManager.getWindowInfoForContents(event.sender)\n        if (!windowInfo) {\n          throw new Error('Window info not found.')\n        }\n        await windowInfo.dbTableClient.deleteDBItemsByFilePaths([filePath])\n      }\n    })\n  })\n\n  ipcMain.handle('write-file', async (event, writeFileProps: WriteFileProps) => {\n    if (!fs.existsSync(path.dirname(writeFileProps.filePath))) {\n      fs.mkdirSync(path.dirname(writeFileProps.filePath), {\n        recursive: true,\n      })\n    }\n    fs.writeFileSync(writeFileProps.filePath, writeFileProps.content, 'utf-8')\n  })\n\n  ipcMain.handle('store-image', async (event, imageData: string, originalName: string, blockID: string) => {\n    try {\n      const localURL = await imageStorage.storeMedia(imageData, originalName, blockID)\n      return localURL\n    } catch (error) {\n      throw new Error(`Failed to store image: ${error}`)\n    }\n  })\n\n  ipcMain.handle('delete-image', async (event, fileName: string) => {\n    try {\n      await imageStorage.deleteMedia(fileName)\n      return true\n    } catch (error) {\n      throw new Error(`Failed to delete image: ${error}`)\n    }\n  })\n\n  ipcMain.handle('get-image', async (event, fileName) => {\n    try {\n      const imageData = await imageStorage.getMedia(fileName)\n      return imageData\n    } catch (error) {\n      throw new Error(`Failed to get image: ${error}`)\n    }\n  })\n\n  ipcMain.handle('store-video', async (event, videoData, originalName, blockId) => {\n    try {\n      const localURL = await videoStorage.storeMedia(videoData, originalName, blockId)\n      return localURL\n    } catch (error) {\n      throw new Error(`Failed to store video: ${error}`)\n    }\n  })\n\n  ipcMain.handle('get-video', async (event, fileName) => {\n    try {\n      const videoData = await videoStorage.getMedia(fileName)\n      return videoData\n    } catch (error) {\n      throw new Error(`Failed to get video: ${error}`)\n    }\n  })\n\n  ipcMain.handle('is-directory', (event, filepath: string) => fs.statSync(filepath).isDirectory())\n\n  ipcMain.handle('rename-file', async (event, renameFileProps: RenameFileProps) => {\n    const windowInfo = windowsManager.getWindowInfoForContents(event.sender)\n\n    if (!windowInfo) {\n      throw new Error('Window info not found.')\n    }\n\n    await handleFileRename(windowsManager, windowInfo, renameFileProps, event.sender)\n  })\n\n  ipcMain.handle('index-file-in-database', async (event, filePath: string) => {\n    const windowInfo = windowsManager.getWindowInfoForContents(event.sender)\n    if (!windowInfo) {\n      throw new Error('Window info not found.')\n    }\n    await updateFileInTable(windowInfo.dbTableClient, filePath)\n  })\n\n  ipcMain.handle('create-file', async (event, filePath: string, content: string): Promise<void> => {\n    createFileRecursive(filePath, content, 'utf-8')\n  })\n\n  ipcMain.handle('create-directory', async (event, dirPath: string): Promise<void> => {\n    const mkdirRecursiveSync = (_dirPath: string) => {\n      const parentDir = path.dirname(_dirPath)\n      if (!fs.existsSync(parentDir)) {\n        mkdirRecursiveSync(parentDir)\n      }\n      if (!fs.existsSync(_dirPath)) {\n        fs.mkdirSync(_dirPath)\n      }\n    }\n\n    if (!fs.existsSync(dirPath)) {\n      mkdirRecursiveSync(dirPath)\n    }\n  })\n\n  ipcMain.handle('get-files', async (_event, filePaths: string[]): Promise<FileInfoWithContent[]> => {\n    const fileItems = GetFilesInfoListForListOfPaths(filePaths)\n    const fileContents = fileItems.map((fileItem) => fs.readFileSync(fileItem.path, 'utf-8'))\n    return fileItems.map((fileItem, index) => ({ ...fileItem, content: fileContents[index] }))\n  })\n\n  ipcMain.handle('get-files-in-directory', (event, dirName: string) => {\n    const itemsInDir = fs.readdirSync(dirName).filter((item) => !isHidden(item))\n    return itemsInDir\n  })\n\n  ipcMain.handle('open-directory-dialog', async () => {\n    const result = await dialog.showOpenDialog({\n      properties: ['openDirectory', 'createDirectory'],\n    })\n    if (!result.canceled) {\n      return result.filePaths\n    }\n    return null\n  })\n\n  ipcMain.handle('open-file-dialog', async (event, extensions) => {\n    const filters = extensions && extensions.length > 0 ? [{ name: 'Files', extensions }] : []\n\n    const result = await dialog.showOpenDialog({\n      properties: ['openFile', 'multiSelections', 'showHiddenFiles'], // Add 'showHiddenFiles' here\n      filters,\n    })\n\n    if (!result.canceled) {\n      return result.filePaths\n    }\n    return []\n  })\n\n  // Similar to open-file-dialog except it filters out non-images\n  ipcMain.handle('open-img-file-dialog', async () => {\n    const result = await dialog.showOpenDialog({\n      properties: ['openFile'],\n      filters: [{ name: 'Images', extensions: ['jpg', 'png', 'gif'] }],\n    })\n    return result.filePaths\n  })\n\n  // Similar to open-file-dialog except it filters out non-videos\n  ipcMain.handle('open-video-file-dialog', async () => {\n    const result = await dialog.showOpenDialog({\n      properties: ['openFile'],\n      filters: [{ name: 'Videos', extensions: ['mp4', 'mkv'] }],\n    })\n    return result.filePaths\n  })\n}\n\nexport default registerFileHandlers\n","import { ipcMain } from 'electron'\nimport Store from 'electron-store'\nimport { ProgressResponse } from 'ollama'\n\nimport { LLMConfig, LLMAPIConfig, StoreKeys, StoreSchema } from '../electron-store/storeConfig'\n\nimport { addOrUpdateLLMAPIInStore, removeLLM, getLLMConfigs, addOrUpdateLLMInStore } from './llmConfig'\nimport OllamaService from './models/ollama'\n\nexport const ollamaService = new OllamaService()\n\nexport const registerLLMSessionHandlers = (store: Store<StoreSchema>) => {\n  ipcMain.handle('set-default-llm', (event, modelName: string) => {\n    store.set(StoreKeys.DefaultLLM, modelName)\n    event.sender.send('llm-configs-changed')\n  })\n\n  ipcMain.handle('get-default-llm-name', () => store.get(StoreKeys.DefaultLLM))\n\n  ipcMain.handle('get-llm-configs', async () => getLLMConfigs(store, ollamaService))\n\n  ipcMain.handle('get-llm-api-configs', async () => store.get(StoreKeys.LLMAPIs))\n\n  ipcMain.handle('add-or-update-llm-config', async (event, llmConfig: LLMConfig) => {\n    await addOrUpdateLLMInStore(store, llmConfig)\n    event.sender.send('llm-configs-changed')\n  })\n\n  ipcMain.handle('add-or-update-llm-api-config', async (event, llmAPIConfig: LLMAPIConfig) => {\n    await addOrUpdateLLMAPIInStore(store, llmAPIConfig)\n    event.sender.send('llm-configs-changed')\n  })\n\n  ipcMain.handle('remove-llm', async (event, modelNameToDelete: string) => {\n    await removeLLM(store, ollamaService, modelNameToDelete)\n    event.sender.send('llm-configs-changed')\n  })\n\n  ipcMain.handle('pull-ollama-model', async (event, modelName: string) => {\n    const handleProgress = (progress: ProgressResponse) => {\n      event.sender.send('ollamaDownloadProgress', modelName, progress)\n    }\n    await ollamaService.pullModel(modelName, handleProgress)\n    event.sender.send('llm-configs-changed')\n  })\n\n  ipcMain.handle('delete-llm', async (event, modelName: string) => {\n    await ollamaService.deleteModel(modelName)\n    event.sender.send('llm-configs-changed')\n  })\n}\n","import path from 'path'\n\nimport { ipcMain } from 'electron'\n\nimport { markdownExtensions } from '../filesystem/filesystem'\n\nimport addExtensionToFilenameIfNoExtensionPresent from './path'\n\nconst registerPathHandlers = () => {\n  ipcMain.handle('path-basename', (event, pathString: string) => path.basename(pathString))\n\n  ipcMain.handle('path-sep', () => path.sep)\n\n  ipcMain.handle('join-path', (event, ...args) => path.join(...args))\n\n  ipcMain.handle('path-dirname', (event, pathString: string) => path.dirname(pathString))\n\n  ipcMain.handle('path-relative', (event, from: string, to: string) => path.relative(from, to))\n\n  ipcMain.handle('path-absolute', (event, filePath: string) => path.isAbsolute(filePath))\n\n  ipcMain.handle('add-extension-if-no-extension-present', (event, pathString: string) =>\n    addExtensionToFilenameIfNoExtensionPresent(pathString, markdownExtensions, '.md'),\n  )\n\n  ipcMain.handle('path-ext-name', (event, pathString: string) => path.extname(pathString))\n}\n\nexport default registerPathHandlers\n","import * as path from 'path'\n\nimport { app, BrowserWindow, ipcMain } from 'electron'\nimport Store from 'electron-store'\nimport * as lancedb from 'vectordb'\n\nimport WindowsManager from '../common/windowManager'\nimport { getDefaultEmbeddingModelConfig } from '../electron-store/ipcHandlers'\nimport { StoreSchema } from '../electron-store/storeConfig'\nimport { startWatchingDirectory, updateFileListForRenderer } from '../filesystem/filesystem'\n\nimport { rerankSearchedEmbeddings } from './embeddings'\nimport { DBEntry, DatabaseFields } from './schema'\nimport { RepopulateTableWithMissingItems } from './tableHelperFunctions'\n\nexport interface PromptWithRagResults {\n  ragPrompt: string\n  uniqueFilesReferenced: string[]\n}\n\nexport interface BasePromptRequirements {\n  query: string\n  llmName: string\n  filePathToBeUsedAsContext?: string\n}\n\nexport const registerDBSessionHandlers = (store: Store<StoreSchema>, _windowManager: WindowsManager) => {\n  let dbConnection: lancedb.Connection\n  const windowManager = _windowManager\n\n  ipcMain.handle('search', async (event, query: string, limit: number, filter?: string): Promise<DBEntry[]> => {\n    const windowInfo = windowManager.getWindowInfoForContents(event.sender)\n    if (!windowInfo) {\n      throw new Error('Window info not found.')\n    }\n    const searchResults = await windowInfo.dbTableClient.search(query, limit, filter)\n    return searchResults\n  })\n\n  ipcMain.handle('index-files-in-directory', async (event) => {\n    const windowInfo = windowManager.getWindowInfoForContents(event.sender)\n    if (!windowInfo) {\n      throw new Error('No window info found')\n    }\n    const defaultEmbeddingModelConfig = getDefaultEmbeddingModelConfig(store)\n    const dbPath = path.join(app.getPath('userData'), 'vectordb')\n    dbConnection = await lancedb.connect(dbPath)\n\n    await windowInfo.dbTableClient.initialize(\n      dbConnection,\n      windowInfo.vaultDirectoryForWindow,\n      defaultEmbeddingModelConfig,\n    )\n    await RepopulateTableWithMissingItems(windowInfo.dbTableClient, windowInfo.vaultDirectoryForWindow, (progress) => {\n      event.sender.send('indexing-progress', progress)\n    })\n    const win = BrowserWindow.fromWebContents(event.sender)\n\n    if (win) {\n      windowManager.watcher = startWatchingDirectory(win, windowInfo.vaultDirectoryForWindow)\n      updateFileListForRenderer(win, windowInfo.vaultDirectoryForWindow)\n    }\n    event.sender.send('indexing-progress', 1)\n  })\n\n  ipcMain.handle(\n    'search-with-reranking',\n    async (event, query: string, limit: number, filter?: string): Promise<DBEntry[]> => {\n      const windowInfo = windowManager.getWindowInfoForContents(event.sender)\n      if (!windowInfo) {\n        throw new Error('Window info not found.')\n      }\n      const searchResults = await windowInfo.dbTableClient.search(query, limit, filter)\n\n      const rankedResults = await rerankSearchedEmbeddings(query, searchResults)\n      return rankedResults\n    },\n  )\n\n  ipcMain.handle('get-database-fields', () => DatabaseFields)\n}\n","import { release } from 'node:os'\nimport { join } from 'node:path'\n\nimport { app, BrowserWindow } from 'electron'\nimport Store from 'electron-store'\n\nimport * as Sentry from '@sentry/electron/main'\nimport errorToStringMainProcess from './common/error'\nimport WindowsManager from './common/windowManager'\nimport { registerStoreHandlers } from './electron-store/ipcHandlers'\nimport { StoreSchema } from './electron-store/storeConfig'\nimport registerElectronUtilsHandlers from './electron-utils/ipcHandlers'\nimport registerFileHandlers from './filesystem/ipcHandlers'\nimport { ollamaService, registerLLMSessionHandlers } from './llm/ipcHandlers'\nimport registerPathHandlers from './path/ipcHandlers'\nimport { registerDBSessionHandlers } from './vector-database/ipcHandlers'\n\nif (process.env.NODE_ENV === 'production') {\n  Sentry.init({\n    dsn: 'https://a764a6135d25ba91f0b25c0252be52f3@o4507840138903552.ingest.us.sentry.io/4507840140410880',\n  })\n}\n\nconst store = new Store<StoreSchema>()\n// store.clear() // clear store for testing CAUTION: THIS WILL DELETE YOUR CHAT HISTORY\nconst windowsManager = new WindowsManager()\n\nprocess.env.DIST_ELECTRON = join(__dirname, '../')\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist')\nprocess.env.VITE_PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? join(process.env.DIST_ELECTRON, '../public')\n  : process.env.DIST\n\n// Disable GPU Acceleration for Windows 7\nif (release().startsWith('6.1')) app.disableHardwareAcceleration()\n\n// Disable GPU acceleration for macOS 21.6\nif (process.platform === 'darwin' && release().startsWith('21.6')) app.disableHardwareAcceleration()\n\n// Set application name for Windows 10+ notifications\nif (process.platform === 'win32') app.setAppUserModelId(app.getName())\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit()\n  process.exit(0)\n}\n\nconst preload = join(__dirname, '../preload/index.js')\nconst url = process.env.VITE_DEV_SERVER_URL\nconst indexHtml = join(process.env.DIST, 'index.html')\napp.whenReady().then(async () => {\n  await ollamaService.init()\n  windowsManager.createWindow(store, preload, url, indexHtml)\n})\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') app.quit()\n})\n\napp.on('before-quit', async () => {\n  ollamaService.stop()\n})\n\napp.on('activate', () => {\n  const allWindows = BrowserWindow.getAllWindows()\n  if (allWindows.length) {\n    allWindows[0].focus()\n  } else {\n    windowsManager.createWindow(store, preload, url, indexHtml)\n  }\n})\n\nprocess.on('uncaughtException', (error: Error) => {\n  windowsManager.appendNewErrorToDisplayInWindow(errorToStringMainProcess(error))\n  if (process.env.NODE_ENV === 'production') {\n    Sentry.captureException(error)\n  }\n})\n\nprocess.on('unhandledRejection', (reason: unknown) => {\n  windowsManager.appendNewErrorToDisplayInWindow(errorToStringMainProcess(reason))\n  if (process.env.NODE_ENV === 'production') {\n    Sentry.captureException(reason as Error)\n  }\n})\n\nregisterLLMSessionHandlers(store)\nregisterDBSessionHandlers(store, windowsManager)\nregisterStoreHandlers(store, windowsManager)\nregisterFileHandlers(store, windowsManager)\nregisterElectronUtilsHandlers(store, windowsManager, preload, url, indexHtml)\nregisterPathHandlers()\n"],"names":["DEBUG_BUILD","SDK_VERSION","GLOBAL_OBJ","getGlobalSingleton","name","creator","obj","gbl","__SENTRY__","versionedCarrier","PREFIX","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","level","originalConsoleMethod","makeLogger","enabled","logger","args","STACKTRACE_FRAME_LIMIT","UNKNOWN_FUNCTION","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","createStackParser","parsers","sortedParsers","a","b","p","stack","skipFirstLines","framesToPop","frames","lines","i","line","cleanedLine","parser","frame","stripSentryFramesAndReverse","stackParserFromStackParserOptions","stackParser","localStack","getLastStackFrame","arr","defaultFunctionName","getFunctionName","fn","handlers","instrumented","addHandler","type","handler","maybeInstrument","instrumentFn","e","triggerHandlers","data","typeHandlers","_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","instrumentError","msg","url","column","error","_oldOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler","instrumentUnhandledRejection","getMainCarrier","getSentryCarrier","carrier","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","isElement","isRegExp","isThenable","isSyntheticEvent","base","isVueViewModel","WINDOW","DEFAULT_MAX_STRING_LENGTH","htmlTreeAsString","elem","options","currentElem","MAX_TRAVERSE_HEIGHT","out","height","len","separator","sepLength","nextStr","keyAttrs","maxStringLength","_htmlElementAsString","el","keyAttrPairs","keyAttr","keyAttrPair","classes","allowedAttrs","k","attr","truncate","str","max","snipLine","colno","newLine","lineLength","start","end","isMatchingPattern","value","pattern","requireExactStringMatch","stringMatchesSomePattern","testString","patterns","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","proto","getOriginalFunction","func","convertToPlainObject","getOwnProperties","newObj","serializeEventTarget","target","extractedProps","property","extractExceptionKeysForMessage","exception","maxLength","keys","firstKey","includedKeys","serialized","dropUndefinedKeys","inputValue","_dropUndefinedKeys","memoizationMap","isPojo","memoVal","returnValue","key","item","input","ONE_SECOND_IN_MS","dateTimestampInSeconds","createUnixTimestampInSecondsFunc","performance","approxStartingTimeOrigin","timeOrigin","timestampInSeconds","threshold","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","navigationStart","navigationStartDelta","navigationStartIsReliable","uuid4","crypto","getRandomByte","typedArray","c","getFirstException","event","getEventDescription","message","eventId","firstException","addExceptionTypeValue","values","addExceptionMechanism","newMechanism","defaultMechanism","currentMechanism","mergedData","SEMVER_REGEXP","_parseInt","parseSemver","match","major","minor","patch","checkOrSetAlreadyCaught","isAlreadyCaptured","States","RESOLVED","REJECTED","resolvedSyncPromise","SyncPromise","resolve","rejectedSyncPromise","reason","_","reject","executor","onfulfilled","onrejected","result","val","onfinally","isRejected","state","cachedHandlers","makeSession","context","startingTime","session","sessionToJSON","updateSession","duration","closeSession","status","generateTraceId","generateSpanId","merge","initialObj","mergeObj","levels","output","SCOPE_SPAN_FIELD","_setSpanForScope","scope","span","_getSpanForScope","DEFAULT_MAX_BREADCRUMBS","ScopeClass","newScope","client","lastEventId","user","requestSession","tags","extras","extra","fingerprint","captureContext","scopeToMerge","scopeInstance","Scope","contexts","propagationContext","breadcrumb","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","breadcrumbs","attachment","newData","hint","syntheticException","getDefaultCurrentScope","getDefaultIsolationScope","AsyncContextStack","isolationScope","assignedScope","assignedIsolationScope","maybePromiseResult","res","getAsyncContextStack","registry","sentry","withScope","withSetScope","withIsolationScope","getStackAsyncContextStrategy","_isolationScope","setAsyncContextStrategy","strategy","getAsyncContextStrategy","getCurrentScope","getIsolationScope","getGlobalScope","rest","acs","getClient","getTraceContextFromScope","traceId","spanId","parentSpanId","METRICS_SPAN_FIELD","getMetricSummaryJsonForSpan","storage","exportKey","summary","updateMetricSummaryOnSpan","metricType","sanitizedName","unit","bucketKey","bucketItem","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE","SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME","SEMANTIC_ATTRIBUTE_PROFILE_ID","SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME","SPAN_STATUS_UNSET","SPAN_STATUS_OK","SPAN_STATUS_ERROR","getSpanStatusFromHttpCode","httpStatus","setHttpStatus","spanStatus","SENTRY_BAGGAGE_KEY_PREFIX","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","MAX_BAGGAGE_STRING_LENGTH","baggageHeaderToDynamicSamplingContext","baggageHeader","baggageObject","parseBaggageHeader","dynamicSamplingContext","acc","nonPrefixedKey","dynamicSamplingContextToSentryBaggageHeader","sentryPrefixedDSC","dscKey","dscValue","objectToBaggageHeader","curr","currBaggageObject","baggageHeaderToObject","baggageEntry","keyOrValue","object","objectKey","objectValue","currentIndex","newBaggageHeader","TRACEPARENT_REGEXP","extractTraceparentData","traceparent","matches","parentSampled","propagationContextFromHeaders","sentryTrace","baggage","traceparentData","virtualSpanId","generateSentryTraceHeader","sampled","sampledString","TRACE_FLAG_NONE","TRACE_FLAG_SAMPLED","hasShownSpanDropWarning","spanToTransactionTraceContext","span_id","trace_id","op","parent_span_id","origin","spanToJSON","spanToTraceContext","isRemote","spanToTraceHeader","spanIsSampled","spanTimeInputToSeconds","ensureTimestampInSeconds","timestamp","spanIsSentrySpan","spanIsOpenTelemetrySdkTraceBaseSpan","attributes","startTime","endTime","getStatusMessage","castSpan","traceFlags","CHILD_SPANS_FIELD","ROOT_SPAN_FIELD","addChildSpanToSpan","childSpan","rootSpan","getSpanDescendants","resultSet","addSpanChildren","childSpans","getRootSpan","getActiveSpan","updateMetricSummaryOnActiveSpan","showSpanDropWarning","errorsInstrumented","registerSpanErrorInstrumentation","errorCallback","activeSpan","SCOPE_ON_START_SPAN_FIELD","ISOLATION_SCOPE_ON_START_SPAN_FIELD","setCapturedScopesOnSpan","getCapturedScopesOnSpan","hasTracingEnabled","maybeOptions","SentryNonRecordingSpan","spanContext","_timestamp","_key","_value","_values","_status","_name","_attributesOrStartTime","_startTime","_link","_links","_exception","_time","handleCallbackErrors","onError","onFinally","maybeHandlePromiseRejection","DEFAULT_ENVIRONMENT","FROZEN_DSC_FIELD","freezeDscOnSpan","dsc","getDynamicSamplingContextFromClient","public_key","getDynamicSamplingContextFromScope","getDynamicSamplingContextFromSpan","frozenDsc","traceState","traceStateDsc","dscOnTraceState","jsonSpan","maybeSampleRate","logSpanStart","description","isRootSpan","header","infoParts","logSpanEnd","parseSampleRate","sampleRate","rate","sampleSpan","samplingContext","normalizedRequest","enhancedSamplingContext","parsedSampleRate","DSN_REGEX","isValidProtocol","protocol","dsnToString","dsn","withPassword","host","path","pass","port","projectId","publicKey","dsnFromString","lastPath","split","projectMatch","dsnFromComponents","components","validateDsn","component","makeDsn","from","memoBuilder","hasWeakSet","inner","memoize","unmemoize","normalize","depth","maxProperties","visit","err","normalizeToSize","maxSize","normalized","jsonSize","memo","stringified","stringifyValue","remainingDepth","valueWithToJSON","jsonValue","numAdded","visitable","visitKey","visitValue","objName","getConstructorName","prototype","utf8Length","normalizeUrlToBase","basePath","escapedBase","newUrl","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","envelopeItems","envelopeItem","envelopeItemType","envelopeContainsItemType","types","encodeUTF8","decodeUTF8","serializeEnvelope","envHeaders","parts","append","next","itemHeaders","payload","stringifiedPayload","concatBuffers","buffers","totalLength","buf","merged","offset","buffer","parseEnvelope","env","readBinary","length","bin","readJson","envelopeHeader","itemHeader","binaryLength","createSpanEnvelopeItem","spanJson","createAttachmentEnvelopeItem","ITEM_TYPE_TO_DATA_CATEGORY_MAP","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","version","createEventEnvelopeHeaders","sdkInfo","tunnel","enhanceEventWithSdkInfo","createSessionEnvelope","metadata","envelopeHeaders","createEventEnvelope","eventType","createSpanEnvelope","spans","dscHasRequiredProps","beforeSendSpan","convertToSpanJSON","timedEventsToMeasurements","events","measurements","MAX_SPAN_COUNT","SentrySpan","timeInput","endTimestamp","attributesOrStartTime","time","isSpanTimeInput","sendSpanEnvelope","transactionEvent","isFullFinishedSpan","capturedSpanScope","capturedSpanIsolationScope","isStandaloneSpan","transaction","spanItems","SUPPRESS_TRACING_KEY","startSpanManual","getAcs","spanArguments","parseSentrySpanArguments","forceTransaction","customParentSpan","getActiveSpanWrapper","parentSpan","getParentSpan","createChildOrRootSpan","finishAndSetSpan","startInactiveSpan","withActiveSpan","_startChildSpan","_startRootSpan","initialCtx","ctx","notifyEventProcessors","processors","index","processor","final","parsedStackResults","lastKeysCount","cachedFilenameDebugIds","getFilenameToDebugIdMap","debugIdMap","debugIdKeys","stackKey","parsedStack","stackFrame","filename","debugId","applyScopeDataToEvent","sdkProcessingMetadata","applyDataToEvent","applySpanToEvent","applyFingerprintToEvent","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeScopeData","mergeData","eventProcessors","attachments","transactionName","mergeAndOverwriteScopeData","prop","mergeVal","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","mergedBreadcrumbs","prepareEvent","normalizeDepth","normalizeMaxBreadth","prepared","integrations","applyClientOptions","applyIntegrationsMetadata","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","isolationData","finalScopeData","evt","applyDebugMeta","normalizeEvent","environment","release","dist","maxValueLength","request","filenameDebugIdMap","images","debug_id","integrationNames","maxBreadth","parseEventHintOrCaptureContext","hintIsScopeOrFunction","hintIsScopeContext","captureContextKeys","captureException","captureMessage","captureEvent","flush","timeout","isEnabled","startSession","currentScope","userAgent","currentSession","endSession","_sendSessionUpdate","captureSession","SessionFlusher","attrs","sessionAggregates","aggregates","date","sessionStartedTrunc","aggregationCounts","SENTRY_API_VERSION","getBaseApiEndpoint","_getIngestEndpoint","_encodedAuth","params","getEnvelopeEndpointWithUrlEncodedAuth","installedIntegrations","filterDuplicates","integrationsByName","currentInstance","existingInstance","getIntegrationsToSetup","defaultIntegrations","userIntegrations","integration","resolvedUserIntegrations","finalIntegrations","debugIndex","debugInstance","setupIntegrations","integrationIndex","setupIntegration","afterSetupIntegrations","createClientReportEnvelope","discarded_events","clientReportItem","SentryError","logLevel","ALREADY_SEEN_ERROR","BaseClient","undefinedOption","option","hintWithEventId","eventMessage","promisedEvent","transport","clientFinished","transportFlushed","eventProcessor","integrationName","isAlreadyInstalled","promise","sendResponse","category","eventOrCount","count","hook","hooks","cbIndex","callbacks","crashed","errored","exceptions","ex","mechanism","sessionNonTerminal","ticked","tick","interval","finalEvent","sentryError","isTransaction","isTransactionEvent","beforeSendLabel","dataCategory","processBeforeSend","_validateBeforeSendResult","processedEvent","spanCount","spanCountBefore","spanCountAfter","droppedSpanCount","transactionInfo","outcomes","quantity","beforeSendResult","invalidValueError","beforeSend","beforeSendTransaction","processedSpans","processedSpan","createCheckInEnvelope","checkIn","createCheckInEnvelopeItem","parseStackFrames","exceptionFromError","getErrorPropertyFromObject","getMessageForObject","getObjectClassName","getException","errorFromProp","eventFromUnknownInput","eventFromMessage","attachStacktrace","__sentry_template_string__","__sentry_template_values__","ServerRuntimeClient","monitorConfig","id","serializedCheckIn","traceContext","makePromiseBuffer","limit","isReady","remove","task","add","taskProducer","drain","counter","capturedSetTimeout","DEFAULT_RETRY_AFTER","parseRetryAfterHeader","now","headerDelay","headerDate","disabledUntil","limits","isRateLimited","updateRateLimits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","namespaces","delay","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","rateLimits","send","filteredEnvelopeItems","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","requestTask","response","MIN_DELAY","START_DELAY","MAX_DELAY","makeOfflineTransport","log","store","retryDelay","flushTimer","shouldQueue","flushIn","found","flushWithBackOff","isRetry","applySdkMetadata","names","getTraceData","scopeToTraceHeader","DEFAULT_BREADCRUMBS","addBreadcrumb","beforeBreadcrumb","finalBreadcrumb","originalFunctionToString","INTEGRATION_NAME","SETUP_CLIENTS","_functionToStringIntegration","originalFunction","functionToStringIntegration","DEFAULT_IGNORE_ERRORS","_inboundFiltersIntegration","_hint","clientOptions","mergedOptions","_mergeOptions","_shouldDropEvent","inboundFiltersIntegration","internalOptions","_isSentryError","_isIgnoredError","_isUselessError","_isIgnoredTransaction","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreErrors","_getPossibleEventMessages","ignoreTransactions","denyUrls","allowUrls","possibleMessages","lastException","_getLastValidUrl","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","maxValueLimit","originalException","truncateAggregateExceptions","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","parentId","DEFAULT_KEY","DEFAULT_LIMIT","_linkedErrorsIntegration","linkedErrorsIntegration","parseUrl","query","fragment","stripUrlQueryAndFragment","urlPath","getSanitizedUrlString","filteredHost","addConsoleInstrumentationHandler","instrumentConsole","severityLevelFromString","splitPathRe","splitPath","truncated","dirname","root","dir","basename","ext","f","COUNTER_METRIC_TYPE","GAUGE_METRIC_TYPE","SET_METRIC_TYPE","DISTRIBUTION_METRIC_TYPE","DEFAULT_FLUSH_INTERVAL","MAX_WEIGHT","getMetricsAggregatorForClient","Aggregator","globalMetricsAggregators","aggregator","newAggregator","addToMetricsAggregator","metricTags","increment","ensureNumber","distribution","timing","timeDiff","set","gauge","metrics","number","getBucketKey","stringifiedTags","simpleHash","s","rv","serializeMetricBuckets","metricBucketItems","tagEntries","maybeTags","sanitizeUnit","sanitizeMetricKey","sanitizeTagKey","tagValueReplacements","getCharOrReplacement","search","replacement","sanitizeTagValue","char","sanitizeTags","unsanitizedTags","sanitizedKey","captureAggregateMetrics","metricsEnvelope","createMetricEnvelope","createMetricEnvelopeItem","CounterMetric","GaugeMetric","DistributionMetric","first","SetMetric","METRIC_MAP","MetricsAggregator","_client","unsanitizedName","unsanitizedUnit","maybeFloatTimestamp","previousWeight","cutoffSeconds","flushedBuckets","bucket","buckets","metricsDefault","getBreadcrumbLogLevelFromHttpStatusCode","filenameIsInApp","isNative","node","getModule","FILENAME_MATCH","FULL_MATCH","lineMatch","method","functionName","typeName","methodName","methodStart","objectEnd","_parseIntOrUndefined","nodeStackLineParser","watchdogTimer","createTimer","pollInterval","anrThreshold","timer","triggered","diffMs","callFrameToStackFrame","getModuleFromFilename","lineno","LRUMap","_maxSize","_nullishCoalesce","lhs","rhsFn","_optionalChain","ops","lastAccessLHS","_globalThis","VERSION","re","_makeCompatibilityCheck","ownVersion","acceptedVersions","rejectedVersions","myVersionMatch","ownVersionParsed","globalVersion","_reject","v","_accept","globalVersionMatch","globalVersionParsed","isCompatible","GLOBAL_OPENTELEMETRY_API_KEY","_global","registerGlobal","instance","diag","allowOverride","_a","api","getGlobal","_b","unregisterGlobal","__read","this","o","n","m","r","ar","__spreadArray","to","pack","l","DiagComponentLogger","props","_i","logProxy","funcName","namespace","DiagLogLevel","createLogLevelDiagLogger","maxLevel","_filterFunc","theLevel","theFunc","API_NAME","DiagAPI","_logProxy","self","setLogger","optionsOrLogLevel","_c","oldLogger","newLogger","__values","BaggageImpl","entries","entry","newBaggage","e_1","keys_1","keys_1_1","e_1_1","baggageEntryMetadataSymbol","createBaggage","baggageEntryMetadataFromString","createContextKey","BaseContext","parentContext","ROOT_CONTEXT","consoleMap","DiagConsoleLogger","_consoleFunc","__extends","extendStatics","d","__","NoopMeter","_options","NOOP_GAUGE_METRIC","NOOP_HISTOGRAM_METRIC","NOOP_COUNTER_METRIC","NOOP_UP_DOWN_COUNTER_METRIC","NOOP_OBSERVABLE_GAUGE_METRIC","NOOP_OBSERVABLE_COUNTER_METRIC","NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC","_callback","_observables","NoopMetric","NoopCounterMetric","_super","_attributes","NoopUpDownCounterMetric","NoopGaugeMetric","NoopHistogramMetric","NoopObservableMetric","NoopObservableCounterMetric","NoopObservableGaugeMetric","NoopObservableUpDownCounterMetric","NOOP_METER","createNoopMeter","ValueType","defaultTextMapGetter","defaultTextMapSetter","NoopContextManager","_context","thisArg","NOOP_CONTEXT_MANAGER","ContextAPI","contextManager","TraceFlags","INVALID_SPANID","INVALID_TRACEID","INVALID_SPAN_CONTEXT","NonRecordingSpan","_spanContext","_endTime","SPAN_KEY","getSpan","setSpan","deleteSpan","setSpanContext","getSpanContext","VALID_TRACEID_REGEX","VALID_SPANID_REGEX","isValidTraceId","isValidSpanId","isSpanContextValid","wrapSpanContext","contextApi","NoopTracer","parentFromContext","isSpanContext","arg2","arg3","arg4","opts","contextWithSpanSet","NOOP_TRACER","ProxyTracer","_provider","_fn","tracer","NoopTracerProvider","_version","NOOP_TRACER_PROVIDER","ProxyTracerProvider","delegate","SamplingDecision","SpanKind","SpanStatusCode","VALID_KEY_CHAR_RANGE","VALID_KEY","VALID_VENDOR_KEY","VALID_KEY_REGEX","VALID_VALUE_BASE_REGEX","INVALID_VALUE_COMMA_EQUAL_REGEX","validateKey","validateValue","MAX_TRACE_STATE_ITEMS","MAX_TRACE_STATE_LEN","LIST_MEMBERS_SEPARATOR","LIST_MEMBER_KEY_VALUE_SPLITTER","TraceStateImpl","rawTraceState","_this","agg","part","listMember","createTraceState","NoopMeterProvider","NOOP_METER_PROVIDER","MetricsAPI","provider","NoopTextMapPropagator","_carrier","BAGGAGE_KEY","getBaggage","getActiveBaggage","setBaggage","deleteBaggage","NOOP_TEXT_MAP_PROPAGATOR","PropagationAPI","propagator","setter","getter","propagation","TraceAPI","success","trace","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","RELEASE_TYPES","constants","debug","debug_1","require$$0","require$$1","exports","module","safeRe","src","safeSrc","t","R","LETTERDASHNUMBER","safeRegexReplacements","makeSafeRegex","token","createToken","isGlobal","safe","looseOption","emptyOpts","parseOptions","parseOptions_1","numeric","compareIdentifiers","anum","bnum","rcompareIdentifiers","identifiers","require$$2","require$$3","require$$4","SemVer$d","SemVer","num","other","identifier","identifierBase","prerelease","semver","parse","throwErrors","er","parse_1","valid","valid_1","clean","clean_1","inc","inc_1","diff","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","diff_1","loose","major_1","minor_1","patch_1","parsed","prerelease_1","compare","compare_1","rcompare","rcompare_1","compareLoose","compareLoose_1","compareBuild","versionA","versionB","compareBuild_1","sort","list","sort_1","rsort","rsort_1","gt","gt_1","lt","lt_1","eq","eq_1","neq","neq_1","gte","gte_1","lte","lte_1","require$$5","cmp","cmp_1","coerce","coerceRtlRegex","build","coerce_1","LRUCache","lrucache","SPACE_CHARACTERS","Range","range","Comparator","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","hr","hyphenReplace","comparatorTrimReplace","tildeTrimReplace","caretTrimReplace","rangeList","comp","parseComparator","replaceGTE0","rangeMap","comparators","thisComparators","isSatisfiable","rangeComparators","thisComparator","rangeComparator","testSet","LRU","require$$6","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","M","pr","ret","replaceCaret","z","replaceXRange","gtlt","xM","xm","xp","anyX","incPr","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","allowed","ANY","comparator","satisfies","satisfies_1","toComparators","toComparators_1","maxSatisfying","versions","maxSV","rangeObj","maxSatisfying_1","minSatisfying","min","minSV","minSatisfying_1","minVersion","minver","setMin","compver","minVersion_1","validRange","require$$7","outside","hilo","gtfn","ltefn","ltfn","ecomp","high","low","outside_1","gtr","gtr_1","ltr","ltr_1","intersects","r1","r2","intersects_1","simplify","prev","ranges","simplified","subset","sub","dom","sawNonNull","OUTER","simpleSub","simpleDom","isSub","simpleSubset","minimumVersionWithPreRelease","minimumVersion","eqSet","higherGT","lowerLT","gtltComp","higher","lower","hasDomLT","hasDomGT","needDomLTPre","needDomGTPre","subset_1","internalRe","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","simplifyRange","require$$39","require$$40","NoopLogger","_logRecord","NOOP_LOGGER","NoopLoggerProvider","NOOP_LOGGER_PROVIDER","ProxyLogger","logRecord","ProxyLoggerProvider","GLOBAL_LOGS_API_KEY","makeGetter","requiredVersion","fallback","API_BACKWARDS_COMPATIBILITY_VERSION","LogsAPI","logs","enableInstrumentations","instrumentations","tracerProvider","meterProvider","loggerProvider","j","instrumentation","disableInstrumentations","registerInstrumentations","isFunction","funktion","defineProperty","enumerable","shimmer","wrap","nodule","wrapper","massWrap","nodules","unwrap","massUnwrap","shimmer_1","__assign","InstrumentationAbstract","instrumentationName","instrumentationVersion","config","shimmer.wrap","shimmer.unwrap","shimmer.massWrap","shimmer.massUnwrap","initResult","hookHandler","triggerName","info","h","w","y","ms","fmtLong","fmtShort","msAbs","plural","isPlural","setup","createDebug","disable","enable","destroy","selectColor","hash","prevTime","enableOverride","namespacesCache","enabledCache","format","formatter","extend","delimiter","newDebug","ns","matchesTemplate","template","searchIndex","templateIndex","starIndex","matchIndex","skip","common","formatArgs","save","load","useColors","localstorage","warned","lastC","formatters","hasFlag","flag","argv","position","terminatorPosition","os","tty","forceColor","translateLevel","supportsColor","haveStream","streamIsTTY","osRelease","sign","getSupportLevel","stream","supportsColor_1","util","init","colorCode","getDate","srcModule","moduleDetailsFromPath","file","segments","scoped","homedir","home","caller","origPrepareStackTrace","isWindows","splitWindowsRe","win32","win32SplitPath","pathString","allParts","posix","posixSplitPath","pathParseModule","getNodeModulesDirs","absoluteStart","modules","paths","dirs","aPath","moduleDir","nodeModulesPaths","normalizeOptions","x","ERROR_MESSAGE","toStr","funcType","concatty","slicy","arrLike","joiny","joiner","implementation","that","bound","binder","boundLength","boundArgs","Empty","functionBind","call","$hasOwn","bind","hasown","hasOwn","specifierIncluded","current","specifier","nodeParts","versionParts","cur","ver","matchesRange","specifiers","versionIncluded","nodeVersion","specifierValue","isCoreModule","fs","getHomedir","isCore","realpathFS","defaultPaths","defaultIsFile","cb","stat","defaultIsDir","defaultRealpath","realpathErr","realPath","maybeRealpath","realpath","defaultReadPackage","readFile","pkgfile","readFileErr","body","pkg","getPackageCandidates","async","isFile","isDirectory","readPackage","conflictErr","packageIterator","extensions","includeCoreModules","basedir","parent","realStart","loadAsDirectory","onfile","loadAsFile","loadNodeModules","realN","moduleError","realD","thePackage","loadAsFilePackage","exts","loadPackage","onpkg","loadpkg","pkg_","rfile","rel","onex","unwrapErr","pkgdir","pkgParam","loadAsDirectoryPackage","fpkg","mainError","processDirs","isdir","ondir","thunk","core","mod","core_1","defaultRealpathSync","maybeRealpathSync","realpathSync","defaultReadPackageSync","readFileSync","sync","readPackageSync","loadAsFileSync","loadAsDirectorySync","loadNodeModulesSync","Module","requireInTheMiddleModule","Hook","Hook_1","builtinModules","moduleName","_resolve","ExportsCache","cachedExports","onrequire","patching","internals","hasWhitelist","patchedRequire","coreOnly","idWithoutPrefix","resolveErr","isPatching","parsedPath","fullModuleName","resolveModuleName","matchFound","patchedExports","normalizedPath","ModuleNameSeparator","ModuleNameTrieNode","ModuleNameTrie","trieNode","moduleNamePart","nextNode","e_2","maintainInsertionOrder","fullOnly","results","foundFull","_d","_e","e_2_1","isMocha","RequireInTheMiddleSingleton","normalizedModuleName","normalizePathSeparators","matches_1","matches_1_1","onRequire","hooked","moduleNameOrPath","importHooks","setters","getters","toHook","proxyHandler","descriptor","register","get","proxy","register_1","fileURLToPath","MessageChannel","addHook","removeHook","callHookFn","hookFn","baseDir","newDefault","sendModulesToLoader","createAddHookMessageChannel","port1","port2","pendingAckCount","resolveFn","waitForAllMessagesAcknowledged","addHookMessagePort","details","importInTheMiddleModule","__awaiter","_arguments","P","generator","adopt","fulfilled","step","rejected","__generator","g","verb","safeExecuteInTheMiddle","execute","onFinish","preventThrowingError","safeExecuteInTheMiddleAsync","isWrapped","InstrumentationBase","moduleExports","utilTypes","moduleExportsArray","resolvedModule","json","isSupported","files","normalizedName","supportedFileInstrumentations","e_3","module_1","_f","_g","_loop_1","module_2","HookRequire","this_1","esmHook","HookImport","_h","_j","e_3_1","e_4","e_5","module_3","e_5_1","e_4_1","supportedVersions","includePrerelease","supportedVersion","InstrumentationNodeModuleDefinition","unpatch","InstrumentationNodeModuleFile","TMP_DB_SYSTEM","TMP_DB_STATEMENT","TMP_FAAS_TRIGGER","TMP_HTTP_METHOD","TMP_HTTP_URL","TMP_HTTP_TARGET","TMP_HTTP_STATUS_CODE","TMP_MESSAGING_SYSTEM","TMP_RPC_SERVICE","TMP_RPC_GRPC_STATUS_CODE","SEMATTRS_DB_SYSTEM","SEMATTRS_DB_STATEMENT","SEMATTRS_FAAS_TRIGGER","SEMATTRS_HTTP_METHOD","SEMATTRS_HTTP_URL","SEMATTRS_HTTP_TARGET","SEMATTRS_HTTP_STATUS_CODE","SEMATTRS_MESSAGING_SYSTEM","SEMATTRS_RPC_SERVICE","SEMATTRS_RPC_GRPC_STATUS_CODE","TMP_SERVICE_NAMESPACE","SEMRESATTRS_SERVICE_NAMESPACE","ATTR_HTTP_REQUEST_METHOD","ATTR_HTTP_RESPONSE_STATUS_CODE","ATTR_HTTP_ROUTE","ATTR_SERVICE_NAME","ATTR_SERVICE_VERSION","ATTR_URL_FULL","suppressTracing","unsuppressTracing","isTracingSuppressed","BAGGAGE_KEY_PAIR_SEPARATOR","BAGGAGE_PROPERTIES_SEPARATOR","BAGGAGE_ITEMS_SEPARATOR","BAGGAGE_HEADER","BAGGAGE_MAX_NAME_VALUE_PAIRS","BAGGAGE_MAX_PER_NAME_VALUE_PAIRS","BAGGAGE_MAX_TOTAL_LENGTH","serializeKeyPairs","keyPairs","hValue","getKeyPairs","parsePairKeyValue","valueProps","keyPairPart","separatorIndex","parseKeyPairsIntoRecord","keyPair","W3CBaggagePropagator","pair","headerValue","baggageString","pairs","AnchoredClock","systemClock","monotonicClock","delta","sanitizeAttributes","isAttributeKey","isAttributeValue","isHomogeneousAttributeValueArray","isValidPrimitiveAttributeValue","arr_1","arr_1_1","element","loggingErrorHandler","stringifyException","flattenException","propertyName","delegateHandler","setGlobalErrorHandler","globalErrorHandler","TracesSamplerValues","DEFAULT_LIST_SEPARATOR","ENVIRONMENT_BOOLEAN_KEYS","isEnvVarABoolean","ENVIRONMENT_NUMBERS_KEYS","isEnvVarANumber","ENVIRONMENT_LISTS_KEYS","isEnvVarAList","DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT","DEFAULT_ATTRIBUTE_COUNT_LIMIT","DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT","DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT","parseBoolean","parseNumber","parseStringList","givenValue","logLevelMap","setLogLevelFromEnv","parseEnvironment","getEnv","processEnv","getEnvWithoutDefaults","intValue","charCode","hexToBinary","hexStr","hi","lo","hexToBase64","SPAN_ID_BYTES","TRACE_ID_BYTES","RandomIdGenerator","getIdGenerator","SHARED_BUFFER","bytes","otperformance","TMP_PROCESS_RUNTIME_NAME","TMP_TELEMETRY_SDK_NAME","TMP_TELEMETRY_SDK_LANGUAGE","TMP_TELEMETRY_SDK_VERSION","SEMRESATTRS_PROCESS_RUNTIME_NAME","SEMRESATTRS_TELEMETRY_SDK_NAME","SEMRESATTRS_TELEMETRY_SDK_LANGUAGE","SEMRESATTRS_TELEMETRY_SDK_VERSION","TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS","TELEMETRYSDKLANGUAGEVALUES_NODEJS","SDK_INFO","unrefTimer","NANOSECOND_DIGITS","NANOSECOND_DIGITS_IN_MILLIS","MILLISECONDS_TO_NANOSECONDS","SECOND_TO_NANOSECONDS","millisToHrTime","epochMillis","epochSeconds","seconds","nanos","getTimeOrigin","perf","hrTime","addHrTimes","timeInputToHrTime","isTimeInputHrTime","hrTimeDuration","hrTimeToTimeStamp","precision","tmp","nanoString","hrTimeToNanoseconds","hrTimeToMilliseconds","hrTimeToMicroseconds","isTimeInput","time1","time2","ExportResultCode","CompositePropagator","TraceState","TRACE_PARENT_HEADER","TRACE_STATE_HEADER","VERSION_PART","TRACE_ID_PART","PARENT_ID_PART","FLAGS_PART","TRACE_PARENT_REGEX","parseTraceParent","traceParent","W3CTraceContextPropagator","traceParentHeader","traceStateHeader","RPC_METADATA_KEY","RPCType","setRPCMetadata","meta","deleteRPCMetadata","getRPCMetadata","AlwaysOffSampler","AlwaysOnSampler","ParentBasedSampler","spanName","spanKind","links","TraceIdRatioBasedSampler","_ratio","ratio","accumulation","pos","objectTag","nullTag","undefinedTag","funcProto","funcToString","objectCtorString","getPrototype","overArg","objectProto","hasOwnProperty","symToStringTag","nativeObjectToString","transform","arg","isObjectLike","baseGetTag","Ctor","getRawTag","isOwn","tag","unmasked","MAX_LEVEL","objects","mergeTwoObjects","takeValue","isArray","one","two","isObject","shouldMerge","twoValue","obj1","obj2","wasObjectReferenced","arr1","arr2","TimeoutError","callWithTimeout","timeoutHandle","timeoutPromise","urlMatches","urlToMatch","isUrlIgnored","ignoredUrls","ignoredUrls_1","ignoredUrls_1_1","ignoreUrl","Deferred","BindOnceFuture","_that","_export","exporter","baggageUtils","internal","TMP_EXCEPTION_TYPE","TMP_EXCEPTION_MESSAGE","TMP_EXCEPTION_STACKTRACE","SEMATTRS_EXCEPTION_TYPE","SEMATTRS_EXCEPTION_MESSAGE","SEMATTRS_EXCEPTION_STACKTRACE","ExceptionEventName","Span","parentTracer","kind","_deprecatedClock","timeStamp","link","inp","msDuration","FALLBACK_OTEL_TRACES_SAMPLER","DEFAULT_RATIO","loadDefaultConfig","buildSamplerFromEnv","getSamplerProbabilityFromEnv","probability","mergeConfig","userConfig","perInstanceDefaults","DEFAULT_CONFIG","reconfigureLimits","_k","_l","_m","spanLimits","parsedEnvConfig","BatchSpanProcessorBase","_exporter","_span","_parentContext","promises","doExport","pendingResources","BatchSpanProcessor","Tracer","instrumentationLibrary","_tracerProvider","localConfig","api.context","api.trace","api.diag","nonRecordingSpan","api.INVALID_SPAN_CONTEXT","parentSpanContext","api.SpanKind","samplingResult","api.SamplingDecision","api.TraceFlags","initAttributes","TMP_SERVICE_NAME","SEMRESATTRS_SERVICE_NAME","defaultServiceName","Resource","asyncAttributesPromise","asyncAttributes","mergedSyncAttributes","mergedAttributesPromise","thisAsyncAttributes","otherAsyncAttributes","MultiSpanProcessor","_spanProcessors","spanProcessor","NoopSpanProcessor","ForceFlushState","BasicTracerProvider","mergedConfig","defaultExporter","batchProcessor","timeoutInterval","errors","uniquePropagatorNames","propagators","validPropagators","exporterName","SEMANTIC_ATTRIBUTE_SENTRY_PARENT_IS_REMOTE","SEMANTIC_ATTRIBUTE_SENTRY_GRAPHQL_OPERATION","spanHasAttributes","spanHasKind","spanHasStatus","spanHasName","spanHasParentId","getRequestSpanData","maybeUrlAttribute","getSpanKind","SENTRY_TRACE_HEADER","SENTRY_BAGGAGE_HEADER","SENTRY_TRACE_STATE_DSC","SENTRY_TRACE_STATE_SAMPLED_NOT_RECORDING","SENTRY_TRACE_STATE_URL","SENTRY_SCOPES_CONTEXT_KEY","SENTRY_FORK_ISOLATION_SCOPE_CONTEXT_KEY","SENTRY_FORK_SET_SCOPE_CONTEXT_KEY","SENTRY_FORK_SET_ISOLATION_SCOPE_CONTEXT_KEY","SCOPE_CONTEXT_FIELD","getScopesFromContext","setScopesOnContext","scopes","setContextOnScope","getContextFromScope","_optionalChain$5","getSamplingDecision","sampledNotRecording","dscString","_2","inferSpanData","httpMethod","descriptionForHttpMethod","dbSystem","opIsCache","descriptionForDbSystem","customSourceOrRoute","getUserUpdatedNameAndSource","faasTrigger","parseSpanDescription","userDefinedName","statement","opParts","hasRoute","getSanitizedUrl","graphqlOperationsAttribute","baseDescription","inferredDescription","getGraphqlOperationNamesFromAttribute","inferredSource","isClientOrServerKind","isManualSpan","alreadyHasCustomSource","customSpanName","useInferredDescription","sorted","httpTarget","httpUrl","httpRoute","parsedUrl","originalName","fallbackSource","makeTraceState","traceStateBase","traceStateWithDsc","setupElements","setIsSetup","_optionalChain$4","getPropagationContextFromSpan","SentryPropagator","getCurrentURL","tracePropagationTargets","_3","_4","shouldPropagateTraceForUrl","existingBaggageHeader","getExistingBaggage","getInjectionData","baggageEntries","maybeSentryTraceHeader","ensureScopesOnContext","getContextWithRemoteActiveSpan","NOT_PROPAGATED_MESSAGE","decisionMap","cachedDecision","_5","_6","decision","_7","_8","_9","_10","generateRemoteSpanContext","continueTraceAsRemoteSpan","ctxWithSpanContext","newScopes","spanData","urlAttribute","_11","_12","urlTraceState","_13","_14","_15","_16","_17","startSpan","getTracer","activeCtx","getContext","suppressTracing$1","spanOptions","getSpanOptions","newContextWithActiveSpan","fixedStartTime","ensureTimestampInMilliseconds","getContextForScope","ctxWithoutSpan","continueTrace","getTraceContextForScope","setOpenTelemetryContextAsyncContextStrategy","getScopes","withSetIsolationScope","_optionalChain$3","wrapContextManagerClass","ContextManagerClass","SentryContextManager","currentScopes","currentIsolationScope","shouldForkIsolationScope","newCurrentScope","newIsolationScope","ctx2","groupSpansWithParents","nodeMap","createOrUpdateSpanNodeAndRefs","_id","spanNode","getLocalParentId","createOrUpdateNode","parentNode","createOrGetParentNode","existing","canonicalGrpcErrorCodesMap","isStatusErrorMessageValid","mapStatus","inferredStatus","inferStatusFromAttributes","httpCodeAttribute","grpcCodeAttribute","numberHttpCode","_optionalChain$2","DEFAULT_TIMEOUT","SentrySpanExporter","currentTimestampInS","currentBucketIndex","currentBucket","finishedSpans","sentSpans","maybeSend","sentSpanCount","remainingOpenSpanCount","bucketEntry","grouped","getCompletedRootNodes","createTransactionForOtelSpan","child","createAndFinishSpanForOtelSpan","nodeIsCompletedRootNode","nodes","parseSpan","getSpanData","capturedSpanScopes","removeSentryAttributes","responseContext","allData","spanJSON","definedOp","definedSource","inferredOp","inferredData","getData","cleanedData","maybeHttpStatusCodeAttribute","requestData","_optionalChain$1","onSpanStart","onSpanEnd","SentrySpanProcessor","SentrySampler","spanAttributes","getValidSpan","wrapSamplingDecision","maybeSpanHttpMethod","getParentSampled","inferredSpanName","inferredAttributes","mergedAttributes","mutableSamplingDecision","getParentRemoteSampled","getBaseTraceState","SemanticAttributes","undici","diagch","url_1","instrumentation_1","api_1","version_1","SemanticAttributes_1","UndiciInstrumentation","diagnosticChannel","onMessage","useNewSubscribe","unsubscribe","channel","requestUrl","urlScheme","requestMethod","schemePorts","serverAddress","serverPort","idx","uaHeader","hookAttributes","currentSpan","requestContext","addedHeaders","headerEntries","socket","record","remoteAddress","remotePort","headersToAttribs","rawHeaders","sepIndex","hasSeparator","contentLength","metricsAttributes","durationSeconds","knownMethods","__createBinding","k2","__exportStar","_nativeNodeFetchIntegration","_breadcrumbs","_ignoreOutgoingRequests","propagationDecisionMap","getAbsoluteUrl","requestHeaders","addRequestBreadcrumb","nativeNodeFetchIntegration","getBreadcrumbData","consoleIntegration","readFileAsync","promisify","readDirAsync","readdir","_nodeContextIntegration","cachedContext","addContext","_getContexts","updatedContext","_updateContext","getOsContext","getAppContext","getDeviceContext","culture","getCultureContext","getCloudResourceContext","nodeContextIntegration","freeMemory","_18","platformId","getDarwinInfo","getLinuxInfo","PLATFORM_NAMES","january","app_memory","appContext","_19","_20","deviceOpt","device","uptime","cpuInfo","firstCpu","LINUX_DISTROS","LINUX_VERSIONS","content","matchFirst","regex","text","darwinInfo","execFile","stdout","getLinuxDistroId","linuxInfo","etcFiles","distroFile","distroPath","join","contents","distros","_21","_22","LRU_FILE_CONTENTS_CACHE","LRU_FILE_CONTENTS_FS_READ_FAILED","DEFAULT_LINES_OF_CONTEXT","MAX_CONTEXTLINES_COLNO","MAX_CONTEXTLINES_LINENO","emplace","map","shouldSkipContextLinesForFile","shouldSkipContextLinesForFrame","rangeExistsInContentCache","makeLineReaderRanges","linecontext","makeContextRange","getContextLinesFromFile","createReadStream","lineReaded","createInterface","destroyStreamAndResolve","lineNumber","currentRangeIndex","rangeStart","rangeEnd","onStreamError","addSourceContext","contextLines","filesToLines","readlinePromises","filesToLineRanges","addSourceContextToFrames","addContextToFrame","clearLineContext","makeRangeStart","makeRangeEnd","_contextLinesIntegration","contextLinesIntegration","NODE_VERSION","NODE_MAJOR","cachedDebuggerEnabled","isDebuggerEnabled","LOCAL_VARIABLES_KEY","createRateLimiter","maxPerSecond","retrySeconds","disabledTimeout","isAnonymous","functionNamesMatch","base64WorkerScript","localVariablesAsyncIntegration","integrationOptions","addLocalVariablesToException","localVariables","frameIndex","frameLocalVariables","addLocalVariablesToEvent","startInspector","inspector","startWorker","worker","Worker","code","hashFrames","hashFromStack","createCallbackList","complete","completedCalled","checkedComplete","popped","AsyncSession","_session","orDefault","onPause","captureAll","objectId","vars","_localVariablesSyncIntegration","sessionOverride","cachedFrames","rateLimiter","shouldProcessEvent","cachedFrame","cachedFrameVariable","frameVariable","_23","handlePaused","callFrames","_24","exceptionHash","_25","scopeChain","localScope","_26","_27","_28","_29","ev","_30","_31","_32","_33","localVariablesSyncIntegration","localVariablesIntegration","DEFAULT_SHUTDOWN_TIMEOUT","logAndExitProcess","_onUnhandledRejectionIntegration","mode","makeUnhandledPromiseHandler","onUnhandledRejectionIntegration","handleRejection","rejectionWarning","AbstractAsyncHooksContextManager_1","events_1","ADD_LISTENER_METHODS","AbstractAsyncHooksContextManager","manager","contextWrapper","ee","listener","patchedListener","listeners","AsyncHooksContextManager_1","asyncHooks","AsyncHooksContextManager","uid","AsyncLocalStorageContextManager_1","async_hooks_1","AsyncLocalStorageContextManager","normalizeWindowsPath","createGetModuleFromFilename","sep","normalizedBase","normalizedFilename","decodedFile","DEFAULT_CLIENT_REPORT_FLUSH_INTERVAL_MS","NodeClient","isMainThread","threadId","MAX_MAX_SPAN_WAIT_DURATION","initOpenTelemetry","setupOpenTelemetryLogger","setupOtel","_clampSpanProcessorTimeout","maxSpanWaitDuration","otelLogger","receiver","RENDERERS","trackRendererProperties","renderers","updateUrl","app","updateTitle","title","getRendererProperties","DEFAULT_OPTIONS","electronBreadcrumbsIntegration","userOptions","patchEventEmitter","emitter","shouldCapture","emit","screen","powerMonitor","autoUpdater","window","windowName","webContentsName","onUncaughtExceptionIntegration","ref","dialog","getScopeData","globalScope","addScopeListener","isolation","global","SDK_NAME","getSdkInfo","getDefaultReleaseName","getDefaultEnvironment","getEventDefaults","eventHint","IPCMode","PROTOCOL_SCHEME","IPCChannel","RENDERER_ID_HEADER","UTILITY_PROCESS_MAGIC_MESSAGE_KEY","isMagicMessage","getMagicMessage","EXIT_REASONS","getSentryCachePath","crashpadLinux","usesCrashpad","supportsProtocolHandle","registerProtocol","scheme","Mutex","weight","queueEntry","called","waiter","dateFormat","dateReviver","Store","initial","BufferedWriteStore","_throttleTime","PERSIST_INTERVAL_MS","sessionStore","previousSession","getSessionStore","sesh","makeSessionSafeToSerialize","copy","persistTimer","sendOnCreate","startSession$1","endSession$1","setPreviousSessionAsCurrent","previous","restorePreviousSession","previousSessionWasAbnormal","sessionAnr","endSessionOnExit","exitHandler","MAX_AGE_DAYS","MS_PER_DAY","NOT_MODIFIED_MS","MAX_RETRY_MS","RETRY_DELAY_MS","MAX_RETRIES","MINIDUMP_HEADER","createMinidumpLoader","getMinidumpPaths","preProcessFile","mutex","deleteAll","stats","thirtyDaysAgo","retries","twoSecondsAgo","minidumpProcess","getMinidumpProcessType","deleteCrashpadMetadataFile","crashesDirectory","waitMs","metadataPath","readDirsAsync","crashpadMinidumpLoader","crashpadSubDirectory","dumpDirectories","minidumpFromBreakpadMultipart","binaryStart","dumpStart","dumpEnd","removeBreakpadMetadata","breakpadMinidumpLoader","getMinidumpLoader","processType","sentryMinidumpIntegration","minidumpsRemaining","scopeStore","scopeLastRun","minidumpLoader","startCrashReporter","crashReporter","setupScopeListener","scopeChanged","sendNativeCrashes","getEvent","minidumpFound","sendRendererCrash","getRendererName","crashedProcess","sendChildProcessCrash","sessionToRestore","previousRun","minidumpsFound","isMergeableObject","isNonNullObject","isSpecial","stringValue","isReactElement","canUseSymbol","REACT_ELEMENT_TYPE","emptyTarget","cloneUnlessOtherwiseSpecified","deepmerge","defaultArrayMerge","getMergeFunction","customMerge","getEnumerableOwnPropertySymbols","symbol","getKeys","propertyIsOnObject","propertyIsUnsafe","mergeObject","destination","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","array","deepmerge_1","cjs","removePrivateProperties","mergeEvents","defaults","newEvent","deepMerge","normalizePaths","debugImage","normalizeUrlsInReplayEnvelope","modifiedEnvelope","isReplay","normaliseProfile","profile","getPreloadPath","currentDir","_documentCurrentScript","preloadInjectionIntegration","isAbsolute","existsSync","mainProcessSessionIntegration","additionalContextIntegration","_lazyDeviceContext","_setPrimaryDisplayInfo","display","width","screen$1","optionsIn","urlModule","urlObj","pathObj","addHeadersToRequest","sentryTraceHeader","sentryBaggageHeader","createWrappedRequestFactory","createSpanUrlMap","headersUrlMap","shouldCreateSpan","shouldAttachTraceData","originalRequestMethod","reqOptions","_error","req","electronNetIntegration","net","getMessageAndSeverity","proc","childProcessIntegration","screenshotsIntegration","BrowserWindow","image","DOCUMENT_POLICY_HEADER","JS_PROFILING_HEADER","RENDERER_PROFILES","rendererProfileFromIpc","profile_id","addJsProfilingHeader","responseHeaders","docPolicy","rendererProfilingIntegration","normalizePathsIntegration","getAppMemory","metric","electronContextIntegration","sendDefaultPii","GZIP_THRESHOLD","streamFromBody","Readable","getRequestOptions","hostname","pathname","URL","makeElectronTransport","createElectronNetRequestExecutor","baseHeaders","bodyStream","createGzip","rateLimitsHeader","MILLISECONDS_PER_DAY","isOutdated","maxAgeDays","cutOff","getSentAtFromEnvelope","createOfflineStore","queue","removeBody","removeStaleRequests","removed","insert","which","previousDate","lastShiftedDate","makeShouldSendTransport","baseTransport","makeElectronOfflineTransport","eventFromEnvelope","sendRendererAnrEvent","blockedMs","rendererName","rendererDebugger","pausedStack","scripts","param","stackFrames","rendererWatchdogTimers","createHrTimer","lastPoll","nanoSeconds","createRendererAnrStatusHandler","watchdog","pauseAndCapture","KNOWN_RENDERERS","WINDOW_ID_TO_WEB_CONTENTS","SENTRY_CUSTOM_SCHEME","newProtocolRenderer","wc","webContents","wcId","windowId","captureEventFromRenderer","process","handleEvent","jsonEvent","handleEnvelope","eventAndAttachments","normalizedEnvelope","handleMetric","hasKeys","handleScope","jsonScope","sentScope","configureProtocol","rendererStatusChanged","getWebContents","webContentsId","configureClassic","ipcMain","sender","configureIPC","defaultStackParser","configureUtilityProcessIPC","electron","getProcessName","handleEnvelopeFromUtility","captureEventFromUtility","getDefaultIntegrations","optionsWithDefaults","removeRedundantIntegrations","setNodeAsyncContextStrategy","INTEGRATION_OVERRIDES","userAdded","toRemove","errorToStringMainProcess","errorString","StoreKeys","addExtensionToFilenameIfNoExtensionPresent","acceptableExtensions","defaultExtension","extension","generateChatName","messages","userInput","firstMsg","firstMessage","isFileNodeDirectory","fileInfo","markdownExtensions","isHidden","fileName","fileHasExtensionInList","filePath","fileExtension","GetFilesInfoTree","pathInput","parentRelativePath","fileInfoTree","childNodes","itemPath","flattenFileInfoTree","tree","flatList","GetFilesInfoList","directory","GetFilesInfoListForListOfPaths","_path","fileInfoList","uniquePaths","createFileRecursive","charset","filePathWithExtension","updateFileListForRenderer","win","startWatchingDirectory","directoryToWatch","watcher","chokidar","handleFileEvent","splitDirectoryPathIntoBaseAndRepo","fullPath","pathWithSeparator","localModelPath","repoName","customFetchUsingElectronNet","requestOptions","bodyData","chunks","chunk","downloadAndSaveFile","repo","HFFilePath","systemFilePath","downloadFile","arrayBuffer","DownloadModelFilesFromHFRepo","saveDirectory","quantized","fileList","listFiles","isQuantizedFile","downloadPromises","defaultEmbeddingModelRepos","setupTokenizeFunction","tokenizer","setupEmbedFunction","pipe","batch","removeMd","createEmbeddingFunctionForLocalModel","embeddingModelConfig","sourceColumn","pipeline","pathParts","tokenize","embed","createEmbeddingFunctionForRepo","createEmbeddingFunction","rerankSearchedEmbeddings","searchResults","AutoModelForSequenceClassification","AutoTokenizer","model","queries","inputs","scores","DatabaseFields","CreateDatabaseSchema","vectorDim","schemaFields","Field","Utf8","FixedSizeList","Float32","Float64","ArrowDate","DateUnit","Schema","serializeSchema","schema","field","isStringifiedSchemaEqual","schema1","schema2","serializedSchema1","serializedSchema2","generateTableName","embeddingFuncName","userDirectory","sanitizeForFileSystem","directoryPathAlias","GetOrCreateLanceTable","db","embedFunc","allTableNames","intendedSchema","tableName","table","unsanitizePathForFileSystem","dbPath","convertRecordToDBType","vector","recordWithoutVector","recordWithType","sanitizePathForDatabase","LanceDBTableWrapper","__publicField","dbConnection","_data","onProgress","_x","recordEntry","numberOfChunksToIndexAtOnce","totalChunks","previousPromise","arrowTableOfChunk","makeArrowTable","progress","filePaths","quotedFilePaths","filterString","oldFilePath","newFilePath","sanitizedFilePath","filter","lanceQuery","MetricType","WindowsManager","preload","indexHtml","_url","shell","errorStrToSendWindow","lastUsedVaultDirectory","errorSent","errorStrings","browserWindow","windowID","windowInfo","directoryToSave","focusedWin","primaryDisplay","windowWidth","windowHeight","openAIDefaultAPIName","anthropicDefaultAPIName","openAIDefaultLLMs","anthropicDefaultLLMs","OllamaServeType","defaultOllamaAPI","OllamaService","ollamaLib","modelName","handleProgress","llmName","tokenEncoding","encodingForModel","exeName","exeDir","exePath","command","exec","stderr","pingError","addOrUpdateLLMAPIInStore","newAPI","existingAPIsInStore","updatedModels","addOrUpdateLLMInStore","newLLM","existingLLMs","llm","updatedLLMs","getLLMConfigs","ollamaSession","llmConfigsFromStore","ollamaLLMConfigs","getLLMConfig","llmConfigs","removeLLM","ollamaService","currentSchemaVersion","setupDefaultAnalyticsValue","setupDefaultSpellCheckValue","setupDefaultEmbeddingModels","storedEmbeddingModels","setupDefaultLLMAPIs","llmAPIs","existingOllamaAPI","updatedLLMAPIs","setupDefaultStoreValues","ensureChatsIsCorrectProperty","oldChatHistories","chats","vaultDir","chatsForVault","chat","outputChat","ensureChatsHasDisplayNameAndTimestamp","chatHistories","initializeAndMaybeMigrateStore","registerStoreHandlers","windowsManager","vaultPathForWindow","currentModels","modelAlias","updatedModel","unused","noOfExamples","chunkSize","generationParams","setEditorFlexCenter","agentConfig","agentConfigs","existingAgentIndex","isAnalytics","isSpellCheck","showDocumentStats","allHistories","newChat","allChatHistories","chatHistoriesCorrespondingToVault","existingChatIndex","chatId","chatID","chatHistoriesMap","filteredChatHistories","autoContext","theme","searchMode","getDefaultEmbeddingModelConfig","defaultEmbeddingModelAlias","registerElectronUtilsHandlers","Document","fields","RetryOperation","timeouts","retry_operation","currentTime","timeoutOps","counts","mainErrorCount","attempt","random","methods","retry","networkErrorMsgs","AbortError","decorateErrorWithCounts","attemptNumber","retriesLeft","isNetworkError","errorMessage","pRetry","operation","pRetryModule","has","Events","EE","once","addListener","clearEvent","EventEmitter","a1","a2","a3","a4","a5","pFinally","pTimeout","milliseconds","timeoutError","pTimeoutModule","lowerBound_1","lowerBound","it","priorityQueue","lower_bound_1","PriorityQueue","run","p_timeout_1","priority_queue_1","empty","PQueue","canInitializeInterval","job","newConcurrency","functions","function_","existingResolve","_default","DEFAULT_FETCH_IMPLEMENTATION","LANGSMITH_FETCH_IMPLEMENTATION_KEY","_getFetchImplementation","STATUS_NO_RETRY","STATUS_IGNORE","AsyncCaller$1","PQueueMod","callable","onFailedResponseHook","isLangChainMessage","convertLangChainMessageToExample","converted","assertUuid","uuid","warnedMessages","warnOnce","isVersionGreaterOrEqual","current_version","target_version","parseVersion","parsePromptIdentifier","ownerNamePart","commitPart","commit","owner","LangSmithConflictError","raiseForStatus","consume","errorBody","fullMessage","LIMIT_REPLACE_NODE","CIRCULAR_REPLACE_NODE","replacerStack","defaultOptions","stringify","replacer","spacer","decirc","replaceGetterValues","setReplace","replace","propertyDescriptor","edgeIndex","mergeRuntimeEnvIntoRunCreate","runtimeEnv","getRuntimeEnvironment","envVars","getLangChainEnvVarsMetadata","getTracingSamplingRate","samplingRateStr","getLangSmithEnvironmentVariable","samplingRate","isLocalhost","toArray","iterable","trimQuotes","handle429","Queue","itemPromiseResolve","itemPromise","size","stringifyForTracing","upToSizeBytes","poppedSizeBytes","DEFAULT_BATCH_SIZE_LIMIT_BYTES","SERVER_INFO_REQUEST_TIMEOUT","Client","defaultConfig","AsyncCaller","apiKey","apiUrl","hideInputs","hideOutputs","__version__","outputs","runParams","queryParams","paramsString","dataKey","bodyParams","responseBody","cursors","runs","serverInfo","done","ingestParams","immediatelyTriggerBatch","oldTimeout","sizeLimitBytes","session_name","runCreate","mergedRunCreateParam","runCreates","runUpdates","preparedCreateParams","create","preparedUpdateParams","update","createById","standaloneUpdates","updateParam","rawBatch","preparedCreateParam","preparedUpdateParam","batchChunks","batchItems","batchItem","allAttachments","preparedCreate","runUpdate","accumulatedContext","accumulatedParts","payloads","originalPayload","stringifiedValue","contentType","formData","runId","loadChildRuns","projectOpts","sessionId","tenantId","run_","childRuns","treemap","childRun","projectName","parentRunId","referenceExampleId","executionOrder","isRoot","runType","traceFilter","treeFilter","select","projectIds","projectNames","projectIds_","project","default_select","runsYielded","parentRun","referenceExampleIds","dataSourceType","filteredPayload","shareId","shareToken","runIds","datasetId","datasetName","shareSchema","urlParams","example","upsert","projectExtra","referenceDatasetId","upsert_","endpoint","includeStats","dataset","projects","nameContains","referenceDatasetName","referenceFree","projectId_","csvFile","inputKeys","outputKeys","dataType","inputsSchema","outputsSchema","fromVersion","toVersion","datasetId_","datasetIds","datasetNameContains","id_","datasets","_datasetId","createdAt","exampleId","sourceRunId","createdAt_","sourceRunIds","exampleIds","formattedExamples","generation","generations","finalInput","finalOutput","asOf","splits","inlineS3Urls","dataset_version","inlineS3Urls_","serializedMetadata","examples","splitName","evaluator","sourceInfo","referenceExample","feedbackResult","feedbacks","score","correction","comment","feedbackSourceType","feedbackId","feedbackConfig","comparativeExperimentId","feedback_source","feedback","feedbackUpdate","feedbackKeys","feedbackSourceTypes","feedbackKey","expiration","experimentIds","tokens","results_","evaluatorResponse","evalResults","sourceInfo_","runId_","queueIds","queues","queueId","queueIteratorResult","baseUrl","settings","action","promptOwnerAndName","detail","promptIdentifier","like","promptName","commitHash","commits","prompts","resolvedParentCommitHash","useOptimization","passedCommitHash","latestCommitHash","promptObject","tokenOrUrl","sourceApiUrl","parsedApiUrl","tokenUuid","sourceClient","ds","finalDatasetName","urlOrToken","numParts","globalEnv","isBrowser","isWebWorker","isJsDom","isDeno","isNode","runtimeEnvironment","releaseEnv","getShas","allEnvVars","getEnvironmentVariables","excluded","getEnvironmentVariable","cachedCommitSHAs","common_release_envs","shas","envVar","isTracingEnabled","tracingEnabled","_LC_CONTEXT_VARIABLES_KEY","stripNonAlphanumeric","convertToDottedOrderFormat","epoch","paddedOrder","Baggage","uriValue","RunTree","originalConfig","isRunTree","dedupedMetadata","currentDottedOrder","child_execution_order","LC_CHILD","presentConfig","isRunnableConfigLike","newConfig","isCallbackManagerLike","isLangChainTracerLike","visited","excludeChildRuns","runExtra","child_runs","parent_run_id","child_run","parentConfig","callbackManager","langChainTracer","dottedOrder","inheritArgs","headerTrace","parentDottedOrder","parsedDottedOrder","strTime","containsLangChainTracerLike","MockAsyncLocalStorage$1","TRACING_ALS_KEY","mockAsyncLocalStorage","MockAsyncLocalStorage","AsyncLocalStorageProvider$1","AsyncLocalStorageProviderSingleton","AsyncLocalStorageProvider","getCurrentRunTree","runTree","isTraceableFunction","_hasOwnProperty","_objectKeys","_deepClone","isInteger","unescapePathComponent","hasUndefined","objKeys","objKeysLength","patchErrorMessageFormatter","messageParts","PatchError","JsonPatchError","objOps","document","getValueByPointer","originalValue","applyOperation","valueToCopy","_areEquals","arrOps","removedList","pointer","getOriginalDestination","validateOperation","mutateDocument","banPrototypeModifications","validator","existingPathFragment","validateFunction","applyPatch","pathLen","existingPathLen","existingValue","validate","sequence","externalValidator","arrA","arrB","decamelize","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","preserveCamelCase","string","toLowerCase","toUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveConsecutiveUppercase","m1","postProcess","camelCase","camelcaseModule","keyToJson","snakeCase","mapKeys","mapper","mapped","shallowCopy","replaceSecrets","secretsMap","secretId","last","partsReverse","get_lc_unique_name","serializableClass","parentClass","Serializable","kwargs","_args","aliases","secrets","keyPath","read","write","BaseCallbackHandlerMethodsClass","BaseCallbackHandler","Handler","_coerceToDict","defaultKey","isBaseTracer","BaseTracer","_fields","storedRun","extraParams","execution_order","start_time","finalExtraParams","chain","_parentRunId","_tags","tool","agentRun","retriever","documents","wrapAnsi256","wrapAnsi16m","red","green","blue","assembleStyles","codes","styles","groupName","group","styleName","style","hex","colorString","integer","tryJsonStringify","formatKVMapItem","elapsed","color","ConsoleCallbackHandler","_run","parents","currentRun","crumbs","_isToolCall","toolCall","ToolInputParsingException","parsePartialJson","new_s","isInsideString","escaped","mergeContent","firstContent","secondContent","_mergeLists","stringifyWithDepthLimit","depthLimit","helper","currentDepth","BaseMessage","printable","_mergeDicts","left","right","toMerge","leftItem","BaseMessageChunk","AIMessageChunk","initParams","toolCalls","invalidToolCalls","toolCallChunk","parsedArgs","combinedFields","rawToolCalls","usage_metadata","getBufferString","humanPrefix","aiPrefix","string_messages","role","nameStr","readableContent","LangChainTracer","traceableTree","example_id","persistedRun","rootRun","runTreeMap","runTreeList","parentRunTree","createQueue","consumeCallback","promiseFn","wait","BaseCallbackManager","BaseRunManager","inheritableHandlers","inheritableTags","inheritableMetadata","eventName","_runId","_metadata","CallbackManagerForRetrieverRun","CallbackManager","CallbackManagerForLLMRun","CallbackManagerForChainRun","CallbackManagerForToolRun","runName","prompt","uuidv4","messageGroup","messageString","inherit","_handler","additionalHandlers","inheritable","localHandlers","localTags","localMetadata","ensureHandler","verboseEnabled","tracingV2Enabled","consoleHandler","tracerV2","_store","LC_CHILD_KEY","avoidCreatingRootRunTree","raceWithSignal","signal","IterableReadableStream","cancelPromise","reader","controller","pump","atee","iter","concat","second","AsyncGeneratorWithSetup","_result","pipeGeneratorWithSetup","startSetup","gen","RunLogPatch","states","RunLog","isLogStreamHandler","_getStandardizedInputs","schemaFormat","_getStandardizedOutputs","isChatGenerationChunk","LogStreamCallbackHandler","runTags","include","logEntry","isChatModel","streamedOutputValue","GenerationChunk","assignName","isStreamEventsHandler","EventStreamCallbackHandler","outputStream","firstChunk","runInfo","_formatOutputChunk","tappedPromise","tappedPromiseResolver","eventData","pendingPromises","DEFAULT_RECURSION_LIMIT","getCallbackManagerForConfig","mergeConfigs","configs","baseKeys","baseCallbacks","providedCallbacks","typedKey","PRIMITIVES","ensureConfig","implicitConfig","currentConfig","timeoutSignal","patchConfig","maxConcurrency","recursionLimit","configurable","defaultFailedAttemptHandler","RootListenersTracer","onStart","onEnd","isRunnableInterface","thing","_RootEventFilter","rootType","eventTags","ignoreOverride","getDefaultOptions","getRefs","currentPath","def","addErrorMessage","refs","setResponseValueAndErrors","parseAnyDef","parseArrayDef","ZodFirstPartyTypeKind","parseDef","parseBigintDef","check","parseBooleanDef","parseBrandedDef","_def","parseCatchDef","parseDateDef","overrideDateStrategy","integerDateParser","parseDefaultDef","parseEffectsDef","parseEnumDef","isJsonSchema7AllOfType","parseIntersectionDef","allOf","unevaluatedProperties","mergedAllOf","nestedSchema","additionalProperties","parseLiteralDef","parsedType","emojiRegex","zodPatterns","parseStringDef","addFormat","addPattern","escapeLiteralCheckValue","literal","escapeNonAlphaNumeric","ALPHA_NUMERIC","stringifyRegExpWithFlags","flags","isEscaped","inCharGroup","inCharRange","parseRecordDef","keyType","parseMapDef","parseNativeEnumDef","actualValues","parsedTypes","parseNeverDef","parseNullDef","primitiveMappings","parseUnionDef","asAnyOf","uniqueTypes","anyOf","parseNullableDef","parseNumberDef","parseObjectDef","forceOptionalIntoNullable","required","shape","propName","propDef","propOptional","safeIsOptional","ZodOptional","parsedDef","decideAdditionalProperties","parseOptionalDef","innerSchema","parsePipelineDef","parsePromiseDef","parseSetDef","parseTupleDef","parseUndefinedDef","parseUnknownDef","parseReadonlyDef","selectParser","forceResolution","seenItem","overrideResult","seenSchema","get$ref","jsonSchemaOrGetter","jsonSchema","addMeta","postProcessResult","getRelativePath","pathA","pathB","zodToJsonSchema","definitions","main","combined","_escapeNodeLabel","nodeLabel","_adjustMermaidEdge","edge","sourceNodeLabel","targetNodeLabel","_generateMermaidGraphStyles","nodeColors","drawMermaid","edges","firstNodeLabel","lastNodeLabel","withStyles","curveStyle","wrapLabelNWords","mermaidGraph","defaultClassLabel","formatDict","escapedNodeLabel","nodeSplit","subgraph","sourcePrefix","targetPrefix","edgeLabel","edgeData","words","word","drawMermaidPng","mermaidSyntax","backgroundColor","mermaidSyntaxEncoded","imageUrl","MAX_DATA_DISPLAY_NAME_LENGTH","nodeDataStr","isUuid","nodeDataJson","Graph","stableNodeIds","nodeId","conditional","targets","sources","graph","finalPrefix","prefixed","newEdges","firstNode","outgoingEdges","lastNode","incomingEdges","convertToHttpEventStream","encoder","finalStream","isIterableIterator","isIterator","isAsyncIterable","consumeIteratorInContext","consumeAsyncIterableInContext","iterator","Runnable","suffix","RunnableBinding","RunnableEach","RunnableRetry","fallbacks","RunnableWithFallbacks","subsequent","batchOptions","configList","batchCalls","wrappedGenerator","runnableConfig","callOptions","callbackManager_","runManager","optionsList","callbackManagers","runManagers","handleStartRes","inputGenerator","transformer","finalInputSupported","finalOutputSupported","wrapInputForTracing","streamEventsHandler","streamLogHandler","inputNode","runnableNode","outputNode","coerceable","RunnableSequence","_coerceToRunnable","RunnablePick","mapping","RunnableAssign","RunnableMap","finalChunk","streamOptions","logStreamCallbackHandler","copiedCallbacks","runnableStreamPromise","consumeRunnableStream","runnableStream","runnableStreamConsumePromise","eventStreamer","outerThis","tappedStream","firstEventSent","firstEventRunId","runLog","hasEncounteredStartEvent","rootTags","rootMetadata","rootName","rootEventFilter","logStream","dedupedPaths","chunkCount","convertRunnableToTool","configFactory","individualOption","resultsMap","remainingIndexes","remainingInputs","patchedConfigs","resultMapIndex","nextStepInput","initialSteps","nextStepInputs","childRunManager","otherOptions","steps","concatSupported","finalGenerator","currentLastNode","stepGraph","stepFirstNode","runnables","runnable","inputCopies","tasks","RunnableTraceable","assertNonTraceableFunction","RunnableLambda","childConfig","otherConfigFields","firstError","mapperResult","mapperKeys","forPassthrough","forMapper","mapperOutput","firstMapperChunkPromise","filtered","picked","RunnableToolLike","toolInput","BaseDocumentTransformer","base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","curByte","tripletToBase64","encodeChunk","uint8","extraBytes","maxChunkLength","len2","__defProp","__defNormalProp","bytePairMerge","piece","ranks","minRank","slice","rank","bytePairEncode","escapeRegex","_Tiktoken","extendedSpecialTokens","uncompressed","offsetStr","base64","allowedSpecial","disallowedSpecial","regexes","specialRegex","allowedSpecialSet","disallowedSpecialSet","disallowedSpecialRegex","specialMatch","nextSpecial","startFind","token2","i2","mergedArray","Tiktoken","TextSplitter","chunkHeaderOptions","regexEscapedSeparator","texts","metadatas","_metadatas","chunkHeader","chunkOverlapHeader","appendChunkOverlapHeader","lineCounterIndex","prevChunk","indexPrevChunk","pageContent","indexChunk","newLinesBeforeFirstChunk","indexEndPrevChunk","numberOfIntermediateNewLines","newLinesCount","loc","metadataWithLinesNumber","selectedDocuments","doc","docs","currentDoc","total","_len","RecursiveCharacterTextSplitter","separators","finalChunks","newSeparators","goodSplits","_separator","mergedText","otherInfo","language","chunkMarkdownByHeadings","markdownContent","currentChunk","chunkStringsRecursively","strings","_chunkSize","chunkOverlap","chunkMarkdownByHeadingsAndByCharsIfBig","chunksByHeading","chunksWithBigChunksSplit","chunksWithSmallChunksSplit","chunkedRecursively","convertFileTypeToDBType","fileContent","handleFileRename","renameFileProps","fsPromises","convertFileInfoListToDBItems","filesInfoList","getTableAsArray","areChunksMissingFromTable","chunksToCheck","tableArray","notepath","itemsAlreadyInTable","computeDbItemsToAddOrUpdate","chunksBelongingToFile","computeDBItemsToRemoveFromTable","updateFileInTable","dbTable","chunkedContentList","dbEntries","_content","RepopulateTableWithMissingItems","directoryPath","filesInfoTree","filePathsToRemove","dbItemsToAdd","flattenedItemsToAdd","MediaStore","appDataPath","mediaType","fileTypeFromBuffer","mimeType","mediaData","blockId","base64Data","updatedFileName","ImageStore","VideoStore","imageStorage","ImageStorage","videoStorage","VideoStorage","registerFileHandlers","_windowsManager","encoding","writeFileProps","imageData","blockID","videoData","filepath","dirPath","mkdirRecursiveSync","_dirPath","parentDir","_event","fileItems","fileContents","fileItem","dirName","filters","registerLLMSessionHandlers","llmConfig","llmAPIConfig","modelNameToDelete","registerPathHandlers","registerDBSessionHandlers","_windowManager","windowManager","defaultEmbeddingModelConfig","lancedb","Sentry.init","allWindows","Sentry.captureException"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467]}